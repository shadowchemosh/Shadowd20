<?xml version="1.0" encoding="ISO-8859-1"?>
<document signature="Hero Lab Data">
  <loadonce key="COM_GMPack_Frumple - Dragons"/>
  <thing id="rxDragBlac" name="Dragon, Black" description="Sociopaths and murderers of the worst sort, black dragons terrorize their territories with a fury few other dragons bother to muster. The dragon kind most likely to rampage, black dragons combine the short tempers of their white dragon cousins with a superior intellect and greater physical prowess. Cruel in ways their less-intelligent kin cannot contemplate and far less sophisticated than the greater chromatics, black dragons delight in causing physical and mental pain. These horrible sadists use their frightful presence and acidic breaths to crack minds and burn bodies, all the while cackling gaily and reveling in the despair and torment they create.\n\nBlack dragons are the epitome of villainy, committing evil for evil's sake, and they require no greater motivation to pillage and plunder than simply because they can. Where white dragons lash out from a sense of frustration and red dragons launch into their murderous rampages in order to exert their dominance, black dragons kill because they want to. Some black dragons find offense in the most innocent comments and consider every real or imagined slight (and black dragons possess inventive minds) justification enough to cause localized genocide. Attempts to communicate with black dragons require continuous and unending supplication and groveling, and even then most creatures that try end up as captives, subjects of bizarre but unmistakably creative tortures, or food.\n\nPossessing distinctively large curving horns growing out the sides of their skulls just behind their jaws, black dragons strike impressive and easily recognized silhouettes. Aside from their iconic horns, black dragon faces possess as much individualism as those of any other dragon kinds. Most black dragons grow many smaller horns and hornlets all around their heads and faces, while a small number only gain their two major horns and no others. A few black dragons deliberately crack or break their horns (causing themselves considerable pain) and then let the sharp protrusions heal at jagged and unnatural angles. Black dragons tend to have relatively short necks and tails and thick, muscular bodies. Most black dragons' toes are connected by thick membranes of webbed skin that help them glide through the brackish waters of their homes." compset="Race">
    <fieldval field="shortname" value="Black Dragon"/>
    <fieldval field="rHitDice" value="4"/>
    <fieldval field="rHPStart" value="26"/>
    <fieldval field="rSTR" value="1"/>
    <fieldval field="rDEX" value="6"/>
    <fieldval field="rCON" value="3"/>
    <fieldval field="rINT" value="-2"/>
    <fieldval field="rWIS" value="1"/>
    <fieldval field="rSpeed" value="60"/>
    <fieldval field="rAC" value="3"/>
    <fieldval field="rCR" value="3"/>
    <fieldval field="rDescript" value="Hissing green acid drips from the fanged maw of this blackscaled, horned dragon."/>
    <fieldval field="rEnviron" value="warm marshes"/>
    <fieldval field="rOrgan" value="solitary"/>
    <fieldval field="rTreasure" value="triple"/>
    <usesource source="VarDragons"/>
    <tag group="Race" tag="rTrueDrago"/>
    <tag group="Helper" tag="NotHum"/>
    <tag group="RaceType" tag="NPC"/>
    <tag group="RaceSize" tag="Tiny12"/>
    <tag group="HasType" tag="tpDragon"/>
    <tag group="Helper" tag="Quadruped"/>
    <tag group="Alignment" tag="Chaotic"/>
    <tag group="Hero" tag="NoDefComm"/>
    <tag group="DragType" tag="Chromatic" name="Dragon, Chromatic"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <tag group="Language" tag="Any"/>
    <tag group="Alignment" tag="Evil"/>
    <bootstrap thing="xSplRs">
      <containerreq phase="First" priority="200">DragonAge.YngAdult</containerreq>
      </bootstrap>
    <bootstrap thing="tmxDragAge"></bootstrap>
    <bootstrap thing="raxBlaAciP">
      <containerreq phase="First" priority="200">DragonAge.Ancient</containerreq>
      </bootstrap>
    <bootstrap thing="raxBlaAcBt">
      <containerreq phase="First" priority="200">DragonAge.Old</containerreq>
      </bootstrap>
    <bootstrap thing="raBlaCharR">
      <containerreq phase="First" priority="200">DragonAge.GreatWyrm</containerreq>
      </bootstrap>
    <bootstrap thing="raBlaCorrW">
      <containerreq phase="First" priority="200">DragonAge.Adult</containerreq>
      </bootstrap>
    <bootstrap thing="raxFrightP">
      <containerreq phase="First" priority="200">DragonAge.Adult</containerreq>
      </bootstrap>
    <bootstrap thing="wTailSlap">
      <autotag group="wMain" tag="1d8_6"/>
      <autotag group="Helper" tag="NatTwoHand"/>
      </bootstrap>
    <bootstrap thing="raxDrgBrea">
      <autotag group="BloodEner" tag="Acid"/>
      <autotag group="BreathShp" tag="Line"/>
      <assignval field="abValue" value="2"/>
      <assignval field="abValue3" value="6"/>
      </bootstrap>
    <bootstrap thing="stWater"></bootstrap>
    <bootstrap thing="xSwim">
      <autotag group="Value" tag="60"/>
      </bootstrap>
    <bootstrap thing="wBite">
      <autotag group="wMain" tag="1d4_4"/>
      <autotag group="Helper" tag="NatPrimary"/>
      <autotag group="Helper" tag="NatTwoHand"/>
      </bootstrap>
    <bootstrap thing="wClaw">
      <autotag group="Value" tag="2"/>
      <autotag group="wMain" tag="1d3_3"/>
      <autotag group="Helper" tag="NatPrimary"/>
      </bootstrap>
    <bootstrap thing="raDrSenses"></bootstrap>
    <bootstrap thing="wWing">
      <autotag group="Value" tag="2"/>
      <autotag group="wMain" tag="1d4_4"/>
      </bootstrap>
    <bootstrap thing="skKnowArca"></bootstrap>
    <bootstrap thing="skKnowHist"></bootstrap>
    <bootstrap thing="skKnowGeog"></bootstrap>
    <bootstrap thing="fImpInit">
      <containerreq phase="First" priority="200">DragonAge.Wyrmling</containerreq>
      </bootstrap>
    <bootstrap thing="fSkillFoc">
      <containerreq phase="First" priority="200">DragonAge.Wyrmling</containerreq>
      <autotag group="Target" tag="skStealth"/>
      </bootstrap>
    <bootstrap thing="xImmAcid">
      <containerreq phase="First" priority="200">DragonAge.Wyrmling</containerreq>
      </bootstrap>
    <bootstrap thing="lDraconic"></bootstrap>
    <bootstrap thing="xFly">
      <autotag group="Maneuver" tag="Average"/>
      <autotag group="Value" tag="100"/>
      </bootstrap>
    <bootstrap thing="wCrush"></bootstrap>
    <bootstrap thing="wTailSweep"></bootstrap>
    <bootstrap thing="raBlaWateB">
      <containerreq phase="First" priority="200">DragonAge.Wyrmling</containerreq>
      </bootstrap>
    <bootstrap thing="raSwampStr">
      <containerreq phase="First" priority="200">DragonAge.VeryYoung</containerreq>
      </bootstrap>
    <bootstrap thing="fAlertness">
      <containerreq phase="First" priority="200">DragonAge.VeryYoung</containerreq>
      </bootstrap>
    <bootstrap thing="fWepFoc">
      <containerreq phase="First" priority="200">DragonAge.Young</containerreq>
      <autotag group="Target" tag="wBite"/>
      </bootstrap>
    <bootstrap thing="fVitStr">
      <containerreq phase="First" priority="200">DragonAge.Juvenile</containerreq>
      </bootstrap>
    <bootstrap thing="fPowerAtt">
      <containerreq phase="First" priority="200">DragonAge.YngAdult</containerreq>
      </bootstrap>
    <bootstrap thing="fImpVitStr">
      <containerreq phase="First" priority="200">DragonAge.Adult</containerreq>
      </bootstrap>
    <bootstrap thing="fMultiAtt">
      <containerreq phase="First" priority="200">DragonAge.MatAdult</containerreq>
      </bootstrap>
    <bootstrap thing="fComExpert">
      <containerreq phase="First" priority="200">DragonAge.Old</containerreq>
      </bootstrap>
    <bootstrap thing="fGrtVitStr">
      <containerreq phase="First" priority="200">DragonAge.VeryOld</containerreq>
      </bootstrap>
    <bootstrap thing="fFlybyAt">
      <containerreq phase="First" priority="200">DragonAge.Ancient</containerreq>
      </bootstrap>
    <bootstrap thing="fSnatch">
      <containerreq phase="First" priority="200">DragonAge.Wyrm</containerreq>
      </bootstrap>
    <bootstrap thing="fArcStrike">
      <containerreq phase="First" priority="200">DragonAge.GreatWyrm</containerreq>
      </bootstrap>
    <bootstrap thing="raBlaSpeaw">
      <containerreq phase="First" priority="200">DragonAge.Young</containerreq>
      </bootstrap>
    <bootstrap thing="spDarknes2">
      <containerreq phase="First" priority="200">DragonAge.Juvenile</containerreq>
      <autotag group="Usage" tag="AtWill"/>
      <autotag group="Helper" tag="SpellLike"/>
      </bootstrap>
    <bootstrap thing="spInsePla5">
      <containerreq phase="First" priority="200">DragonAge.Ancient</containerreq>
      <autotag group="Usage" tag="AtWill"/>
      <autotag group="Helper" tag="SpellLike"/>
      </bootstrap>
    <bootstrap thing="spPlanGro3">
      <containerreq phase="First" priority="200">DragonAge.Old</containerreq>
      <autotag group="Usage" tag="AtWill"/>
      <autotag group="Helper" tag="SpellLike"/>
      </bootstrap>
    <bootstrap thing="xDamRdMag">
      <containerreq phase="First" priority="200">DragonAge.YngAdult</containerreq>
      </bootstrap>
    <eval phase="First" priority="550" index="2"><![CDATA[~ set caster level of racial spells

~age catagory
var ageCat as number
ageCat = hero.childfound[raxDragonA].tagvalue[Value.?]

perform hero.findchild[BaseRace].setfocus

~ set caster level
if (ageCat >= 5) then
 perform focus.assign[SplLookup.cHelpSor]
 focus.field[cMagicLev].value = 2*ageCat - 9
endif

perform state.clearfocus]]></eval>
    <eval phase="PreLevel" priority="4000" index="3">~ innate skill ranks 
var ageCat as number
ageCat = hero.childfound[raxDragonA].tagvalue[Value.?]

if (ageCat = 1) then
  #skillinnate[skFly] += 4
  #skillinnate[skHandleAn] += 4
  #skillinnate[skPercep] += 4
  #skillinnate[skStealth] += 4
  #skillinnate[skSwim] += 4
elseif (ageCat = 2) then
  #skillinnate[skFly] += 6
  #skillinnate[skHandleAn] += 6
  #skillinnate[skIntim] += 6
  #skillinnate[skPercep] += 6
  #skillinnate[skStealth] += 6
  #skillinnate[skSwim] += 6
elseif (ageCat = 3) then
  #skillinnate[skFly] += 8
  #skillinnate[skHandleAn] += 8
  #skillinnate[skIntim] += 8
  #skillinnate[skPercep] += 8
  #skillinnate[skStealth] += 8
  #skillinnate[skSwim] += 8
elseif (ageCat = 4) then
  #skillinnate[skFly] += 10
  #skillinnate[skHandleAn] += 10
  #skillinnate[skIntim] += 10
  #skillinnate[skPercep] += 10
  #skillinnate[skStealth] += 10
  #skillinnate[skSwim] += 10
  #skillinnate[skKnowArca] += 5
  #skillinnate[skSpellcr] += 5
elseif (ageCat = 5) then
  #skillinnate[skFly] += 12
  #skillinnate[skHandleAn] += 12
  #skillinnate[skIntim] += 12
  #skillinnate[skPercep] += 12
  #skillinnate[skStealth] += 12
  #skillinnate[skSwim] += 12
  #skillinnate[skKnowArca] += 6
  #skillinnate[skSpellcr] += 6
elseif (ageCat = 6) then
  #skillinnate[skFly] += 14
  #skillinnate[skHandleAn] += 14
  #skillinnate[skIntim] += 14
  #skillinnate[skPercep] += 14
  #skillinnate[skStealth] += 14
  #skillinnate[skSwim] += 14
  #skillinnate[skKnowArca] += 14
  #skillinnate[skSpellcr] += 14
elseif (ageCat = 7) then
  #skillinnate[skFly] += 16
  #skillinnate[skHandleAn] += 16
  #skillinnate[skIntim] += 16
  #skillinnate[skPercep] += 16
  #skillinnate[skStealth] += 16
  #skillinnate[skSwim] += 16
  #skillinnate[skKnowArca] += 16
  #skillinnate[skSpellcr] += 16
elseif (ageCat = 8) then 
  #skillinnate[skFly] += 18
  #skillinnate[skHandleAn] += 18
  #skillinnate[skIntim] += 18
  #skillinnate[skPercep] += 18
  #skillinnate[skStealth] += 18
  #skillinnate[skSwim] += 18
  #skillinnate[skKnowArca] += 18
  #skillinnate[skKnowHist] += 18
  #skillinnate[skSpellcr] += 18
elseif (ageCat = 9) then
  #skillinnate[skFly] += 20
  #skillinnate[skHandleAn] += 20
  #skillinnate[skIntim] += 20
  #skillinnate[skPercep] += 20
  #skillinnate[skStealth] += 20
  #skillinnate[skSwim] += 20
  #skillinnate[skKnowArca] += 20
  #skillinnate[skKnowHist] += 20
  #skillinnate[skSpellcr] += 20
elseif (ageCat = 10) then
  #skillinnate[skFly] += 22
  #skillinnate[skHandleAn] += 22
  #skillinnate[skIntim] += 22
  #skillinnate[skPercep] += 22
  #skillinnate[skStealth] += 22
  #skillinnate[skSwim] += 22
  #skillinnate[skKnowArca] += 22
  #skillinnate[skKnowGeog] += 22
  #skillinnate[skKnowHist] += 22
  #skillinnate[skSpellcr] += 22
elseif (ageCat = 11) then
  #skillinnate[skFly] += 24
  #skillinnate[skHandleAn] += 24
  #skillinnate[skIntim] += 24
  #skillinnate[skPercep] += 24
  #skillinnate[skStealth] += 24
  #skillinnate[skSwim] += 24
  #skillinnate[skKnowArca] += 24
  #skillinnate[skKnowGeog] += 24
  #skillinnate[skKnowHist] += 24
  #skillinnate[skSpellcr] += 24
elseif (ageCat = 12) then
  #skillinnate[skFly] += 26
  #skillinnate[skHandleAn] += 26
  #skillinnate[skIntim] += 26
  #skillinnate[skPercep] += 26
  #skillinnate[skStealth] += 26
  #skillinnate[skSwim] += 26
  #skillinnate[skKnowArca] += 26
  #skillinnate[skKnowGeog] += 26
  #skillinnate[skKnowHist] += 26
  #skillinnate[skSpellcr] += 26
  #skillinnate[skBluff] += 13
  #skillinnate[skSenseMot] += 13
endif
      <before name="Skill Bonus Feats"/>
      </eval>
    <eval phase="Final" priority="1000"><![CDATA[~ set Frightful Presence, DR, SR, and CL
var ageCat as number
ageCat = hero.childfound[raxDragonA].tagvalue[Value.?]

~ frightful presesnce
if (ageCat >= 6) then
  hero.child[raxFrightP].field[abValue].value = 30 * ageCat
endif

~ Dragons have SR = to 11 + thier CR
if (ageCat >= 5) then
  var damage as number
  damage = herofield[tCR].value + 11
  #applysr[damage]
endif

~ Dragons have spell like abilities of CL = to TOTAL (not racial) hit dice
if (ageCat >= 5) then
  var CL as number
  CL = herofield[tHitDice].value
  field[rSpCastLev].value = CL
endif

~ DR 
if (ageCat >= 5) then
  var drVal as number
  drVal = (ageCat - 5)/2
  drVal = 5 * (1 + round(drVal,0,-1))
  #applydr[xDamRdMag,drVal]
endif]]></eval>
    </thing>
  <thing id="raxDragonA" name="Dragon Age" description="True dragon&apos;s age a catagory." compset="RaceSpec" uniqueness="unique">
    <comment>We store the numeric age catagory in field[abValue].</comment>
    <fieldval field="abValue" value="1"/>
    <usesource source="VarDragons"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <tag group="Helper" tag="Helper"/>
    <tag group="Hide" tag="Special"/>
    </thing>
  <thing id="raxDrgBrea" name="Breath Weapon" description="Using a breath weapon is a standard action. A dragon can use its breath weapon once every 1d4 rounds, even if it possesses more than one breath weapon. A breath weapon always starts at an intersection adjacent to the dragon and extends in a direction of the dragon&apos;s choice. Breath weapons come in two shapes, lines and cones, whose areas vary with the dragon&apos;s size. If a breath weapon deals damage, those caught in the area can attempt Reflex saves to take half damage. The save DC against a breath weapon is 10 + 1/2 dragon&apos;s HD + dragon&apos;s Con modifier. Saves against various breath weapons use the same DC; the type of saving throw is noted in the variety descriptions. A dragon can use its breath weapon when it is grappling or being grappled." compset="RaceSpec" uniqueness="useronce">
    <comment>This breath weapon is for the modified dragons.

Set the tag BloodEner.? for the appropiate energy type

use field[abText] any additional or non energy damage

field[abValue] is the # of damage dice
field[abValue2] is the range
field[abValue3]is the type of damage dice

Assign BreathShp.Cone for cone spahed breath and BreathShp.Line for line shaped

BreathSve.Fortitude, Will, or Reflex for save type

SaveEff.Half or Negates for save effect</comment>
    <fieldval field="trkMax" value="1"/>
    <usesource source="VarDragons"/>
    <tag group="AbilType" tag="Super"/>
    <tag group="StandardDC" tag="aCON" name="Constitution" abbrev="Constitution"/>
    <tag group="Helper" tag="ShowSpec" name="Show Spec" abbrev="Show Spec"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <tag group="Custom" tag="DragonBrea"/>
    <tag group="BreathSve" tag="Reflex"/>
    <tag group="SaveEff" tag="Half"/>
    <tag group="User" tag="Tracker"/>
    <tag group="SpecType" tag="Attack" name="Attack" abbrev="Attack"/>
    <tag group="Usage" tag="CB1d4Rnds"/>
    <eval phase="Final" priority="1000" index="2"><![CDATA[~ get dragon size
var dragSize as number
dragSize = herofield[tSize].value

~ breath range for cone
if (dragSize = -2) then
  field[abValue2].value = 15
elseif (dragSize = -1) then
  field[abValue2].value = 20
elseif (dragSize = 0) then
  field[abValue2].value = 30
elseif (dragSize = 1) then 
  field[abValue2].value = 40
elseif (dragSize = 2) then
  field[abValue2].value = 50
elseif (dragSize = 3) then
  field[abValue2].value = 60
elseif (dragSize >= 4) then
  field[abValue2].value = 70
endif

~ range for line is twice that of cone
if (tagcount[BreathShp.Line] <> 0) then
  field[abValue2].value *= 2
endif]]></eval>
    <eval phase="Final" priority="1000" index="3">~ get age catagory

var ageCat as number
ageCat = hero.childfound[raxDragonA].tagvalue[Value.?]

~ multiply breath weapon damage by age catagory
field[abValue].value *= ageCat</eval>
    <eval phase="Render" priority="90000"><![CDATA[~ Generate our livename.
~ field[abValue] is the # of dice
~ field[abValue2] is the range
~ field[abValue3] is the type of dice
~ we use the tags BreathShp.Line or BreathShp.Cone for breath shape
~ BreathSve.Fortitude, Will, or Reflex for save type
~ SaveEff.Half or Negates for save effect

var damType as string
if (tagis[BloodEner.?] <> 0) then
 damType = lowercase(tagnames[BloodEner.?]) & field[abText].text
else
 damType = field[abText].text
endif

field[abSumm].text = field[abValue].value & "d" & field[abValue3].value & " " & damType & ", " & field[abValue2].value & "-ft. " & lowercase(tagnames[BreathShp.?]) & ", " & tagnames[BreathSve.?] & " DC " & field[abDC].value & " " & lowercase(tagnames[SaveEff.?]) & ", " & field[trkMax].value & tagnames[Usage.?]

field[livename].text = "Breath Weapon (" & field[abSumm].text & ")"

call abilLabel]]></eval>
    </thing>
  <thing id="rxDragBlue" name="Dragon, Blue" description="Blue dragons share many commonalities with brasses, and the two kinds of dragons frequently compete for water, food, and influence over nearby humanoids. The two take remarkably similar approaches to dealing with water and food, although blues are typically more controlling than their metallic rivals. What varies between these kinds is how they exert their power over their humanoid neighbors. Where as brass dragons form vast networks of friendly and casual connections with people of similar interests, blue dragons maintain smaller but better-controlled webs of contacts over whom they can directly or indirectly exert vise-like authority. In short, where brass dragons are socialites, blue dragons are puppet masters.\n\nNeurotically, almost obsessively tidy, neat, and careful, blue dragons manage every aspect of their lives to a minute level. This desire to control manifests from the moment of their hatching and is not limited to external forces, actions, and creatures. Blue dragons also strive to remain stridently in control of themselves-their own actions, thoughts, and even their own feelings and emotions. Unfortunately for the blues, they lack the natural predilection for discipline possessed by their green brethren. Most blue dragons find this deficiency of self-control an exhilarating challenge for them to micromanage out of existence. When they become so tightly wound as to snap, rather than launch into self-destructive rampages, blue dragons seethe in their thrones and mobilize their armies. In the language of Qadira, the saber-rattling that often occurs before the start of outright war is known as al-dra aksu, &#147;waking the dragon,&#148; in reference to the belief that most wars in the desert begin because blue dragons want them to happen.\n\nAs befits their sand-burrowing ways, blue dragons are sleek, muscular creatures with small, tightly overlapping scales and thick, short claws perfect for digging. Their swept-back horns and relatively small and sparse cheek hornlets add to their swift-moving appearance, such that even when at rest they seem in motion. The wings of blue dragons have thick scales on their leading edges, which protect the relatively delicate membranes of their leathery wings from stones while they burrow. Unlike most other dragons, blues can also fold their wings tightly to their sides, which prevents the wings from acting as obstacles to movement through the sand." compset="Race">
    <fieldval field="shortname" value="Blue Dragon"/>
    <fieldval field="rHitDice" value="6"/>
    <fieldval field="rHPStart" value="39"/>
    <fieldval field="rSTR" value="3"/>
    <fieldval field="rDEX" value="4"/>
    <fieldval field="rCON" value="3"/>
    <fieldval field="rWIS" value="1"/>
    <fieldval field="rSpeed" value="40"/>
    <fieldval field="rAC" value="5"/>
    <fieldval field="rCR" value="5"/>
    <fieldval field="rDescript" value="With scales the color of the desert sky, this large, serpentine dragon moves with an unsettling grace."/>
    <fieldval field="rEnviron" value="warm deserts"/>
    <fieldval field="rOrgan" value="solitary"/>
    <fieldval field="rTreasure" value="triple"/>
    <usesource source="VarDragons"/>
    <tag group="Alignment" tag="Evil"/>
    <tag group="Race" tag="rTrueDrago"/>
    <tag group="Helper" tag="NotHum"/>
    <tag group="RaceType" tag="NPC"/>
    <tag group="RaceSize" tag="Small11"/>
    <tag group="HasType" tag="tpDragon"/>
    <tag group="Helper" tag="Quadruped"/>
    <tag group="Hero" tag="NoDefComm"/>
    <tag group="Alignment" tag="Lawful"/>
    <tag group="DragType" tag="Chromatic" name="Dragon, Chromatic"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <tag group="Language" tag="Any"/>
    <bootstrap thing="raxFrightP">
      <containerreq phase="First" priority="200">DragonAge.Juvenile</containerreq>
      </bootstrap>
    <bootstrap thing="wTailSlap">
      <autotag group="wMain" tag="1d8_6"/>
      <autotag group="Helper" tag="NatTwoHand"/>
      </bootstrap>
    <bootstrap thing="raxDrgBrea">
      <autotag group="BloodEner" tag="Elec"/>
      <autotag group="BreathShp" tag="Line"/>
      <assignval field="abValue" value="2"/>
      <assignval field="abValue3" value="8"/>
      </bootstrap>
    <bootstrap thing="wBite">
      <autotag group="wMain" tag="1d4_4"/>
      <autotag group="Helper" tag="NatPrimary"/>
      <autotag group="Helper" tag="NatTwoHand"/>
      </bootstrap>
    <bootstrap thing="wClaw">
      <autotag group="Value" tag="2"/>
      <autotag group="wMain" tag="1d3_3"/>
      <autotag group="Helper" tag="NatPrimary"/>
      </bootstrap>
    <bootstrap thing="raDrSenses"></bootstrap>
    <bootstrap thing="wWing">
      <autotag group="Value" tag="2"/>
      <autotag group="wMain" tag="1d4_4"/>
      </bootstrap>
    <bootstrap thing="skKnowGeog"></bootstrap>
    <bootstrap thing="xFly">
      <autotag group="Maneuver" tag="Average"/>
      <autotag group="Value" tag="150"/>
      </bootstrap>
    <bootstrap thing="wCrush"></bootstrap>
    <bootstrap thing="wTailSweep"></bootstrap>
    <bootstrap thing="stEarth"></bootstrap>
    <bootstrap thing="xBurrow">
      <autotag group="Value" tag="20"/>
      </bootstrap>
    <bootstrap thing="raBluDeseT">
      <containerreq phase="First" priority="200">DragonAge.Wyrmling</containerreq>
      </bootstrap>
    <bootstrap thing="xImmElec">
      <containerreq phase="First" priority="200">DragonAge.Wyrmling</containerreq>
      </bootstrap>
    <bootstrap thing="raBluSounI">
      <containerreq phase="First" priority="200">DragonAge.VeryYoung</containerreq>
      </bootstrap>
    <bootstrap thing="spGhosSou0">
      <containerreq phase="First" priority="200">DragonAge.Young</containerreq>
      <autotag group="Usage" tag="AtWill"/>
      <autotag group="Helper" tag="SpellLike"/>
      </bootstrap>
    <bootstrap thing="spMirrIma2">
      <containerreq phase="First" priority="200">DragonAge.Juvenile</containerreq>
      <autotag group="Helper" tag="SpellLike"/>
      <autotag group="Usage" tag="AtWill"/>
      </bootstrap>
    <bootstrap thing="spVentril1">
      <containerreq phase="First" priority="200">DragonAge.Adult</containerreq>
      <autotag group="Helper" tag="SpellLike"/>
      <autotag group="Usage" tag="AtWill"/>
      </bootstrap>
    <bootstrap thing="raxBluEleA">
      <containerreq phase="First" priority="200">DragonAge.Adult</containerreq>
      </bootstrap>
    <bootstrap thing="raxBluMira">
      <containerreq phase="First" priority="200">DragonAge.Old</containerreq>
      </bootstrap>
    <bootstrap thing="spHallTer4">
      <containerreq phase="First" priority="200">DragonAge.Old</containerreq>
      <autotag group="Usage" tag="AtWill"/>
      <autotag group="Helper" tag="SpellLike"/>
      </bootstrap>
    <bootstrap thing="raBluStorB">
      <containerreq phase="First" priority="200">DragonAge.Ancient</containerreq>
      </bootstrap>
    <bootstrap thing="raBluSands">
      <containerreq phase="First" priority="200">DragonAge.GreatWyrm</containerreq>
      </bootstrap>
    <bootstrap thing="spVeil6">
      <containerreq phase="First" priority="200">DragonAge.Ancient</containerreq>
      <autotag group="Helper" tag="SpellLike"/>
      <autotag group="Usage" tag="AtWill"/>
      </bootstrap>
    <bootstrap thing="spMiraArc5">
      <containerreq phase="First" priority="200">DragonAge.GreatWyrm</containerreq>
      <autotag group="Usage" tag="AtWill"/>
      <autotag group="Helper" tag="SpellLike"/>
      </bootstrap>
    <bootstrap thing="fDazzDisp">
      <containerreq phase="First" priority="200">DragonAge.Wyrmling</containerreq>
      <autotag group="Target" tag="wBite"/>
      </bootstrap>
    <bootstrap thing="fImpInit">
      <containerreq phase="First" priority="200">DragonAge.Wyrmling</containerreq>
      </bootstrap>
    <bootstrap thing="fWepFoc">
      <containerreq phase="First" priority="200">DragonAge.Wyrmling</containerreq>
      <autotag group="Target" tag="wBite"/>
      </bootstrap>
    <bootstrap thing="fMultiAtt">
      <containerreq phase="First" priority="200">DragonAge.VeryYoung</containerreq>
      </bootstrap>
    <bootstrap thing="fShattDef">
      <containerreq phase="First" priority="200">DragonAge.Young</containerreq>
      <autotag group="Target" tag="wBite"/>
      </bootstrap>
    <bootstrap thing="fHover">
      <containerreq phase="First" priority="200">DragonAge.Juvenile</containerreq>
      </bootstrap>
    <bootstrap thing="fComCast">
      <containerreq phase="First" priority="200">DragonAge.YngAdult</containerreq>
      </bootstrap>
    <bootstrap thing="fDeadStro">
      <containerreq phase="First" priority="200">DragonAge.Adult</containerreq>
      <autotag group="Target" tag="wBite"/>
      <autotag group="thing" tag="skipprereq"/>
      </bootstrap>
    <bootstrap thing="fExtSpell">
      <containerreq phase="First" priority="200">DragonAge.MatAdult</containerreq>
      </bootstrap>
    <bootstrap thing="fImpCrit">
      <containerreq phase="First" priority="200">DragonAge.Old</containerreq>
      <autotag group="Target" tag="wBite"/>
      </bootstrap>
    <bootstrap thing="fSilentSpl">
      <containerreq phase="First" priority="200">DragonAge.VeryOld</containerreq>
      </bootstrap>
    <bootstrap thing="fQuickSpl">
      <containerreq phase="First" priority="200">DragonAge.Ancient</containerreq>
      </bootstrap>
    <bootstrap thing="fArcStrike">
      <containerreq phase="First" priority="200">DragonAge.Wyrm</containerreq>
      </bootstrap>
    <bootstrap thing="fMaxSpell">
      <containerreq phase="First" priority="200">DragonAge.GreatWyrm</containerreq>
      </bootstrap>
    <bootstrap thing="skKnowLoc"></bootstrap>
    <bootstrap thing="skKnowArca"></bootstrap>
    <bootstrap thing="skKnowHist"></bootstrap>
    <bootstrap thing="lDraconic">
      <containerreq phase="First" priority="200">DragonAge.Wyrmling</containerreq>
      </bootstrap>
    <bootstrap thing="xDamRdMag">
      <containerreq phase="First" priority="200">DragonAge.YngAdult</containerreq>
      </bootstrap>
    <bootstrap thing="xSplRs">
      <containerreq phase="First" priority="200">DragonAge.YngAdult</containerreq>
      </bootstrap>
    <bootstrap thing="tmxDragAge"></bootstrap>
    <eval phase="Final" priority="1000"><![CDATA[~ set Frightful Presence, DR, SR, and CL
var ageCat as number
ageCat = hero.childfound[raxDragonA].tagvalue[Value.?]

~ frightful presesnce
if (ageCat >= 4) then
  hero.child[raxFrightP].field[abValue].value = 30 * ageCat
endif

~ Dragons have SR = to 11 + thier CR
if (ageCat >= 5) then
  var damage as number
  damage = herofield[tCR].value + 11
  #applysr[damage]
endif

~ Dragons have spell like abilities of CL = to TOTAL (not racial) hit dice
if (ageCat >= 3) then
  var CL as number
  CL = herofield[tHitDice].value
  field[rSpCastLev].value = CL
endif

~ DR 
if (ageCat >= 5) then
  var drVal as number
  drVal = (ageCat - 5)/2
  drVal = 5 * (1 + round(drVal,0,-1))
  #applydr[xDamRdMag,drVal]
endif]]></eval>
    <eval phase="First" priority="550" index="2"><![CDATA[~ set caster level of racial spells

~age catagory
var ageCat as number
ageCat = hero.childfound[raxDragonA].tagvalue[Value.?]

perform hero.findchild[BaseRace].setfocus

~ set caster level
if (ageCat >= 4) then
 perform focus.assign[SplLookup.cHelpSor]
 focus.field[cMagicLev].value = 2*ageCat - 7
endif

perform state.clearfocus]]></eval>
    <eval phase="PreLevel" priority="4000" index="3">~ innate skill ranks 
var ageCat as number
ageCat = hero.childfound[raxDragonA].tagvalue[Value.?]

if (ageCat = 1) then
  #skillinnate[skBluff] += 6
  #skillinnate[skFly] += 6
  #skillinnate[skIntim] += 6
  #skillinnate[skPercep] += 6
  #skillinnate[skStealth] += 6
  #skillinnate[skSurvival] += 6
elseif (ageCat = 2) then
  #skillinnate[skBluff] += 8
  #skillinnate[skFly] += 8
  #skillinnate[skIntim] += 8
  #skillinnate[skKnowLoc] += 8
  #skillinnate[skPercep] += 8
  #skillinnate[skStealth] += 8
  #skillinnate[skSurvival] += 8
elseif (ageCat = 3) then
  #skillinnate[skBluff] += 10
  #skillinnate[skFly] += 10
  #skillinnate[skIntim] += 10
  #skillinnate[skKnowLoc] += 10
  #skillinnate[skPercep] += 10
  #skillinnate[skStealth] += 10
  #skillinnate[skSurvival] += 10
elseif (ageCat = 4) then
  #skillinnate[skBluff] += 12
  #skillinnate[skFly] += 12
  #skillinnate[skIntim] += 12
  #skillinnate[skKnowLoc] += 12
  #skillinnate[skPercep] += 12
  #skillinnate[skSpellcr] += 12
  #skillinnate[skStealth] += 12
  #skillinnate[skSurvival] += 12
elseif (ageCat = 5) then
  #skillinnate[skBluff] += 14
  #skillinnate[skFly] += 14
  #skillinnate[skIntim] += 14
  #skillinnate[skKnowLoc] += 14
  #skillinnate[skPercep] += 14
  #skillinnate[skSpellcr] += 14
  #skillinnate[skStealth] += 14
  #skillinnate[skSurvival] += 14
elseif (ageCat = 6) then
  #skillinnate[skBluff] += 16
  #skillinnate[skFly] += 16
  #skillinnate[skIntim] += 16
  #skillinnate[skKnowGeog] += 16
  #skillinnate[skKnowLoc] += 16
  #skillinnate[skPercep] += 16
  #skillinnate[skSpellcr] += 16
  #skillinnate[skStealth] += 16
  #skillinnate[skSurvival] += 16
elseif (ageCat = 7) then
  #skillinnate[skBluff] += 18
  #skillinnate[skFly] += 18
  #skillinnate[skIntim] += 18
  #skillinnate[skKnowGeog] += 18
  #skillinnate[skKnowLoc] += 18
  #skillinnate[skPercep] += 18
  #skillinnate[skSpellcr] += 18
  #skillinnate[skStealth] += 18
  #skillinnate[skSurvival] += 18
elseif (ageCat = 8) then 
  #skillinnate[skBluff] += 20
  #skillinnate[skFly] += 20
  #skillinnate[skIntim] += 20
  #skillinnate[skKnowArca] += 20
  #skillinnate[skKnowGeog] += 20
  #skillinnate[skKnowLoc] += 20
  #skillinnate[skPercep] += 20
  #skillinnate[skSpellcr] += 20
  #skillinnate[skStealth] += 20
  #skillinnate[skSurvival] += 20
elseif (ageCat = 9) then
  #skillinnate[skBluff] += 22
  #skillinnate[skFly] += 22
  #skillinnate[skIntim] += 22
  #skillinnate[skKnowArca] += 22
  #skillinnate[skKnowGeog] += 22
  #skillinnate[skKnowLoc] += 22
  #skillinnate[skPercep] += 22
  #skillinnate[skSpellcr] += 22
  #skillinnate[skStealth] += 22
  #skillinnate[skSurvival] += 22
elseif (ageCat = 10) then
  #skillinnate[skBluff] += 24
  #skillinnate[skFly] += 24
  #skillinnate[skIntim] += 24
  #skillinnate[skKnowArca] += 24
  #skillinnate[skKnowGeog] += 24
  #skillinnate[skKnowHist] += 24
  #skillinnate[skKnowLoc] += 24
  #skillinnate[skPercep] += 24
  #skillinnate[skSpellcr] += 24
  #skillinnate[skStealth] += 24
  #skillinnate[skSurvival] += 24
elseif (ageCat = 11) then
  #skillinnate[skBluff] += 26
  #skillinnate[skFly] += 26
  #skillinnate[skIntim] += 26
  #skillinnate[skKnowArca] += 26
  #skillinnate[skKnowGeog] += 26
  #skillinnate[skKnowHist] += 26
  #skillinnate[skKnowLoc] += 26
  #skillinnate[skPercep] += 26
  #skillinnate[skSpellcr] += 26
  #skillinnate[skStealth] += 26
  #skillinnate[skSurvival] += 26
elseif (ageCat = 12) then
  #skillinnate[skBluff] += 28
  #skillinnate[skFly] += 28
  #skillinnate[skIntim] += 28
  #skillinnate[skKnowArca] += 28
  #skillinnate[skKnowGeog] += 28
  #skillinnate[skKnowHist] += 28
  #skillinnate[skKnowLoc] += 28
  #skillinnate[skPercep] += 28
  #skillinnate[skSenseMot] += 28
  #skillinnate[skSpellcr] += 28
  #skillinnate[skStealth] += 28
  #skillinnate[skSurvival] += 28
endif
      <before name="Skill Bonus Feats"/>
      </eval>
    </thing>
  <thing id="raxBluEleA" name="Electricity Aura" description="An adult blue dragon is surrounded by an aura of electricity. Creatures within 5 feet take 1d6 points of electricity damage at the beginning of the dragon&apos;s turn. An old dragon&apos;s aura extends to 10 feet. An ancient dragon&apos;s damage increases to 2d6." compset="RaceSpec" uniqueness="useronce">
    <usesource source="VarDragons"/>
    <tag group="Helper" tag="ShowSpec" name="Show Spec" abbrev="Show Spec"/>
    <tag group="SpecType" tag="Aura" name="Aura" abbrev="Aura"/>
    <tag group="AbilType" tag="Super" name="Supernatural Ability" abbrev=" (Su)"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <eval phase="Final" priority="10000"><![CDATA[~ set livename
~ get age catagory

var ageCat as number
ageCat = hero.child[raxDragonA].tagvalue[Value.?]

~ store # of damage dice in abValue2
~ store area of effect in abValue

if (ageCat >= 6) then
  field[abValue].value += 5
  field[abValue2].value += 1
endif
if (ageCat >= 8) then
  field[abValue].value += 5
endif
if (ageCat >= 10) then
  field[abValue2].value += 1
endif

field[livename].text = "Electricity Aura (" & field[abValue2].value & "d6, " & field[abValue].value & " ft.)"

field[shortname].text = "electricity aura (" & field[abValue2].value & "d6, " & field[abValue].value & " ft.)"]]></eval>
    </thing>
  <thing id="raxBluMira" name="Mirage" description="An old or older blue dragon can make itself appear to be in two places at once as a free action for a number of rounds per day equal to its Hit Dice. This ability functions as {i}project image{/i} but the dragon can use its Breath weapon through the mirage." compset="RaceSpec" uniqueness="useronce">
    <usesource source="VarDragons"/>
    <tag group="Helper" tag="ShowSpec" name="Show Spec" abbrev="Show Spec"/>
    <tag group="SpInfo" tag="spProjIma6" name="Project Image" abbrev="Project Image"/>
    <tag group="User" tag="Tracker"/>
    <tag group="Usage" tag="DayRound"/>
    <tag group="ChargeCalc" tag="LevelFull"/>
    <tag group="AbilType" tag="Super" name="Supernatural Ability" abbrev=" (Su)"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <eval phase="Final" priority="1000">var hd as number
hd = hero.tagcount[Hero.HitDice]

field[trkMax].value = hd</eval>
    </thing>
  <thing id="raxBlaAciP" name="Acid Pool" description="An ancient or older black dragon can use its Breath weapon to create an acid pool as a standard action. This acid pool has a radius of 5 feet per age category of the dragon. When an acid pool is created, anyone inside its area takes an amount of damage equal to the dragon&apos;s Breath weapon (Reflex half). Any creature that starts its turn touching this pool takes damage, but can make a Reflex save for half. Each round, the total damage dice of the pool is halved until the result would be less than 1d6. The acid pool floats on water, and deals damage to anything on the surface." compset="RaceSpec">
    <usesource source="VarDragons"/>
    <tag group="Helper" tag="ShowSpec" name="Show Spec" abbrev="Show Spec"/>
    <tag group="AbilType" tag="Super" name="Supernatural Ability" abbrev=" (Su)"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <eval phase="Final" priority="10000"><![CDATA[~ set livename
~ get radius catagory

var radius as number
radius = 5 * hero.child[raxDragonA].tagvalue[Value.?]

field[livename].text = "Acid Pool (" & radius & " ft. radius)"
field[shortname].text = "acid pool (" & radius & " ft. radius)"]]></eval>
    </thing>
  <thing id="raxBlaAcBt" name="Acidic Bite" description="At old age, a black dragon&apos;s bite deals an additional 2d6 points of acid damage. An ancient dragon&apos;s damage increases to 4d6, and a great wrym&apos;s to 6d6." compset="RaceSpec">
    <usesource source="VarDragons"/>
    <tag group="Helper" tag="ShowSpec" name="Show Spec" abbrev="Show Spec"/>
    <tag group="AbilType" tag="Super" name="Supernatural Ability" abbrev=" (Su)"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <eval phase="Final" priority="1000"><![CDATA[~ get age catagory
var ageCat as number
ageCat = hero.child[raxDragonA].tagvalue[Value.?]
ageCat -= 6

~ if for some reason where are less than old get out
doneif (ageCat < 1)

var dam as number
dam = 2 * round(ageCat/2,0,-1)

hero.childfound[wBite].field[wDamExtra].text &= " plus " & dam & "d6 acid"]]></eval>
    </thing>
  <thing id="rxDragBras" name="Dragon, Brass" description="Of all the true dragons, brasses are the most whimsical and light-hearted. Many a brass dragon acts the fool, carousing and jesting with shorter-lived races as an equal or-occasionally-even a simpleton. This play at stupidity is usually just a ruse meant to put others at ease and cause them to underestimate the brass dragon's intelligence, which at hatching equals that of an adult human. While brass dragons are not as dim-witted as they let on, they are nonetheless flighty and easily distracted.\n\nGregarious and absentminded, brass dragons make for memorable patrons or helpers of goodly adventurers, particularly near rocky edges of deserts or in close proximity an oasis. A brass dragon can easily play the role of desert guide, advisor or diplomat for a powerful caliph, or uniquely uproarious tavern patron. Above all else, brass dragons genuinely wish to help others and work extremely hard (in brief spurts of labor separated by long periods of distraction and idle conversation) to mediate or otherwise seek agreement among discordant and opposing groups. Despite their friendly and passive demeanors, however, only fools assume that brass dragons are harmless or unwilling to strike at those who annoy or anger them.\n\nBrass dragons appear-like their preferred homes-as a mixture of smooth beauty and craggy ruggedness. Thick ridges of keratin just beneath their scales sweep back from their jaws to eventually grow into long, disjointed horns that proliferate as they age. Hatchlings typically have relatively smooth faces with only two horn nubs projecting out above and behind their skulls, while the eldest brasses sport more than a dozen horns extending back from faces so wrinkled and folded with keratin that some become blinded by their own horn ridges (though they normally use magic or their own sharp claws to remedy this problem). Beyond their distinctive faces, these keratin folds appear on the backs of brass dragons' legs, where their wings connect to their flanks, and along the last two vertebrae of their tails. These folds usually produce only tiny hornlets in even the eldest of brass dragons, but occasionally a brass's legs, wings, and tail are studded with curving, slightly crooked horns extending a foot or more in length." compset="Race">
    <fieldval field="shortname" value="Brass Dragon"/>
    <fieldval field="rHitDice" value="4"/>
    <fieldval field="rHPStart" value="26"/>
    <fieldval field="rSTR" value="1"/>
    <fieldval field="rDEX" value="6"/>
    <fieldval field="rCON" value="3"/>
    <fieldval field="rWIS" value="1"/>
    <fieldval field="rSpeed" value="60"/>
    <fieldval field="rAC" value="3"/>
    <fieldval field="rCR" value="3"/>
    <fieldval field="rEnviron" value="warm deserts"/>
    <fieldval field="rOrgan" value="solitary"/>
    <fieldval field="rTreasure" value="triple"/>
    <fieldval field="rDescript" value="A crest of horns sweeps back from the head of this dragon, leading to a long neck and serpentine brass body."/>
    <usesource source="VarDragons"/>
    <tag group="RaceType" tag="NPC"/>
    <tag group="RaceSize" tag="Tiny12"/>
    <tag group="HasType" tag="tpDragon"/>
    <tag group="Helper" tag="Quadruped"/>
    <tag group="Hero" tag="NoDefComm"/>
    <tag group="Race" tag="rTrueDrago"/>
    <tag group="Alignment" tag="Chaotic"/>
    <tag group="Alignment" tag="Good"/>
    <tag group="DragType" tag="Metallic" name="Dragon, Metallic"/>
    <tag group="Helper" tag="NotHum"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <tag group="Language" tag="Any"/>
    <bootstrap thing="wClaw">
      <autotag group="Value" tag="2"/>
      <autotag group="wMain" tag="1d3_3"/>
      <autotag group="Helper" tag="NatPrimary"/>
      </bootstrap>
    <bootstrap thing="raDrSenses"></bootstrap>
    <bootstrap thing="wWing">
      <autotag group="Value" tag="2"/>
      <autotag group="wMain" tag="1d4_4"/>
      </bootstrap>
    <bootstrap thing="xFly">
      <autotag group="Maneuver" tag="Average"/>
      <autotag group="Value" tag="100"/>
      </bootstrap>
    <bootstrap thing="wCrush"></bootstrap>
    <bootstrap thing="wTailSweep"></bootstrap>
    <bootstrap thing="xBurrow">
      <autotag group="Value" tag="30"/>
      </bootstrap>
    <bootstrap thing="stFire"></bootstrap>
    <bootstrap thing="xDamRdMag">
      <containerreq phase="First" priority="200">DragonAge.YngAdult</containerreq>
      </bootstrap>
    <bootstrap thing="xSplRs">
      <containerreq phase="First" priority="200">DragonAge.YngAdult</containerreq>
      </bootstrap>
    <bootstrap thing="tmxDragAge"></bootstrap>
    <bootstrap thing="raxFrightP">
      <containerreq phase="First" priority="200">DragonAge.Adult</containerreq>
      </bootstrap>
    <bootstrap thing="raxBraSlee">
      <containerreq phase="First" priority="200">DragonAge.Wyrmling</containerreq>
      </bootstrap>
    <bootstrap thing="raBraMoveS">
      <containerreq phase="First" priority="200">DragonAge.Young</containerreq>
      </bootstrap>
    <bootstrap thing="raBraDeseW">
      <containerreq phase="First" priority="200">DragonAge.Juvenile</containerreq>
      </bootstrap>
    <bootstrap thing="raxBraFirA">
      <containerreq phase="First" priority="200">DragonAge.Old</containerreq>
      </bootstrap>
    <bootstrap thing="raxBraSand">
      <containerreq phase="First" priority="200">DragonAge.Ancient</containerreq>
      </bootstrap>
    <bootstrap thing="raBraSummD">
      <containerreq phase="First" priority="200">DragonAge.GreatWyrm</containerreq>
      </bootstrap>
    <bootstrap thing="spSpeawit1">
      <containerreq phase="First" priority="200">DragonAge.VeryYoung</containerreq>
      <autotag group="Usage" tag="AtWill"/>
      <autotag group="Helper" tag="SpellLike"/>
      </bootstrap>
    <bootstrap thing="spEnduEle1">
      <containerreq phase="First" priority="200">DragonAge.Juvenile</containerreq>
      <autotag group="Helper" tag="SpellLike"/>
      <autotag group="Usage" tag="AtWill"/>
      </bootstrap>
    <bootstrap thing="spSuggest2">
      <containerreq phase="First" priority="200">DragonAge.Adult</containerreq>
      <autotag group="Helper" tag="SpellLike"/>
      <autotag group="Usage" tag="AtWill"/>
      </bootstrap>
    <bootstrap thing="spContWea7">
      <containerreq phase="First" priority="200">DragonAge.Ancient</containerreq>
      <autotag group="Helper" tag="SpellLike"/>
      <autotag group="Usage" tag="AtWill"/>
      </bootstrap>
    <bootstrap thing="spContWin5">
      <containerreq phase="First" priority="200">DragonAge.Old</containerreq>
      <autotag group="Helper" tag="SpellLike"/>
      <autotag group="Usage" tag="AtWill"/>
      </bootstrap>
    <bootstrap thing="spWhirlwi8">
      <containerreq phase="First" priority="200">DragonAge.GreatWyrm</containerreq>
      <autotag group="Helper" tag="SpellLike"/>
      <autotag group="Usage" tag="AtWill"/>
      </bootstrap>
    <bootstrap thing="lDraconic">
      <containerreq phase="First" priority="200">DragonAge.Wyrmling</containerreq>
      </bootstrap>
    <bootstrap thing="fAlertness">
      <containerreq phase="First" priority="200">DragonAge.Wyrmling</containerreq>
      </bootstrap>
    <bootstrap thing="fImpInit">
      <containerreq phase="First" priority="200">DragonAge.Wyrmling</containerreq>
      </bootstrap>
    <bootstrap thing="fHover">
      <containerreq phase="First" priority="200">DragonAge.VeryYoung</containerreq>
      </bootstrap>
    <bootstrap thing="fSpellFoc">
      <containerreq phase="First" priority="200">DragonAge.Young</containerreq>
      <autotag group="Target" tag="ssEnchant"/>
      </bootstrap>
    <bootstrap thing="fPowerAtt">
      <containerreq phase="First" priority="200">DragonAge.Juvenile</containerreq>
      </bootstrap>
    <bootstrap thing="fFlybyAt">
      <containerreq phase="First" priority="200">DragonAge.YngAdult</containerreq>
      </bootstrap>
    <bootstrap thing="fGrtSpFoc">
      <containerreq phase="First" priority="200">DragonAge.Adult</containerreq>
      <autotag group="Target" tag="ssEnchant"/>
      </bootstrap>
    <bootstrap thing="fMultiAtt">
      <containerreq phase="First" priority="200">DragonAge.MatAdult</containerreq>
      </bootstrap>
    <bootstrap thing="fVitStr">
      <containerreq phase="First" priority="200">DragonAge.Old</containerreq>
      </bootstrap>
    <bootstrap thing="fImpVitStr">
      <containerreq phase="First" priority="200">DragonAge.VeryOld</containerreq>
      </bootstrap>
    <bootstrap thing="fQuickSpl">
      <containerreq phase="First" priority="200">DragonAge.Ancient</containerreq>
      </bootstrap>
    <bootstrap thing="fImpCount">
      <containerreq phase="First" priority="200">DragonAge.Wyrm</containerreq>
      </bootstrap>
    <bootstrap thing="fGrtVitStr">
      <containerreq phase="First" priority="200">DragonAge.GreatWyrm</containerreq>
      </bootstrap>
    <bootstrap thing="skKnowLoc"></bootstrap>
    <bootstrap thing="skKnowHist"></bootstrap>
    <bootstrap thing="wTailSlap">
      <autotag group="wMain" tag="1d8_6"/>
      <autotag group="Helper" tag="NatTwoHand"/>
      </bootstrap>
    <bootstrap thing="raxDrgBrea">
      <autotag group="BloodEner" tag="Fire"/>
      <autotag group="BreathShp" tag="Line"/>
      <assignval field="abValue" value="2"/>
      <assignval field="abValue3" value="4"/>
      </bootstrap>
    <bootstrap thing="wBite">
      <autotag group="wMain" tag="1d4_4"/>
      <autotag group="Helper" tag="NatPrimary"/>
      <autotag group="Helper" tag="NatTwoHand"/>
      </bootstrap>
    <eval phase="First" priority="550" index="2"><![CDATA[~ set caster level of racial spells

~age catagory
var ageCat as number
ageCat = hero.childfound[raxDragonA].tagvalue[Value.?]

perform hero.findchild[BaseRace].setfocus

~ set caster level
if (ageCat >= 3) then
 perform focus.assign[SplLookup.cHelpSor]
 focus.field[cMagicLev].value = 2*ageCat - 5
endif

perform state.clearfocus]]></eval>
    <eval phase="PreLevel" priority="4000" index="3">~ innate skill ranks 
var ageCat as number
ageCat = hero.childfound[raxDragonA].tagvalue[Value.?]

if (ageCat = 1) then
  #skillinnate[skBluff] += 4
  #skillinnate[skDiplo] += 4
  #skillinnate[skFly] += 4
  #skillinnate[skLinguist] += 4
  #skillinnate[skPercep] += 4
  #skillinnate[skSenseMot] += 4
elseif (ageCat = 2) then
  #skillinnate[skBluff] += 6
  #skillinnate[skDiplo] += 6
  #skillinnate[skFly] += 6
  #skillinnate[skHeal] += 6
  #skillinnate[skLinguist] += 6
  #skillinnate[skPercep] += 6
  #skillinnate[skSenseMot] += 6
elseif (ageCat = 3) then
  #skillinnate[skBluff] += 8
  #skillinnate[skDiplo] += 8
  #skillinnate[skFly] += 8
  #skillinnate[skHeal] += 8
  #skillinnate[skLinguist] += 8
  #skillinnate[skPercep] += 8
  #skillinnate[skSenseMot] += 8
elseif (ageCat = 4) then
  #skillinnate[skBluff] += 10
  #skillinnate[skDiplo] += 10
  #skillinnate[skFly] += 10
  #skillinnate[skHeal] += 10
  #skillinnate[skLinguist] += 10
  #skillinnate[skPercep] += 10
  #skillinnate[skSenseMot] += 10
  #skillinnate[skSurvival] += 10
elseif (ageCat = 5) then
  #skillinnate[skBluff] += 12
  #skillinnate[skDiplo] += 12
  #skillinnate[skFly] += 12
  #skillinnate[skHeal] += 12
  #skillinnate[skLinguist] += 12
  #skillinnate[skPercep] += 12
  #skillinnate[skSenseMot] += 12
  #skillinnate[skSurvival] += 12
elseif (ageCat = 6) then
  #skillinnate[skBluff] += 14
  #skillinnate[skDiplo] += 14
  #skillinnate[skFly] += 14
  #skillinnate[skHeal] += 14
  #skillinnate[skLinguist] += 14
  #skillinnate[skPercep] += 14
  #skillinnate[skSenseMot] += 14
  #skillinnate[skSpellcr] += 14
  #skillinnate[skSurvival] += 14
elseif (ageCat = 7) then
  #skillinnate[skBluff] += 16
  #skillinnate[skDiplo] += 16
  #skillinnate[skFly] += 16
  #skillinnate[skHeal] += 16
  #skillinnate[skLinguist] += 16
  #skillinnate[skPercep] += 16
  #skillinnate[skSenseMot] += 16
  #skillinnate[skSpellcr] += 16
  #skillinnate[skSurvival] += 16
elseif (ageCat = 8) then 
  #skillinnate[skBluff] += 18
  #skillinnate[skDiplo] += 18
  #skillinnate[skFly] += 18
  #skillinnate[skHeal] += 18
  #skillinnate[skKnowLoc] += 18
  #skillinnate[skLinguist] += 18
  #skillinnate[skPercep] += 18
  #skillinnate[skSenseMot] += 18
  #skillinnate[skSpellcr] += 18
  #skillinnate[skSurvival] += 18
elseif (ageCat = 9) then
  #skillinnate[skBluff] += 20
  #skillinnate[skDiplo] += 20
  #skillinnate[skFly] += 20
  #skillinnate[skHeal] += 20
  #skillinnate[skKnowLoc] += 20
  #skillinnate[skLinguist] += 20
  #skillinnate[skPercep] += 20
  #skillinnate[skSenseMot] += 20
  #skillinnate[skSpellcr] += 20
  #skillinnate[skSurvival] += 20
elseif (ageCat = 10) then
  #skillinnate[skBluff] += 22
  #skillinnate[skDiplo] += 22
  #skillinnate[skFly] += 22
  #skillinnate[skHeal] += 22
  #skillinnate[skKnowHist] += 22
  #skillinnate[skKnowLoc] += 22
  #skillinnate[skLinguist] += 22
  #skillinnate[skPercep] += 22
  #skillinnate[skSenseMot] += 22
  #skillinnate[skSpellcr] += 22
  #skillinnate[skSurvival] += 22
elseif (ageCat = 11) then
  #skillinnate[skBluff] += 24
  #skillinnate[skDiplo] += 24
  #skillinnate[skFly] += 24
  #skillinnate[skHeal] += 24
  #skillinnate[skKnowHist] += 24
  #skillinnate[skKnowLoc] += 24
  #skillinnate[skLinguist] += 24
  #skillinnate[skPercep] += 24
  #skillinnate[skSenseMot] += 24
  #skillinnate[skSpellcr] += 24
  #skillinnate[skSurvival] += 24
elseif (ageCat = 12) then
  #skillinnate[skAppraise] += 26
  #skillinnate[skBluff] += 26
  #skillinnate[skDiplo] += 26
  #skillinnate[skFly] += 26
  #skillinnate[skHeal] += 26
  #skillinnate[skKnowHist] += 26
  #skillinnate[skKnowLoc] += 26
  #skillinnate[skLinguist] += 26
  #skillinnate[skPercep] += 26
  #skillinnate[skSenseMot] += 26
  #skillinnate[skSpellcr] += 26
  #skillinnate[skSurvival] += 26
endif
      <before name="Skill Bonus Feats"/>
      </eval>
    <eval phase="Final" priority="1000"><![CDATA[~ set Frightful Presence, DR, SR, and CL
var ageCat as number
ageCat = hero.childfound[raxDragonA].tagvalue[Value.?]

~ frightful presesnce
if (ageCat >= 6) then
  hero.child[raxFrightP].field[abValue].value = 30 * ageCat
endif

~ Dragons have SR = to 11 + thier CR
if (ageCat >= 5) then
  var damage as number
  damage = herofield[tCR].value + 11
  #applysr[damage]
endif

~ Dragons have spell like abilities of CL = to TOTAL (not racial) hit dice
if (ageCat >= 2) then
  var CL as number
  CL = herofield[tHitDice].value
  field[rSpCastLev].value = CL
endif

~ DR 
if (ageCat >= 5) then
  var drVal as number
  drVal = (ageCat - 5)/2
  drVal = 5 * (1 + round(drVal,0,-1))
  #applydr[xDamRdMag,drVal]
endif]]></eval>
    </thing>
  <thing id="rxDragGree" name="Dragon, Green" description="Green dragons strive for self-perfection and constantly work to improve themselves. This applies to both body and mind, though more so to the latter. Many who deal with dragons consider greens the most reasonable and pragmatic of the chromatic dragons, and most attempts to reach some form of agreement between the two draconic septs involve green dragons-particularly those attempts with any actual chance of success. When approached correctly-which generally means not when they are in meditation or asleep-green dragons are the chromatics most often willing to converse with uninvited guests. Despite their reasonable personalities and openness to visitation, however, green dragons remain undeniably evil, selfish creatures, and those fools who forget this tend to wind up as snacks.\n\nIn every aspect of their lives, green dragons seek mastery. Their unending and unrealistic push for achievement often focuses strongly upon their own persons, and green dragons practice moderation and self-control on levels approaching that of golds. As a result, green dragons are the least likely of chromatics to rampage and the most likely to shed their evil ways. Few become truly good, but more green dragons slip into hard-edged neutrality than all other chromatics combined. Some scholars estimate that as many as one green in 10 finds sufficient enlightenment to embrace academic neutrality, but most draconic sages agree the number is much lower.\n\nOf the chromatic dragons, greens are the only type who consider academia a worthy pursuit. They fill their lairs with books and scrolls, and despite their hatred of the lesser races they give begrudging thanks to the industrious humans who record knowledge in such a convenient and portable format. Green dragons serve as the scholars and wizards of the chromatics, and their contributions to mathematics, astronomy, and the understanding of Golarion's calendar are numerous but often woefully undervalued or miscredited.\n\nThe single massive horn projecting from a green dragon's snout gives it the most striking and easily recognizable head shape of all true dragons. Every green dragon's iconic nose horn bears a unique shape, though it continues to grow all throughout the dragon's life. Some great wyrms have a horn so massive that they gain a blind spot in their vision, and to correct this they sometimes carve the horn into a smaller, more suitable shape." compset="Race">
    <fieldval field="shortname" value="Green Dragon"/>
    <fieldval field="rHitDice" value="5"/>
    <fieldval field="rHPStart" value="32"/>
    <fieldval field="rSTR" value="3"/>
    <fieldval field="rDEX" value="4"/>
    <fieldval field="rCON" value="3"/>
    <fieldval field="rWIS" value="1"/>
    <fieldval field="rSpeed" value="40"/>
    <fieldval field="rAC" value="4"/>
    <fieldval field="rCR" value="4"/>
    <fieldval field="rDescript" value="Scales the color of emeralds armor this ferocious dragon. A single sharp horn protrudes from the end of its toothy snout."/>
    <fieldval field="rEnviron" value="temperate forests"/>
    <fieldval field="rOrgan" value="solitary"/>
    <fieldval field="rTreasure" value="triple"/>
    <usesource source="VarDragons"/>
    <tag group="Alignment" tag="Evil"/>
    <tag group="Race" tag="rTrueDrago"/>
    <tag group="Helper" tag="NotHum"/>
    <tag group="RaceType" tag="NPC"/>
    <tag group="RaceSize" tag="Small11"/>
    <tag group="HasType" tag="tpDragon"/>
    <tag group="Helper" tag="Quadruped"/>
    <tag group="Hero" tag="NoDefComm"/>
    <tag group="Alignment" tag="Lawful"/>
    <tag group="DragType" tag="Chromatic" name="Dragon, Chromatic"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <tag group="Language" tag="Any"/>
    <bootstrap thing="raxFrightP">
      <containerreq phase="First" priority="200">DragonAge.Juvenile</containerreq>
      </bootstrap>
    <bootstrap thing="wTailSlap">
      <autotag group="wMain" tag="1d8_6"/>
      <autotag group="Helper" tag="NatTwoHand"/>
      </bootstrap>
    <bootstrap thing="raxDrgBrea">
      <autotag group="BloodEner" tag="Acid"/>
      <autotag group="BreathShp" tag="Cone"/>
      <assignval field="abValue" value="2"/>
      <assignval field="abValue3" value="6"/>
      </bootstrap>
    <bootstrap thing="wBite">
      <autotag group="wMain" tag="1d4_4"/>
      <autotag group="Helper" tag="NatPrimary"/>
      <autotag group="Helper" tag="NatTwoHand"/>
      </bootstrap>
    <bootstrap thing="wClaw">
      <autotag group="Value" tag="2"/>
      <autotag group="wMain" tag="1d3_3"/>
      <autotag group="Helper" tag="NatPrimary"/>
      </bootstrap>
    <bootstrap thing="raDrSenses"></bootstrap>
    <bootstrap thing="wWing">
      <autotag group="Value" tag="2"/>
      <autotag group="wMain" tag="1d4_4"/>
      </bootstrap>
    <bootstrap thing="skKnowGeog"></bootstrap>
    <bootstrap thing="xFly">
      <autotag group="Maneuver" tag="Average"/>
      <autotag group="Value" tag="150"/>
      </bootstrap>
    <bootstrap thing="wCrush"></bootstrap>
    <bootstrap thing="wTailSweep"></bootstrap>
    <bootstrap thing="xSwim">
      <autotag group="Value" tag="40"/>
      </bootstrap>
    <bootstrap thing="xImmAcid">
      <containerreq phase="First" priority="200">DragonAge.Wyrmling</containerreq>
      </bootstrap>
    <bootstrap thing="xDamRdMag">
      <containerreq phase="First" priority="200">DragonAge.YngAdult</containerreq>
      </bootstrap>
    <bootstrap thing="stAir"></bootstrap>
    <bootstrap thing="raGreWateB">
      <containerreq phase="First" priority="200">DragonAge.Wyrmling</containerreq>
      </bootstrap>
    <bootstrap thing="raGreWoodS">
      <containerreq phase="First" priority="200">DragonAge.VeryYoung</containerreq>
      </bootstrap>
    <bootstrap thing="raGreTracS">
      <containerreq phase="First" priority="200">DragonAge.Adult</containerreq>
      </bootstrap>
    <bootstrap thing="raGreCamou">
      <containerreq phase="First" priority="200">DragonAge.Old</containerreq>
      </bootstrap>
    <bootstrap thing="raxGreMias">
      <containerreq phase="First" priority="200">DragonAge.Ancient</containerreq>
      </bootstrap>
    <bootstrap thing="raGreAwakT">
      <containerreq phase="First" priority="200">DragonAge.GreatWyrm</containerreq>
      </bootstrap>
    <bootstrap thing="spEntangl1">
      <containerreq phase="First" priority="200">DragonAge.Young</containerreq>
      <autotag group="Usage" tag="AtWill"/>
      <autotag group="Helper" tag="SpellLike"/>
      </bootstrap>
    <bootstrap thing="spCharPer1">
      <containerreq phase="First" priority="200">DragonAge.Juvenile</containerreq>
      <autotag group="Usage" tag="AtWill"/>
      <autotag group="Helper" tag="SpellLike"/>
      </bootstrap>
    <bootstrap thing="spSuggest2">
      <containerreq phase="First" priority="200">DragonAge.Adult</containerreq>
      <autotag group="Usage" tag="AtWill"/>
      <autotag group="Helper" tag="SpellLike"/>
      </bootstrap>
    <bootstrap thing="spPlanGro3">
      <containerreq phase="First" priority="200">DragonAge.Old</containerreq>
      <autotag group="Usage" tag="AtWill"/>
      <autotag group="Helper" tag="SpellLike"/>
      </bootstrap>
    <bootstrap thing="spDomiPer4">
      <containerreq phase="First" priority="200">DragonAge.Ancient</containerreq>
      <autotag group="Usage" tag="AtWill"/>
      <autotag group="Helper" tag="SpellLike"/>
      </bootstrap>
    <bootstrap thing="spCommPla3">
      <containerreq phase="First" priority="200">DragonAge.GreatWyrm</containerreq>
      <autotag group="Usage" tag="AtWill"/>
      <autotag group="Helper" tag="SpellLike"/>
      </bootstrap>
    <bootstrap thing="lDraconic">
      <containerreq phase="First" priority="200">DragonAge.Wyrmling</containerreq>
      </bootstrap>
    <bootstrap thing="fAlertness">
      <containerreq phase="First" priority="200">DragonAge.Wyrmling</containerreq>
      </bootstrap>
    <bootstrap thing="fIronWill">
      <containerreq phase="First" priority="200">DragonAge.Wyrmling</containerreq>
      </bootstrap>
    <bootstrap thing="fPowerAtt">
      <containerreq phase="First" priority="200">DragonAge.Wyrmling</containerreq>
      </bootstrap>
    <bootstrap thing="fCleave">
      <containerreq phase="First" priority="200">DragonAge.VeryYoung</containerreq>
      </bootstrap>
    <bootstrap thing="fGreatClv">
      <containerreq phase="First" priority="200">DragonAge.Young</containerreq>
      </bootstrap>
    <bootstrap thing="fImpCrit">
      <containerreq phase="First" priority="200">DragonAge.Juvenile</containerreq>
      <autotag group="Target" tag="wBite"/>
      </bootstrap>
    <bootstrap thing="fFlybyAt">
      <containerreq phase="First" priority="200">DragonAge.YngAdult</containerreq>
      </bootstrap>
    <bootstrap thing="fImpCrit">
      <containerreq phase="First" priority="200">DragonAge.Adult</containerreq>
      <autotag group="Target" tag="wClaw"/>
      </bootstrap>
    <bootstrap thing="fCritFoc">
      <containerreq phase="First" priority="200">DragonAge.MatAdult</containerreq>
      </bootstrap>
    <bootstrap thing="fMultiAtt">
      <containerreq phase="First" priority="200">DragonAge.Old</containerreq>
      </bootstrap>
    <bootstrap thing="fBleedCrit">
      <containerreq phase="First" priority="200">DragonAge.VeryOld</containerreq>
      </bootstrap>
    <bootstrap thing="fTireCrit">
      <containerreq phase="First" priority="200">DragonAge.Wyrm</containerreq>
      </bootstrap>
    <bootstrap thing="fImpSunder">
      <containerreq phase="First" priority="200">DragonAge.GreatWyrm</containerreq>
      </bootstrap>
    <bootstrap thing="skKnowArca"></bootstrap>
    <bootstrap thing="skKnowNat"></bootstrap>
    <bootstrap thing="skKnowLoc"></bootstrap>
    <bootstrap thing="skKnowPlan"></bootstrap>
    <bootstrap thing="xSplRs">
      <containerreq phase="First" priority="200">DragonAge.YngAdult</containerreq>
      </bootstrap>
    <bootstrap thing="tmxDragAge"></bootstrap>
    <eval phase="Final" priority="1000"><![CDATA[~ set Frightful Presence, DR, SR, and CL
var ageCat as number
ageCat = hero.childfound[raxDragonA].tagvalue[Value.?]

~ frightful presesnce
if (ageCat >= 4) then
  hero.child[raxFrightP].field[abValue].value = 30 * ageCat
endif

~ Dragons have SR = to 11 + thier CR
if (ageCat >= 5) then
  var damage as number
  damage = herofield[tCR].value + 11
  #applysr[damage]
endif

~ Dragons have spell like abilities of CL = to TOTAL (not racial) hit dice
if (ageCat >= 3) then
  var CL as number
  CL = herofield[tHitDice].value
  field[rSpCastLev].value = CL
endif

~ DR 
if (ageCat >= 5) then
  var drVal as number
  drVal = (ageCat - 5)/2
  drVal = 5 * (1 + round(drVal,0,-1))
  #applydr[xDamRdMag,drVal]
endif]]></eval>
    <eval phase="First" priority="550" index="2"><![CDATA[~ set caster level of racial spells

~age catagory
var ageCat as number
ageCat = hero.childfound[raxDragonA].tagvalue[Value.?]

perform hero.findchild[BaseRace].setfocus

~ set caster level
if (ageCat >= 4) then
 perform focus.assign[SplLookup.cHelpSor]
 focus.field[cMagicLev].value = 2*ageCat - 7
endif

perform state.clearfocus]]></eval>
    <eval phase="PreLevel" priority="4000" index="3">~ innate skill ranks 
var ageCat as number
ageCat = hero.childfound[raxDragonA].tagvalue[Value.?]

if (ageCat = 1) then
  #skillinnate[skFly] += 5
  #skillinnate[skPercep] += 5
  #skillinnate[skSpellcr] += 5
  #skillinnate[skStealth] += 5
  #skillinnate[skSurvival] += 5
  #skillinnate[skSwim] += 5
elseif (ageCat = 2) then
  #skillinnate[skFly] += 7
  #skillinnate[skKnowNat] += 7
  #skillinnate[skPercep] += 7
  #skillinnate[skSpellcr] += 7
  #skillinnate[skStealth] += 7
  #skillinnate[skSurvival] += 7
  #skillinnate[skSwim] += 7
elseif (ageCat = 3) then
  #skillinnate[skFly] += 9
  #skillinnate[skKnowNat] += 9
  #skillinnate[skPercep] += 9
  #skillinnate[skSpellcr] += 9
  #skillinnate[skStealth] += 9
  #skillinnate[skSurvival] += 9
  #skillinnate[skSwim] += 9
elseif (ageCat = 4) then
  #skillinnate[skFly] += 11
  #skillinnate[skKnowArca] += 11
  #skillinnate[skKnowNat] += 11
  #skillinnate[skPercep] += 11
  #skillinnate[skSpellcr] += 11
  #skillinnate[skStealth] += 11
  #skillinnate[skSurvival] += 11
  #skillinnate[skSwim] += 11
elseif (ageCat = 5) then
  #skillinnate[skFly] += 13
  #skillinnate[skKnowArca] += 13
  #skillinnate[skKnowNat] += 13
  #skillinnate[skPercep] += 13
  #skillinnate[skSpellcr] += 13
  #skillinnate[skStealth] += 13
  #skillinnate[skSurvival] += 13
  #skillinnate[skSwim] += 13
elseif (ageCat = 6) then
  #skillinnate[skFly] += 15
  #skillinnate[skKnowArca] += 15
  #skillinnate[skKnowNat] += 15
  #skillinnate[skPercep] += 15
  #skillinnate[skSpellcr] += 15
  #skillinnate[skStealth] += 15
  #skillinnate[skSurvival] += 15
  #skillinnate[skSwim] += 15
  #skillinnate[skUseMagic] += 15
elseif (ageCat = 7) then
  #skillinnate[skFly] += 17
  #skillinnate[skKnowArca] += 17
  #skillinnate[skKnowNat] += 17
  #skillinnate[skPercep] += 17
  #skillinnate[skSpellcr] += 17
  #skillinnate[skStealth] += 17
  #skillinnate[skSurvival] += 17
  #skillinnate[skSwim] += 17
  #skillinnate[skUseMagic] += 17
elseif (ageCat = 8) then 
  #skillinnate[skFly] += 19
  #skillinnate[skKnowArca] += 19
  #skillinnate[skKnowLoc] += 19
  #skillinnate[skKnowNat] += 19
  #skillinnate[skPercep] += 19
  #skillinnate[skSpellcr] += 19
  #skillinnate[skStealth] += 19
  #skillinnate[skSurvival] += 19
  #skillinnate[skSwim] += 19
  #skillinnate[skUseMagic] += 19
elseif (ageCat = 9) then
  #skillinnate[skFly] += 21
  #skillinnate[skKnowArca] += 21
  #skillinnate[skKnowLoc] += 21
  #skillinnate[skKnowNat] += 21
  #skillinnate[skPercep] += 21
  #skillinnate[skSpellcr] += 21
  #skillinnate[skStealth] += 21
  #skillinnate[skSurvival] += 21
  #skillinnate[skSwim] += 21
  #skillinnate[skUseMagic] += 21
elseif (ageCat = 10) then
  #skillinnate[skFly] += 23
  #skillinnate[skKnowArca] += 23
  #skillinnate[skKnowLoc] += 23
  #skillinnate[skKnowNat] += 23
  #skillinnate[skKnowPlan] += 23
  #skillinnate[skPercep] += 23
  #skillinnate[skSpellcr] += 23
  #skillinnate[skStealth] += 23
  #skillinnate[skSurvival] += 23
  #skillinnate[skSwim] += 23
  #skillinnate[skUseMagic] += 23
elseif (ageCat = 11) then
  #skillinnate[skFly] += 25
  #skillinnate[skKnowArca] += 25
  #skillinnate[skKnowLoc] += 25
  #skillinnate[skKnowNat] += 25
  #skillinnate[skKnowPlan] += 25
  #skillinnate[skPercep] += 25
  #skillinnate[skSpellcr] += 25
  #skillinnate[skStealth] += 25
  #skillinnate[skSurvival] += 25
  #skillinnate[skSwim] += 25
  #skillinnate[skUseMagic] += 25
elseif (ageCat = 12) then
  #skillinnate[skFly] += 27
  #skillinnate[skKnowArca] += 27
  #skillinnate[skKnowLoc] += 27
  #skillinnate[skKnowNat] += 27
  #skillinnate[skKnowPlan] += 27
  #skillinnate[skPercep] += 27
  #skillinnate[skSenseMot] += 27
  #skillinnate[skSpellcr] += 27
  #skillinnate[skStealth] += 27
  #skillinnate[skSurvival] += 27
  #skillinnate[skSwim] += 27
  #skillinnate[skUseMagic] += 27
endif
      <before name="Skill Bonus Feats"/>
      </eval>
    </thing>
  <thing id="raxGreMias" name="Miasma" description="An ancient or older green dragon can use its Breath weapon to create a cloud of acid as a standard action that deals damage to any creature inside it. The cloud moves with the dragon and has a radius of 20 feet. When it&apos;s created, anyone inside this area takes an amount of damage equal to half the dragon&apos;s Breath weapon, with a Reflex save for half damage. The number of damage dice rolled is halved each round until the result would be less than 1d6. Any creature that starts its turn inside the cloud takes damage, but can make a Reflex save for half. A strong wind, such as that created by a gust of wind, disperses the cloud in 1 round." compset="RaceSpec">
    <usesource source="VarDragons"/>
    <tag group="Helper" tag="ShowSpec" name="Show Spec" abbrev="Show Spec"/>
    <tag group="StandardDC" tag="aCON" name="Constitution" abbrev="Constitution"/>
    <tag group="AbilType" tag="Super" name="Supernatural Ability" abbrev=" (Su)"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <eval phase="Final"><![CDATA[var dam as number
dam = hero.child[raxDrgBrea].field[abValue].value

field[livename].text = "Miasma (" & dam & "d6 acid)"
field[shortname].text = "miasma (" & dam & "d6 acid)"]]></eval>
    </thing>
  <thing id="rxDragRed" name="Dragon, Red" description="Most famous dragons across all the countless inhabited worlds bear red scales, and rightfully so. Although a few individual dragons of other breeds might rise to terrifying or benign prominence in a localized manner or for a few years, no beasts on Golarion or any other world inspire such dread as the magnificently wrathful red dragons. They are, as mentioned in the Drakanav Codex, the embodiments of destruction, hate, and supremely justified draconic arrogance. Red dragons frequently suffer from hubris, but while their own narcissistic feelings of arrogant self-assuredness might exceed their obvious draconic majesty, they can actually back up their remarkable claims with claw and flame.\n\nAs the most terrifyingly magnificent of all dragons, reds consider all other creatures-with the begrudging exception of the powerful golds-inferiors. When reds hear of their brethren laid low by lesser beings, such as self-proclaimed &#147;dragonslayers,&#148; they offer no sympathies or regrets. Indeed, red dragons scorn their kin for suffering defeat (even if not death) at the hands of their lessers. Some might mistake this scorn as apathy for the deaths of their fellow reds, if not simply an exploitable disregard for other members of their species. Such suppositions prove remarkably foolish, however, for while red dragons firmly believe that the strong must survive and the weak fall or serve, they recognize that at times luck might allow even the weakest, stupidest, and least-deserving creatures to overcome their betters. That truly exceptional humans might exceed their own power simply does not occur to your typical red dragon. Thus, reds shed no tears when their kin fall, but they instead seek out those who exhibited such fortune and ensure that such a thing does not occur a second time. They mock, but then they avenge. Many are the stories of brave dragonslayers who return home bearing the trophies of their kills, only to find their villages, towns, or (in a few rare but notable cases, such as the Razing of Parnthford in 2351 ar) cities brought down around them in a flight of frothing, flaming fury. Cautionary fables insist that mortals leave alone the reds who torment them, but for those foolish enough to risk death and somehow escape with their lives, the tales further beseech such &#147;successful&#148; dragon hunters to go into hiding rather than draw their loved ones into a revenge-fueled bloodbath. Still, dragon hunters continue to seek the hides of red dragons. The Call of the Crimson, as it is known, results in the deaths of at least a score of would-be slayers every year.\n\nRed dragons are magnificent and utterly frightening to behold. Second in size only to golds, and occasionally surpassing even those wonderfully powerful beings, even their scaly eggs are at minimum the size of horses. Terrible and frightening in every describable way, red dragons possess a fierce beauty that exceeds all other dragons. From their powerful jaws, capable of snapping iron bars and the masts of ships, to their muscular tails, which can crash through stone walls as easily as whips can break skin, red dragons reflect murderous perfection and predatory superiority. Superlatives aside, red dragons tend to possess relatively blunt muzzles with strong, thick jaws filled with dagger-like teeth so large they extend beyond the gums, giving red dragons a snaggletooth look that only adds to their fierce splendor. Small nose horns extend up from just behind the tips of their muzzles, and sharp ridges of steelhard scales follow back along their faces, eventually giving way to numerous scales that grow longer and thicker than the rest, providing red dragons with a characteristic spiky look many intelligent beings find disturbing and fearsome. The bodies of red dragons possess cord-like muscles that allow them to move more quickly and gracefully than creatures of their size should be able to." compset="Race">
    <fieldval field="shortname" value="Red Dragon"/>
    <fieldval field="rHitDice" value="7"/>
    <fieldval field="rHPStart" value="45"/>
    <fieldval field="rSTR" value="7"/>
    <fieldval field="rDEX" value="4"/>
    <fieldval field="rCON" value="5"/>
    <fieldval field="rWIS" value="1"/>
    <fieldval field="rSpeed" value="40"/>
    <fieldval field="rAC" value="6"/>
    <fieldval field="rCR" value="6"/>
    <fieldval field="rDescript" value="A crown of cruel horns surrounds the head of this mighty dragon. Thick scales the color of molten rock cover its long body."/>
    <fieldval field="rEnviron" value="warm mountains"/>
    <fieldval field="rOrgan" value="solitary"/>
    <fieldval field="rTreasure" value="triple"/>
    <usesource source="VarDragons"/>
    <tag group="Alignment" tag="Evil"/>
    <tag group="Race" tag="rTrueDrago"/>
    <tag group="Helper" tag="NotHum"/>
    <tag group="RaceType" tag="NPC"/>
    <tag group="RaceSize" tag="Small11"/>
    <tag group="HasType" tag="tpDragon"/>
    <tag group="Helper" tag="Quadruped"/>
    <tag group="Hero" tag="NoDefComm"/>
    <tag group="DragType" tag="Chromatic" name="Dragon, Chromatic"/>
    <tag group="Alignment" tag="Chaotic"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <tag group="Language" tag="Any"/>
    <bootstrap thing="wTailSlap">
      <autotag group="wMain" tag="1d8_6"/>
      <autotag group="Helper" tag="NatTwoHand"/>
      </bootstrap>
    <bootstrap thing="raxDrgBrea">
      <autotag group="BloodEner" tag="Fire"/>
      <autotag group="BreathShp" tag="Cone"/>
      <assignval field="abValue" value="2"/>
      <assignval field="abValue3" value="10"/>
      </bootstrap>
    <bootstrap thing="wBite">
      <autotag group="wMain" tag="1d4_4"/>
      <autotag group="Helper" tag="NatPrimary"/>
      <autotag group="Helper" tag="NatTwoHand"/>
      </bootstrap>
    <bootstrap thing="wClaw">
      <autotag group="Value" tag="2"/>
      <autotag group="wMain" tag="1d3_3"/>
      <autotag group="Helper" tag="NatPrimary"/>
      </bootstrap>
    <bootstrap thing="raDrSenses"></bootstrap>
    <bootstrap thing="wWing">
      <autotag group="Value" tag="2"/>
      <autotag group="wMain" tag="1d4_4"/>
      </bootstrap>
    <bootstrap thing="xFly">
      <autotag group="Maneuver" tag="Average"/>
      <autotag group="Value" tag="150"/>
      </bootstrap>
    <bootstrap thing="wCrush"></bootstrap>
    <bootstrap thing="wTailSweep"></bootstrap>
    <bootstrap thing="xDamRdMag">
      <containerreq phase="First" priority="200">DragonAge.YngAdult</containerreq>
      </bootstrap>
    <bootstrap thing="stFire"></bootstrap>
    <bootstrap thing="xSplRs">
      <containerreq phase="First" priority="200">DragonAge.YngAdult</containerreq>
      </bootstrap>
    <bootstrap thing="raRedSmokV">
      <containerreq phase="First" priority="200">DragonAge.VeryYoung</containerreq>
      </bootstrap>
    <bootstrap thing="spDeteMag0">
      <containerreq phase="First" priority="200">DragonAge.Young</containerreq>
      <autotag group="Usage" tag="AtWill"/>
      <autotag group="Helper" tag="SpellLike"/>
      </bootstrap>
    <bootstrap thing="spPyrotec2">
      <containerreq phase="First" priority="200">DragonAge.Juvenile</containerreq>
      <autotag group="Helper" tag="SpellLike"/>
      <autotag group="Usage" tag="AtWill"/>
      </bootstrap>
    <bootstrap thing="spSuggest2">
      <containerreq phase="First" priority="200">DragonAge.Adult</containerreq>
      <autotag group="Usage" tag="AtWill"/>
      <autotag group="Helper" tag="SpellLike"/>
      </bootstrap>
    <bootstrap thing="spWallFir3">
      <containerreq phase="First" priority="200">DragonAge.Old</containerreq>
      <autotag group="Usage" tag="AtWill"/>
      <autotag group="Helper" tag="SpellLike"/>
      </bootstrap>
    <bootstrap thing="spFindPat6">
      <containerreq phase="First" priority="200">DragonAge.Ancient</containerreq>
      <autotag group="Usage" tag="AtWill"/>
      <autotag group="Helper" tag="SpellLike"/>
      </bootstrap>
    <bootstrap thing="spDiscLoc8">
      <containerreq phase="First" priority="200">DragonAge.GreatWyrm</containerreq>
      <autotag group="Usage" tag="AtWill"/>
      <autotag group="Helper" tag="SpellLike"/>
      </bootstrap>
    <bootstrap thing="raxRedFirA">
      <containerreq phase="First" priority="200">DragonAge.Adult</containerreq>
      </bootstrap>
    <bootstrap thing="raxRedManF">
      <containerreq phase="First" priority="200">DragonAge.Old</containerreq>
      </bootstrap>
    <bootstrap thing="raxRedMelt">
      <containerreq phase="First" priority="200">DragonAge.Ancient</containerreq>
      </bootstrap>
    <bootstrap thing="raRedIncin">
      <containerreq phase="First" priority="200">DragonAge.GreatWyrm</containerreq>
      </bootstrap>
    <bootstrap thing="fImpInit">
      <containerreq phase="First" priority="200">DragonAge.Wyrmling</containerreq>
      </bootstrap>
    <bootstrap thing="fIronWill">
      <containerreq phase="First" priority="200">DragonAge.Wyrmling</containerreq>
      </bootstrap>
    <bootstrap thing="fPowerAtt">
      <containerreq phase="First" priority="200">DragonAge.Wyrmling</containerreq>
      </bootstrap>
    <bootstrap thing="fVitStr">
      <containerreq phase="First" priority="200">DragonAge.Wyrmling</containerreq>
      </bootstrap>
    <bootstrap thing="fCleave">
      <containerreq phase="First" priority="200">DragonAge.VeryYoung</containerreq>
      </bootstrap>
    <bootstrap thing="fImpVitStr">
      <containerreq phase="First" priority="200">DragonAge.Young</containerreq>
      </bootstrap>
    <bootstrap thing="fMultiAtt">
      <containerreq phase="First" priority="200">DragonAge.Juvenile</containerreq>
      </bootstrap>
    <bootstrap thing="fImpIronWi">
      <containerreq phase="First" priority="200">DragonAge.YngAdult</containerreq>
      </bootstrap>
    <bootstrap thing="fGrtVitStr">
      <containerreq phase="First" priority="200">DragonAge.Adult</containerreq>
      </bootstrap>
    <bootstrap thing="fCritFoc">
      <containerreq phase="First" priority="200">DragonAge.MatAdult</containerreq>
      </bootstrap>
    <bootstrap thing="fQuickSpl">
      <containerreq phase="First" priority="200">DragonAge.Old</containerreq>
      </bootstrap>
    <bootstrap thing="fImpCrit">
      <containerreq phase="First" priority="200">DragonAge.VeryOld</containerreq>
      <autotag group="Target" tag="wBite"/>
      </bootstrap>
    <bootstrap thing="fStunCrit">
      <containerreq phase="First" priority="200">DragonAge.Wyrm</containerreq>
      </bootstrap>
    <bootstrap thing="fStagCrit">
      <containerreq phase="First" priority="200">DragonAge.Ancient</containerreq>
      </bootstrap>
    <bootstrap thing="fCleave">
      <containerreq phase="First" priority="200">DragonAge.GreatWyrm</containerreq>
      </bootstrap>
    <bootstrap thing="lDraconic">
      <containerreq phase="First" priority="200">DragonAge.Wyrmling</containerreq>
      </bootstrap>
    <bootstrap thing="skKnowArca"></bootstrap>
    <bootstrap thing="skKnowHist"></bootstrap>
    <bootstrap thing="skKnowLoc"></bootstrap>
    <bootstrap thing="tmxDragAge"></bootstrap>
    <bootstrap thing="raxFrightP">
      <containerreq phase="First" priority="200">DragonAge.Juvenile</containerreq>
      </bootstrap>
    <eval phase="PreLevel" priority="4000" index="3">~ innate skill ranks 
var ageCat as number
ageCat = hero.childfound[raxDragonA].tagvalue[Value.?]

if (ageCat = 1) then
  #skillinnate[skBluff] += 7
  #skillinnate[skFly] += 7
  #skillinnate[skIntim] += 7
  #skillinnate[skPercep] += 7
  #skillinnate[skSenseMot] += 7
  #skillinnate[skStealth] += 7
elseif (ageCat = 2) then
  #skillinnate[skAppraise] += 9
  #skillinnate[skBluff] += 9
  #skillinnate[skFly] += 9
  #skillinnate[skIntim] += 9
  #skillinnate[skPercep] += 9
  #skillinnate[skSenseMot] += 9
  #skillinnate[skStealth] += 9
elseif (ageCat = 3) then
  #skillinnate[skAppraise] += 11
  #skillinnate[skBluff] += 11
  #skillinnate[skFly] += 11
  #skillinnate[skIntim] += 11
  #skillinnate[skPercep] += 11
  #skillinnate[skSenseMot] += 11
  #skillinnate[skStealth] += 11
elseif (ageCat = 4) then
  #skillinnate[skAppraise] += 13
  #skillinnate[skBluff] += 13
  #skillinnate[skFly] += 13
  #skillinnate[skIntim] += 13
  #skillinnate[skPercep] += 13
  #skillinnate[skSenseMot] += 13
  #skillinnate[skSpellcr] += 13
  #skillinnate[skStealth] += 13
elseif (ageCat = 5) then
  #skillinnate[skAppraise] += 15
  #skillinnate[skBluff] += 15
  #skillinnate[skFly] += 15
  #skillinnate[skIntim] += 15
  #skillinnate[skPercep] += 15
  #skillinnate[skSenseMot] += 15
  #skillinnate[skSpellcr] += 15
  #skillinnate[skStealth] += 15
elseif (ageCat = 6) then
  #skillinnate[skAppraise] += 17
  #skillinnate[skBluff] += 17
  #skillinnate[skFly] += 17
  #skillinnate[skIntim] += 17
  #skillinnate[skKnowArca] += 17
  #skillinnate[skPercep] += 17
  #skillinnate[skSenseMot] += 17
  #skillinnate[skSpellcr] += 17
  #skillinnate[skStealth] += 17
elseif (ageCat = 7) then
  #skillinnate[skAppraise] += 19
  #skillinnate[skBluff] += 19
  #skillinnate[skFly] += 19
  #skillinnate[skIntim] += 19
  #skillinnate[skKnowArca] += 19
  #skillinnate[skPercep] += 19
  #skillinnate[skSenseMot] += 19
  #skillinnate[skSpellcr] += 19
  #skillinnate[skStealth] += 19
elseif (ageCat = 8) then 
  #skillinnate[skAppraise] += 21
  #skillinnate[skBluff] += 21
  #skillinnate[skFly] += 21
  #skillinnate[skIntim] += 21
  #skillinnate[skKnowArca] += 21
  #skillinnate[skKnowHist] += 21
  #skillinnate[skPercep] += 21
  #skillinnate[skSenseMot] += 21
  #skillinnate[skSpellcr] += 21
  #skillinnate[skStealth] += 21
elseif (ageCat = 9) then
  #skillinnate[skAppraise] += 23
  #skillinnate[skBluff] += 23
  #skillinnate[skFly] += 23
  #skillinnate[skIntim] += 23
  #skillinnate[skKnowArca] += 23
  #skillinnate[skKnowHist] += 23
  #skillinnate[skPercep] += 23
  #skillinnate[skSenseMot] += 23
  #skillinnate[skSpellcr] += 23
  #skillinnate[skStealth] += 23
elseif (ageCat = 10) then
  #skillinnate[skAppraise] += 25
  #skillinnate[skBluff] += 25
  #skillinnate[skDiplo] += 25
  #skillinnate[skFly] += 25
  #skillinnate[skIntim] += 25
  #skillinnate[skKnowArca] += 25
  #skillinnate[skKnowHist] += 25
  #skillinnate[skPercep] += 25
  #skillinnate[skSenseMot] += 25
  #skillinnate[skSpellcr] += 25
  #skillinnate[skStealth] += 25
elseif (ageCat = 11) then
  #skillinnate[skAppraise] += 27
  #skillinnate[skBluff] += 27
  #skillinnate[skDiplo] += 27
  #skillinnate[skFly] += 27
  #skillinnate[skIntim] += 27
  #skillinnate[skKnowArca] += 27
  #skillinnate[skKnowHist] += 27
  #skillinnate[skPercep] += 27
  #skillinnate[skSenseMot] += 27
  #skillinnate[skSpellcr] += 27
  #skillinnate[skStealth] += 27
elseif (ageCat = 12) then
  #skillinnate[skAppraise] += 29
  #skillinnate[skBluff] += 29
  #skillinnate[skDiplo] += 29
  #skillinnate[skFly] += 29
  #skillinnate[skIntim] += 29
  #skillinnate[skKnowArca] += 29
  #skillinnate[skKnowHist] += 29
  #skillinnate[skKnowLoc] += 29
  #skillinnate[skPercep] += 29
  #skillinnate[skSenseMot] += 29
  #skillinnate[skSpellcr] += 29
  #skillinnate[skStealth] += 29
endif
      <before name="Skill Bonus Feats"/>
      </eval>
    <eval phase="Final" priority="1000"><![CDATA[~ set Frightful Presence, DR, SR, and CL
var ageCat as number
ageCat = hero.childfound[raxDragonA].tagvalue[Value.?]

~ frightful presesnce
if (ageCat >= 4) then
  hero.child[raxFrightP].field[abValue].value = 30 * ageCat
endif

~ Dragons have SR = to 11 + thier CR
if (ageCat >= 5) then
  var damage as number
  damage = herofield[tCR].value + 11
  #applysr[damage]
endif

~ Dragons have spell like abilities of CL = to TOTAL (not racial) hit dice
if (ageCat >= 3) then
  var CL as number
  CL = herofield[tHitDice].value
  field[rSpCastLev].value = CL
endif

~ DR 
if (ageCat >= 5) then
  var drVal as number
  drVal = (ageCat - 5)/2
  drVal = 5 * (1 + round(drVal,0,-1))
  #applydr[xDamRdMag,drVal]
endif]]></eval>
    <eval phase="First" priority="550" index="2"><![CDATA[~ set caster level of racial spells

~age catagory
var ageCat as number
ageCat = hero.childfound[raxDragonA].tagvalue[Value.?]

perform hero.findchild[BaseRace].setfocus

~ set caster level
if (ageCat >= 3) then
 perform focus.assign[SplLookup.cHelpSor]
 focus.field[cMagicLev].value = 2*ageCat - 5
endif

perform state.clearfocus]]></eval>
    </thing>
  <thing id="raxRedFirA" name="Fire Aura" description="An adult red dragon is surrounded by an aura of intense heat. All creatures within 5 feet take 1d6 points of fire damage at the beginning of the dragon's turn. An old dragon's aura extends to 10 feet. An ancient dragon's damage increases to 2d6." compset="RaceSpec" uniqueness="useronce">
    <usesource source="VarDragons"/>
    <tag group="Helper" tag="ShowSpec" name="Show Spec" abbrev="Show Spec"/>
    <tag group="SpecType" tag="Aura" name="Aura" abbrev="Aura"/>
    <tag group="AbilType" tag="Super" name="Supernatural Ability" abbrev=" (Su)"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <eval phase="Final" priority="10000"><![CDATA[~ set livename
~ get age catagory

var ageCat as number
ageCat = hero.child[raxDragonA].tagvalue[Value.?]

~ store # of damage dice in abValue2
~ store area of effect in abValue

if (ageCat >= 6) then
  field[abValue].value += 5
  field[abValue2].value += 1
endif
if (ageCat >= 8) then
  field[abValue].value += 5
endif
if (ageCat >= 10) then
  field[abValue2].value += 1
endif

field[livename].text = "Fire Aura (" & field[abValue2].value & "d6, " & field[abValue].value & " ft.)"

field[shortname].text = "fire aura (" & field[abValue2].value & "d6, " & field[abValue].value & " ft.)"]]></eval>
    </thing>
  <thing id="raxRedManF" name="Manipulate Flames" description="An old or older red dragon can control any fire spell within 10 feet per age category of the dragon as a standard action. This ability allows it to move any fire effect in the area, as if it were the caster. This ability also allows it to reposition a stationary fire effect, although the new placement must be one allowed by the spell. Finally, for 1 round following the use of this ability, the dragon can control any new fire spell cast within its area of control, as if it were the caster. It can make all decisions allowed to the caster, including canceling the spell if it so desires." compset="RaceSpec">
    <usesource source="VarDragons"/>
    <tag group="Helper" tag="ShowSpec" name="Show Spec" abbrev="Show Spec"/>
    <tag group="AbilType" tag="Super" name="Supernatural Ability" abbrev=" (Su)"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <eval phase="Final"><![CDATA[~ get range catagory

var range as number
range = hero.child[raxDragonA].tagvalue[Value.?] * 10

field[livename].text = "Manipulate Flames (" & range & " ft.)"
field[shortname].text = "manipulate flames (" & range & " ft.)"]]></eval>
    </thing>
  <thing id="raxRedMelt" name="Melt Stone" description="An ancient or older red dragon can use its Breath weapon to melt rock at a range of 100 feet, affecting a 5-foot-radius area per age category. The area becomes lava to a depth of 1 foot. Any creature in contact with the lava takes 20d6 points of fire damage on the first round, 10d6 on the second, and none thereafter as the lava hardens and cools. If used on a wall or ceiling, treat this ability as an avalanche that deals fire damage." compset="RaceSpec">
    <usesource source="VarDragons"/>
    <tag group="Helper" tag="ShowSpec" name="Show Spec" abbrev="Show Spec"/>
    <tag group="AbilType" tag="Super" name="Supernatural Ability" abbrev=" (Su)"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <eval phase="Final" priority="1000"><![CDATA[var radius as number
radius = hero.child[raxDragonA].tagvalue[Value.?] * 5

field[livename].text = "Melt Stone (" & radius & " ft. radius)"
field[shortname].text = "melt stone (" & radius & " ft. radius)"]]></eval>
    </thing>
  <thing id="rxDragWhit" name="Dragon, White" description="Described with great disdain by all other true dragons as nasty, brutish, and short-tempered, white dragons in many ways act more like feral predators than representatives of dragonkind. While all chromatic dragons share a particularly powerful instinct of self-preservation bordering on cowardice, white dragons are unrepentantly craven. They lack the intelligence to make well-considered decisions and the wisdom to realize the depths of their own ignorance. Inbred for millennia, white dragons revel in cruel, crude humor and hold no appreciation for the arts or higher learning. White dragons represent all the things their loftiest blue or red cousins hate of the lesser creatures, but are made worse in draconic eyes by their distant relation. Yet despite their relative weakness, stupidity, and repulsive behavior, older white dragons are still superior to average humans in nearly every way.\n\nFresh from the egg, white dragons psychologically resemble alligators or other simple-minded yet powerful predators rather than the magnificently powerful creatures whose culture predates elven civilization. Driven by instinct and their ever-gnawing stomachs, immature white dragons rarely attempt communication with other creatures except to form crude bargains that bring them more prey or treasure. Few of these poorly considered bargains benefit the white dragons in the long run, and many of the deals place the foolish simpletons in greater danger than they can foresee. Those who strike such questionable bargains must be careful, however, not to allow their duped partners to grow too old, for despite their disadvantaged beginnings, white dragons eventually age into cunning, careful schemers. While their most careful plans might seem ludicrously simple to their more intelligent cousins, the schemes of the cleverest white dragons can nonetheless require months to come to fruition and involve not only the deaths of those who tricked them in their youths, but also the destruction of all their erstwhile tormentors hold dear. The cold, longsmoldering fury of white dragons drives many of them into lives filled with vengeance-seeking and complicated arrangements that lead to the ruin of their targets-or else to mounting frustrations as their own impatience undermines their careful plans. Some whites-those who by fortune or unusual guile lead relatively peaceful lives of predation and hunting-grow older and scheme not of revenge, but of advancement. Unfortunately, even these white dragons cannot escape their instinctual savagery and impatience, and the greatest among them always seem to remain one or two steps away from their goals.\n\nCharacterized by the large webbed horns radiating out from the backs of their skulls and connected by tough, fibrous membranes, the distinctive heads of white dragons also possess crag-like hornlets on their chins and lower jaws. The rough texture of their faces extends over much of their bodies, allowing them to break up their silhouettes and granting them additional camouflage in their snowy homes. White dragon scales are thick and rough to the touch, and the tiny ridges that give them their rough feel trap in heat, keeping the whites warm even in the coldest of climes. Lithe and muscular, white dragons look every bit the part of efficient predators, with long, scimitar-like claws and powerful jaws holding razor-sharp teeth." compset="Race">
    <fieldval field="shortname" value="White Dragon"/>
    <fieldval field="rHitDice" value="3"/>
    <fieldval field="rHPStart" value="19"/>
    <fieldval field="rSTR" value="1"/>
    <fieldval field="rDEX" value="6"/>
    <fieldval field="rCON" value="3"/>
    <fieldval field="rWIS" value="-1"/>
    <fieldval field="rSpeed" value="60"/>
    <fieldval field="rAC" value="2"/>
    <fieldval field="rCR" value="2"/>
    <fieldval field="rDescript" value="This dragon's scales are a frosty white. Its head is crowned with slender horns, with a thin membrane stretched between them."/>
    <fieldval field="rEnviron" value="cold mountains"/>
    <fieldval field="rOrgan" value="solitary"/>
    <fieldval field="rTreasure" value="triple"/>
    <fieldval field="rINT" value="-4"/>
    <fieldval field="rCHA" value="-4"/>
    <usesource source="VarDragons"/>
    <tag group="Helper" tag="NotHum"/>
    <tag group="RaceType" tag="NPC"/>
    <tag group="RaceSize" tag="Tiny12"/>
    <tag group="HasType" tag="tpDragon"/>
    <tag group="Helper" tag="Quadruped"/>
    <tag group="Hero" tag="NoDefComm"/>
    <tag group="DragType" tag="Chromatic" name="Dragon, Chromatic"/>
    <tag group="Alignment" tag="Chaotic"/>
    <tag group="Race" tag="rTrueDrago"/>
    <tag group="Alignment" tag="Evil"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <tag group="Language" tag="Any"/>
    <bootstrap thing="wBite">
      <autotag group="wMain" tag="1d4_4"/>
      <autotag group="Helper" tag="NatPrimary"/>
      <autotag group="Helper" tag="NatTwoHand"/>
      </bootstrap>
    <bootstrap thing="wClaw">
      <autotag group="Value" tag="2"/>
      <autotag group="wMain" tag="1d3_3"/>
      <autotag group="Helper" tag="NatPrimary"/>
      </bootstrap>
    <bootstrap thing="raDrSenses"></bootstrap>
    <bootstrap thing="wWing">
      <autotag group="Value" tag="2"/>
      <autotag group="wMain" tag="1d4_4"/>
      </bootstrap>
    <bootstrap thing="xFly">
      <autotag group="Maneuver" tag="Average"/>
      <autotag group="Value" tag="100"/>
      </bootstrap>
    <bootstrap thing="wCrush"></bootstrap>
    <bootstrap thing="wTailSweep"></bootstrap>
    <bootstrap thing="xDamRdMag">
      <containerreq phase="First" priority="200">DragonAge.YngAdult</containerreq>
      </bootstrap>
    <bootstrap thing="xSplRs">
      <containerreq phase="First" priority="200">DragonAge.YngAdult</containerreq>
      </bootstrap>
    <bootstrap thing="stCold"></bootstrap>
    <bootstrap thing="tmxDragAge"></bootstrap>
    <bootstrap thing="raxFrightP">
      <containerreq phase="First" priority="200">DragonAge.Adult</containerreq>
      </bootstrap>
    <bootstrap thing="xBurrow">
      <autotag group="Value" tag="30"/>
      </bootstrap>
    <bootstrap thing="xSwim">
      <autotag group="Value" tag="60"/>
      </bootstrap>
    <bootstrap thing="raWhiIcewa">
      <containerreq phase="First" priority="200">DragonAge.Wyrmling</containerreq>
      </bootstrap>
    <bootstrap thing="raWhiSnowV">
      <containerreq phase="First" priority="200">DragonAge.VeryYoung</containerreq>
      </bootstrap>
    <bootstrap thing="raWhiIceS">
      <containerreq phase="First" priority="200">DragonAge.Young</containerreq>
      </bootstrap>
    <bootstrap thing="raxWhiColA">
      <containerreq phase="First" priority="200">DragonAge.Adult</containerreq>
      </bootstrap>
    <bootstrap thing="raxWhiFrzF">
      <containerreq phase="First" priority="200">DragonAge.Old</containerreq>
      </bootstrap>
    <bootstrap thing="raWhiBlizz">
      <containerreq phase="First" priority="200">DragonAge.Ancient</containerreq>
      </bootstrap>
    <bootstrap thing="raxWhiIceT">
      <containerreq phase="First" priority="200">DragonAge.GreatWyrm</containerreq>
      </bootstrap>
    <bootstrap thing="spFogClo2">
      <containerreq phase="First" priority="200">DragonAge.Juvenile</containerreq>
      <autotag group="Usage" tag="AtWill"/>
      <autotag group="Helper" tag="SpellLike"/>
      </bootstrap>
    <bootstrap thing="spGustWin2">
      <containerreq phase="First" priority="200">DragonAge.YngAdult</containerreq>
      <autotag group="Usage" tag="AtWill"/>
      <autotag group="Helper" tag="SpellLike"/>
      </bootstrap>
    <bootstrap thing="spWallIce4">
      <containerreq phase="First" priority="200">DragonAge.Ancient</containerreq>
      <autotag group="Usage" tag="AtWill"/>
      <autotag group="Helper" tag="SpellLike"/>
      </bootstrap>
    <bootstrap thing="spContWea7">
      <containerreq phase="First" priority="200">DragonAge.GreatWyrm</containerreq>
      <autotag group="Helper" tag="SpellLike"/>
      <autotag group="Usage" tag="AtWill"/>
      </bootstrap>
    <bootstrap thing="lDraconic">
      <containerreq phase="First" priority="200">DragonAge.Wyrmling</containerreq>
      </bootstrap>
    <bootstrap thing="fFlybyAt">
      <containerreq phase="First" priority="200">DragonAge.Wyrmling</containerreq>
      </bootstrap>
    <bootstrap thing="fImpInit">
      <containerreq phase="First" priority="200">DragonAge.Wyrmling</containerreq>
      </bootstrap>
    <bootstrap thing="fAlertness">
      <containerreq phase="First" priority="200">DragonAge.VeryYoung</containerreq>
      </bootstrap>
    <bootstrap thing="fPowerAtt">
      <containerreq phase="First" priority="200">DragonAge.Young</containerreq>
      </bootstrap>
    <bootstrap thing="fVitStr">
      <containerreq phase="First" priority="200">DragonAge.Juvenile</containerreq>
      </bootstrap>
    <bootstrap thing="fImpCrit">
      <containerreq phase="First" priority="200">DragonAge.YngAdult</containerreq>
      <autotag group="Target" tag="wBite"/>
      </bootstrap>
    <bootstrap thing="fWepFoc">
      <containerreq phase="First" priority="200">DragonAge.Adult</containerreq>
      <autotag group="Target" tag="wBite"/>
      </bootstrap>
    <bootstrap thing="fImpVitStr">
      <containerreq phase="First" priority="200">DragonAge.MatAdult</containerreq>
      </bootstrap>
    <bootstrap thing="fLightRef">
      <containerreq phase="First" priority="200">DragonAge.Old</containerreq>
      </bootstrap>
    <bootstrap thing="fGrtVitStr">
      <containerreq phase="First" priority="200">DragonAge.VeryOld</containerreq>
      </bootstrap>
    <bootstrap thing="fImpSunder">
      <containerreq phase="First" priority="200">DragonAge.Ancient</containerreq>
      </bootstrap>
    <bootstrap thing="fGreatSun">
      <containerreq phase="First" priority="200">DragonAge.Wyrm</containerreq>
      </bootstrap>
    <bootstrap thing="fImpNatAtt">
      <containerreq phase="First" priority="200">DragonAge.GreatWyrm</containerreq>
      <autotag group="Target" tag="wBite"/>
      </bootstrap>
    <bootstrap thing="skKnowArca"></bootstrap>
    <bootstrap thing="skKnowHist"></bootstrap>
    <bootstrap thing="wTailSlap">
      <autotag group="wMain" tag="1d8_6"/>
      <autotag group="Helper" tag="NatTwoHand"/>
      </bootstrap>
    <bootstrap thing="raxDrgBrea">
      <autotag group="BloodEner" tag="Cold"/>
      <autotag group="BreathShp" tag="Cone"/>
      <assignval field="abValue" value="2"/>
      <assignval field="abValue3" value="4"/>
      </bootstrap>
    <eval phase="Final" priority="1000"><![CDATA[~ set Frightful Presence, DR, SR, and CL
var ageCat as number
ageCat = hero.childfound[raxDragonA].tagvalue[Value.?]

~ frightful presesnce
if (ageCat >= 6) then
  hero.child[raxFrightP].field[abValue].value = 30 * ageCat
endif

~ Dragons have SR = to 11 + thier CR
if (ageCat >= 5) then
  var damage as number
  damage = herofield[tCR].value + 11
  #applysr[damage]
endif

~ Dragons have spell like abilities of CL = to TOTAL (not racial) hit dice
if (ageCat >= 4) then
  var CL as number
  CL = herofield[tHitDice].value
  field[rSpCastLev].value = CL
endif

~ DR 
if (ageCat >= 5) then
  var drVal as number
  drVal = (ageCat - 5)/2
  drVal = 5 * (1 + round(drVal,0,-1))
  #applydr[xDamRdMag,drVal]
endif]]></eval>
    <eval phase="First" priority="550" index="2"><![CDATA[~ set caster level of racial spells

~age catagory
var ageCat as number
ageCat = hero.childfound[raxDragonA].tagvalue[Value.?]

perform hero.findchild[BaseRace].setfocus

~ set caster level
if (ageCat >= 6) then
 perform focus.assign[SplLookup.cHelpSor]
 focus.field[cMagicLev].value = 2*ageCat - 11
endif

perform state.clearfocus]]></eval>
    <eval phase="PreLevel" priority="4000" index="3">~ innate skill ranks 
var ageCat as number
ageCat = hero.childfound[raxDragonA].tagvalue[Value.?]

if (ageCat = 1) then
  #skillinnate[skFly] += 3
  #skillinnate[skPercep] += 3
  #skillinnate[skStealth] += 3
  #skillinnate[skSwim] += 3
elseif (ageCat = 2) then
  #skillinnate[skFly] += 5
  #skillinnate[skIntim] += 5
  #skillinnate[skPercep] += 5
  #skillinnate[skStealth] += 5
  #skillinnate[skSwim] += 5
elseif (ageCat = 3) then
  #skillinnate[skFly] += 7
  #skillinnate[skIntim] += 7
  #skillinnate[skPercep] += 7
  #skillinnate[skStealth] += 7
  #skillinnate[skSwim] += 7
elseif (ageCat = 4) then
  #skillinnate[skFly] += 9
  #skillinnate[skIntim] += 9
  #skillinnate[skPercep] += 9
  #skillinnate[skSpellcr] += 9
  #skillinnate[skStealth] += 9
  #skillinnate[skSwim] += 9
elseif (ageCat = 5) then
  #skillinnate[skFly] += 11
  #skillinnate[skIntim] += 11
  #skillinnate[skPercep] += 11
  #skillinnate[skSpellcr] += 11
  #skillinnate[skStealth] += 11
  #skillinnate[skSwim] += 11
elseif (ageCat = 6) then
  #skillinnate[skFly] += 13
  #skillinnate[skIntim] += 13
  #skillinnate[skKnowArca] += 13
  #skillinnate[skPercep] += 13
  #skillinnate[skSpellcr] += 13
  #skillinnate[skStealth] += 13
  #skillinnate[skSwim] += 13
elseif (ageCat = 7) then
  #skillinnate[skFly] += 15
  #skillinnate[skIntim] += 15
  #skillinnate[skKnowArca] += 15
  #skillinnate[skPercep] += 15
  #skillinnate[skSpellcr] += 15
  #skillinnate[skStealth] += 15
  #skillinnate[skSwim] += 15
elseif (ageCat = 8) then 
  #skillinnate[skFly] += 17
  #skillinnate[skIntim] += 17
  #skillinnate[skKnowArca] += 17
  #skillinnate[skPercep] += 17
  #skillinnate[skSenseMot] += 17
  #skillinnate[skSpellcr] += 17
  #skillinnate[skStealth] += 17
  #skillinnate[skSwim] += 17
elseif (ageCat = 9) then
  #skillinnate[skFly] += 19
  #skillinnate[skIntim] += 19
  #skillinnate[skKnowArca] += 19
  #skillinnate[skPercep] += 19
  #skillinnate[skSenseMot] += 19
  #skillinnate[skSpellcr] += 19
  #skillinnate[skStealth] += 19
  #skillinnate[skSwim] += 19
elseif (ageCat = 10) then
  #skillinnate[skFly] += 21
  #skillinnate[skIntim] += 21
  #skillinnate[skKnowArca] += 21
  #skillinnate[skKnowHist] += 21
  #skillinnate[skPercep] += 21
  #skillinnate[skSenseMot] += 21
  #skillinnate[skSpellcr] += 21
  #skillinnate[skStealth] += 21
  #skillinnate[skSwim] += 21
elseif (ageCat = 11) then
  #skillinnate[skFly] += 23
  #skillinnate[skIntim] += 23
  #skillinnate[skKnowArca] += 23
  #skillinnate[skKnowHist] += 23
  #skillinnate[skPercep] += 23
  #skillinnate[skSenseMot] += 23
  #skillinnate[skSpellcr] += 23
  #skillinnate[skStealth] += 23
  #skillinnate[skSwim] += 23
elseif (ageCat = 12) then
  #skillinnate[skEscape] += 25
  #skillinnate[skFly] += 25
  #skillinnate[skIntim] += 25
  #skillinnate[skKnowArca] += 25
  #skillinnate[skKnowHist] += 25
  #skillinnate[skPercep] += 25
  #skillinnate[skSenseMot] += 25
  #skillinnate[skSpellcr] += 25
  #skillinnate[skStealth] += 25
  #skillinnate[skSwim] += 25
endif
      <before name="Skill Bonus Feats"/>
      </eval>
    </thing>
  <thing id="raxWhiColA" name="Cold Aura" description="An adult white dragon radiates an aura of cold. All creatures within 5 feet of the dragon take 1d6 points of cold damage at the beginning of the dragon's turn. An old dragon's aura extends to 10 feet. An ancient dragon's damage increases to 2d6." compset="RaceSpec" uniqueness="useronce">
    <usesource source="VarDragons"/>
    <tag group="Helper" tag="ShowSpec" name="Show Spec" abbrev="Show Spec"/>
    <tag group="SpecType" tag="Aura" name="Aura" abbrev="Aura"/>
    <tag group="AbilType" tag="Super" name="Supernatural Ability" abbrev=" (Su)"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <eval phase="Final" priority="10000"><![CDATA[~ set livename
~ get age catagory

var ageCat as number
ageCat = hero.child[raxDragonA].tagvalue[Value.?]

~ store # of damage dice in abValue2
~ store area of effect in abValue

if (ageCat >= 6) then
  field[abValue].value += 5
  field[abValue2].value += 1
endif
if (ageCat >= 8) then
  field[abValue].value += 5
endif
if (ageCat >= 10) then
  field[abValue2].value += 1
endif

field[livename].text = "Cold Aura (" & field[abValue2].value & "d6, " & field[abValue].value & " ft.)"

field[shortname].text = "cold aura (" & field[abValue2].value & "d6, " & field[abValue].value & " ft.)"]]></eval>
    </thing>
  <thing id="raxWhiFrzF" name="Freezing Fog" description="An old white dragon can use this ability three times per day. It is similar to an {i}acid fog{/i} spell but deals cold damage instead of acid damage. It also causes a rime of slippery ice to form on any surface the fog touches, creating the effect of a {i}grease{/i} spell. The dragon is immune to the {i}grease{/i} effect because of its icewalking ability. This ability is the equivalent of a 6th-level spell." compset="RaceSpec">
    <fieldval field="trkMax" value="3"/>
    <usesource source="VarDragons"/>
    <tag group="SpInfo" tag="spAcidFog6" name="Acid Fog" abbrev="Acid Fog"/>
    <tag group="SpInfo" tag="spGrease1" name="Grease" abbrev="Grease"/>
    <tag group="SpecType" tag="SpellLike" name="Spell-Like Ability" abbrev="Spell-Like Ability"/>
    <tag group="Usage" tag="Day" name="/day" abbrev="/day"/>
    <tag group="AbilType" tag="SpellLike" name="Spell-Like Ability" abbrev=" (Sp)"/>
    <tag group="User" tag="Tracker"/>
    <tag group="Helper" tag="ShowSpec" name="Show Spec" abbrev="Show Spec"/>
    <tag group="ProductId" tag="HLCommunit"/>
    </thing>
  <thing id="raxWhiIceT" name="Ice Tomb" description="A great wyrm can, as a standard action, cause a creature to sink into ice. This works as {i}imprisonment{/i}, but only while the target is touching an icy surface. A white dragon can use this ability once per day (CL equals dragon&apos;s HD). Targets entombed by this ability can be freed by casting {i}freedom{/i} or by physically freeing the creature from the ice (Hardness 0, 360 hit points). The save DC is Charisma-based." compset="RaceSpec">
    <fieldval field="trkMax" value="1"/>
    <usesource source="VarDragons"/>
    <tag group="SpInfo" tag="spImpriso9" name="Imprisonment" abbrev="Imprisonment"/>
    <tag group="SpecType" tag="SpellLike" name="Spell-Like Ability" abbrev="Spell-Like Ability"/>
    <tag group="StandardDC" tag="aCHA" name="Charisma" abbrev="Charisma"/>
    <tag group="Usage" tag="Day" name="/day" abbrev="/day"/>
    <tag group="AbilType" tag="SpellLike" name="Spell-Like Ability" abbrev=" (Sp)"/>
    <tag group="User" tag="Tracker"/>
    <tag group="Helper" tag="ShowSpec" name="Show Spec" abbrev="Show Spec"/>
    <tag group="ProductId" tag="HLCommunit"/>
    </thing>
  <thing id="raxBraSlee" name="Sleep Breath" description="Instead of a line of fire, a brass dragon can breathe a cone of sleep gas. Creatures within the cone must succeed on a Will save or fall asleep for 1d6 rounds plus 1 round per age category of the dragon." compset="RaceSpec">
    <usesource source="VarDragons"/>
    <tag group="Helper" tag="ShowSpec" name="Show Spec" abbrev="Show Spec"/>
    <tag group="StandardDC" tag="aCON" name="Constitution" abbrev="Constitution"/>
    <tag group="AbilType" tag="Super" name="Supernatural Ability" abbrev=" (Su)"/>
    <tag group="SpecType" tag="Attack"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <tag group="Custom" tag="DragonBrea"/>
    <eval phase="Final" priority="1000"><![CDATA[var ageCat as number
ageCat= hero.child[raxDragonA].tagvalue[Value.?]

~ get dragon size
var dragSize as number
dragSize = herofield[tSize].value

~ breath range for cone
if (dragSize = -2) then
  field[abValue2].value = 15
elseif (dragSize = -1) then
  field[abValue2].value = 20
elseif (dragSize = 0) then
  field[abValue2].value = 30
elseif (dragSize = 1) then 
  field[abValue2].value = 40
elseif (dragSize = 2) then
  field[abValue2].value = 50
elseif (dragSize = 3) then
  field[abValue2].value = 60
elseif (dragSize >= 4) then
  field[abValue2].value = 70
endif

field[livename].text = "Sleep Breath (" & field[abValue2].value & " ft.-cone, 1d6+" & ageCat & " rnds., Will neg.)"]]></eval>
    </thing>
  <thing id="raxBraSand" name="Sandstorm" description="An ancient or older brass dragon can create a powerful sandstorm once per day as a full-round action. This storm has a radius of 1 mile and lasts for 1 minute per age category of the dragon. This functions as a sandstorm, except that it is also accompanied by windstorm-level winds." compset="RaceSpec">
    <fieldval field="trkMax" value="1"/>
    <usesource source="VarDragons"/>
    <tag group="Usage" tag="Day" name="/day" abbrev="/day"/>
    <tag group="User" tag="Tracker" name="Modern Action Points" abbrev="Modern Action Points"/>
    <tag group="AbilType" tag="Super" name="Supernatural Ability" abbrev=" (Su)"/>
    <tag group="Helper" tag="ShowSpec" name="Show Spec" abbrev="Show Spec"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <eval phase="Final" priority="1000"><![CDATA[var ageCat as number
ageCat= hero.child[raxDragonA].tagvalue[Value.?]

field[livename].text = "Sandstorm (" & ageCat & " min.)"
field[shortname].text = "sandstorm (" & ageCat & " min.)"]]></eval>
    </thing>
  <thing id="raxBraFirA" name="Fire Aura" description="An old or older brass dragon is surrounded by an aura of intense heat. All creatures within 5 feet of the dragon take 1d6 points of fire damage at the beginning of the dragon's turn. An ancient brass dragon's aura extends to 10 feet. A great wyrm's damage increases to 2d6. A brass dragon can suppress or activate this aura at will as a free action." compset="RaceSpec" uniqueness="useronce">
    <usesource source="VarDragons"/>
    <tag group="Helper" tag="ShowSpec" name="Show Spec" abbrev="Show Spec"/>
    <tag group="SpecType" tag="Aura" name="Aura" abbrev="Aura"/>
    <tag group="AbilType" tag="Super" name="Supernatural Ability" abbrev=" (Su)"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <eval phase="Final" priority="10000"><![CDATA[~ set livename
~ get age catagory

var ageCat as number
ageCat = hero.child[raxDragonA].tagvalue[Value.?]

~ store # of damage dice in abValue2
~ store area of effect in abValue

if (ageCat >= 8) then
  field[abValue].value += 5
  field[abValue2].value += 1
endif
if (ageCat >= 10) then
  field[abValue].value += 5
endif
if (ageCat >= 12) then
  field[abValue2].value += 1
endif

field[livename].text = "Fire Aura (" & field[abValue2].value & "d6, " & field[abValue].value & " ft.)"

field[shortname].text = "fire aura (" & field[abValue2].value & "d6, " & field[abValue].value & " ft.)"]]></eval>
    </thing>
  <thing id="rxDragBroz" name="Dragon, Bronze" description="Contemplative, thoughtful, and curious, bronze dragons make for natural scholars, seers, and sages. They seek all chances to learn, to expand their intellectual horizons and satisfy their strongly inquisitive natures. While silver and gold dragons possess greater raw mental power, bronzes are the great thinkers of metallic dragons. Bronze dragons excel as numerologists, astrologers, researchers, sages, and scribes, as well as in all other contemplative roles suited to their calm, meticulous, and endlessly patient natures. It was a bronze dragon- Svannost, according to the Obelisks of Destiny-who first put claw to clay and recorded what was, to him, recent history: the retreat of Apsu and his metallic children from their chromatic kin and the nameless world turned to slag by their war.\n\nIn that first great battle against the chromatic threat and in the countless thousands of millennia since, bronze dragons protected their kin and stood as living shields against relentless, rending claws, for although calm and thoughtful, bronze dragons are neither meek nor feeble. While many bronzes play out their long lives collecting immense libraries, many others spend their centuries of life guarding living treasures and protecting those they hold dear. Bronze dragons make exceptional guardians, protectors, and bodyguards, willing to spend vast gulfs of time simply waiting, watching, and-when the mood strikes them and assuming they have the proper accoutrements-reading.\n\nBronze dragons lack the massive racks of horns and bony protrusions of their brass and copper cousins, possessing instead sleek heads and bodies bearing membranous frills that belie their amphibious natures. These frills serve a dual purpose: on land, they help cool the dragons by circulating blood through their thin membranes, while in the water they help protect the bronzes' delicate and primitive gills. Membranes do not end at their heads, and the majority of bronze dragon bloodlines possess webbed toes, flaps of skin at the crooks of their forelimbs, and paddle-like fins along the ends of their tails they can use as rudders in water and that fold flat on land. Bronze dragons have the smallest wing-to-body ratio of any true dragons, forcing them to exert themselves more than their kin in order to fly." compset="Race">
    <fieldval field="shortname" value="Bronze Dragon"/>
    <fieldval field="rHitDice" value="6"/>
    <fieldval field="rHPStart" value="39"/>
    <fieldval field="rSTR" value="3"/>
    <fieldval field="rDEX" value="4"/>
    <fieldval field="rCON" value="3"/>
    <fieldval field="rWIS" value="5"/>
    <fieldval field="rSpeed" value="40"/>
    <fieldval field="rAC" value="5"/>
    <fieldval field="rCR" value="5"/>
    <fieldval field="rEnviron" value="temperate coastlines"/>
    <fieldval field="rOrgan" value="solitary"/>
    <fieldval field="rTreasure" value="triple"/>
    <fieldval field="rDescript" value="This sleek dragon is covered in dull metallic scales that range in color from shining bronze to mottled blue."/>
    <fieldval field="rINT" value="4"/>
    <fieldval field="rCHA" value="4"/>
    <usesource source="VarDragons"/>
    <tag group="RaceSize" tag="Small11"/>
    <tag group="HasType" tag="tpDragon"/>
    <tag group="Helper" tag="Quadruped"/>
    <tag group="Hero" tag="NoDefComm"/>
    <tag group="Race" tag="rTrueDrago"/>
    <tag group="Alignment" tag="Good"/>
    <tag group="DragType" tag="Metallic" name="Dragon, Metallic"/>
    <tag group="RaceType" tag="NPC"/>
    <tag group="Helper" tag="NotHum"/>
    <tag group="Alignment" tag="Lawful"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <tag group="Language" tag="Any"/>
    <bootstrap thing="wWing">
      <autotag group="Value" tag="2"/>
      <autotag group="wMain" tag="1d4_4"/>
      </bootstrap>
    <bootstrap thing="xFly">
      <autotag group="Maneuver" tag="Average"/>
      <autotag group="Value" tag="150"/>
      </bootstrap>
    <bootstrap thing="wCrush"></bootstrap>
    <bootstrap thing="wTailSweep"></bootstrap>
    <bootstrap thing="xSwim">
      <autotag group="Value" tag="60"/>
      </bootstrap>
    <bootstrap thing="xDamRdMag">
      <containerreq phase="First" priority="200">DragonAge.YngAdult</containerreq>
      </bootstrap>
    <bootstrap thing="xSplRs">
      <containerreq phase="First" priority="200">DragonAge.YngAdult</containerreq>
      </bootstrap>
    <bootstrap thing="tmxDragAge"></bootstrap>
    <bootstrap thing="raxFrightP">
      <containerreq phase="First" priority="200">DragonAge.Adult</containerreq>
      </bootstrap>
    <bootstrap thing="lDraconic">
      <containerreq phase="First" priority="200">DragonAge.Wyrmling</containerreq>
      </bootstrap>
    <bootstrap thing="stWater"></bootstrap>
    <bootstrap thing="wTailSlap">
      <autotag group="wMain" tag="1d8_6"/>
      <autotag group="Helper" tag="NatTwoHand"/>
      </bootstrap>
    <bootstrap thing="raxDrgBrea">
      <autotag group="BloodEner" tag="Elec"/>
      <autotag group="BreathShp" tag="Line"/>
      <assignval field="abValue" value="2"/>
      <assignval field="abValue3" value="6"/>
      </bootstrap>
    <bootstrap thing="wBite">
      <autotag group="wMain" tag="1d4_4"/>
      <autotag group="Helper" tag="NatPrimary"/>
      <autotag group="Helper" tag="NatTwoHand"/>
      </bootstrap>
    <bootstrap thing="xImmElec">
      <containerreq phase="First" priority="200">DragonAge.Wyrmling</containerreq>
      </bootstrap>
    <bootstrap thing="raBroWateB">
      <containerreq phase="First" priority="200">DragonAge.Wyrmling</containerreq>
      </bootstrap>
    <bootstrap thing="raxBroRepu">
      <containerreq phase="First" priority="200">DragonAge.Wyrmling</containerreq>
      </bootstrap>
    <bootstrap thing="raChangeSh">
      <containerreq phase="First" priority="200">DragonAge.Young</containerreq>
      <autotag group="Usage" tag="Day"/>
      <assignval field="trkMax" value="3"/>
      <assignval field="livename" value="Change Shape (animal or humanoid, {i}polymorph{/i})"/>
      </bootstrap>
    <bootstrap thing="raxBroEleA">
      <containerreq phase="First" priority="200">DragonAge.Old</containerreq>
      </bootstrap>
    <bootstrap thing="raxBroVort">
      <containerreq phase="First" priority="200">DragonAge.Ancient</containerreq>
      </bootstrap>
    <bootstrap thing="raBroTidaW">
      <containerreq phase="First" priority="200">DragonAge.GreatWyrm</containerreq>
      </bootstrap>
    <bootstrap thing="spContWat6">
      <containerreq phase="First" priority="200">DragonAge.Ancient</containerreq>
      <autotag group="Usage" tag="AtWill"/>
      <autotag group="Helper" tag="SpellLike"/>
      </bootstrap>
    <bootstrap thing="spCreaFoo3">
      <containerreq phase="First" priority="200">DragonAge.Juvenile</containerreq>
      <autotag group="Usage" tag="AtWill"/>
      <autotag group="Helper" tag="SpellLike"/>
      </bootstrap>
    <bootstrap thing="spDeteTho2">
      <containerreq phase="First" priority="200">DragonAge.Old</containerreq>
      <autotag group="Usage" tag="AtWill"/>
      <autotag group="Helper" tag="SpellLike"/>
      </bootstrap>
    <bootstrap thing="spFogClo2">
      <containerreq phase="First" priority="200">DragonAge.Adult</containerreq>
      <autotag group="Usage" tag="AtWill"/>
      <autotag group="Helper" tag="SpellLike"/>
      </bootstrap>
    <bootstrap thing="spSpeawit1">
      <containerreq phase="First" priority="200">DragonAge.VeryYoung</containerreq>
      <autotag group="Usage" tag="AtWill"/>
      <autotag group="Helper" tag="SpellLike"/>
      </bootstrap>
    <bootstrap thing="spContWea7">
      <containerreq phase="First" priority="200">DragonAge.GreatWyrm</containerreq>
      <autotag group="Helper" tag="SpellLike"/>
      <autotag group="Usage" tag="AtWill"/>
      </bootstrap>
    <bootstrap thing="fAlertness">
      <containerreq phase="First" priority="200">DragonAge.Wyrmling</containerreq>
      </bootstrap>
    <bootstrap thing="fCleave">
      <containerreq phase="First" priority="200">DragonAge.Juvenile</containerreq>
      </bootstrap>
    <bootstrap thing="fFlybyAt">
      <containerreq phase="First" priority="200">DragonAge.Wyrmling</containerreq>
      </bootstrap>
    <bootstrap thing="fGreatClv">
      <containerreq phase="First" priority="200">DragonAge.MatAdult</containerreq>
      </bootstrap>
    <bootstrap thing="fGrtVitStr">
      <containerreq phase="First" priority="200">DragonAge.GreatWyrm</containerreq>
      </bootstrap>
    <bootstrap thing="fHover">
      <containerreq phase="First" priority="200">DragonAge.Adult</containerreq>
      </bootstrap>
    <bootstrap thing="fImpCrit">
      <containerreq phase="First" priority="200">DragonAge.Old</containerreq>
      <autotag group="Target" tag="wBite"/>
      </bootstrap>
    <bootstrap thing="fImpCrit">
      <containerreq phase="First" priority="200">DragonAge.VeryOld</containerreq>
      <autotag group="Target" tag="wClaw"/>
      </bootstrap>
    <bootstrap thing="fImpInit">
      <containerreq phase="First" priority="200">DragonAge.Ancient</containerreq>
      </bootstrap>
    <bootstrap thing="fImpNatAtt">
      <containerreq phase="First" priority="200">DragonAge.Wyrm</containerreq>
      <autotag group="Target" tag="wBite"/>
      </bootstrap>
    <bootstrap thing="fImpVitStr">
      <containerreq phase="First" priority="200">DragonAge.YngAdult</containerreq>
      </bootstrap>
    <bootstrap thing="fMultiAtt">
      <containerreq phase="First" priority="200">DragonAge.VeryYoung</containerreq>
      </bootstrap>
    <bootstrap thing="fPowerAtt">
      <containerreq phase="First" priority="200">DragonAge.Young</containerreq>
      </bootstrap>
    <bootstrap thing="fVitStr">
      <containerreq phase="First" priority="200">DragonAge.Wyrmling</containerreq>
      </bootstrap>
    <bootstrap thing="skKnowArca"></bootstrap>
    <bootstrap thing="skKnowGeog"></bootstrap>
    <bootstrap thing="skKnowHist"></bootstrap>
    <bootstrap thing="wClaw">
      <autotag group="Value" tag="2"/>
      <autotag group="wMain" tag="1d3_3"/>
      <autotag group="Helper" tag="NatPrimary"/>
      </bootstrap>
    <bootstrap thing="raDrSenses"></bootstrap>
    <eval phase="First" priority="550" index="2"><![CDATA[~ set caster level of racial spells

~age catagory
var ageCat as number
ageCat = hero.childfound[raxDragonA].tagvalue[Value.?]

perform hero.findchild[BaseRace].setfocus

~ set caster level
if (ageCat >= 3) then
 perform focus.assign[SplLookup.cHelpSor]
 focus.field[cMagicLev].value = 2*ageCat - 5
endif

perform state.clearfocus]]></eval>
    <eval phase="PreLevel" priority="4000" index="3">~ innate skill ranks 
var ageCat as number
ageCat = hero.childfound[raxDragonA].tagvalue[Value.?]

if (ageCat = 1) then
  #skillinnate[skDiplo] += 6
  #skillinnate[skFly] += 6
  #skillinnate[skKnowArca] += 6
  #skillinnate[skPercep] += 6
  #skillinnate[skSenseMot] += 6
  #skillinnate[skSpellcr] += 6
  #skillinnate[skStealth] += 6
  #skillinnate[skSwim] += 6
elseif (ageCat = 2) then
  #skillinnate[skDiplo] += 8
  #skillinnate[skFly] += 8
  #skillinnate[skIntim] += 8
  #skillinnate[skKnowArca] += 8
  #skillinnate[skPercep] += 8
  #skillinnate[skSenseMot] += 8
  #skillinnate[skSpellcr] += 8
  #skillinnate[skStealth] += 8
  #skillinnate[skSwim] += 8
elseif (ageCat = 3) then
  #skillinnate[skDiplo] += 10
  #skillinnate[skFly] += 10
  #skillinnate[skIntim] += 10
  #skillinnate[skKnowArca] += 10
  #skillinnate[skPercep] += 10
  #skillinnate[skSenseMot] += 10
  #skillinnate[skSpellcr] += 10
  #skillinnate[skStealth] += 10
  #skillinnate[skSwim] += 10
elseif (ageCat = 4) then
  #skillinnate[skDiplo] += 12
  #skillinnate[skFly] += 12
  #skillinnate[skHandleAn] += 12
  #skillinnate[skIntim] += 12
  #skillinnate[skKnowArca] += 12
  #skillinnate[skPercep] += 12
  #skillinnate[skSenseMot] += 12
  #skillinnate[skSpellcr] += 12
  #skillinnate[skStealth] += 12
  #skillinnate[skSwim] += 12
elseif (ageCat = 5) then
  #skillinnate[skDiplo] += 14
  #skillinnate[skFly] += 14
  #skillinnate[skHandleAn] += 14
  #skillinnate[skIntim] += 14
  #skillinnate[skKnowArca] += 14
  #skillinnate[skPercep] += 14
  #skillinnate[skSenseMot] += 14
  #skillinnate[skSpellcr] += 14
  #skillinnate[skStealth] += 14
  #skillinnate[skSwim] += 14
elseif (ageCat = 6) then
  #skillinnate[skDiplo] += 16
  #skillinnate[skFly] += 16
  #skillinnate[skHandleAn] += 16
  #skillinnate[skIntim] += 16
  #skillinnate[skKnowArca] += 16
  #skillinnate[skKnowGeog] += 16
  #skillinnate[skPercep] += 16
  #skillinnate[skSenseMot] += 16
  #skillinnate[skSpellcr] += 16
  #skillinnate[skStealth] += 16
  #skillinnate[skSwim] += 16
elseif (ageCat = 7) then
  #skillinnate[skDiplo] += 18
  #skillinnate[skFly] += 18
  #skillinnate[skHandleAn] += 18
  #skillinnate[skIntim] += 18
  #skillinnate[skKnowArca] += 18
  #skillinnate[skKnowGeog] += 18
  #skillinnate[skPercep] += 18
  #skillinnate[skSenseMot] += 18
  #skillinnate[skSpellcr] += 18
  #skillinnate[skStealth] += 18
  #skillinnate[skSwim] += 18
elseif (ageCat = 8) then 
  #skillinnate[skDiplo] += 20
  #skillinnate[skFly] += 20
  #skillinnate[skHandleAn] += 20
  #skillinnate[skHeal] += 20
  #skillinnate[skIntim] += 20
  #skillinnate[skKnowArca] += 20
  #skillinnate[skKnowGeog] += 20
  #skillinnate[skPercep] += 20
  #skillinnate[skSenseMot] += 20
  #skillinnate[skSpellcr] += 20
  #skillinnate[skStealth] += 20
  #skillinnate[skSwim] += 20
elseif (ageCat = 9) then
  #skillinnate[skDiplo] += 22
  #skillinnate[skFly] += 22
  #skillinnate[skHandleAn] += 22
  #skillinnate[skHeal] += 22
  #skillinnate[skIntim] += 22
  #skillinnate[skKnowArca] += 22
  #skillinnate[skKnowGeog] += 22
  #skillinnate[skPercep] += 22
  #skillinnate[skSenseMot] += 22
  #skillinnate[skSpellcr] += 22
  #skillinnate[skStealth] += 22
  #skillinnate[skSwim] += 22
elseif (ageCat = 10) then
  #skillinnate[skDiplo] += 24
  #skillinnate[skFly] += 24
  #skillinnate[skHandleAn] += 24
  #skillinnate[skHeal] += 24
  #skillinnate[skIntim] += 24
  #skillinnate[skKnowArca] += 24
  #skillinnate[skKnowGeog] += 24
  #skillinnate[skKnowHist] += 24
  #skillinnate[skPercep] += 24
  #skillinnate[skSenseMot] += 24
  #skillinnate[skSpellcr] += 24
  #skillinnate[skStealth] += 24
  #skillinnate[skSwim] += 24
elseif (ageCat = 11) then
  #skillinnate[skDiplo] += 26
  #skillinnate[skFly] += 26
  #skillinnate[skHandleAn] += 26
  #skillinnate[skHeal] += 26
  #skillinnate[skIntim] += 26
  #skillinnate[skKnowArca] += 26
  #skillinnate[skKnowGeog] += 26
  #skillinnate[skKnowHist] += 26
  #skillinnate[skPercep] += 26
  #skillinnate[skSenseMot] += 26
  #skillinnate[skSpellcr] += 26
  #skillinnate[skStealth] += 26
  #skillinnate[skSwim] += 26
elseif (ageCat = 12) then
  #skillinnate[skDiplo] += 28
  #skillinnate[skDisguise] += 28
  #skillinnate[skFly] += 28
  #skillinnate[skHandleAn] += 28
  #skillinnate[skHeal] += 28
  #skillinnate[skIntim] += 28
  #skillinnate[skKnowArca] += 28
  #skillinnate[skKnowGeog] += 28
  #skillinnate[skKnowHist] += 28
  #skillinnate[skPercep] += 28
  #skillinnate[skSenseMot] += 28
  #skillinnate[skSpellcr] += 28
  #skillinnate[skStealth] += 28
  #skillinnate[skSwim] += 28
endif
      <before name="Skill Bonus Feats"/>
      </eval>
    <eval phase="Final" priority="1000"><![CDATA[~ set Frightful Presence, DR, SR, and CL
var ageCat as number
ageCat = hero.childfound[raxDragonA].tagvalue[Value.?]

~ frightful presesnce
if (ageCat >= 6) then
  hero.child[raxFrightP].field[abValue].value = 30 * ageCat
endif

~ Dragons have SR = to 11 + thier CR
if (ageCat >= 5) then
  var damage as number
  damage = herofield[tCR].value + 11
  #applysr[damage]
endif

~ Dragons have spell like abilities of CL = to TOTAL (not racial) hit dice
if (ageCat >= 2) then
  var CL as number
  CL = herofield[tHitDice].value
  field[rSpCastLev].value = CL
endif

~ DR 
if (ageCat >= 5) then
  var drVal as number
  drVal = (ageCat - 5)/2
  drVal = 5 * (1 + round(drVal,0,-1))
  #applydr[xDamRdMag,drVal]
endif]]></eval>
    </thing>
  <thing id="raxBroRepu" name="Repulsion Breath" description="Instead of a line of fire, a brass dragon can breathe a cone of sleep gas. Creatures within the cone must succeed on a Will save or fall asleep for 1d6 rounds plus 1 round per age category of the dragon." compset="RaceSpec">
    <usesource source="VarDragons"/>
    <tag group="Helper" tag="ShowSpec" name="Show Spec" abbrev="Show Spec"/>
    <tag group="StandardDC" tag="aCON" name="Constitution" abbrev="Constitution"/>
    <tag group="AbilType" tag="Super" name="Supernatural Ability" abbrev=" (Su)"/>
    <tag group="SpecType" tag="Attack"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <tag group="Custom" tag="DragonBrea"/>
    <eval phase="Final" priority="1000"><![CDATA[var ageCat as number
ageCat= hero.child[raxDragonA].tagvalue[Value.?]

~ get dragon size
var dragSize as number
dragSize = herofield[tSize].value

~ breath range for cone
if (dragSize = -2) then
  field[abValue2].value = 15
elseif (dragSize = -1) then
  field[abValue2].value = 20
elseif (dragSize = 0) then
  field[abValue2].value = 30
elseif (dragSize = 1) then 
  field[abValue2].value = 40
elseif (dragSize = 2) then
  field[abValue2].value = 50
elseif (dragSize = 3) then
  field[abValue2].value = 60
elseif (dragSize >= 4) then
  field[abValue2].value = 70
endif

field[livename].text = "Repulsion Breath (" & field[abValue2].value & " ft.-cone, 1d6+" & ageCat & " rnds., Will neg.)"]]></eval>
    </thing>
  <thing id="raxBroEleA" name="Electricity Aura" description="An old or older bronze dragon has an aura of electricity. All creatures within 5 feet take 1d6 points of electricity damage at the start of the dragon's turn. An ancient dragon's aura is 10 feet. A great wyrm's damage increases to 2d6. A bronze dragon can suppress this aura at will." compset="RaceSpec" uniqueness="useronce">
    <usesource source="VarDragons"/>
    <tag group="Helper" tag="ShowSpec" name="Show Spec" abbrev="Show Spec"/>
    <tag group="SpecType" tag="Aura" name="Aura" abbrev="Aura"/>
    <tag group="AbilType" tag="Super" name="Supernatural Ability" abbrev=" (Su)"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <eval phase="Final" priority="10000"><![CDATA[~ set livename
~ get age catagory

var ageCat as number
ageCat = hero.child[raxDragonA].tagvalue[Value.?]

~ store # of damage dice in abValue2
~ store area of effect in abValue

if (ageCat >= 8) then
  field[abValue].value += 5
  field[abValue2].value += 1
endif
if (ageCat >= 10) then
  field[abValue].value += 5
endif
if (ageCat >= 12) then
  field[abValue2].value += 1
endif

field[livename].text = "Electricity Aura (" & field[abValue2].value & "d6, " & field[abValue].value & " ft.)"

field[shortname].text = "electricity aura (" & field[abValue2].value & "d6, " & field[abValue].value & " ft.)"]]></eval>
    </thing>
  <thing id="raxBroVort" name="Vortex" description="Once per day, an ancient or older bronze dragon can create a vortex as a standard action, just like an elder water elemental. A bronze dragon can maintain this vortex for 1 round per age category." compset="RaceSpec">
    <fieldval field="trkMax" value="1"/>
    <usesource source="VarDragons"/>
    <tag group="User" tag="Tracker"/>
    <tag group="AbilType" tag="Extra" name="Extraordinary Ability" abbrev=" (Ex)"/>
    <tag group="Usage" tag="Day"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <tag group="Helper" tag="ShowSpec" name="Show Spec" abbrev="Show Spec"/>
    <eval phase="Final" priority="10000"><![CDATA[~ set livename
~ get age catagory

var ageCat as number
ageCat = hero.child[raxDragonA].tagvalue[Value.?]

field[livename].text = "Vortex (" & ageCat & " rounds)"
field[shortname].text = "vortex (" & ageCat & " rounds)"]]></eval>
    </thing>
  <thing id="rxDragCopp" name="Dragon, Copper" description="Copper dragons enjoy personal freedom, and many are willing to kill or die to protect their right to choose how and where they live. This love for freedom makes them popular with the republic of Andoran, and the highest concentration of coppers in Avistan lives in that democratic nation. Most coppers, though, choose not to live in the only nation-state that already allows for a great deal of personal freedom, but rather in those places most in need of freedom fighters-a role many relish.\n\nIdealistic but easily distracted and even more easily bored, copper dragons make for intense but short-lived allies. Those in search of aid from a copper dragon can muster more and better support if their tasks can be completed relatively quickly. No such quest should last more than a couple weeks, and any endeavors taking more than a few days run the risk of losing the coppers' interest. Draconic scholars can relate with knowing smiles numerous tales of lofty quests enjoined by copper dragons at the outset, only to have the draconic heroes depart on the eve of the (usually thereafter doomed) climax. Coppers also make decent intermediaries between more powerful dragons and human allies, although once again their reliability can quickly become an issue. A message too difficult to deliver can easily be erased from a copper's mind in a celebration of wine, beer, and stronger spirits.\n\nCoppers possess the largest number of head horns among the metallic dragon breeds. The magnificent crowns of horns that they bear grow up out of thick bony plates that form the backs of their skulls. These solid collections of horns can weigh hundreds of pounds on the largest copper dragons, and as a result the breed tends to have relatively short but thick necks. Aside from that very iconic head feature, copper dragon appearance varies widely, although the breed is the most likely of the metallics to be snaggletoothed." compset="Race">
    <fieldval field="shortname" value="Copper Dragon"/>
    <fieldval field="rHitDice" value="5"/>
    <fieldval field="rHPStart" value="32"/>
    <fieldval field="rSTR" value="1"/>
    <fieldval field="rDEX" value="6"/>
    <fieldval field="rCON" value="3"/>
    <fieldval field="rWIS" value="3"/>
    <fieldval field="rSpeed" value="40"/>
    <fieldval field="rAC" value="4"/>
    <fieldval field="rCR" value="4"/>
    <fieldval field="rEnviron" value="warm hills"/>
    <fieldval field="rOrgan" value="solitary"/>
    <fieldval field="rTreasure" value="triple"/>
    <fieldval field="rDescript" value="Bright, shining copper scales run from the horn-crowned head to the ridged tail of this long-winged dragon."/>
    <fieldval field="rINT" value="2"/>
    <fieldval field="rCHA" value="2"/>
    <usesource source="VarDragons"/>
    <tag group="RaceSize" tag="Tiny12"/>
    <tag group="HasType" tag="tpDragon"/>
    <tag group="Helper" tag="Quadruped"/>
    <tag group="Hero" tag="NoDefComm"/>
    <tag group="Race" tag="rTrueDrago"/>
    <tag group="Alignment" tag="Good"/>
    <tag group="DragType" tag="Metallic" name="Dragon, Metallic"/>
    <tag group="RaceType" tag="NPC"/>
    <tag group="Helper" tag="NotHum"/>
    <tag group="Alignment" tag="Chaotic"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <tag group="Language" tag="Any"/>
    <bootstrap thing="xFly">
      <autotag group="Maneuver" tag="Average"/>
      <autotag group="Value" tag="100"/>
      </bootstrap>
    <bootstrap thing="wCrush"></bootstrap>
    <bootstrap thing="wTailSweep"></bootstrap>
    <bootstrap thing="xDamRdMag">
      <containerreq phase="First" priority="200">DragonAge.YngAdult</containerreq>
      </bootstrap>
    <bootstrap thing="xSplRs">
      <containerreq phase="First" priority="200">DragonAge.YngAdult</containerreq>
      </bootstrap>
    <bootstrap thing="tmxDragAge"></bootstrap>
    <bootstrap thing="raxFrightP">
      <containerreq phase="First" priority="200">DragonAge.Adult</containerreq>
      </bootstrap>
    <bootstrap thing="wTailSlap">
      <autotag group="wMain" tag="1d8_6"/>
      <autotag group="Helper" tag="NatTwoHand"/>
      </bootstrap>
    <bootstrap thing="raxDrgBrea">
      <autotag group="BloodEner" tag="Acid"/>
      <autotag group="BreathShp" tag="Line"/>
      <assignval field="abValue" value="2"/>
      <assignval field="abValue3" value="6"/>
      </bootstrap>
    <bootstrap thing="wBite">
      <autotag group="wMain" tag="1d4_4"/>
      <autotag group="Helper" tag="NatPrimary"/>
      <autotag group="Helper" tag="NatTwoHand"/>
      </bootstrap>
    <bootstrap thing="xImmAcid">
      <containerreq phase="First" priority="200">DragonAge.Wyrmling</containerreq>
      </bootstrap>
    <bootstrap thing="skKnowArca"></bootstrap>
    <bootstrap thing="skKnowGeog"></bootstrap>
    <bootstrap thing="skKnowHist"></bootstrap>
    <bootstrap thing="stEarth"></bootstrap>
    <bootstrap thing="wClaw">
      <autotag group="Value" tag="2"/>
      <autotag group="wMain" tag="1d3_3"/>
      <autotag group="Helper" tag="NatPrimary"/>
      </bootstrap>
    <bootstrap thing="raCopClimS">
      <containerreq phase="First" priority="200">DragonAge.Wyrmling</containerreq>
      </bootstrap>
    <bootstrap thing="raxCopSlow">
      <containerreq phase="First" priority="200">DragonAge.Wyrmling</containerreq>
      </bootstrap>
    <bootstrap thing="raUncanny">
      <containerreq phase="First" priority="200">DragonAge.Young</containerreq>
      </bootstrap>
    <bootstrap thing="raxCopTrap">
      <containerreq phase="First" priority="200">DragonAge.Juvenile</containerreq>
      </bootstrap>
    <bootstrap thing="raxCopSlwA">
      <containerreq phase="First" priority="200">DragonAge.Old</containerreq>
      </bootstrap>
    <bootstrap thing="raxCopMsLa">
      <containerreq phase="First" priority="200">DragonAge.Ancient</containerreq>
      </bootstrap>
    <bootstrap thing="raCopDeadJ">
      <containerreq phase="First" priority="200">DragonAge.GreatWyrm</containerreq>
      <autotag group="User" tag="Tracker"/>
      <autotag group="Usage" tag="Day"/>
      <assignval field="trkMax" value="1"/>
      </bootstrap>
    <bootstrap thing="spGrease1">
      <containerreq phase="First" priority="200">DragonAge.VeryYoung</containerreq>
      <autotag group="Usage" tag="AtWill"/>
      <autotag group="Helper" tag="SpellLike"/>
      </bootstrap>
    <bootstrap thing="spHideLau2">
      <containerreq phase="First" priority="200">DragonAge.Juvenile</containerreq>
      <autotag group="Usage" tag="AtWill"/>
      <autotag group="Helper" tag="SpellLike"/>
      </bootstrap>
    <bootstrap thing="spMoveEar6">
      <containerreq phase="First" priority="200">DragonAge.GreatWyrm</containerreq>
      <autotag group="Usage" tag="AtWill"/>
      <autotag group="Helper" tag="SpellLike"/>
      </bootstrap>
    <bootstrap thing="spStonSha4">
      <containerreq phase="First" priority="200">DragonAge.Adult</containerreq>
      <autotag group="Usage" tag="AtWill"/>
      <autotag group="Helper" tag="SpellLike"/>
      </bootstrap>
    <bootstrap thing="spTranMud5">
      <containerreq phase="First" priority="200">DragonAge.Old</containerreq>
      <autotag group="Usage" tag="AtWill"/>
      <autotag group="Helper" tag="SpellLike"/>
      </bootstrap>
    <bootstrap thing="spTranRoc5">
      <containerreq phase="First" priority="200">DragonAge.Old</containerreq>
      <autotag group="Usage" tag="AtWill"/>
      <autotag group="Helper" tag="SpellLike"/>
      </bootstrap>
    <bootstrap thing="spWallSto5">
      <containerreq phase="First" priority="200">DragonAge.Ancient</containerreq>
      <autotag group="Usage" tag="AtWill"/>
      <autotag group="Helper" tag="SpellLike"/>
      </bootstrap>
    <bootstrap thing="fComExpert">
      <containerreq phase="First" priority="200">DragonAge.Wyrmling</containerreq>
      <autotag group="thing" tag="skipprereq"/>
      </bootstrap>
    <bootstrap thing="fGreatDis">
      <containerreq phase="First" priority="200">DragonAge.Wyrm</containerreq>
      </bootstrap>
    <bootstrap thing="fGrtSpFoc">
      <containerreq phase="First" priority="200">DragonAge.GreatWyrm</containerreq>
      <autotag group="Target" tag="ssIllusion"/>
      </bootstrap>
    <bootstrap thing="fGreatTrip">
      <containerreq phase="First" priority="200">DragonAge.Juvenile</containerreq>
      </bootstrap>
    <bootstrap thing="fImpCrit">
      <containerreq phase="First" priority="200">DragonAge.Young</containerreq>
      <autotag group="Target" tag="wBite"/>
      </bootstrap>
    <bootstrap thing="fImpCrit">
      <containerreq phase="First" priority="200">DragonAge.Adult</containerreq>
      <autotag group="Target" tag="wClaw"/>
      </bootstrap>
    <bootstrap thing="fImpDis">
      <containerreq phase="First" priority="200">DragonAge.Old</containerreq>
      </bootstrap>
    <bootstrap thing="fImpInit">
      <containerreq phase="First" priority="200">DragonAge.Wyrmling</containerreq>
      </bootstrap>
    <bootstrap thing="fImpTrip">
      <containerreq phase="First" priority="200">DragonAge.Wyrmling</containerreq>
      <autotag group="thing" tag="skipprereq"/>
      </bootstrap>
    <bootstrap thing="fImpVitStr">
      <containerreq phase="First" priority="200">DragonAge.MatAdult</containerreq>
      </bootstrap>
    <bootstrap thing="fPowerAtt">
      <containerreq phase="First" priority="200">DragonAge.VeryYoung</containerreq>
      </bootstrap>
    <bootstrap thing="fQuickSpl">
      <containerreq phase="First" priority="200">DragonAge.Ancient</containerreq>
      </bootstrap>
    <bootstrap thing="fSpellFoc">
      <containerreq phase="First" priority="200">DragonAge.VeryOld</containerreq>
      <autotag group="Target" tag="ssIllusion"/>
      </bootstrap>
    <bootstrap thing="fVitStr">
      <containerreq phase="First" priority="200">DragonAge.YngAdult</containerreq>
      </bootstrap>
    <bootstrap thing="lDraconic">
      <containerreq phase="First" priority="200">DragonAge.Wyrmling</containerreq>
      </bootstrap>
    <bootstrap thing="skCrafTrap">
      <autotag group="Helper" tag="HasTools"/>
      </bootstrap>
    <bootstrap thing="skPerfCom"></bootstrap>
    <bootstrap thing="skKnowHist"></bootstrap>
    <bootstrap thing="skKnowGeog"></bootstrap>
    <bootstrap thing="raDrSenses"></bootstrap>
    <bootstrap thing="wWing">
      <autotag group="Value" tag="2"/>
      <autotag group="wMain" tag="1d4_4"/>
      </bootstrap>
    <eval phase="Final" priority="1000"><![CDATA[~ set Frightful Presence, DR, SR, and CL
var ageCat as number
ageCat = hero.childfound[raxDragonA].tagvalue[Value.?]

~ frightful presesnce
if (ageCat >= 6) then
  hero.child[raxFrightP].field[abValue].value = 30 * ageCat
endif

~ Dragons have SR = to 11 + thier CR
if (ageCat >= 5) then
  var damage as number
  damage = herofield[tCR].value + 11
  #applysr[damage]
endif

~ Dragons have spell like abilities of CL = to TOTAL (not racial) hit dice
if (ageCat >= 2) then
  var CL as number
  CL = herofield[tHitDice].value
  field[rSpCastLev].value = CL
endif

~ DR 
if (ageCat >= 5) then
  var drVal as number
  drVal = (ageCat - 5)/2
  drVal = 5 * (1 + round(drVal,0,-1))
  #applydr[xDamRdMag,drVal]
endif]]></eval>
    <eval phase="First" priority="550" index="2"><![CDATA[~ set caster level of racial spells

~age catagory
var ageCat as number
ageCat = hero.childfound[raxDragonA].tagvalue[Value.?]

perform hero.findchild[BaseRace].setfocus

~ set caster level
if (ageCat >= 3) then
 perform focus.assign[SplLookup.cHelpSor]
 focus.field[cMagicLev].value = 2*ageCat - 5
endif

perform state.clearfocus]]></eval>
    <eval phase="PreLevel" priority="4000" index="3">~ innate skill ranks 
var ageCat as number
ageCat = hero.childfound[raxDragonA].tagvalue[Value.?]

if (ageCat = 1) then
  #skillinnate[skBluff] += 5
  #skillinnate[skCrafTrap] += 5
  #skillinnate[skFly] += 5
  #skillinnate[skPercep] += 5
  #skillinnate[skPerfCom] += 5
  #skillinnate[skSenseMot] += 5
  #skillinnate[skStealth] += 5
elseif (ageCat = 2) then
  #skillinnate[skBluff] += 7
  #skillinnate[skCrafTrap] += 7
  #skillinnate[skFly] += 7
  #skillinnate[skPercep] += 7
  #skillinnate[skPerfCom] += 7
  #skillinnate[skSenseMot] += 7
  #skillinnate[skStealth] += 7
  #skillinnate[skUseMagic] += 7
elseif (ageCat = 3) then
  #skillinnate[skBluff] += 9
  #skillinnate[skCrafTrap] += 9
  #skillinnate[skFly] += 9
  #skillinnate[skPercep] += 9
  #skillinnate[skPerfCom] += 9
  #skillinnate[skSenseMot] += 9
  #skillinnate[skStealth] += 9
  #skillinnate[skUseMagic] += 9
elseif (ageCat = 4) then
  #skillinnate[skBluff] += 11
  #skillinnate[skCrafTrap] += 11
  #skillinnate[skDiplo] += 11
  #skillinnate[skFly] += 11
  #skillinnate[skPercep] += 11
  #skillinnate[skPerfCom] += 11
  #skillinnate[skSenseMot] += 11
  #skillinnate[skStealth] += 11
  #skillinnate[skUseMagic] += 11
elseif (ageCat = 5) then
  #skillinnate[skBluff] += 13
  #skillinnate[skCrafTrap] += 13
  #skillinnate[skDiplo] += 13
  #skillinnate[skFly] += 13
  #skillinnate[skPercep] += 13
  #skillinnate[skPerfCom] += 13
  #skillinnate[skSenseMot] += 13
  #skillinnate[skStealth] += 13
  #skillinnate[skUseMagic] += 13
elseif (ageCat = 6) then
  #skillinnate[skBluff] += 15
  #skillinnate[skCrafTrap] += 15
  #skillinnate[skDiplo] += 15
  #skillinnate[skFly] += 15
  #skillinnate[skPercep] += 15
  #skillinnate[skPerfCom] += 15
  #skillinnate[skSenseMot] += 15
  #skillinnate[skSpellcr] += 15
  #skillinnate[skStealth] += 15
  #skillinnate[skUseMagic] += 15
elseif (ageCat = 7) then
  #skillinnate[skBluff] += 17
  #skillinnate[skCrafTrap] += 17
  #skillinnate[skDiplo] += 17
  #skillinnate[skFly] += 17
  #skillinnate[skPercep] += 17
  #skillinnate[skPerfCom] += 17
  #skillinnate[skSenseMot] += 17
  #skillinnate[skSpellcr] += 17
  #skillinnate[skStealth] += 17
  #skillinnate[skUseMagic] += 17
elseif (ageCat = 8) then 
  #skillinnate[skBluff] += 19
  #skillinnate[skCrafTrap] += 19
  #skillinnate[skDiplo] += 19
  #skillinnate[skFly] += 19
  #skillinnate[skKnowHist] += 19
  #skillinnate[skPercep] += 19
  #skillinnate[skPerfCom] += 19
  #skillinnate[skSenseMot] += 19
  #skillinnate[skSpellcr] += 19
  #skillinnate[skStealth] += 19
  #skillinnate[skUseMagic] += 19
elseif (ageCat = 9) then
  #skillinnate[skBluff] += 21
  #skillinnate[skCrafTrap] += 21
  #skillinnate[skDiplo] += 21
  #skillinnate[skFly] += 21
  #skillinnate[skKnowHist] += 21
  #skillinnate[skPercep] += 21
  #skillinnate[skPerfCom] += 21
  #skillinnate[skSenseMot] += 21
  #skillinnate[skSpellcr] += 21
  #skillinnate[skStealth] += 21
  #skillinnate[skUseMagic] += 21
elseif (ageCat = 10) then
  #skillinnate[skBluff] += 23
  #skillinnate[skCrafTrap] += 23
  #skillinnate[skDiplo] += 23
  #skillinnate[skFly] += 23
  #skillinnate[skKnowGeog] += 23
  #skillinnate[skKnowHist] += 23
  #skillinnate[skPercep] += 23
  #skillinnate[skPerfCom] += 23
  #skillinnate[skSenseMot] += 23
  #skillinnate[skSpellcr] += 23
  #skillinnate[skStealth] += 23
  #skillinnate[skUseMagic] += 23
elseif (ageCat = 11) then
  #skillinnate[skBluff] += 25
  #skillinnate[skCrafTrap] += 25
  #skillinnate[skDiplo] += 25
  #skillinnate[skFly] += 25
  #skillinnate[skKnowGeog] += 25
  #skillinnate[skKnowHist] += 25
  #skillinnate[skPercep] += 25
  #skillinnate[skPerfCom] += 25
  #skillinnate[skSenseMot] += 25
  #skillinnate[skSpellcr] += 25
  #skillinnate[skStealth] += 25
  #skillinnate[skUseMagic] += 25
elseif (ageCat = 12) then
  #skillinnate[skBluff] += 27
  #skillinnate[skCrafTrap] += 27
  #skillinnate[skDiplo] += 27
  #skillinnate[skFly] += 27
  #skillinnate[skKnowGeog] += 27
  #skillinnate[skKnowHist] += 27
  #skillinnate[skPercep] += 27
  #skillinnate[skPerfCom] += 27
  #skillinnate[skSenseMot] += 27
  #skillinnate[skSleight] += 27
  #skillinnate[skSpellcr] += 27
  #skillinnate[skStealth] += 27
  #skillinnate[skUseMagic] += 27
endif
      <before name="Skill Bonus Feats"/>
      </eval>
    </thing>
  <thing id="raxCopSlow" name="Slow Breath" description=" Instead of a line of acid, a copper dragon can breathe a cone of slowing gas. Those in the cone must make a Fortitude save or be slowed (as per the spell {i}slow{/i}) for 1d6 rounds plus 1 round per age category of the dragon." compset="RaceSpec">
    <usesource source="VarDragons"/>
    <tag group="Helper" tag="ShowSpec" name="Show Spec" abbrev="Show Spec"/>
    <tag group="StandardDC" tag="aCON" name="Constitution" abbrev="Constitution"/>
    <tag group="AbilType" tag="Super" name="Supernatural Ability" abbrev=" (Su)"/>
    <tag group="SpecType" tag="Attack"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <tag group="Custom" tag="DragonBrea"/>
    <eval phase="Final" priority="1000"><![CDATA[var ageCat as number
ageCat= hero.child[raxDragonA].tagvalue[Value.?]

~ get dragon size
var dragSize as number
dragSize = herofield[tSize].value

~ breath range for cone
if (dragSize = -2) then
  field[abValue2].value = 15
elseif (dragSize = -1) then
  field[abValue2].value = 20
elseif (dragSize = 0) then
  field[abValue2].value = 30
elseif (dragSize = 1) then 
  field[abValue2].value = 40
elseif (dragSize = 2) then
  field[abValue2].value = 50
elseif (dragSize = 3) then
  field[abValue2].value = 60
elseif (dragSize >= 4) then
  field[abValue2].value = 70
endif

field[livename].text = "Slow Breath (" & field[abValue2].value & " ft.-cone, 1d6+" & ageCat & " rnds., Will neg.)"]]></eval>
    </thing>
  <thing id="raxCopMsLa" name="Mass Laughter" description="An ancient copper dragon can tell a fantastic joke once per day as a standard action. All creatures within 10 feet per age category must make a Will save or laugh for 1 round per age category, as if affected by {i}hideous laughter{/i}. The save DC is Charisma-based. This is equal to a 6th-level spell." compset="RaceSpec">
    <fieldval field="trkMax" value="1"/>
    <usesource source="VarDragons"/>
    <tag group="SpInfo" tag="spHideLau2" name="Hideous Laughter" abbrev="Hideous Laughter"/>
    <tag group="StandardDC" tag="aCHA" name="Charisma" abbrev="Charisma"/>
    <tag group="User" tag="Tracker"/>
    <tag group="AbilType" tag="SpellLike" name="Spell-Like Ability" abbrev=" (Sp)"/>
    <tag group="Usage" tag="Day"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <tag group="Helper" tag="ShowSpec" name="Show Spec" abbrev="Show Spec"/>
    <eval phase="Final" priority="1000"><![CDATA[var ageCat as number
ageCat= hero.child[raxDragonA].tagvalue[Value.?]
var range as number
range = 10 *ageCat

field[livename].text = "Mass Laughter (" & range & " ft., " & ageCat & " rnds.)"
field[shortname].text = "mass laughter (" & range & " ft., " & ageCat & " rnds.)"]]></eval>
    </thing>
  <thing id="raxCopSlwA" name="Slow Aura" description="An old or older copper dragon is surrounded by an aura of slowness. All creatures within 5 feet of the dragon must make a Will save or be affected as per {i}slow{/i} for 1 round. An ancient dragon's aura extends to 10 feet. For great wyrm copper dragons, those opponents that fail their saves are slowed for 1d4 rounds. The DC of this save is equal to the dragon's breath weapon. A copper dragon can suppress or activate this aura at will as a free action." compset="RaceSpec" uniqueness="useronce">
    <usesource source="VarDragons"/>
    <tag group="Helper" tag="ShowSpec" name="Show Spec" abbrev="Show Spec"/>
    <tag group="SpecType" tag="Aura" name="Aura" abbrev="Aura"/>
    <tag group="AbilType" tag="Super" name="Supernatural Ability" abbrev=" (Su)"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <eval phase="Final" priority="10000"><![CDATA[~ set livename
~ get age catagory

var ageCat as number
ageCat = hero.child[raxDragonA].tagvalue[Value.?]

~ store # of rounds in abValue2
~ store area of effect in abValue
~ store dice type in abValue3

if (ageCat >= 8) then
  field[abValue].value += 5
  field[abValue2].value = 1
endif
if (ageCat >= 10) then
  field[abValue].value += 5
endif
if (ageCat >= 12) then
  field[abValue2].value = 1
  field[abValue3].value = 4
endif

if (ageCat < 12) then
 field[livename].text = "Slow Aura (" & field[abValue2].value & " round, " & field[abValue].value & " ft.)"
 field[shortname].text = "slow aura (" & field[abValue2].value & " round, " & field[abValue].value & " ft.)"
else
 field[livename].text = "Slow Aura (" & field[abValue2].value & "d" & field[abValue3].value & " rounds, " & field[abValue].value & " ft.)"
 field[shortname].text = "slow aura (" & field[abValue2].value & "d" & field[abValue3].value & " rounds, " & field[abValue].value & " ft.)"
endif]]></eval>
    </thing>
  <thing id="raxCopTrap" name="Trap Master" description="A juvenile or older copper dragon receives a +1 bonus per age categroy on Craft (traps) and Perception checks made to locate a trap. Upon becoming a mature adult, he can also use Disable Device to disarm magic traps as if he had the rogue's Trapfinding class feature." compset="RaceSpec">
    <usesource source="VarDragons"/>
    <tag group="AbilType" tag="Extra"/>
    <tag group="Helper" tag="ShowSpec"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <eval phase="PostLevel" priority="1000"><![CDATA[var ageCat as number
ageCat= hero.child[raxDragonA].tagvalue[Value.?]

hero.child[skCrafTrap].field[Bonus].value += ageCat
#situational[hero.child[skPercep],"+" & ageCat & " to locate traps",field[name].text]

field[livename].text = field[thingname].text & " " & signed(ageCat)]]></eval>
    </thing>
  <thing id="rxDragGold" name="Dragon, Gold" description="The greatest of all dragons by nearly any metric, gold dragons benevolently reign over their metallic kin and command respect and awe from their chromatic cousins. Even the most powerful red dragons bear grudging respect for gold dragons-and hate them all the more for it. Gold dragons epitomize all that is good, orderly, and draconic. When poets and dreamers think of benign dragons, they think of the patient and kind golds.\n\nBy far the wisest and most intelligent of the metallic and chromatic dragons, gold dragons spend a great deal of time contemplating various considerations or problems that interest or vex them. Gold dragons do not mind providing their insights to those who ask, particularly if the inquired topic mirrors one of their own interests. As such, many creatures seek out gold dragons for advice, insight, and information. Golds make for careful and unhurried advisors, and they sometimes ponder a situation brought to their attention for several days, lapsing into deep thought and ignoring their visitors. Golds speak with an economy of words, and expect others to lend greater heed to their carefully considered remarks.\n\nWhen dealing with other creatures, gold dragons prefer to guide and advise. When coerced to act they become terrible to behold in their righteous fury. Even when pitted against chromatic foes (directly or otherwise), gold dragons choose words over violence, and many chromatics who are redeemed can thank patient but forceful golds for their enlightenment.\n\nGold dragons possess two large sweeping horns that extend back and up from their skulls, and most bear a few hornlets at the ends of their chins, which appear from the distance like small beards. Other than these features, the faces of gold dragons vary widely. Many possess dozens of hornlets projecting from their jaws, cheekbones, and eye ridges, while others bear only the two main horns and no other facial projections. Regardless of horn numbers, all golds reflect light to shine like the sun." compset="Race">
    <fieldval field="shortname" value="Gold Dragon"/>
    <fieldval field="rHitDice" value="8"/>
    <fieldval field="rHPStart" value="52"/>
    <fieldval field="rSTR" value="7"/>
    <fieldval field="rDEX" value="4"/>
    <fieldval field="rCON" value="5"/>
    <fieldval field="rWIS" value="5"/>
    <fieldval field="rSpeed" value="60"/>
    <fieldval field="rAC" value="7"/>
    <fieldval field="rCR" value="7"/>
    <fieldval field="rEnviron" value="warm plains"/>
    <fieldval field="rOrgan" value="solitary"/>
    <fieldval field="rTreasure" value="triple"/>
    <fieldval field="rDescript" value="Golden scales cover the body of this majestic dragon, and a regal crest of horns arches backward above wise and piercing eyes."/>
    <fieldval field="rINT" value="4"/>
    <fieldval field="rCHA" value="4"/>
    <usesource source="VarDragons"/>
    <tag group="RaceSize" tag="Small11"/>
    <tag group="HasType" tag="tpDragon"/>
    <tag group="Helper" tag="Quadruped"/>
    <tag group="Hero" tag="NoDefComm"/>
    <tag group="Race" tag="rTrueDrago"/>
    <tag group="Alignment" tag="Good"/>
    <tag group="DragType" tag="Metallic" name="Dragon, Metallic"/>
    <tag group="RaceType" tag="NPC"/>
    <tag group="Helper" tag="NotHum"/>
    <tag group="Alignment" tag="Lawful"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <tag group="Language" tag="Any"/>
    <bootstrap thing="wCrush"></bootstrap>
    <bootstrap thing="wTailSweep"></bootstrap>
    <bootstrap thing="xDamRdMag">
      <containerreq phase="First" priority="200">DragonAge.YngAdult</containerreq>
      </bootstrap>
    <bootstrap thing="xSplRs">
      <containerreq phase="First" priority="200">DragonAge.YngAdult</containerreq>
      </bootstrap>
    <bootstrap thing="tmxDragAge"></bootstrap>
    <bootstrap thing="raxFrightP">
      <containerreq phase="First" priority="200">DragonAge.Adult</containerreq>
      </bootstrap>
    <bootstrap thing="wTailSlap">
      <autotag group="wMain" tag="1d8_6"/>
      <autotag group="Helper" tag="NatTwoHand"/>
      </bootstrap>
    <bootstrap thing="raxDrgBrea">
      <autotag group="BloodEner" tag="Fire"/>
      <autotag group="BreathShp" tag="Cone"/>
      <assignval field="abValue" value="2"/>
      <assignval field="abValue3" value="10"/>
      </bootstrap>
    <bootstrap thing="wBite">
      <autotag group="wMain" tag="1d4_4"/>
      <autotag group="Helper" tag="NatPrimary"/>
      <autotag group="Helper" tag="NatTwoHand"/>
      </bootstrap>
    <bootstrap thing="wClaw">
      <autotag group="Value" tag="2"/>
      <autotag group="wMain" tag="1d3_3"/>
      <autotag group="Helper" tag="NatPrimary"/>
      </bootstrap>
    <bootstrap thing="stFire"></bootstrap>
    <bootstrap thing="xSwim">
      <autotag group="Value" tag="60"/>
      </bootstrap>
    <bootstrap thing="raDrSenses"></bootstrap>
    <bootstrap thing="raChangeSh">
      <containerreq phase="First" priority="200">DragonAge.VeryYoung</containerreq>
      <autotag group="Usage" tag="Day"/>
      <autotag group="User" tag="Tracker"/>
      <assignval field="trkMax" value="3"/>
      <assignval field="livename" value="Change Shape (animal or humanoid; {i}polymorph{/i})"/>
      </bootstrap>
    <bootstrap thing="raxGolDtGm">
      <containerreq phase="First" priority="200">DragonAge.Young</containerreq>
      </bootstrap>
    <bootstrap thing="raxGolFstF">
      <containerreq phase="First" priority="200">DragonAge.Young</containerreq>
      </bootstrap>
    <bootstrap thing="raxGolFirA">
      <containerreq phase="First" priority="200">DragonAge.Old</containerreq>
      </bootstrap>
    <bootstrap thing="raxGolLuck">
      <containerreq phase="First" priority="200">DragonAge.Adult</containerreq>
      </bootstrap>
    <bootstrap thing="raxGolWeak">
      <containerreq phase="First" priority="200">DragonAge.Wyrmling</containerreq>
      </bootstrap>
    <bootstrap thing="raxGolDvAd">
      <containerreq phase="First" priority="200">DragonAge.GreatWyrm</containerreq>
      </bootstrap>
    <bootstrap thing="spBless1">
      <containerreq phase="First" priority="200">DragonAge.Juvenile</containerreq>
      <autotag group="Usage" tag="AtWill"/>
      <autotag group="Helper" tag="SpellLike"/>
      </bootstrap>
    <bootstrap thing="spDayligh3">
      <containerreq phase="First" priority="200">DragonAge.Adult</containerreq>
      <autotag group="Usage" tag="Constant"/>
      <autotag group="Helper" tag="SpellLike"/>
      </bootstrap>
    <bootstrap thing="spDeteEvi1">
      <containerreq phase="First" priority="200">DragonAge.VeryYoung</containerreq>
      <autotag group="Helper" tag="SpellLike"/>
      <autotag group="Usage" tag="AtWill"/>
      </bootstrap>
    <bootstrap thing="spGeasQue5">
      <containerreq phase="First" priority="200">DragonAge.Old</containerreq>
      <autotag group="Usage" tag="AtWill"/>
      <autotag group="Helper" tag="SpellLike"/>
      </bootstrap>
    <bootstrap thing="spSunburs8">
      <containerreq phase="First" priority="200">DragonAge.Ancient</containerreq>
      <autotag group="Usage" tag="AtWill"/>
      <autotag group="Helper" tag="SpellLike"/>
      </bootstrap>
    <bootstrap thing="spForesig9">
      <containerreq phase="First" priority="200">DragonAge.GreatWyrm</containerreq>
      <autotag group="Usage" tag="AtWill"/>
      <autotag group="Helper" tag="SpellLike"/>
      </bootstrap>
    <bootstrap thing="fAlertness">
      <containerreq phase="First" priority="200">DragonAge.Wyrmling</containerreq>
      </bootstrap>
    <bootstrap thing="fCritFoc">
      <containerreq phase="First" priority="200">DragonAge.Juvenile</containerreq>
      </bootstrap>
    <bootstrap thing="fExtSpell">
      <containerreq phase="First" priority="200">DragonAge.Adult</containerreq>
      </bootstrap>
    <bootstrap thing="fImpCrit">
      <containerreq phase="First" priority="200">DragonAge.YngAdult</containerreq>
      <autotag group="Target" tag="wBite"/>
      </bootstrap>
    <bootstrap thing="fImpCrit">
      <containerreq phase="First" priority="200">DragonAge.Young</containerreq>
      <autotag group="Target" tag="wClaw"/>
      </bootstrap>
    <bootstrap thing="fImpCrit">
      <containerreq phase="First" priority="200">DragonAge.VeryOld</containerreq>
      <autotag group="Target" tag="wTailSlap"/>
      </bootstrap>
    <bootstrap thing="fImpCrit">
      <containerreq phase="First" priority="200">DragonAge.MatAdult</containerreq>
      <autotag group="Target" tag="wWing"/>
      </bootstrap>
    <bootstrap thing="fIronWill">
      <containerreq phase="First" priority="200">DragonAge.Wyrmling</containerreq>
      </bootstrap>
    <bootstrap thing="fMultiAtt">
      <containerreq phase="First" priority="200">DragonAge.Wyrmling</containerreq>
      </bootstrap>
    <bootstrap thing="fPowerAtt">
      <containerreq phase="First" priority="200">DragonAge.VeryYoung</containerreq>
      </bootstrap>
    <bootstrap thing="fQuickSpl">
      <containerreq phase="First" priority="200">DragonAge.Old</containerreq>
      </bootstrap>
    <bootstrap thing="fSickCrit">
      <containerreq phase="First" priority="200">DragonAge.GreatWyrm</containerreq>
      </bootstrap>
    <bootstrap thing="fStagCrit">
      <containerreq phase="First" priority="200">DragonAge.Ancient</containerreq>
      </bootstrap>
    <bootstrap thing="fStunCrit">
      <containerreq phase="First" priority="200">DragonAge.Wyrm</containerreq>
      </bootstrap>
    <bootstrap thing="fVitStr">
      <containerreq phase="First" priority="200">DragonAge.Wyrmling</containerreq>
      </bootstrap>
    <bootstrap thing="lDraconic">
      <containerreq phase="First" priority="200">DragonAge.Wyrmling</containerreq>
      </bootstrap>
    <bootstrap thing="skKnowLoc"></bootstrap>
    <bootstrap thing="skKnowRel"></bootstrap>
    <bootstrap thing="skKnowNobl"></bootstrap>
    <bootstrap thing="skKnowArca"></bootstrap>
    <bootstrap thing="skKnowHist"></bootstrap>
    <bootstrap thing="skKnowPlan"></bootstrap>
    <bootstrap thing="wWing">
      <autotag group="Value" tag="2"/>
      <autotag group="wMain" tag="1d4_4"/>
      </bootstrap>
    <bootstrap thing="xFly">
      <autotag group="Maneuver" tag="Average"/>
      <autotag group="Value" tag="150"/>
      </bootstrap>
    <eval phase="Final" priority="1000"><![CDATA[~ set Frightful Presence, DR, SR, and CL
var ageCat as number
ageCat = hero.childfound[raxDragonA].tagvalue[Value.?]

~ frightful presesnce
if (ageCat >= 6) then
  hero.child[raxFrightP].field[abValue].value = 30 * ageCat
endif

~ Dragons have SR = to 11 + thier CR
if (ageCat >= 5) then
  var damage as number
  damage = herofield[tCR].value + 11
  #applysr[damage]
endif

~ Dragons have spell like abilities of CL = to TOTAL (not racial) hit dice
if (ageCat >= 2) then
  var CL as number
  CL = herofield[tHitDice].value
  field[rSpCastLev].value = CL
endif

~ DR 
if (ageCat >= 5) then
  var drVal as number
  drVal = (ageCat - 5)/2
  drVal = 5 * (1 + round(drVal,0,-1))
  #applydr[xDamRdMag,drVal]
endif]]></eval>
    <eval phase="First" priority="550" index="2"><![CDATA[~ set caster level of racial spells

~age catagory
var ageCat as number
ageCat = hero.childfound[raxDragonA].tagvalue[Value.?]

perform hero.findchild[BaseRace].setfocus

~ set caster level
if (ageCat >= 3) then
 perform focus.assign[SplLookup.cHelpSor]
 perform focus.assign[sClass.cHelpClr]
 focus.field[cMagicLev].value = 2*ageCat - 5
endif

perform state.clearfocus]]></eval>
    <eval phase="PreLevel" priority="4000" index="3">~ innate skill ranks 
var ageCat as number
ageCat = hero.childfound[raxDragonA].tagvalue[Value.?]

if (ageCat = 1) then
  #skillinnate[skDiplo] += 8
  #skillinnate[skFly] += 8
  #skillinnate[skHeal] += 8
  #skillinnate[skKnowRel] += 8
  #skillinnate[skPercep] += 8
  #skillinnate[skSenseMot] += 8
  #skillinnate[skSpellcr] += 8
  #skillinnate[skSwim] += 8
elseif (ageCat = 2) then
  #skillinnate[skDiplo] += 10
  #skillinnate[skFly] += 10
  #skillinnate[skHeal] += 10
  #skillinnate[skKnowLoc] += 10
  #skillinnate[skKnowRel] += 10
  #skillinnate[skPercep] += 10
  #skillinnate[skSenseMot] += 10
  #skillinnate[skSpellcr] += 10
  #skillinnate[skSwim] += 10
elseif (ageCat = 3) then
  #skillinnate[skDiplo] += 12
  #skillinnate[skFly] += 12
  #skillinnate[skHeal] += 12
  #skillinnate[skKnowLoc] += 12
  #skillinnate[skKnowRel] += 12
  #skillinnate[skPercep] += 12
  #skillinnate[skSenseMot] += 12
  #skillinnate[skSpellcr] += 12
  #skillinnate[skSwim] += 12
elseif (ageCat = 4) then
  #skillinnate[skDiplo] += 14
  #skillinnate[skFly] += 14
  #skillinnate[skHeal] += 14
  #skillinnate[skKnowLoc] += 14
  #skillinnate[skKnowNobl] += 14
  #skillinnate[skKnowRel] += 14
  #skillinnate[skPercep] += 14
  #skillinnate[skSenseMot] += 14
  #skillinnate[skSpellcr] += 14
  #skillinnate[skSwim] += 14
elseif (ageCat = 5) then
  #skillinnate[skDiplo] += 16
  #skillinnate[skFly] += 16
  #skillinnate[skHeal] += 16
  #skillinnate[skKnowLoc] += 16
  #skillinnate[skKnowNobl] += 16
  #skillinnate[skKnowRel] += 16
  #skillinnate[skPercep] += 16
  #skillinnate[skSenseMot] += 16
  #skillinnate[skSpellcr] += 16
  #skillinnate[skSwim] += 16
elseif (ageCat = 6) then
  #skillinnate[skDiplo] += 18
  #skillinnate[skFly] += 18
  #skillinnate[skHeal] += 18
  #skillinnate[skKnowArca] += 18
  #skillinnate[skKnowLoc] += 18
  #skillinnate[skKnowNobl] += 18
  #skillinnate[skKnowRel] += 18
  #skillinnate[skPercep] += 18
  #skillinnate[skSenseMot] += 18
  #skillinnate[skSpellcr] += 18
  #skillinnate[skSwim] += 18
elseif (ageCat = 7) then
  #skillinnate[skDiplo] += 20
  #skillinnate[skFly] += 20
  #skillinnate[skHeal] += 20
  #skillinnate[skKnowArca] += 20
  #skillinnate[skKnowLoc] += 20
  #skillinnate[skKnowNobl] += 20
  #skillinnate[skKnowRel] += 20
  #skillinnate[skPercep] += 20
  #skillinnate[skSenseMot] += 20
  #skillinnate[skSpellcr] += 20
  #skillinnate[skSwim] += 20
elseif (ageCat = 8) then 
  #skillinnate[skDiplo] += 22
  #skillinnate[skFly] += 22
  #skillinnate[skHeal] += 22
  #skillinnate[skKnowArca] += 22
  #skillinnate[skKnowHist] += 22
  #skillinnate[skKnowLoc] += 22
  #skillinnate[skKnowNobl] += 22
  #skillinnate[skKnowRel] += 22
  #skillinnate[skPercep] += 22
  #skillinnate[skSenseMot] += 22
  #skillinnate[skSpellcr] += 22
  #skillinnate[skSwim] += 22
elseif (ageCat = 9) then
  #skillinnate[skDiplo] += 24
  #skillinnate[skFly] += 24
  #skillinnate[skHeal] += 24
  #skillinnate[skKnowArca] += 24
  #skillinnate[skKnowHist] += 24
  #skillinnate[skKnowLoc] += 24
  #skillinnate[skKnowNobl] += 24
  #skillinnate[skKnowRel] += 24
  #skillinnate[skPercep] += 24
  #skillinnate[skSenseMot] += 24
  #skillinnate[skSpellcr] += 24
  #skillinnate[skSwim] += 24
elseif (ageCat = 10) then
  #skillinnate[skDiplo] += 26
  #skillinnate[skFly] += 26
  #skillinnate[skHeal] += 26
  #skillinnate[skKnowArca] += 26
  #skillinnate[skKnowHist] += 26
  #skillinnate[skKnowLoc] += 26
  #skillinnate[skKnowNobl] += 26
  #skillinnate[skKnowPlan] += 26
  #skillinnate[skKnowRel] += 26
  #skillinnate[skPercep] += 26
  #skillinnate[skSenseMot] += 26
  #skillinnate[skSpellcr] += 26
  #skillinnate[skSwim] += 26
elseif (ageCat = 11) then
  #skillinnate[skDiplo] += 28
  #skillinnate[skFly] += 28
  #skillinnate[skHeal] += 28
  #skillinnate[skKnowArca] += 28
  #skillinnate[skKnowHist] += 28
  #skillinnate[skKnowLoc] += 28
  #skillinnate[skKnowNobl] += 28
  #skillinnate[skKnowPlan] += 28
  #skillinnate[skKnowRel] += 28
  #skillinnate[skPercep] += 28
  #skillinnate[skSenseMot] += 28
  #skillinnate[skSpellcr] += 28
  #skillinnate[skSwim] += 28
elseif (ageCat = 12) then
  #skillinnate[skDiplo] += 30
  #skillinnate[skDisguise] += 30
  #skillinnate[skFly] += 30
  #skillinnate[skHeal] += 30
  #skillinnate[skKnowArca] += 30
  #skillinnate[skKnowHist] += 30
  #skillinnate[skKnowLoc] += 30
  #skillinnate[skKnowNobl] += 30
  #skillinnate[skKnowPlan] += 30
  #skillinnate[skKnowRel] += 30
  #skillinnate[skPercep] += 30
  #skillinnate[skSenseMot] += 30
  #skillinnate[skSpellcr] += 30
  #skillinnate[skSwim] += 30
endif
      <before name="Skill Bonus Feats"/>
      </eval>
    </thing>
  <thing id="raxGolDtGm" name="Detect Gems" description="A young or older gold dragon can detect gems three times per day. This functions as {i}locate object{/i}, but can only be used to locate gemstones." compset="RaceSpec">
    <fieldval field="trkMax" value="3"/>
    <usesource source="VarDragons"/>
    <tag group="Helper" tag="ShowSpec"/>
    <tag group="Usage" tag="Day"/>
    <tag group="AbilType" tag="SpellLike"/>
    <tag group="User" tag="Tracker"/>
    <tag group="SpInfo" tag="spLocaObj2"/>
    <tag group="ProductId" tag="HLCommunit"/>
    </thing>
  <thing id="raxGolDvAd" name="Divine Aid" description="Once a week, a great wyrm gold dragon can call upon celestial powers for aid. This functions as a {i}miracle{/i}." compset="RaceSpec">
    <fieldval field="trkMax" value="1"/>
    <usesource source="VarDragons"/>
    <tag group="User" tag="Tracker"/>
    <tag group="Helper" tag="ShowSpec"/>
    <tag group="Usage" tag="Week"/>
    <tag group="AbilType" tag="SpellLike"/>
    <tag group="SpInfo" tag="spMiracle9"/>
    <tag group="ProductId" tag="HLCommunit"/>
    </thing>
  <thing id="raxGolFstF" name="Fast Flight" description="A young or older gold dragon is treated as one size category larger when determining his fly speed." compset="RaceSpec">
    <usesource source="VarDragons"/>
    <tag group="AbilType" tag="Extra"/>
    <tag group="SpecType" tag="Movement"/>
    <tag group="Helper" tag="ShowSpec"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <eval phase="PreLevel" priority="10000"><![CDATA[~ size dependent abilities

var dragSize as number
dragSize = herofield[tSize].value + 1

if (dragSize = -2) then
  hero.child[xFly].field[abValue].value = 100
  perform hero.child[xFly].tagreplace[Maneuver.?,Maneuver.Average]
elseif (dragSize = -1) then
  hero.child[xFly].field[abValue].value = 150
  perform hero.child[xFly].tagreplace[Maneuver.?,Maneuver.Average]
elseif (dragSize = 0) then
  hero.child[xFly].field[abValue].value = 150
  perform hero.child[xFly].tagreplace[Maneuver.?,Maneuver.Average]
elseif (dragSize = 1) then
  hero.child[xFly].field[abValue].value = 200
  perform hero.child[xFly].tagreplace[Maneuver.?,Maneuver.Poor]
elseif (dragSize = 2) then
  hero.child[xFly].field[abValue].value = 200
  perform hero.child[xFly].tagreplace[Maneuver.?,Maneuver.Poor]
elseif (dragSize = 3) then
  hero.child[xFly].field[abValue].value = 250
  perform hero.child[xFly].tagreplace[Maneuver.?,Maneuver.Clumsy]
elseif (dragSize >= 4) then
  hero.child[xFly].field[abValue].value = 250
  perform hero.child[xFly].tagreplace[Maneuver.?,Maneuver.Clumsy]
endif]]></eval>
    </thing>
  <thing id="raxGolFirA" name="Fire Aura" description="An old or older gold dragon is surrounded by an aura of fire. All creatures within 5 feet of the dragon take 1d6 points of fire damage at the beginning of the dragon's turn. An ancient gold dragon's aura extends to 10 feet. A great wyrm's damage increases to 2d6. The dragon can activate or suppress this aura as a free action." compset="RaceSpec" uniqueness="useronce">
    <usesource source="VarDragons"/>
    <tag group="Helper" tag="ShowSpec" name="Show Spec" abbrev="Show Spec"/>
    <tag group="SpecType" tag="Aura" name="Aura" abbrev="Aura"/>
    <tag group="AbilType" tag="Super" name="Supernatural Ability" abbrev=" (Su)"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <eval phase="Final" priority="10000"><![CDATA[~ set livename
~ get age catagory

var ageCat as number
ageCat = hero.child[raxDragonA].tagvalue[Value.?]

~ store # of damage dice in abValue2
~ store area of effect in abValue

if (ageCat >= 9) then
  field[abValue].value += 5
  field[abValue2].value += 1
endif
if (ageCat >= 10) then
  field[abValue].value += 5
endif
if (ageCat >= 12) then
  field[abValue2].value += 1
endif

field[livename].text = "Fire Aura (" & field[abValue2].value & "d6, " & field[abValue].value & " ft.)"

field[shortname].text = "fire aura (" & field[abValue2].value & "d6, " & field[abValue].value & " ft.)"]]></eval>
    </thing>
  <thing id="raxGolLuck" name="Luck" description="Once per day an adult or older gold dragon can touch a gem, usually one embedded in the dragon's hide, and enspell it to bring good luck. As long as the dragon carries the gem, it and every good creature within a given radius of it (10 ft. per age category) receives a +1 luck bonus on all saving throws. If the dragon gives an enspelled gem to another creature, only that bearer gets the bonus. The effect lasts 1d3 hours plus 3 hours per age category of the dragon. This ability is the equivalent of a 2nd-level spell." compset="RaceSpec">
    <fieldval field="trkMax" value="1"/>
    <usesource source="VarDragons"/>
    <tag group="User" tag="Tracker"/>
    <tag group="Helper" tag="ShowSpec"/>
    <tag group="Usage" tag="Day"/>
    <tag group="AbilType" tag="SpellLike"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <eval phase="Final" priority="1000"><![CDATA[var ageCat as number
ageCat = hero.child[raxDrgBrea].field[abValue].value

var rng as number
var dur as number
rng = 10 * ageCat
dur = 3 * ageCat

field[livename].text = "Luck (" & rng & " 10 ft., 1d3+" & dur & " hours)"
field[shortname].text = "luck (" & rng & " 10 ft., 1d3+" & dur & " hours)"]]></eval>
    </thing>
  <thing id="raxGolWeak" name="Weakening Breath" description="Instead of a line of fire, a brass dragon can breathe a cone of sleep gas. Creatures within the cone must succeed on a Will save or fall asleep for 1d6 rounds plus 1 round per age category of the dragon." compset="RaceSpec">
    <usesource source="VarDragons"/>
    <tag group="Helper" tag="ShowSpec" name="Show Spec" abbrev="Show Spec"/>
    <tag group="StandardDC" tag="aCON" name="Constitution" abbrev="Constitution"/>
    <tag group="AbilType" tag="Super" name="Supernatural Ability" abbrev=" (Su)"/>
    <tag group="SpecType" tag="Attack"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <tag group="Custom" tag="DragonBrea"/>
    <eval phase="Final" priority="1000"><![CDATA[var ageCat as number
ageCat= hero.child[raxDragonA].tagvalue[Value.?]

~ get dragon size
var dragSize as number
dragSize = herofield[tSize].value

~ breath range for cone
if (dragSize = -2) then
  field[abValue2].value = 15
elseif (dragSize = -1) then
  field[abValue2].value = 20
elseif (dragSize = 0) then
  field[abValue2].value = 30
elseif (dragSize = 1) then 
  field[abValue2].value = 40
elseif (dragSize = 2) then
  field[abValue2].value = 50
elseif (dragSize = 3) then
  field[abValue2].value = 60
elseif (dragSize >= 4) then
  field[abValue2].value = 70
endif

field[livename].text = "Weakening Breath (" & field[abValue2].value & " ft.-cone, " & ageCat & " Str damage, Fort neg.)"]]></eval>
    </thing>
  <thing id="rxDragSilv" name="Dragon, Silver" description="Often called the paladins of dragons, silvers embody the loftiest ideals, such as justice, honor, valor, and mercy. Silver dragons do not hesitate to strike down irredeemable evil, nor do they fail to stay their magnificently lethal claws when foes beg for clemency. As beacons of virtue and gifted with the courage of righteousness, silver dragons draw others around them in times of war. In the long history of conflict between the metallics and chromatics, silvers form the vanguard and backbone of the metallic armies. Silver dragons fight with honor and grace, never reluctant to enter battle to uphold the tenets of goodliness or law.\n\nFrom the moment of their hatching, silver dragons are keenly aware of what the world expects of them. They must remain ever courageous, even in the face of death. They cannot act dishonorably, for doing so shames not only them but their entire kind. At every opportunity they must obey draconic law and that of the lands in which they find themselves, and strive to ensure that others do so as well. The Powers That Be expect them to punish those who willfully break laws or otherwise act against the common good, but in a way both merciful and just. All this they know instinctively, and it is a testament to the supreme power of their convictions that they not only accept the heavy weight of responsibility placed upon them by Apsu and the universal concepts of Good and Law, but frequently push for even loftier duties.\n\nSleek and beautiful, silver dragons shine like mirrors, reflecting the sun from their silvery white scales and acting as actual beacons of light when all else is dark. This minor glow makes them easy to find on a battlefield and gives their allies a landmark around which they can rally. That it tends to draw the strongest foes also plays into the honorable nobility of silvers, as they prefer to battle the foulest evils personally. Like the metal with which they are frequently compared, however, the shining scales of silver dragons dull easily, losing their luster and turning a pallid gray. This dulling typically reflects the state of the silver's soul, and thus those who begin to lose their sheen are gently advised by their comrades to &#147;polish their scales&#148; (a polite way of suggesting they speak with someone in order to refresh and refocus their minds and spirits)." compset="Race">
    <fieldval field="shortname" value="Silver Dragon"/>
    <fieldval field="rHitDice" value="7"/>
    <fieldval field="rHPStart" value="45"/>
    <fieldval field="rSTR" value="3"/>
    <fieldval field="rDEX" value="4"/>
    <fieldval field="rCON" value="3"/>
    <fieldval field="rWIS" value="5"/>
    <fieldval field="rSpeed" value="40"/>
    <fieldval field="rAC" value="6"/>
    <fieldval field="rCR" value="6"/>
    <fieldval field="rEnviron" value="temperate mountains"/>
    <fieldval field="rOrgan" value="solitary"/>
    <fieldval field="rTreasure" value="triple"/>
    <fieldval field="rDescript" value="The scales of this tall, elegant dragon shine like polished silver, and its tail has a feathered appearance."/>
    <fieldval field="rINT" value="4"/>
    <fieldval field="rCHA" value="4"/>
    <usesource source="VarDragons"/>
    <tag group="RaceSize" tag="Small11"/>
    <tag group="HasType" tag="tpDragon"/>
    <tag group="Helper" tag="Quadruped"/>
    <tag group="Hero" tag="NoDefComm"/>
    <tag group="Race" tag="rTrueDrago"/>
    <tag group="Alignment" tag="Good"/>
    <tag group="DragType" tag="Metallic" name="Dragon, Metallic"/>
    <tag group="RaceType" tag="NPC"/>
    <tag group="Helper" tag="NotHum"/>
    <tag group="Alignment" tag="Lawful"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <tag group="Language" tag="Any"/>
    <bootstrap thing="wTailSweep"></bootstrap>
    <bootstrap thing="xDamRdMag">
      <containerreq phase="First" priority="200">DragonAge.YngAdult</containerreq>
      </bootstrap>
    <bootstrap thing="xSplRs">
      <containerreq phase="First" priority="200">DragonAge.YngAdult</containerreq>
      </bootstrap>
    <bootstrap thing="tmxDragAge"></bootstrap>
    <bootstrap thing="raxFrightP">
      <containerreq phase="First" priority="200">DragonAge.Adult</containerreq>
      </bootstrap>
    <bootstrap thing="wTailSlap">
      <autotag group="wMain" tag="1d8_6"/>
      <autotag group="Helper" tag="NatTwoHand"/>
      </bootstrap>
    <bootstrap thing="raxDrgBrea">
      <autotag group="BloodEner" tag="Cold"/>
      <autotag group="BreathShp" tag="Cone"/>
      <assignval field="abValue" value="2"/>
      <assignval field="abValue3" value="8"/>
      </bootstrap>
    <bootstrap thing="wBite">
      <autotag group="wMain" tag="1d4_4"/>
      <autotag group="Helper" tag="NatPrimary"/>
      <autotag group="Helper" tag="NatTwoHand"/>
      </bootstrap>
    <bootstrap thing="wClaw">
      <autotag group="Value" tag="2"/>
      <autotag group="wMain" tag="1d3_3"/>
      <autotag group="Helper" tag="NatPrimary"/>
      </bootstrap>
    <bootstrap thing="raDrSenses"></bootstrap>
    <bootstrap thing="lDraconic">
      <containerreq phase="First" priority="200">DragonAge.Wyrmling</containerreq>
      </bootstrap>
    <bootstrap thing="stCold"></bootstrap>
    <bootstrap thing="xImmAcid">
      <containerreq phase="First" priority="200">DragonAge.Wyrmling</containerreq>
      </bootstrap>
    <bootstrap thing="raChangeSh">
      <autotag group="Usage" tag="Day"/>
      <assignval field="livename" value="Change Shape (animal or humanoid; {i}polymorph{/i})"/>
      <assignval field="trkMax" value="3"/>
      </bootstrap>
    <bootstrap thing="raxSilPara">
      <containerreq phase="First" priority="200">DragonAge.Wyrmling</containerreq>
      </bootstrap>
    <bootstrap thing="raSilCloud">
      <containerreq phase="First" priority="200">DragonAge.VeryYoung</containerreq>
      </bootstrap>
    <bootstrap thing="spContWea7">
      <containerreq phase="First" priority="200">DragonAge.Ancient</containerreq>
      <autotag group="Helper" tag="SpellLike"/>
      <autotag group="Usage" tag="AtWill"/>
      </bootstrap>
    <bootstrap thing="spContWin5">
      <containerreq phase="First" priority="200">DragonAge.Old</containerreq>
      <autotag group="Usage" tag="AtWill"/>
      <autotag group="Helper" tag="SpellLike"/>
      </bootstrap>
    <bootstrap thing="spDeteEvi1">
      <containerreq phase="First" priority="200">DragonAge.VeryYoung</containerreq>
      <autotag group="Usage" tag="AtWill"/>
      <autotag group="Helper" tag="SpellLike"/>
      </bootstrap>
    <bootstrap thing="spFeatFal1">
      <containerreq phase="First" priority="200">DragonAge.Juvenile</containerreq>
      <autotag group="Usage" tag="AtWill"/>
      <autotag group="Helper" tag="SpellLike"/>
      </bootstrap>
    <bootstrap thing="spFogClo2">
      <containerreq phase="First" priority="200">DragonAge.Adult</containerreq>
      <autotag group="Usage" tag="AtWill"/>
      <autotag group="Helper" tag="SpellLike"/>
      </bootstrap>
    <bootstrap thing="spReveGra7">
      <containerreq phase="First" priority="200">DragonAge.GreatWyrm</containerreq>
      <autotag group="Usage" tag="AtWill"/>
      <autotag group="Helper" tag="SpellLike"/>
      </bootstrap>
    <bootstrap thing="skKnowLoc"></bootstrap>
    <bootstrap thing="raxSilGrac">
      <containerreq phase="First" priority="200">DragonAge.Young</containerreq>
      </bootstrap>
    <bootstrap thing="raSilFogV">
      <containerreq phase="First" priority="200">DragonAge.Juvenile</containerreq>
      </bootstrap>
    <bootstrap thing="raxSilColA">
      <containerreq phase="First" priority="200">DragonAge.Old</containerreq>
      </bootstrap>
    <bootstrap thing="raSilReflS">
      <containerreq phase="First" priority="200">DragonAge.Ancient</containerreq>
      </bootstrap>
    <bootstrap thing="raSilTrueC">
      <containerreq phase="First" priority="200">DragonAge.GreatWyrm</containerreq>
      </bootstrap>
    <bootstrap thing="skKnowArca"></bootstrap>
    <bootstrap thing="wWing">
      <autotag group="Value" tag="2"/>
      <autotag group="wMain" tag="1d4_4"/>
      </bootstrap>
    <bootstrap thing="skKnowNobl"></bootstrap>
    <bootstrap thing="skKnowHist"></bootstrap>
    <bootstrap thing="skKnowPlan"></bootstrap>
    <bootstrap thing="xFly">
      <autotag group="Maneuver" tag="Average"/>
      <autotag group="Value" tag="150"/>
      </bootstrap>
    <bootstrap thing="wCrush"></bootstrap>
    <eval phase="PreLevel" priority="4000" index="3">~ innate skill ranks 
var ageCat as number
ageCat = hero.childfound[raxDragonA].tagvalue[Value.?]

if (ageCat = 1) then
  #skillinnate[skAcrobat] += 7
  #skillinnate[skDiplo] += 7
  #skillinnate[skFly] += 7
  #skillinnate[skHeal] += 7
  #skillinnate[skIntim] += 7
  #skillinnate[skPercep] += 7
  #skillinnate[skSenseMot] += 7
  #skillinnate[skSpellcr] += 7
elseif (ageCat = 2) then
  #skillinnate[skAcrobat] += 9
  #skillinnate[skDiplo] += 9
  #skillinnate[skFly] += 9
  #skillinnate[skHeal] += 9
  #skillinnate[skIntim] += 9
  #skillinnate[skKnowLoc] += 9
  #skillinnate[skPercep] += 9
  #skillinnate[skSenseMot] += 9
  #skillinnate[skSpellcr] += 9
elseif (ageCat = 3) then
  #skillinnate[skAcrobat] += 11
  #skillinnate[skDiplo] += 11
  #skillinnate[skFly] += 11
  #skillinnate[skHeal] += 11
  #skillinnate[skIntim] += 11
  #skillinnate[skKnowLoc] += 11
  #skillinnate[skPercep] += 11
  #skillinnate[skSenseMot] += 11
  #skillinnate[skSpellcr] += 11
elseif (ageCat = 4) then
  #skillinnate[skAcrobat] += 13
  #skillinnate[skDiplo] += 13
  #skillinnate[skFly] += 13
  #skillinnate[skHeal] += 13
  #skillinnate[skIntim] += 13
  #skillinnate[skKnowArca] += 13
  #skillinnate[skKnowLoc] += 13
  #skillinnate[skPercep] += 13
  #skillinnate[skSenseMot] += 13
  #skillinnate[skSpellcr] += 13
elseif (ageCat = 5) then
  #skillinnate[skAcrobat] += 15
  #skillinnate[skDiplo] += 15
  #skillinnate[skFly] += 15
  #skillinnate[skHeal] += 15
  #skillinnate[skIntim] += 15
  #skillinnate[skKnowArca] += 15
  #skillinnate[skKnowLoc] += 15
  #skillinnate[skPercep] += 15
  #skillinnate[skSenseMot] += 15
  #skillinnate[skSpellcr] += 15
elseif (ageCat = 6) then
  #skillinnate[skAcrobat] += 17
  #skillinnate[skDiplo] += 17
  #skillinnate[skFly] += 17
  #skillinnate[skHeal] += 17
  #skillinnate[skIntim] += 17
  #skillinnate[skKnowArca] += 17
  #skillinnate[skKnowLoc] += 17
  #skillinnate[skKnowNobl] += 17
  #skillinnate[skPercep] += 17
  #skillinnate[skSenseMot] += 17
  #skillinnate[skSpellcr] += 17
elseif (ageCat = 7) then
  #skillinnate[skAcrobat] += 19
  #skillinnate[skDiplo] += 19
  #skillinnate[skFly] += 19
  #skillinnate[skHeal] += 19
  #skillinnate[skIntim] += 19
  #skillinnate[skKnowArca] += 19
  #skillinnate[skKnowLoc] += 19
  #skillinnate[skKnowNobl] += 19
  #skillinnate[skPercep] += 19
  #skillinnate[skSenseMot] += 19
  #skillinnate[skSpellcr] += 19
elseif (ageCat = 8) then 
  #skillinnate[skAcrobat] += 21
  #skillinnate[skDiplo] += 21
  #skillinnate[skFly] += 21
  #skillinnate[skHeal] += 21
  #skillinnate[skIntim] += 21
  #skillinnate[skKnowArca] += 21
  #skillinnate[skKnowHist] += 21
  #skillinnate[skKnowLoc] += 21
  #skillinnate[skKnowNobl] += 21
  #skillinnate[skPercep] += 21
  #skillinnate[skSenseMot] += 21
  #skillinnate[skSpellcr] += 21
elseif (ageCat = 9) then
  #skillinnate[skAcrobat] += 23
  #skillinnate[skDiplo] += 23
  #skillinnate[skFly] += 23
  #skillinnate[skHeal] += 23
  #skillinnate[skIntim] += 23
  #skillinnate[skKnowArca] += 23
  #skillinnate[skKnowHist] += 23
  #skillinnate[skKnowLoc] += 23
  #skillinnate[skKnowNobl] += 23
  #skillinnate[skPercep] += 23
  #skillinnate[skSenseMot] += 23
  #skillinnate[skSpellcr] += 23
elseif (ageCat = 10) then
  #skillinnate[skAcrobat] += 25
  #skillinnate[skDiplo] += 25
  #skillinnate[skFly] += 25
  #skillinnate[skHeal] += 25
  #skillinnate[skIntim] += 25
  #skillinnate[skKnowArca] += 25
  #skillinnate[skKnowHist] += 25
  #skillinnate[skKnowLoc] += 25
  #skillinnate[skKnowNobl] += 25
  #skillinnate[skKnowPlan] += 25
  #skillinnate[skPercep] += 25
  #skillinnate[skSenseMot] += 25
  #skillinnate[skSpellcr] += 25
elseif (ageCat = 11) then
  #skillinnate[skAcrobat] += 27
  #skillinnate[skDiplo] += 27
  #skillinnate[skFly] += 27
  #skillinnate[skHeal] += 27
  #skillinnate[skIntim] += 27
  #skillinnate[skKnowArca] += 27
  #skillinnate[skKnowHist] += 27
  #skillinnate[skKnowLoc] += 27
  #skillinnate[skKnowNobl] += 27
  #skillinnate[skKnowPlan] += 27
  #skillinnate[skPercep] += 27
  #skillinnate[skSenseMot] += 27
  #skillinnate[skSpellcr] += 27
elseif (ageCat = 12) then
  #skillinnate[skAcrobat] += 29
  #skillinnate[skDiplo] += 29
  #skillinnate[skFly] += 29
  #skillinnate[skHeal] += 29
  #skillinnate[skIntim] += 29
  #skillinnate[skKnowArca] += 29
  #skillinnate[skKnowHist] += 29
  #skillinnate[skKnowLoc] += 29
  #skillinnate[skKnowNobl] += 29
  #skillinnate[skKnowPlan] += 29
  #skillinnate[skPercep] += 29
  #skillinnate[skSenseMot] += 29
  #skillinnate[skSpellcr] += 29
  #skillinnate[skUseMagic] += 29
endif
      <before name="Skill Bonus Feats"/>
      </eval>
    <eval phase="Final" priority="1000"><![CDATA[~ set Frightful Presence, DR, SR, and CL
var ageCat as number
ageCat = hero.childfound[raxDragonA].tagvalue[Value.?]

~ frightful presesnce
if (ageCat >= 6) then
  hero.child[raxFrightP].field[abValue].value = 30 * ageCat
endif

~ Dragons have SR = to 11 + thier CR
if (ageCat >= 5) then
  var damage as number
  damage = herofield[tCR].value + 11
  #applysr[damage]
endif

~ Dragons have spell like abilities of CL = to TOTAL (not racial) hit dice
if (ageCat >= 2) then
  var CL as number
  CL = herofield[tHitDice].value
  field[rSpCastLev].value = CL
endif

~ DR 
if (ageCat >= 5) then
  var drVal as number
  drVal = (ageCat - 5)/2
  drVal = 5 * (1 + round(drVal,0,-1))
  #applydr[xDamRdMag,drVal]
endif]]></eval>
    <eval phase="First" priority="550" index="2"><![CDATA[~ set caster level of racial spells

~age catagory
var ageCat as number
ageCat = hero.childfound[raxDragonA].tagvalue[Value.?]

perform hero.findchild[BaseRace].setfocus

~ set caster level
if (ageCat >= 3) then
 perform focus.assign[SplLookup.cHelpSor]
 perform focus.assign[sClass.cHelpClr]
 focus.field[cMagicLev].value = 2*ageCat - 5
endif

perform state.clearfocus]]></eval>
    </thing>
  <thing id="raxSilPara" name="Paralyzing Breath" description="Instead of a cone of cold, a silver dragon can breathe a cone of paralyzing gas. Creatures within the cone must succeed on a Fortitude save or be paralyzed for 1d6 rounds plus 1 round per age category of the dragon." compset="RaceSpec">
    <usesource source="VarDragons"/>
    <tag group="Helper" tag="ShowSpec" name="Show Spec" abbrev="Show Spec"/>
    <tag group="StandardDC" tag="aCON" name="Constitution" abbrev="Constitution"/>
    <tag group="AbilType" tag="Super" name="Supernatural Ability" abbrev=" (Su)"/>
    <tag group="SpecType" tag="Attack"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <tag group="Custom" tag="DragonBrea"/>
    <eval phase="Final" priority="1000"><![CDATA[var ageCat as number
ageCat= hero.child[raxDragonA].tagvalue[Value.?]

~ get dragon size
var dragSize as number
dragSize = herofield[tSize].value

~ breath range for cone
if (dragSize = -2) then
  field[abValue2].value = 15
elseif (dragSize = -1) then
  field[abValue2].value = 20
elseif (dragSize = 0) then
  field[abValue2].value = 30
elseif (dragSize = 1) then 
  field[abValue2].value = 40
elseif (dragSize = 2) then
  field[abValue2].value = 50
elseif (dragSize = 3) then
  field[abValue2].value = 60
elseif (dragSize >= 4) then
  field[abValue2].value = 70
endif

field[livename].text = "Paralyzing Breath (" & field[abValue2].value & " ft.-cone, 1d6+" & ageCat & " rnds., Fort neg.)"]]></eval>
    </thing>
  <thing id="raxSilColA" name="Cold Aura" description="An old or older silver dragon is surrounded by an aura of cold. All creatures within 5 feet of the dragon take 1d6 points of cold damage at the beginning of the dragon's turn. An ancient dragon's aura extends to 10 feet. A great wyrm's aura damage increases to 2d6. A silver dragon can suppress or activate this aura at will as a free action." compset="RaceSpec" uniqueness="useronce">
    <usesource source="VarDragons"/>
    <tag group="Helper" tag="ShowSpec" name="Show Spec" abbrev="Show Spec"/>
    <tag group="SpecType" tag="Aura" name="Aura" abbrev="Aura"/>
    <tag group="AbilType" tag="Super" name="Supernatural Ability" abbrev=" (Su)"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <eval phase="Final" priority="10000"><![CDATA[~ set livename
~ get age catagory

var ageCat as number
ageCat = hero.child[raxDragonA].tagvalue[Value.?]

~ store # of damage dice in abValue2
~ store area of effect in abValue

if (ageCat >= 8) then
  field[abValue].value += 5
  field[abValue2].value += 1
endif
if (ageCat >= 10) then
  field[abValue].value += 5
endif
if (ageCat >= 12) then
  field[abValue2].value += 1
endif

field[livename].text = "Cold Aura (" & field[abValue2].value & "d6, " & field[abValue].value & " ft.)"

field[shortname].text = "cold aura (" & field[abValue2].value & "d6, " & field[abValue].value & " ft.)"]]></eval>
    </thing>
  <thing id="raxSilGrac" name="Graceful Flight" description="A young or older silver dragon&apos;s aerial maneuverability is one step better than normal." compset="RaceSpec" uniqueness="useronce">
    <usesource source="VarDragons"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <tag group="AbilType" tag="Extra" name="Extraordinary Ability" abbrev=" (Ex)"/>
    <eval phase="PreLevel" priority="10000"><![CDATA[~ size dependent abilities

var dragSize as number
dragSize = herofield[tSize].value

if (dragSize = -2) then
  perform hero.child[xFly].tagreplace[Maneuver.?,Maneuver.Good]
elseif (dragSize = -1) then
  perform hero.child[xFly].tagreplace[Maneuver.?,Maneuver.Good]
elseif (dragSize = 0) then
  perform hero.child[xFly].tagreplace[Maneuver.?,Maneuver.Good]
elseif (dragSize = 1) then
  perform hero.child[xFly].tagreplace[Maneuver.?,Maneuver.Average]
elseif (dragSize = 2) then
  perform hero.child[xFly].tagreplace[Maneuver.?,Maneuver.Average]
elseif (dragSize = 3) then
  perform hero.child[xFly].tagreplace[Maneuver.?,Maneuver.Poor]
elseif (dragSize >= 4) then
  perform hero.child[xFly].tagreplace[Maneuver.?,Maneuver.Poor]
endif]]></eval>
    </thing>
  <thing id="rxDragBrin" name="Dragon, Brine" description="Although not inherently evil, brine dragons have little patience for kindness and philanthropy. As they age, they grow more and more opinionated and obsessed with power-by adult age, a brine dragon counts itself a failure if it doesn't rule over a collection of &#147;lesser beings&#148; such as humans, merfolk, locathah, or even sahuagin." compset="Race">
    <fieldval field="shortname" value="Brine Dragon"/>
    <fieldval field="rHitDice" value="4"/>
    <fieldval field="rHPStart" value="26"/>
    <fieldval field="rSTR" value="6"/>
    <fieldval field="rDEX" value="5"/>
    <fieldval field="rCON" value="1"/>
    <fieldval field="rSpeed" value="60"/>
    <fieldval field="rAC" value="3"/>
    <fieldval field="rCR" value="3"/>
    <fieldval field="rDescript" value="A blue-green neck frill sweeps back from the head of this dragon, leading to a body of shiny scales and fin-like crests."/>
    <fieldval field="rEnviron" value="any aquatic (Plane of Water)"/>
    <fieldval field="rOrgan" value="solitary"/>
    <fieldval field="rTreasure" value="triple"/>
    <fieldval field="rINT" value="3"/>
    <fieldval field="rCHA" value="1"/>
    <usesource source="VarDragons"/>
    <tag group="Helper" tag="NotHum"/>
    <tag group="RaceType" tag="NPC"/>
    <tag group="RaceSize" tag="Tiny12"/>
    <tag group="HasType" tag="tpDragon"/>
    <tag group="Helper" tag="Quadruped"/>
    <tag group="Hero" tag="NoDefComm"/>
    <tag group="DragType" tag="Primal" name="Dragon, Primal"/>
    <tag group="Race" tag="rTrueDrago"/>
    <tag group="Alignment" tag="Lawful"/>
    <tag group="Alignment" tag="NeutralGE"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <tag group="Language" tag="Any"/>
    <bootstrap thing="raDrSenses"></bootstrap>
    <bootstrap thing="wWing">
      <autotag group="Value" tag="2"/>
      <autotag group="wMain" tag="1d4_4"/>
      </bootstrap>
    <bootstrap thing="xFly">
      <autotag group="Maneuver" tag="Average"/>
      <autotag group="Value" tag="100"/>
      </bootstrap>
    <bootstrap thing="wCrush"></bootstrap>
    <bootstrap thing="wTailSweep"></bootstrap>
    <bootstrap thing="xDamRdMag">
      <containerreq phase="First" priority="200">DragonAge.YngAdult</containerreq>
      </bootstrap>
    <bootstrap thing="xSplRs">
      <containerreq phase="First" priority="200">DragonAge.YngAdult</containerreq>
      </bootstrap>
    <bootstrap thing="tmxDragAge"></bootstrap>
    <bootstrap thing="raxFrightP">
      <containerreq phase="First" priority="200">DragonAge.Adult</containerreq>
      </bootstrap>
    <bootstrap thing="xSwim">
      <autotag group="Value" tag="60"/>
      </bootstrap>
    <bootstrap thing="lDraconic">
      <containerreq phase="First" priority="200">DragonAge.Wyrmling</containerreq>
      </bootstrap>
    <bootstrap thing="stExtrapla"></bootstrap>
    <bootstrap thing="stWater"></bootstrap>
    <bootstrap thing="wTailSlap">
      <autotag group="wMain" tag="1d8_6"/>
      <autotag group="Helper" tag="NatTwoHand"/>
      </bootstrap>
    <bootstrap thing="raxDrgBrea">
      <autotag group="BloodEner" tag="Acid"/>
      <autotag group="BreathShp" tag="Line"/>
      <assignval field="abValue" value="2"/>
      <assignval field="abValue3" value="6"/>
      </bootstrap>
    <bootstrap thing="xImmAcid">
      <containerreq phase="First" priority="200">DragonAge.Wyrmling</containerreq>
      </bootstrap>
    <bootstrap thing="raWaBreath">
      <containerreq phase="First" priority="200">DragonAge.Wyrmling</containerreq>
      </bootstrap>
    <bootstrap thing="spContWat6">
      <containerreq phase="First" priority="200">DragonAge.Adult</containerreq>
      <autotag group="Usage" tag="AtWill"/>
      <autotag group="Helper" tag="SpellLike"/>
      </bootstrap>
    <bootstrap thing="spHorrWil8">
      <containerreq phase="First" priority="200">DragonAge.Ancient</containerreq>
      <autotag group="Usage" tag="Day"/>
      <autotag group="Helper" tag="SpellLike"/>
      <assignval field="trkMax" value="3"/>
      </bootstrap>
    <bootstrap thing="spObscMis1">
      <containerreq phase="First" priority="200">DragonAge.Young</containerreq>
      <autotag group="Usage" tag="AtWill"/>
      <autotag group="Helper" tag="SpellLike"/>
      </bootstrap>
    <bootstrap thing="spSpeawit1">
      <containerreq phase="First" priority="200">DragonAge.VeryYoung</containerreq>
      <autotag group="Usage" tag="AtWill"/>
      <autotag group="Helper" tag="SpellLike"/>
      <assignval field="livename" value="Speak with Animals (fish only)"/>
      </bootstrap>
    <bootstrap thing="spTsunami9">
      <containerreq phase="First" priority="200">DragonAge.GreatWyrm</containerreq>
      <autotag group="Usage" tag="Day"/>
      <autotag group="Helper" tag="SpellLike"/>
      <assignval field="trkMax" value="3"/>
      </bootstrap>
    <bootstrap thing="spWateBre3">
      <containerreq phase="First" priority="200">DragonAge.Juvenile</containerreq>
      <autotag group="Usage" tag="AtWill"/>
      <autotag group="Helper" tag="SpellLike"/>
      </bootstrap>
    <bootstrap thing="raBriCapsi">
      <containerreq phase="First" priority="200">DragonAge.Old</containerreq>
      </bootstrap>
    <bootstrap thing="raBriPainS">
      <containerreq phase="First" priority="200">DragonAge.GreatWyrm</containerreq>
      </bootstrap>
    <bootstrap thing="raxBriDesB">
      <containerreq phase="First" priority="200">DragonAge.Ancient</containerreq>
      </bootstrap>
    <bootstrap thing="fImpInit">
      <containerreq phase="First" priority="200">DragonAge.Wyrmling</containerreq>
      </bootstrap>
    <bootstrap thing="fSkillFoc">
      <containerreq phase="First" priority="200">DragonAge.Wyrmling</containerreq>
      <autotag group="Target" tag="skSwim"/>
      </bootstrap>
    <bootstrap thing="fHover">
      <containerreq phase="First" priority="200">DragonAge.VeryYoung</containerreq>
      </bootstrap>
    <bootstrap thing="fPowerAtt">
      <containerreq phase="First" priority="200">DragonAge.Young</containerreq>
      </bootstrap>
    <bootstrap thing="skKnowNat"></bootstrap>
    <bootstrap thing="fLightRef">
      <containerreq phase="First" priority="200">DragonAge.Juvenile</containerreq>
      </bootstrap>
    <bootstrap thing="fVitStr">
      <containerreq phase="First" priority="200">DragonAge.YngAdult</containerreq>
      </bootstrap>
    <bootstrap thing="skKnowArca"></bootstrap>
    <bootstrap thing="fImpVitStr">
      <containerreq phase="First" priority="200">DragonAge.Adult</containerreq>
      </bootstrap>
    <bootstrap thing="fImpBull">
      <containerreq phase="First" priority="200">DragonAge.MatAdult</containerreq>
      </bootstrap>
    <bootstrap thing="skKnowGeog"></bootstrap>
    <bootstrap thing="fWingover">
      <containerreq phase="First" priority="200">DragonAge.Old</containerreq>
      </bootstrap>
    <bootstrap thing="fGrtVitStr">
      <containerreq phase="First" priority="200">DragonAge.VeryOld</containerreq>
      </bootstrap>
    <bootstrap thing="fAwesomeBl">
      <containerreq phase="First" priority="200">DragonAge.Ancient</containerreq>
      </bootstrap>
    <bootstrap thing="fSnatch">
      <containerreq phase="First" priority="200">DragonAge.Wyrm</containerreq>
      </bootstrap>
    <bootstrap thing="skKnowPlan"></bootstrap>
    <bootstrap thing="fImpSunder">
      <containerreq phase="First" priority="200">DragonAge.GreatWyrm</containerreq>
      </bootstrap>
    <bootstrap thing="wBite">
      <autotag group="wMain" tag="1d4_4"/>
      <autotag group="Helper" tag="NatPrimary"/>
      <autotag group="Helper" tag="NatTwoHand"/>
      </bootstrap>
    <bootstrap thing="wClaw">
      <autotag group="Value" tag="2"/>
      <autotag group="wMain" tag="1d3_3"/>
      <autotag group="Helper" tag="NatPrimary"/>
      </bootstrap>
    <eval phase="First" priority="550" index="2"><![CDATA[~ set caster level of racial spells

~age catagory
var ageCat as number
ageCat = hero.childfound[raxDragonA].tagvalue[Value.?]

perform hero.findchild[BaseRace].setfocus

~ set caster level
if (ageCat >= 3) then
 perform focus.assign[SplLookup.cHelpSor]
 focus.field[cMagicLev].value = 2*ageCat - 5
endif

perform state.clearfocus]]></eval>
    <eval phase="PreLevel" priority="4000" index="3">~ innate skill ranks 
var ageCat as number
ageCat = hero.childfound[raxDragonA].tagvalue[Value.?]

if (ageCat = 1) then
  #skillinnate[skDiplo] += 4
  #skillinnate[skFly] += 4
  #skillinnate[skHeal] += 4
  #skillinnate[skPercep] += 4
  #skillinnate[skSenseMot] += 4
  #skillinnate[skSurvival] += 4
  #skillinnate[skSwim] += 4
elseif (ageCat = 2) then
  #skillinnate[skDiplo] += 6
  #skillinnate[skFly] += 6
  #skillinnate[skHeal] += 6
  #skillinnate[skKnowNat] += 6
  #skillinnate[skPercep] += 6
  #skillinnate[skSenseMot] += 6
  #skillinnate[skSurvival] += 6
  #skillinnate[skSwim] += 6
elseif (ageCat = 3) then
  #skillinnate[skDiplo] += 8
  #skillinnate[skFly] += 8
  #skillinnate[skHeal] += 8
  #skillinnate[skKnowNat] += 8
  #skillinnate[skPercep] += 8
  #skillinnate[skSenseMot] += 8
  #skillinnate[skSurvival] += 8
  #skillinnate[skSwim] += 8
elseif (ageCat = 4) then
  #skillinnate[skBluff] += 10
  #skillinnate[skDiplo] += 10
  #skillinnate[skFly] += 10
  #skillinnate[skHeal] += 10
  #skillinnate[skKnowNat] += 10
  #skillinnate[skPercep] += 10
  #skillinnate[skSenseMot] += 10
  #skillinnate[skSurvival] += 10
  #skillinnate[skSwim] += 10
elseif (ageCat = 5) then
  #skillinnate[skBluff] += 12
  #skillinnate[skDiplo] += 12
  #skillinnate[skFly] += 12
  #skillinnate[skHeal] += 12
  #skillinnate[skKnowNat] += 12
  #skillinnate[skPercep] += 12
  #skillinnate[skSenseMot] += 12
  #skillinnate[skSurvival] += 12
  #skillinnate[skSwim] += 12
elseif (ageCat = 6) then
  #skillinnate[skBluff] += 14
  #skillinnate[skDiplo] += 14
  #skillinnate[skFly] += 14
  #skillinnate[skHeal] += 14
  #skillinnate[skKnowArca] += 14
  #skillinnate[skKnowNat] += 14
  #skillinnate[skPercep] += 14
  #skillinnate[skSenseMot] += 14
  #skillinnate[skSurvival] += 14
  #skillinnate[skSwim] += 14
elseif (ageCat = 7) then
  #skillinnate[skBluff] += 16
  #skillinnate[skDiplo] += 16
  #skillinnate[skFly] += 16
  #skillinnate[skHeal] += 16
  #skillinnate[skKnowArca] += 16
  #skillinnate[skKnowNat] += 16
  #skillinnate[skPercep] += 16
  #skillinnate[skSenseMot] += 16
  #skillinnate[skSurvival] += 16
  #skillinnate[skSwim] += 16
elseif (ageCat = 8) then 
  #skillinnate[skBluff] += 18
  #skillinnate[skDiplo] += 18
  #skillinnate[skFly] += 18
  #skillinnate[skHeal] += 18
  #skillinnate[skKnowArca] += 18
  #skillinnate[skKnowGeog] += 18
  #skillinnate[skKnowNat] += 18
  #skillinnate[skPercep] += 18
  #skillinnate[skSenseMot] += 18
  #skillinnate[skSurvival] += 18
  #skillinnate[skSwim] += 18
elseif (ageCat = 9) then
  #skillinnate[skBluff] += 20
  #skillinnate[skDiplo] += 20
  #skillinnate[skFly] += 20
  #skillinnate[skHeal] += 20
  #skillinnate[skKnowArca] += 20
  #skillinnate[skKnowGeog] += 20
  #skillinnate[skKnowNat] += 20
  #skillinnate[skPercep] += 20
  #skillinnate[skSenseMot] += 20
  #skillinnate[skSurvival] += 20
  #skillinnate[skSwim] += 20
elseif (ageCat = 10) then
  #skillinnate[skBluff] += 22
  #skillinnate[skDiplo] += 22
  #skillinnate[skFly] += 22
  #skillinnate[skHeal] += 22
  #skillinnate[skKnowArca] += 22
  #skillinnate[skKnowGeog] += 22
  #skillinnate[skKnowNat] += 22
  #skillinnate[skPercep] += 22
  #skillinnate[skSenseMot] += 22
  #skillinnate[skSurvival] += 22
  #skillinnate[skSwim] += 22
  #skillinnate[skUseMagic] += 22
elseif (ageCat = 11) then
  #skillinnate[skBluff] += 24
  #skillinnate[skDiplo] += 24
  #skillinnate[skFly] += 24
  #skillinnate[skHeal] += 24
  #skillinnate[skKnowArca] += 24
  #skillinnate[skKnowGeog] += 24
  #skillinnate[skKnowNat] += 24
  #skillinnate[skPercep] += 24
  #skillinnate[skSenseMot] += 24
  #skillinnate[skSurvival] += 24
  #skillinnate[skSwim] += 24
  #skillinnate[skUseMagic] += 24
elseif (ageCat = 12) then
  #skillinnate[skBluff] += 26
  #skillinnate[skDiplo] += 26
  #skillinnate[skFly] += 26
  #skillinnate[skHeal] += 26
  #skillinnate[skKnowArca] += 26
  #skillinnate[skKnowGeog] += 26
  #skillinnate[skKnowNat] += 26
  #skillinnate[skKnowPlan] += 26
  #skillinnate[skPercep] += 26
  #skillinnate[skSenseMot] += 26
  #skillinnate[skSurvival] += 26
  #skillinnate[skSwim] += 26
  #skillinnate[skUseMagic] += 26
endif
      <before name="Skill Bonus Feats"/>
      </eval>
    <eval phase="Final" priority="1000"><![CDATA[~ set Frightful Presence, DR, SR, and CL
var ageCat as number
ageCat = hero.childfound[raxDragonA].tagvalue[Value.?]

~ frightful presesnce
if (ageCat >= 6) then
  hero.child[raxFrightP].field[abValue].value = 30 * ageCat
endif

~ Dragons have SR = to 11 + thier CR
if (ageCat >= 5) then
  var damage as number
  damage = herofield[tCR].value + 11
  #applysr[damage]
endif

~ Dragons have spell like abilities of CL = to TOTAL (not racial) hit dice
if (ageCat >= 2) then
  var CL as number
  CL = herofield[tHitDice].value
  field[rSpCastLev].value = CL
endif

~ DR 
if (ageCat >= 5) then
  var drVal as number
  drVal = (ageCat - 5)/2
  drVal = 5 * (1 + round(drVal,0,-1))
  #applydr[xDamRdMag,drVal]
endif]]></eval>
    </thing>
  <thing id="raxBriDesB" name="Desiccating Bite" description="An ancient brine dragon's bite causes weakness, dealing 1d2 points of Strength drain in addition to its normal damage. A great wyrm's bite deals 1d4 points of Strength drain. A Fortitude save (DC equals the dragon's breath weapon save DC) negates the Strength drain." compset="RaceSpec">
    <usesource source="VarDragons"/>
    <tag group="AbilType" tag="Super"/>
    <tag group="Helper" tag="ShowSpec"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <tag group="Custom" tag="DragonBrea"/>
    <eval phase="Final" priority="10000"><![CDATA[var ageCat as number
ageCat = hero.child[raxDragonA].tagvalue[Value.?]

if (ageCat = 12)  then
  hero.child[wBite].field[wDamExtra].text = " plus 1d4 Str drain"
else
  hero.child[wBite].field[wDamExtra].text = " plus 1d2 Str drain"
endif]]></eval>
    </thing>
  <thing id="rxDragClou" name="Dragon, Cloud" description="Cloud dragons stay out of the complicated political schemes and obsessions of other dragons (especially the chromatic dragons), preferring to live their lives freely and as the whim to travel strikes them. Exploration and viewing new lands from far above are the cloud dragon's greatest joy, rivaled only by speaking with new creatures and gaining exotic treasures from them. They keep lairs on high mountain peaks, but are often away on journeys of discovery, returning home only when they've claimed a new treasure that needs to be placed in safekeeping back home." compset="Race">
    <fieldval field="shortname" value="Cloud Dragon"/>
    <fieldval field="rHitDice" value="6"/>
    <fieldval field="rHPStart" value="39"/>
    <fieldval field="rDEX" value="3"/>
    <fieldval field="rCON" value="3"/>
    <fieldval field="rSpeed" value="60"/>
    <fieldval field="rAC" value="5"/>
    <fieldval field="rCR" value="5"/>
    <fieldval field="rDescript" value="The blue-white scales of this four-horned dragon exude wisps of fog. The dragon's snout is short but filled with sharp teeth."/>
    <fieldval field="rEnviron" value="any sky (Plane of Air)"/>
    <fieldval field="rOrgan" value="solitary"/>
    <fieldval field="rTreasure" value="triple"/>
    <fieldval field="rCHA" value="3"/>
    <fieldval field="rWIS" value="4"/>
    <usesource source="VarDragons"/>
    <tag group="RaceType" tag="NPC"/>
    <tag group="RaceSize" tag="Small11"/>
    <tag group="HasType" tag="tpDragon"/>
    <tag group="Helper" tag="Quadruped"/>
    <tag group="Hero" tag="NoDefComm"/>
    <tag group="DragType" tag="Primal" name="Dragon, Primal"/>
    <tag group="Race" tag="rTrueDrago"/>
    <tag group="Alignment" tag="NeutralGE"/>
    <tag group="Helper" tag="NotHum"/>
    <tag group="Alignment" tag="Chaotic"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <tag group="Language" tag="Any"/>
    <bootstrap thing="xFly">
      <autotag group="Maneuver" tag="Average"/>
      <autotag group="Value" tag="150"/>
      </bootstrap>
    <bootstrap thing="wCrush"></bootstrap>
    <bootstrap thing="wTailSweep"></bootstrap>
    <bootstrap thing="xDamRdMag">
      <containerreq phase="First" priority="200">DragonAge.YngAdult</containerreq>
      </bootstrap>
    <bootstrap thing="xSplRs">
      <containerreq phase="First" priority="200">DragonAge.YngAdult</containerreq>
      </bootstrap>
    <bootstrap thing="tmxDragAge"></bootstrap>
    <bootstrap thing="raxFrightP">
      <containerreq phase="First" priority="200">DragonAge.Juvenile</containerreq>
      </bootstrap>
    <bootstrap thing="xSwim">
      <autotag group="Value" tag="60"/>
      </bootstrap>
    <bootstrap thing="stExtrapla"></bootstrap>
    <bootstrap thing="wTailSlap">
      <autotag group="wMain" tag="1d8_6"/>
      <autotag group="Helper" tag="NatTwoHand"/>
      </bootstrap>
    <bootstrap thing="raxDrgBrea">
      <autotag group="BloodEner" tag="Elec"/>
      <autotag group="BreathShp" tag="Cone"/>
      <assignval field="abValue" value="2"/>
      <assignval field="abValue3" value="8"/>
      </bootstrap>
    <bootstrap thing="xImmElec">
      <containerreq phase="First" priority="200">DragonAge.Wyrmling</containerreq>
      </bootstrap>
    <bootstrap thing="skKnowLoc"></bootstrap>
    <bootstrap thing="skKnowPlan"></bootstrap>
    <bootstrap thing="wBite">
      <autotag group="wMain" tag="1d6_5"/>
      <autotag group="Helper" tag="NatPrimary"/>
      <autotag group="Helper" tag="NatTwoHand"/>
      </bootstrap>
    <bootstrap thing="raCloMistV">
      <containerreq phase="First" priority="200">DragonAge.Wyrmling</containerreq>
      </bootstrap>
    <bootstrap thing="spCloudki5">
      <containerreq phase="First" priority="200">DragonAge.Old</containerreq>
      <autotag group="Usage" tag="Day"/>
      <autotag group="Helper" tag="SpellLike"/>
      <assignval field="trkMax" value="3"/>
      </bootstrap>
    <bootstrap thing="spFogClo2">
      <containerreq phase="First" priority="200">DragonAge.Young</containerreq>
      <autotag group="Helper" tag="SpellLike"/>
      <autotag group="Usage" tag="AtWill"/>
      </bootstrap>
    <bootstrap thing="spObscMis1">
      <containerreq phase="First" priority="200">DragonAge.VeryYoung</containerreq>
      <autotag group="Usage" tag="AtWill"/>
      <autotag group="Helper" tag="SpellLike"/>
      </bootstrap>
    <bootstrap thing="spSoliFog4">
      <containerreq phase="First" priority="200">DragonAge.Adult</containerreq>
      <autotag group="Usage" tag="AtWill"/>
      <autotag group="Helper" tag="SpellLike"/>
      </bootstrap>
    <bootstrap thing="spStorVen9">
      <containerreq phase="First" priority="200">DragonAge.GreatWyrm</containerreq>
      <autotag group="Usage" tag="Day"/>
      <autotag group="Helper" tag="SpellLike"/>
      <assignval field="trkMax" value="1"/>
      </bootstrap>
    <bootstrap thing="spWindWal6">
      <containerreq phase="First" priority="200">DragonAge.Ancient</containerreq>
      <autotag group="Usage" tag="AtWill"/>
      <autotag group="Helper" tag="SpellLike"/>
      </bootstrap>
    <bootstrap thing="raCloClouF">
      <containerreq phase="First" priority="200">DragonAge.Adult</containerreq>
      </bootstrap>
    <bootstrap thing="raCloClouB">
      <containerreq phase="First" priority="200">DragonAge.GreatWyrm</containerreq>
      </bootstrap>
    <bootstrap thing="rauClouThB">
      <containerreq phase="First" priority="200">DragonAge.Ancient</containerreq>
      </bootstrap>
    <bootstrap thing="wClaw">
      <autotag group="Value" tag="2"/>
      <autotag group="wMain" tag="1d4_4"/>
      <autotag group="Helper" tag="NatPrimary"/>
      </bootstrap>
    <bootstrap thing="raDrSenses"></bootstrap>
    <bootstrap thing="fMultiAtt">
      <containerreq phase="First" priority="200">DragonAge.Wyrmling</containerreq>
      </bootstrap>
    <bootstrap thing="fWepFoc">
      <containerreq phase="First" priority="200">DragonAge.Wyrmling</containerreq>
      <autotag group="Target" tag="wClaw"/>
      </bootstrap>
    <bootstrap thing="fDazzDisp">
      <containerreq phase="First" priority="200">DragonAge.Wyrmling</containerreq>
      <autotag group="Target" tag="wClaw"/>
      </bootstrap>
    <bootstrap thing="fSkillFoc">
      <containerreq phase="First" priority="200">DragonAge.VeryYoung</containerreq>
      <autotag group="Target" tag="skDiplo"/>
      </bootstrap>
    <bootstrap thing="fPowerAtt">
      <containerreq phase="First" priority="200">DragonAge.VeryYoung</containerreq>
      </bootstrap>
    <bootstrap thing="fImpInit">
      <containerreq phase="First" priority="200">DragonAge.Juvenile</containerreq>
      </bootstrap>
    <bootstrap thing="lDraconic"></bootstrap>
    <bootstrap thing="fWepFoc">
      <containerreq phase="First" priority="200">DragonAge.YngAdult</containerreq>
      <autotag group="Target" tag="wBite"/>
      </bootstrap>
    <bootstrap thing="stAir"></bootstrap>
    <bootstrap thing="fImpCrit">
      <containerreq phase="First" priority="200">DragonAge.Adult</containerreq>
      <autotag group="Target" tag="wBite"/>
      </bootstrap>
    <bootstrap thing="fFlybyAt">
      <containerreq phase="First" priority="200">DragonAge.MatAdult</containerreq>
      </bootstrap>
    <bootstrap thing="fCritFoc">
      <containerreq phase="First" priority="200">DragonAge.Old</containerreq>
      </bootstrap>
    <bootstrap thing="fSnatch">
      <containerreq phase="First" priority="200">DragonAge.VeryOld</containerreq>
      </bootstrap>
    <bootstrap thing="fStagCrit">
      <containerreq phase="First" priority="200">DragonAge.Ancient</containerreq>
      </bootstrap>
    <bootstrap thing="fHover">
      <containerreq phase="First" priority="200">DragonAge.Wyrm</containerreq>
      </bootstrap>
    <bootstrap thing="fWingover">
      <containerreq phase="First" priority="200">DragonAge.GreatWyrm</containerreq>
      </bootstrap>
    <bootstrap thing="skKnowNat">
      <containerreq phase="First" priority="200">DragonAge.GreatWyrm</containerreq>
      </bootstrap>
    <bootstrap thing="wWing">
      <autotag group="Value" tag="2"/>
      <autotag group="wMain" tag="1d4_4"/>
      </bootstrap>
    <eval phase="First" priority="550" index="2"><![CDATA[~ set caster level of racial spells

~age catagory
var ageCat as number
ageCat = hero.childfound[raxDragonA].tagvalue[Value.?]

perform hero.findchild[BaseRace].setfocus

~ set caster level
if (ageCat >= 4) then
 perform focus.assign[SplLookup.cHelpSor]
 focus.field[cMagicLev].value = 2*ageCat - 7
endif

perform state.clearfocus]]></eval>
    <eval phase="PreLevel" priority="4000" index="3">~ innate skill ranks 
var ageCat as number
ageCat = hero.childfound[raxDragonA].tagvalue[Value.?]

if (ageCat = 1) then
  #skillinnate[skAppraise] += 6
  #skillinnate[skDiplo] += 6
  #skillinnate[skFly] += 6
  #skillinnate[skIntim] += 6
  #skillinnate[skPercep] += 6
  #skillinnate[skStealth] += 6
~  #skillinnate[skSwim] += 6
elseif (ageCat = 2) then
  #skillinnate[skAppraise] += 8
  #skillinnate[skDiplo] += 8
  #skillinnate[skFly] += 8
  #skillinnate[skIntim] += 8
  #skillinnate[skKnowPlan] += 8
  #skillinnate[skPercep] += 8
  #skillinnate[skStealth] += 8
~  #skillinnate[skSwim] += 8
elseif (ageCat = 3) then
  #skillinnate[skAppraise] += 10
  #skillinnate[skDiplo] += 10
  #skillinnate[skFly] += 10
  #skillinnate[skIntim] += 10
  #skillinnate[skKnowPlan] += 10
  #skillinnate[skPercep] += 10
  #skillinnate[skStealth] += 10
~  #skillinnate[skSwim] += 5

elseif (ageCat = 4) then
  #skillinnate[skAppraise] += 12
  #skillinnate[skDiplo] += 12
  #skillinnate[skFly] += 12
  #skillinnate[skIntim] += 12
  #skillinnate[skKnowPlan] += 12
  #skillinnate[skPercep] += 12
  #skillinnate[skStealth] += 12
  #skillinnate[skSurvival] += 12
~  #skillinnate[skSwim] += 5

elseif (ageCat = 5) then
  #skillinnate[skAppraise] += 14
  #skillinnate[skDiplo] += 14
  #skillinnate[skFly] += 14
  #skillinnate[skIntim] += 14
  #skillinnate[skKnowPlan] += 14
  #skillinnate[skPercep] += 14
  #skillinnate[skStealth] += 14
  #skillinnate[skSurvival] += 14
~  #skillinnate[skSwim] += 5

elseif (ageCat = 6) then
  #skillinnate[skAppraise] += 16
  #skillinnate[skDiplo] += 16
  #skillinnate[skFly] += 16
  #skillinnate[skIntim] += 16
  #skillinnate[skKnowPlan] += 16
  #skillinnate[skPercep] += 16
  #skillinnate[skSenseMot] += 16
  #skillinnate[skStealth] += 16
  #skillinnate[skSurvival] += 16
~  #skillinnate[skSwim] += 5

elseif (ageCat = 7) then
  #skillinnate[skAppraise] += 18
  #skillinnate[skDiplo] += 18
  #skillinnate[skFly] += 18
  #skillinnate[skIntim] += 18
  #skillinnate[skKnowPlan] += 18
  #skillinnate[skPercep] += 18
  #skillinnate[skSenseMot] += 18
  #skillinnate[skStealth] += 18
  #skillinnate[skSurvival] += 18
~  #skillinnate[skSwim] += 5

elseif (ageCat = 8) then 
  #skillinnate[skAppraise] += 20
  #skillinnate[skDiplo] += 20
  #skillinnate[skFly] += 20
  #skillinnate[skIntim] += 20
  #skillinnate[skKnowLoc] += 20
  #skillinnate[skKnowPlan] += 20
  #skillinnate[skPercep] += 20
  #skillinnate[skSenseMot] += 20
  #skillinnate[skStealth] += 20
  #skillinnate[skSurvival] += 20
~  #skillinnate[skSwim] += 5

elseif (ageCat = 9) then
  #skillinnate[skAppraise] += 22
  #skillinnate[skDiplo] += 22
  #skillinnate[skFly] += 22
  #skillinnate[skIntim] += 22
  #skillinnate[skKnowLoc] += 22
  #skillinnate[skKnowPlan] += 22
  #skillinnate[skPercep] += 22
  #skillinnate[skSenseMot] += 22
  #skillinnate[skStealth] += 22
  #skillinnate[skSurvival] += 22
~  #skillinnate[skSwim] += 5

elseif (ageCat = 10) then
  #skillinnate[skAppraise] += 24
  #skillinnate[skDiplo] += 24
  #skillinnate[skFly] += 24
  #skillinnate[skIntim] += 24
  #skillinnate[skKnowLoc] += 24
  #skillinnate[skKnowPlan] += 24
  #skillinnate[skPercep] += 24
  #skillinnate[skSenseMot] += 24
  #skillinnate[skStealth] += 24
  #skillinnate[skSurvival] += 24
  #skillinnate[skSwim] += 24

elseif (ageCat = 11) then
  #skillinnate[skAppraise] += 26
  #skillinnate[skDiplo] += 26
  #skillinnate[skFly] += 26
  #skillinnate[skIntim] += 26
  #skillinnate[skKnowLoc] += 26
  #skillinnate[skKnowPlan] += 26
  #skillinnate[skPercep] += 26
  #skillinnate[skSenseMot] += 26
  #skillinnate[skStealth] += 26
  #skillinnate[skSurvival] += 26
  #skillinnate[skSwim] += 26

elseif (ageCat = 12) then
  #skillinnate[skAppraise] += 28
  #skillinnate[skDiplo] += 28
  #skillinnate[skFly] += 28
  #skillinnate[skIntim] += 28
  #skillinnate[skKnowLoc] += 28
  #skillinnate[skKnowNat] += 28
  #skillinnate[skKnowPlan] += 28
  #skillinnate[skPercep] += 28
  #skillinnate[skSenseMot] += 28
  #skillinnate[skStealth] += 28
  #skillinnate[skSurvival] += 28
  #skillinnate[skSwim] += 28

endif
      <before name="Skill Bonus Feats"/>
      </eval>
    <eval phase="Final" priority="1000"><![CDATA[~ set Frightful Presence, DR, SR, and CL
var ageCat as number
ageCat = hero.childfound[raxDragonA].tagvalue[Value.?]

~ frightful presesnce
if (ageCat >= 4) then
  hero.child[raxFrightP].field[abValue].value = 30 * ageCat
endif

~ Dragons have SR = to 11 + thier CR
if (ageCat >= 5) then
  var damage as number
  damage = herofield[tCR].value + 11
  #applysr[damage]
endif

~ Dragons have spell like abilities of CL = to TOTAL (not racial) hit dice
if (ageCat >= 2) then
  var CL as number
  CL = herofield[tHitDice].value
  field[rSpCastLev].value = CL
endif

~ DR 
if (ageCat >= 5) then
  var drVal as number
  drVal = (ageCat - 5)/2
  drVal = 5 * (1 + round(drVal,0,-1))
  #applydr[xDamRdMag,drVal]
endif]]></eval>
    </thing>
  <thing id="rauClouThB" name="Thundering Bite" description="An ancient or older cloud dragon&apos;s bite makes a thundering crash whenever it attacks, dealing an additional 2d6 points of sonic damage. A great wyrm&apos;s thundering bite deals an additional 4d6 sonic damage." compset="RaceSpec">
    <usesource source="VarDragons"/>
    <tag group="Helper" tag="ShowSpec" name="Show Spec" abbrev="Show Spec"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <tag group="AbilType" tag="Super" name="Supernatural Ability" abbrev=" (Su)"/>
    <eval phase="Final" priority="1000"><![CDATA[var ageCat as number
ageCat= hero.child[raxDragonA].tagvalue[Value.?]

if (ageCat >= 12) then
  hero.child[wBite].field[wDamExtra].text = " plus 4d6 sonic"
elseif (ageCat >= 10) then
  hero.child[wBite].field[wDamExtra].text = " plus 2d6 sonic"
endif]]></eval>
    </thing>
  <thing id="rxDragCrys" name="Dragon, Crystal" description="Crystal dragons are generally good-natured, though their incredible vanity sometimes causes them to seem aloof and cocky. Any perceived insult against its appearance is all but assured to send a crystal dragon into a rage-which is a problem, as most crystal dragons are prone to seeing insults even where none are intended. Crystal dragons prefer underground lairs, and often go for decades or even centuries without emerging from their extensive cavern lairs onto the surface world above.\n\nCrystal dragons tend to be exacting and even obsessivecompulsive, their personalities mirroring the precise and ordered nature of the facets of their scales. A crystal dragon's lair is a well-ordered place-these dragons find the very idea of the classic sprawl of a dragon's hoard to be shameful." compset="Race">
    <fieldval field="shortname" value="Crystal Dragon"/>
    <fieldval field="rHitDice" value="3"/>
    <fieldval field="rHPStart" value="19"/>
    <fieldval field="rDEX" value="6"/>
    <fieldval field="rCON" value="3"/>
    <fieldval field="rSpeed" value="60"/>
    <fieldval field="rAC" value="2"/>
    <fieldval field="rCR" value="2"/>
    <fieldval field="rDescript" value="This brilliantly colored dragon has scales, teeth, and claws made of multicolored crystal, and its wings are sheets of flexible glass."/>
    <fieldval field="rEnviron" value="any underground (Plane of Earth)"/>
    <fieldval field="rOrgan" value="solitary"/>
    <fieldval field="rTreasure" value="triple"/>
    <fieldval field="rCHA" value="6"/>
    <fieldval field="rWIS" value="1"/>
    <fieldval field="rSTR" value="-1"/>
    <usesource source="VarDragons"/>
    <tag group="RaceSize" tag="Tiny12"/>
    <tag group="HasType" tag="tpDragon"/>
    <tag group="Helper" tag="Quadruped"/>
    <tag group="Hero" tag="NoDefComm"/>
    <tag group="DragType" tag="Primal" name="Dragon, Primal"/>
    <tag group="Race" tag="rTrueDrago"/>
    <tag group="Alignment" tag="NeutralGE"/>
    <tag group="Helper" tag="NotHum"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <tag group="RaceType" tag="NPC"/>
    <tag group="Alignment" tag="Lawful"/>
    <tag group="Language" tag="Any"/>
    <bootstrap thing="wTailSweep"></bootstrap>
    <bootstrap thing="xDamRdMag">
      <containerreq phase="First" priority="200">DragonAge.YngAdult</containerreq>
      </bootstrap>
    <bootstrap thing="xSplRs">
      <containerreq phase="First" priority="200">DragonAge.YngAdult</containerreq>
      </bootstrap>
    <bootstrap thing="tmxDragAge"></bootstrap>
    <bootstrap thing="raxFrightP">
      <containerreq phase="First" priority="200">DragonAge.Juvenile</containerreq>
      </bootstrap>
    <bootstrap thing="xBurrow">
      <autotag group="Value" tag="30"/>
      </bootstrap>
    <bootstrap thing="stExtrapla"></bootstrap>
    <bootstrap thing="wTailSlap">
      <autotag group="wMain" tag="1d8_6"/>
      <autotag group="Helper" tag="NatTwoHand"/>
      </bootstrap>
    <bootstrap thing="raxDrgBrea">
      <autotag group="BloodEner" tag="Sonic"/>
      <autotag group="BreathShp" tag="Cone"/>
      <assignval field="abValue" value="2"/>
      <assignval field="abValue3" value="4"/>
      </bootstrap>
    <bootstrap thing="xImmSoni">
      <containerreq phase="First" priority="200">DragonAge.Wyrmling</containerreq>
      </bootstrap>
    <bootstrap thing="wBite">
      <autotag group="wMain" tag="1d6_5"/>
      <autotag group="Helper" tag="NatPrimary"/>
      <autotag group="Helper" tag="NatTwoHand"/>
      </bootstrap>
    <bootstrap thing="wClaw">
      <autotag group="Value" tag="2"/>
      <autotag group="wMain" tag="1d4_4"/>
      <autotag group="Helper" tag="NatPrimary"/>
      </bootstrap>
    <bootstrap thing="raDrSenses"></bootstrap>
    <bootstrap thing="stEarth"></bootstrap>
    <bootstrap thing="wWing">
      <autotag group="Value" tag="2"/>
      <autotag group="wMain" tag="1d4_4"/>
      </bootstrap>
    <bootstrap thing="xClimb">
      <autotag group="Value" tag="30"/>
      </bootstrap>
    <bootstrap thing="raCryRazoS">
      <containerreq phase="First" priority="200">DragonAge.Wyrmling</containerreq>
      </bootstrap>
    <bootstrap thing="raCryRayR">
      <containerreq phase="First" priority="200">DragonAge.Ancient</containerreq>
      </bootstrap>
    <bootstrap thing="raCryScinA">
      <containerreq phase="First" priority="200">DragonAge.GreatWyrm</containerreq>
      </bootstrap>
    <bootstrap thing="xTremorsen">
      <containerreq phase="First" priority="200">DragonAge.Young</containerreq>
      <autotag group="Value" tag="30"/>
      </bootstrap>
    <bootstrap thing="xFly">
      <autotag group="Maneuver" tag="Average"/>
      <autotag group="Value" tag="100"/>
      </bootstrap>
    <bootstrap thing="skKnowDun"></bootstrap>
    <bootstrap thing="fGreatFort">
      <containerreq phase="First" priority="200">DragonAge.Wyrmling</containerreq>
      </bootstrap>
    <bootstrap thing="fLightRef">
      <containerreq phase="First" priority="200">DragonAge.Wyrmling</containerreq>
      </bootstrap>
    <bootstrap thing="spColoSpr1">
      <containerreq phase="First" priority="200">DragonAge.VeryYoung</containerreq>
      <autotag group="Usage" tag="AtWill"/>
      <autotag group="Helper" tag="SpellLike"/>
      </bootstrap>
    <bootstrap thing="spGlitter2">
      <containerreq phase="First" priority="200">DragonAge.Juvenile</containerreq>
      <autotag group="Usage" tag="AtWill"/>
      <autotag group="Helper" tag="SpellLike"/>
      </bootstrap>
    <bootstrap thing="spImpriso9">
      <containerreq phase="First" priority="200">DragonAge.GreatWyrm</containerreq>
      <autotag group="Usage" tag="Day"/>
      <autotag group="Helper" tag="SpellLike"/>
      <assignval field="trkMax" value="1"/>
      </bootstrap>
    <bootstrap thing="spPrisSpr7">
      <containerreq phase="First" priority="200">DragonAge.Ancient</containerreq>
      <autotag group="Usage" tag="Day"/>
      <autotag group="Helper" tag="SpellLike"/>
      <assignval field="trkMax" value="3"/>
      </bootstrap>
    <bootstrap thing="spStonto6">
      <containerreq phase="First" priority="200">DragonAge.Old</containerreq>
      <autotag group="Usage" tag="Day"/>
      <autotag group="Helper" tag="SpellLike"/>
      <assignval field="trkMax" value="3"/>
      </bootstrap>
    <bootstrap thing="spRainPat4">
      <containerreq phase="First" priority="200">DragonAge.Adult</containerreq>
      <autotag group="Helper" tag="SpellLike"/>
      <autotag group="Usage" tag="AtWill"/>
      </bootstrap>
    <bootstrap thing="lDraconic">
      <containerreq phase="First" priority="200">DragonAge.Wyrmling</containerreq>
      </bootstrap>
    <bootstrap thing="fDeceit">
      <containerreq phase="First" priority="200">DragonAge.VeryYoung</containerreq>
      </bootstrap>
    <bootstrap thing="fPowerAtt">
      <containerreq phase="First" priority="200">DragonAge.Young</containerreq>
      </bootstrap>
    <bootstrap thing="fMultiAtt">
      <containerreq phase="First" priority="200">DragonAge.Juvenile</containerreq>
      <autotag group="Target" tag="wBite"/>
      </bootstrap>
    <bootstrap thing="fWepFoc">
      <containerreq phase="First" priority="200">DragonAge.YngAdult</containerreq>
      <autotag group="Target" tag="wBite"/>
      </bootstrap>
    <bootstrap thing="fImpCrit">
      <containerreq phase="First" priority="200">DragonAge.Adult</containerreq>
      <autotag group="Target" tag="wBite"/>
      </bootstrap>
    <bootstrap thing="fImpInit">
      <containerreq phase="First" priority="200">DragonAge.MatAdult</containerreq>
      </bootstrap>
    <bootstrap thing="fVitStr">
      <containerreq phase="First" priority="200">DragonAge.Old</containerreq>
      </bootstrap>
    <bootstrap thing="fImpVitStr">
      <containerreq phase="First" priority="200">DragonAge.VeryOld</containerreq>
      </bootstrap>
    <bootstrap thing="fGrtVitStr">
      <containerreq phase="First" priority="200">DragonAge.Ancient</containerreq>
      </bootstrap>
    <bootstrap thing="skKnowGeog"></bootstrap>
    <bootstrap thing="fSnatch">
      <containerreq phase="First" priority="200">DragonAge.Wyrm</containerreq>
      </bootstrap>
    <bootstrap thing="fWepFoc">
      <containerreq phase="First" priority="200">DragonAge.GreatWyrm</containerreq>
      <autotag group="Target" tag="wClaw"/>
      </bootstrap>
    <bootstrap thing="skKnowLoc"></bootstrap>
    <bootstrap thing="wCrush"></bootstrap>
    <eval phase="PreLevel" priority="4000" index="3">~ innate skill ranks 
var ageCat as number
ageCat = hero.childfound[raxDragonA].tagvalue[Value.?]

if (ageCat = 1) then
  #skillinnate[skBluff] += 3
  #skillinnate[skClimb] += 3
  #skillinnate[skIntim] += 3
  #skillinnate[skFly] += 3
  #skillinnate[skPercep] += 3
  #skillinnate[skStealth] += 3
elseif (ageCat = 2) then
  #skillinnate[skBluff] += 5
  #skillinnate[skClimb] += 5
  #skillinnate[skFly] += 5
  #skillinnate[skIntim] += 5
  #skillinnate[skKnowDun] += 5
  #skillinnate[skPercep] += 5
  #skillinnate[skStealth] += 5

elseif (ageCat = 3) then
  #skillinnate[skBluff] += 7
  #skillinnate[skClimb] += 7
  #skillinnate[skFly] += 7
  #skillinnate[skIntim] += 7
  #skillinnate[skKnowDun] += 7
  #skillinnate[skPercep] += 7
  #skillinnate[skStealth] += 7

elseif (ageCat = 4) then
  #skillinnate[skBluff] += 9
  #skillinnate[skClimb] += 9
  #skillinnate[skFly] += 9
  #skillinnate[skIntim] += 9
  #skillinnate[skKnowDun] += 9
  #skillinnate[skPercep] += 9
  #skillinnate[skSenseMot] += 9
  #skillinnate[skStealth] += 9

elseif (ageCat = 5) then
  #skillinnate[skBluff] += 11
  #skillinnate[skClimb] += 11
  #skillinnate[skFly] += 11
  #skillinnate[skIntim] += 11
  #skillinnate[skKnowDun] += 11
  #skillinnate[skPercep] += 11
  #skillinnate[skSenseMot] += 11
  #skillinnate[skStealth] += 11

elseif (ageCat = 6) then
  perform hero.child[xTremorsen].tagreplace[Value.?,Value.60]
  #skillinnate[skBluff] += 13
  #skillinnate[skClimb] += 13
  #skillinnate[skDisguise] += 13
  #skillinnate[skFly] += 13
  #skillinnate[skIntim] += 13
  #skillinnate[skKnowDun] += 13
  #skillinnate[skPercep] += 13
  #skillinnate[skSenseMot] += 13
  #skillinnate[skStealth] += 13

elseif (ageCat = 7) then
  perform hero.child[xTremorsen].tagreplace[Value.?,Value.60]
  #skillinnate[skBluff] += 15
  #skillinnate[skClimb] += 15
  #skillinnate[skDisguise] += 15
  #skillinnate[skFly] += 15
  #skillinnate[skIntim] += 15
  #skillinnate[skKnowDun] += 15
  #skillinnate[skPercep] += 15
  #skillinnate[skSenseMot] += 15
  #skillinnate[skStealth] += 15

elseif (ageCat = 8) then 
  perform hero.child[xTremorsen].tagreplace[Value.?,Value.120]
  #skillinnate[skBluff] += 17
  #skillinnate[skClimb] += 17
  #skillinnate[skDisguise] += 17
  #skillinnate[skFly] += 17
  #skillinnate[skIntim] += 17
  #skillinnate[skKnowDun] += 17
  #skillinnate[skPercep] += 17
  #skillinnate[skSenseMot] += 17
  #skillinnate[skStealth] += 17
  #skillinnate[skSurvival] += 17

elseif (ageCat = 9) then
  perform hero.child[xTremorsen].tagreplace[Value.?,Value.120]
  #skillinnate[skBluff] += 19
  #skillinnate[skClimb] += 19
  #skillinnate[skDisguise] += 19
  #skillinnate[skFly] += 19
  #skillinnate[skIntim] += 19
  #skillinnate[skKnowDun] += 19
  #skillinnate[skPercep] += 19
  #skillinnate[skSenseMot] += 19
  #skillinnate[skStealth] += 19
  #skillinnate[skSurvival] += 19

elseif (ageCat = 10) then
  perform hero.child[xTremorsen].tagreplace[Value.?,Value.120]
  #skillinnate[skBluff] += 21
  #skillinnate[skClimb] += 21
  #skillinnate[skDisguise] += 21
  #skillinnate[skFly] += 21
  #skillinnate[skIntim] += 21
  #skillinnate[skKnowDun] += 21
  #skillinnate[skKnowGeog] += 21
  #skillinnate[skPercep] += 21
  #skillinnate[skSenseMot] += 21
  #skillinnate[skStealth] += 21
  #skillinnate[skSurvival] += 21

elseif (ageCat = 11) then
  perform hero.child[xTremorsen].tagreplace[Value.?,Value.120]
  #skillinnate[skBluff] += 23
  #skillinnate[skClimb] += 23
  #skillinnate[skDisguise] += 23
  #skillinnate[skFly] += 23
  #skillinnate[skIntim] += 23
  #skillinnate[skKnowDun] += 23
  #skillinnate[skKnowGeog] += 23
  #skillinnate[skPercep] += 23
  #skillinnate[skSenseMot] += 23
  #skillinnate[skStealth] += 23
  #skillinnate[skSurvival] += 23

elseif (ageCat = 12) then
  perform hero.child[xTremorsen].tagreplace[Value.?,Value.120]
  #skillinnate[skBluff] += 25
  #skillinnate[skClimb] += 25
  #skillinnate[skDisguise] += 25
  #skillinnate[skFly] += 25
  #skillinnate[skIntim] += 25
  #skillinnate[skKnowDun] += 25
  #skillinnate[skKnowGeog] += 25
  #skillinnate[skKnowLoc] += 25
  #skillinnate[skPercep] += 25
  #skillinnate[skSenseMot] += 25
  #skillinnate[skStealth] += 25
  #skillinnate[skSurvival] += 25

endif
      <before name="Skill Bonus Feats"/>
      </eval>
    <eval phase="Final" priority="1000"><![CDATA[~ set Frightful Presence, DR, SR, and CL
var ageCat as number
ageCat = hero.childfound[raxDragonA].tagvalue[Value.?]

~ frightful presesnce
if (ageCat >= 6) then
  hero.child[raxFrightP].field[abValue].value = 30 * ageCat
endif

~ Dragons have SR = to 11 + thier CR
if (ageCat >= 5) then
  var damage as number
  damage = herofield[tCR].value + 11
  #applysr[damage]
endif

~ Dragons have spell like abilities of CL = to TOTAL (not racial) hit dice
if (ageCat >= 2) then
  var CL as number
  CL = herofield[tHitDice].value
  field[rSpCastLev].value = CL
endif

~ DR 
if (ageCat >= 5) then
  var drVal as number
  drVal = (ageCat - 5)/2
  drVal = 5 * (1 + round(drVal,0,-1))
  #applydr[xDamRdMag,drVal]
endif]]></eval>
    <eval phase="First" priority="550" index="2"><![CDATA[~ set caster level of racial spells

~age catagory
var ageCat as number
ageCat = hero.childfound[raxDragonA].tagvalue[Value.?]

perform hero.findchild[BaseRace].setfocus

~ set caster level
if (ageCat >= 6) then
 perform focus.assign[SplLookup.cHelpSor]
 focus.field[cMagicLev].value = 2*ageCat - 11
endif

perform state.clearfocus]]></eval>
    </thing>
  <thing id="rxDragMagm" name="Dragon, Magma" description="Temperamental and prone to violent outbursts, magma dragons are regarded by most other dragons as dangerously insane-an assumption that, more often than not, proves correct. One can rarely predict a magma dragon's state of mind until it either attacks or attempts to engage in conversation. For their part, magma dragons can justify all of their actions-they just rarely feel the need to do so." compset="Race">
    <fieldval field="shortname" value="Magma Dragon"/>
    <fieldval field="rHitDice" value="5"/>
    <fieldval field="rHPStart" value="32"/>
    <fieldval field="rDEX" value="6"/>
    <fieldval field="rCON" value="3"/>
    <fieldval field="rSpeed" value="40"/>
    <fieldval field="rAC" value="4"/>
    <fieldval field="rCR" value="4"/>
    <fieldval field="rDescript" value="This brilliantly colored dragon has scales, teeth, and claws made of multicolored crystal, and its wings are sheets of flexible glass."/>
    <fieldval field="rEnviron" value="any mountains or underground (Plane of Fire)"/>
    <fieldval field="rOrgan" value="solitary"/>
    <fieldval field="rTreasure" value="triple"/>
    <fieldval field="rCHA" value="1"/>
    <fieldval field="rWIS" value="2"/>
    <fieldval field="rSTR" value="3"/>
    <fieldval field="rINT" value="2"/>
    <usesource source="VarDragons"/>
    <tag group="HasType" tag="tpDragon"/>
    <tag group="Helper" tag="Quadruped"/>
    <tag group="Hero" tag="NoDefComm"/>
    <tag group="DragType" tag="Primal" name="Dragon, Primal"/>
    <tag group="Race" tag="rTrueDrago"/>
    <tag group="Alignment" tag="NeutralGE"/>
    <tag group="Helper" tag="NotHum"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <tag group="RaceType" tag="NPC"/>
    <tag group="RaceSize" tag="Tiny12"/>
    <tag group="Alignment" tag="Chaotic"/>
    <tag group="Language" tag="Any"/>
    <bootstrap thing="xSplRs">
      <containerreq phase="First" priority="200">DragonAge.YngAdult</containerreq>
      </bootstrap>
    <bootstrap thing="tmxDragAge"></bootstrap>
    <bootstrap thing="raxFrightP">
      <containerreq phase="First" priority="200">DragonAge.Juvenile</containerreq>
      </bootstrap>
    <bootstrap thing="stExtrapla"></bootstrap>
    <bootstrap thing="wTailSlap">
      <autotag group="wMain" tag="1d8_6"/>
      <autotag group="Helper" tag="NatTwoHand"/>
      </bootstrap>
    <bootstrap thing="raxDrgBrea">
      <autotag group="BloodEner" tag="Fire"/>
      <autotag group="BreathShp" tag="Cone"/>
      <assignval field="abValue" value="2"/>
      <assignval field="abValue3" value="6"/>
      </bootstrap>
    <bootstrap thing="wBite">
      <autotag group="wMain" tag="1d6_5"/>
      <autotag group="Helper" tag="NatPrimary"/>
      <autotag group="Helper" tag="NatTwoHand"/>
      </bootstrap>
    <bootstrap thing="wClaw">
      <autotag group="Value" tag="2"/>
      <autotag group="wMain" tag="1d4_4"/>
      <autotag group="Helper" tag="NatPrimary"/>
      </bootstrap>
    <bootstrap thing="raDrSenses"></bootstrap>
    <bootstrap thing="wWing">
      <autotag group="Value" tag="2"/>
      <autotag group="wMain" tag="1d4_4"/>
      </bootstrap>
    <bootstrap thing="xFly">
      <autotag group="Maneuver" tag="Average"/>
      <autotag group="Value" tag="100"/>
      </bootstrap>
    <bootstrap thing="skKnowPlan"></bootstrap>
    <bootstrap thing="stFire"></bootstrap>
    <bootstrap thing="wCrush"></bootstrap>
    <bootstrap thing="wTailSweep"></bootstrap>
    <bootstrap thing="raMagMagmT">
      <containerreq phase="First" priority="200">DragonAge.GreatWyrm</containerreq>
      </bootstrap>
    <bootstrap thing="raxMagSuph">
      <containerreq phase="First" priority="200">DragonAge.Young</containerreq>
      </bootstrap>
    <bootstrap thing="spBurnHan1">
      <containerreq phase="First" priority="200">DragonAge.VeryYoung</containerreq>
      <autotag group="Usage" tag="AtWill"/>
      <autotag group="Helper" tag="SpellLike"/>
      </bootstrap>
    <bootstrap thing="spScorRay2">
      <containerreq phase="First" priority="200">DragonAge.Juvenile</containerreq>
      <autotag group="Usage" tag="AtWill"/>
      <autotag group="Helper" tag="SpellLike"/>
      </bootstrap>
    <bootstrap thing="spWallFir4">
      <containerreq phase="First" priority="200">DragonAge.Adult</containerreq>
      <autotag group="Helper" tag="SpellLike"/>
      <autotag group="Usage" tag="AtWill"/>
      </bootstrap>
    <bootstrap thing="spFireShi4">
      <containerreq phase="First" priority="200">DragonAge.Old</containerreq>
      <autotag group="Usage" tag="Constant"/>
      <autotag group="Helper" tag="SpellLike"/>
      <assignval field="livename" value="Fire Shield (warm)"/>
      </bootstrap>
    <bootstrap thing="spDelaBla7">
      <containerreq phase="First" priority="200">DragonAge.Ancient</containerreq>
      <autotag group="Usage" tag="Day"/>
      <autotag group="Helper" tag="SpellLike"/>
      <assignval field="trkMax" value="3"/>
      </bootstrap>
    <bootstrap thing="spWallLav8">
      <containerreq phase="First" priority="200">DragonAge.GreatWyrm</containerreq>
      <autotag group="Usage" tag="AtWill"/>
      <autotag group="Helper" tag="SpellLike"/>
      </bootstrap>
    <bootstrap thing="raxMagBrea">
      <containerreq phase="First" priority="200">DragonAge.Ancient</containerreq>
      <autotag group="BreathShp" tag="Cone"/>
      <autotag group="BloodEner" tag="Fire"/>
      <assignval field="abValue3" value="6"/>
      <assignval field="abValue" value="2"/>
      </bootstrap>
    <bootstrap thing="fGreatFort">
      <containerreq phase="First" priority="200">DragonAge.Wyrmling</containerreq>
      </bootstrap>
    <bootstrap thing="fImpInit">
      <containerreq phase="First" priority="200">DragonAge.Wyrmling</containerreq>
      </bootstrap>
    <bootstrap thing="fIronWill">
      <containerreq phase="First" priority="200">DragonAge.Wyrmling</containerreq>
      </bootstrap>
    <bootstrap thing="fPowerAtt">
      <containerreq phase="First" priority="200">DragonAge.VeryYoung</containerreq>
      </bootstrap>
    <bootstrap thing="fVitStr">
      <containerreq phase="First" priority="200">DragonAge.Young</containerreq>
      </bootstrap>
    <bootstrap thing="lDraconic">
      <containerreq phase="First" priority="200">DragonAge.Wyrmling</containerreq>
      </bootstrap>
    <bootstrap thing="fImpVitStr">
      <containerreq phase="First" priority="200">DragonAge.Juvenile</containerreq>
      </bootstrap>
    <bootstrap thing="fImpCrit">
      <containerreq phase="First" priority="200">DragonAge.YngAdult</containerreq>
      <autotag group="Target" tag="wBite"/>
      </bootstrap>
    <bootstrap thing="fImpCrit">
      <containerreq phase="First" priority="200">DragonAge.Adult</containerreq>
      <autotag group="Target" tag="wClaw"/>
      </bootstrap>
    <bootstrap thing="fFlybyAt">
      <containerreq phase="First" priority="200">DragonAge.MatAdult</containerreq>
      </bootstrap>
    <bootstrap thing="fMultiAtt">
      <containerreq phase="First" priority="200">DragonAge.Old</containerreq>
      </bootstrap>
    <bootstrap thing="fGrtVitStr">
      <containerreq phase="First" priority="200">DragonAge.VeryOld</containerreq>
      </bootstrap>
    <bootstrap thing="fImpBull">
      <containerreq phase="First" priority="200">DragonAge.Ancient</containerreq>
      </bootstrap>
    <bootstrap thing="fBullRuStr">
      <containerreq phase="First" priority="200">DragonAge.Wyrm</containerreq>
      </bootstrap>
    <bootstrap thing="fSnatch">
      <containerreq phase="First" priority="200">DragonAge.GreatWyrm</containerreq>
      </bootstrap>
    <bootstrap thing="skKnowDun"></bootstrap>
    <bootstrap thing="xDamRdMag">
      <containerreq phase="First" priority="200">DragonAge.YngAdult</containerreq>
      </bootstrap>
    <eval phase="First" priority="550" index="2"><![CDATA[~ set caster level of racial spells

~age catagory
var ageCat as number
ageCat = hero.childfound[raxDragonA].tagvalue[Value.?]

perform hero.findchild[BaseRace].setfocus

~ set caster level
if (ageCat >= 3) then
 perform focus.assign[SplLookup.cHelpSor]
 focus.field[cMagicLev].value = 2*ageCat - 5
endif

perform state.clearfocus]]></eval>
    <eval phase="PreLevel" priority="4000" index="3">~ innate skill ranks 
var ageCat as number
ageCat = hero.childfound[raxDragonA].tagvalue[Value.?]

if (ageCat = 1) then
  #skillinnate[skAcrobat] += 5
  #skillinnate[skClimb] += 5
  #skillinnate[skFly] += 5
  #skillinnate[skIntim] += 5
  #skillinnate[skPercep] += 5
  #skillinnate[skSenseMot] += 5
  #skillinnate[skSwim] += 5

elseif (ageCat = 2) then
  #skillinnate[skAcrobat] += 7
  #skillinnate[skClimb] += 7
  #skillinnate[skFly] += 7
  #skillinnate[skIntim] += 7
  #skillinnate[skPercep] += 7
  #skillinnate[skSenseMot] += 7
  #skillinnate[skStealth] += 7
  #skillinnate[skSwim] += 7

elseif (ageCat = 3) then
  #skillinnate[skAcrobat] += 9
  #skillinnate[skClimb] += 9
  #skillinnate[skFly] += 9
  #skillinnate[skIntim] += 9
  #skillinnate[skPercep] += 9
  #skillinnate[skSenseMot] += 9
  #skillinnate[skStealth] += 9
  #skillinnate[skSwim] += 9

elseif (ageCat = 4) then
  #skillinnate[skAcrobat] += 11
  #skillinnate[skClimb] += 11
  #skillinnate[skEscape] += 11
  #skillinnate[skFly] += 11
  #skillinnate[skIntim] += 11
  #skillinnate[skPercep] += 11
  #skillinnate[skSenseMot] += 11
  #skillinnate[skStealth] += 11
  #skillinnate[skSwim] += 11

elseif (ageCat = 5) then
  #skillinnate[skAcrobat] += 13
  #skillinnate[skClimb] += 13
  #skillinnate[skEscape] += 13
  #skillinnate[skFly] += 13
  #skillinnate[skIntim] += 13
  #skillinnate[skPercep] += 13
  #skillinnate[skSenseMot] += 13
  #skillinnate[skStealth] += 13
  #skillinnate[skSwim] += 13

elseif (ageCat = 6) then
  #skillinnate[skAcrobat] += 15
  #skillinnate[skClimb] += 15
  #skillinnate[skEscape] += 15
  #skillinnate[skFly] += 15
  #skillinnate[skIntim] += 15
  #skillinnate[skPercep] += 15
  #skillinnate[skSenseMot] += 15
  #skillinnate[skSleight] += 15
  #skillinnate[skStealth] += 15
  #skillinnate[skSwim] += 15

elseif (ageCat = 7) then
  #skillinnate[skAcrobat] += 17
  #skillinnate[skClimb] += 17
  #skillinnate[skEscape] += 17
  #skillinnate[skFly] += 17
  #skillinnate[skIntim] += 17
  #skillinnate[skPercep] += 17
  #skillinnate[skSenseMot] += 17
  #skillinnate[skSleight] += 17
  #skillinnate[skStealth] += 17
  #skillinnate[skSwim] += 17

elseif (ageCat = 8) then 
  #skillinnate[skAcrobat] += 19
  #skillinnate[skClimb] += 19
  #skillinnate[skEscape] += 19
  #skillinnate[skFly] += 19
  #skillinnate[skIntim] += 19
  #skillinnate[skKnowPlan] += 19
  #skillinnate[skPercep] += 19
  #skillinnate[skSenseMot] += 19
  #skillinnate[skSleight] += 19
  #skillinnate[skStealth] += 19
  #skillinnate[skSwim] += 19

elseif (ageCat = 9) then
  #skillinnate[skAcrobat] += 21
  #skillinnate[skClimb] += 21
  #skillinnate[skEscape] += 21
  #skillinnate[skFly] += 21
  #skillinnate[skIntim] += 21
  #skillinnate[skKnowPlan] += 21
  #skillinnate[skPercep] += 21
  #skillinnate[skSenseMot] += 21
  #skillinnate[skSleight] += 21
  #skillinnate[skStealth] += 21
  #skillinnate[skSwim] += 21

elseif (ageCat = 10) then
  #skillinnate[skAcrobat] += 23
  #skillinnate[skClimb] += 23
  #skillinnate[skEscape] += 23
  #skillinnate[skFly] += 23
  #skillinnate[skIntim] += 23
  #skillinnate[skKnowPlan] += 23
  #skillinnate[skPercep] += 23
  #skillinnate[skSenseMot] += 23
  #skillinnate[skSleight] += 23
  #skillinnate[skStealth] += 23
  #skillinnate[skSurvival] += 23
  #skillinnate[skSwim] += 23

elseif (ageCat = 11) then
  #skillinnate[skAcrobat] += 25
  #skillinnate[skClimb] += 25
  #skillinnate[skEscape] += 25
  #skillinnate[skFly] += 25
  #skillinnate[skIntim] += 25
  #skillinnate[skKnowPlan] += 25
  #skillinnate[skPercep] += 25
  #skillinnate[skSenseMot] += 25
  #skillinnate[skSleight] += 25
  #skillinnate[skStealth] += 25
  #skillinnate[skSurvival] += 25
  #skillinnate[skSwim] += 25

elseif (ageCat = 12) then
  #skillinnate[skAcrobat] += 27
  #skillinnate[skClimb] += 27
  #skillinnate[skEscape] += 27
  #skillinnate[skFly] += 27
  #skillinnate[skIntim] += 27
  #skillinnate[skKnowPlan] += 27
  #skillinnate[skKnowDun] += 27
  #skillinnate[skPercep] += 27
  #skillinnate[skSenseMot] += 27
  #skillinnate[skSleight] += 27
  #skillinnate[skStealth] += 27
  #skillinnate[skSurvival] += 27
  #skillinnate[skSwim] += 27

endif
      <before name="Skill Bonus Feats"/>
      </eval>
    <eval phase="Final" priority="1000"><![CDATA[~ set Frightful Presence, DR, SR, and CL
var ageCat as number
ageCat = hero.childfound[raxDragonA].tagvalue[Value.?]

~ frightful presesnce
if (ageCat >= 6) then
  hero.child[raxFrightP].field[abValue].value = 30 * ageCat
endif

~ Dragons have SR = to 11 + thier CR
if (ageCat >= 5) then
  var damage as number
  damage = herofield[tCR].value + 11
  #applysr[damage]
endif

~ Dragons have spell like abilities of CL = to TOTAL (not racial) hit dice
if (ageCat >= 2) then
  var CL as number
  CL = herofield[tHitDice].value
  field[rSpCastLev].value = CL
endif

~ DR 
if (ageCat >= 5) then
  var drVal as number
  drVal = (ageCat - 5)/2
  drVal = 5 * (1 + round(drVal,0,-1))
  #applydr[xDamRdMag,drVal]
endif]]></eval>
    </thing>
  <thing id="raxMagSuph" name="Superheated" description="At young age and older, a magma dragon's bite attack deals additional fire damage equal to its age category." compset="RaceSpec">
    <usesource source="VarDragons"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <tag group="Helper" tag="ShowSpec"/>
    <eval phase="Final" priority="1000"><![CDATA[var ageCat as number
ageCat= hero.child[raxDragonA].tagvalue[Value.?]

hero.child[wBite].field[wDamExtra].text = " plus " & ageCat & " fire"]]></eval>
    </thing>
  <thing id="raxMagBrea" name="Magma Breath" description="Three times per day, an ancient or older magma dragon can breathe a cone of lava instead of fire. The damage is unchanged, but the magma clings to those it damages, dealing half damage each round thereafter for 1d3 rounds. After this magma cools, it crumbles to dust." compset="RaceSpec" uniqueness="useronce">
    <comment>This breath weapon is for the modified dragons.

Set the tag BloodEner.? for the appropiate energy type

field[abValue] is the # of damage dice
field[abValue2] is the range
field[baValue3]is the type of damage dice

Assign BreathShp.Cone for cone spahed breath and BreathShp.Line for line shaped</comment>
    <fieldval field="trkMax" value="3"/>
    <usesource source="VarDragons"/>
    <tag group="AbilType" tag="Super"/>
    <tag group="StandardDC" tag="aCON" name="Constitution" abbrev="Constitution"/>
    <tag group="Helper" tag="ShowSpec" name="Show Spec" abbrev="Show Spec"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <tag group="SpecType" tag="Attack" name="Attack" abbrev="Attack"/>
    <tag group="Usage" tag="Day"/>
    <tag group="User" tag="Tracker"/>
    <tag group="Custom" tag="DragonBrea"/>
    <eval phase="Final" priority="1000" index="3">~ get age catagory

var ageCat as number
ageCat = hero.childfound[raxDragonA].tagvalue[Value.?]

~ multiply breath weapon damage by age catagory
field[abValue].value *= ageCat</eval>
    <eval phase="Render" priority="2000"><![CDATA[~ Generate our livename.
~ field[abValue] is the # of dice
~ field[abValue2] is the range
~ field[abValue3] is the type of dice
~ we use the tags BreathShp.Line or BreathShp.Cone for breath shape

field[livename].text = "Magma Breath (" & field[abValue].value & "d" & field[abValue3].value & " " & tagnames[BloodEner.?] & ", " & field[abValue2].value & " ft"

      if (tagis[BreathShp.Cone] <> 0) then
        field[livename].text &= " Cone"
      elseif (tagis[BreathShp.Line] <> 0) then
        field[livename].text &= " Line"
        endif

      field[livename].text &= ", Ref. half)"]]></eval>
    <eval phase="Final" priority="1000" index="2"><![CDATA[~ get dragon size
var dragSize as number
dragSize = herofield[tSize].value

~ breath range for cone
if (dragSize = -2) then
  field[abValue2].value = 15
elseif (dragSize = -1) then
  field[abValue2].value = 20
elseif (dragSize = 0) then
  field[abValue2].value = 30
elseif (dragSize = 1) then 
  field[abValue2].value = 40
elseif (dragSize = 2) then
  field[abValue2].value = 50
elseif (dragSize = 3) then
  field[abValue2].value = 60
elseif (dragSize >= 4) then
  field[abValue2].value = 70
endif

~ range for line is twice that of cone
if (tagcount[BreathShp.Line] <> 0) then
  field[abValue2].value *= 2
endif]]></eval>
    </thing>
  <thing id="rxDragUmbr" name="Dragon, Umbral" description="Some dragons are spawned between worlds, beings half of the mortal plane and another. Umbral dragons are one such draconic breed-wyrms torn between two existences. Umbral dragons have a strong connection to the Plane of Shadow and share many characteristics of the mysterious, haunted creatures of that realm. Sinister and starved in appearance, these dragons' dark scales and backward-sweeping horns cause many to mistakenly identify them as feral black dragons, but the soulwrenching scream of their devastating breath-a wave of black oblivion that draws power from the lifelessness of the Plane of Shadow-prevents such errors from being long regretted.\n\nUmbral dragons have black scales that take on a lustrous quality as the creatures age. Even their pale underbellies darken as they advance in years, making the most ancient umbral dragons appear to be composed of living shadows. Young adult and older umbral dragons' natural weapons are treated as magic weapons for the purpose of overcoming damage reduction." compset="Race">
    <fieldval field="shortname" value="Umbral Dragon"/>
    <fieldval field="rHitDice" value="7"/>
    <fieldval field="rHPStart" value="45"/>
    <fieldval field="rDEX" value="4"/>
    <fieldval field="rCON" value="3"/>
    <fieldval field="rSpeed" value="40"/>
    <fieldval field="rAC" value="6"/>
    <fieldval field="rCR" value="6"/>
    <fieldval field="rDescript" value="This sleek, dark dragon moves with a disturbing, serpentine grace, its eyes glowing as if lit from within by crimson embers."/>
    <fieldval field="rEnviron" value="any"/>
    <fieldval field="rOrgan" value="solitary"/>
    <fieldval field="rTreasure" value="triple"/>
    <fieldval field="rCHA" value="4"/>
    <fieldval field="rWIS" value="5"/>
    <fieldval field="rSTR" value="3"/>
    <fieldval field="rINT" value="4"/>
    <usesource source="VarDragons"/>
    <tag group="HasType" tag="tpDragon"/>
    <tag group="Helper" tag="Quadruped"/>
    <tag group="Hero" tag="NoDefComm"/>
    <tag group="DragType" tag="Primal" name="Dragon, Primal"/>
    <tag group="Race" tag="rTrueDrago"/>
    <tag group="Helper" tag="NotHum"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <tag group="RaceType" tag="NPC"/>
    <tag group="RaceSize" tag="Small11"/>
    <tag group="Alignment" tag="Chaotic"/>
    <tag group="Alignment" tag="Evil"/>
    <tag group="Language" tag="Any"/>
    <bootstrap thing="tmxDragAge"></bootstrap>
    <bootstrap thing="raxFrightP">
      <containerreq phase="First" priority="200">DragonAge.Juvenile</containerreq>
      </bootstrap>
    <bootstrap thing="stExtrapla"></bootstrap>
    <bootstrap thing="wTailSlap">
      <autotag group="wMain" tag="1d8_6"/>
      <autotag group="Helper" tag="NatTwoHand"/>
      </bootstrap>
    <bootstrap thing="raxDrgBrea">
      <autotag group="BreathShp" tag="Cone"/>
      <assignval field="abValue" value="2"/>
      <assignval field="abValue3" value="8"/>
      <assignval field="abText" value="negative energy"/>
      </bootstrap>
    <bootstrap thing="wBite">
      <autotag group="wMain" tag="1d6_5"/>
      <autotag group="Helper" tag="NatPrimary"/>
      <autotag group="Helper" tag="NatTwoHand"/>
      </bootstrap>
    <bootstrap thing="wClaw">
      <autotag group="Value" tag="2"/>
      <autotag group="wMain" tag="1d4_4"/>
      <autotag group="Helper" tag="NatPrimary"/>
      </bootstrap>
    <bootstrap thing="raDrSenses"></bootstrap>
    <bootstrap thing="wWing">
      <autotag group="Value" tag="2"/>
      <autotag group="wMain" tag="1d4_4"/>
      </bootstrap>
    <bootstrap thing="xFly">
      <autotag group="Maneuver" tag="Average"/>
      <autotag group="Value" tag="150"/>
      </bootstrap>
    <bootstrap thing="skKnowPlan"></bootstrap>
    <bootstrap thing="wCrush"></bootstrap>
    <bootstrap thing="wTailSweep"></bootstrap>
    <bootstrap thing="xDamRdMag">
      <containerreq phase="First" priority="200">DragonAge.YngAdult</containerreq>
      </bootstrap>
    <bootstrap thing="spDarknes2">
      <containerreq phase="First" priority="200">DragonAge.VeryYoung</containerreq>
      <autotag group="Usage" tag="AtWill"/>
      <autotag group="Helper" tag="SpellLike"/>
      </bootstrap>
    <bootstrap thing="spShadWal6">
      <containerreq phase="First" priority="200">DragonAge.Adult</containerreq>
      <autotag group="Helper" tag="SpellLike"/>
      <autotag group="Usage" tag="AtWill"/>
      </bootstrap>
    <bootstrap thing="spVampTou3">
      <containerreq phase="First" priority="200">DragonAge.Juvenile</containerreq>
      <autotag group="Usage" tag="AtWill"/>
      <autotag group="Helper" tag="SpellLike"/>
      </bootstrap>
    <bootstrap thing="spProjIma7">
      <containerreq phase="First" priority="200">DragonAge.Old</containerreq>
      <autotag group="Usage" tag="AtWill"/>
      <autotag group="Helper" tag="SpellLike"/>
      </bootstrap>
    <bootstrap thing="spFingDea8">
      <containerreq phase="First" priority="200">DragonAge.Ancient</containerreq>
      <autotag group="Helper" tag="SpellLike"/>
      <autotag group="Usage" tag="Day"/>
      <assignval field="trkMax" value="3"/>
      </bootstrap>
    <bootstrap thing="spShades9">
      <containerreq phase="First" priority="200">DragonAge.GreatWyrm</containerreq>
      <autotag group="Usage" tag="AtWill"/>
      <autotag group="Helper" tag="SpellLike"/>
      </bootstrap>
    <bootstrap thing="xImmCold">
      <containerreq phase="First" priority="200">DragonAge.Wyrmling</containerreq>
      </bootstrap>
    <bootstrap thing="raxUmbScio">
      <containerreq phase="First" priority="200">DragonAge.Wyrmling</containerreq>
      </bootstrap>
    <bootstrap thing="raUmbCreaS">
      <containerreq phase="First" priority="200">DragonAge.Ancient</containerreq>
      </bootstrap>
    <bootstrap thing="raUmbEnerD">
      <containerreq phase="First" priority="200">DragonAge.GreatWyrm</containerreq>
      </bootstrap>
    <bootstrap thing="raUmbGhosB">
      <containerreq phase="First" priority="200">DragonAge.Young</containerreq>
      </bootstrap>
    <bootstrap thing="skKnowArca"></bootstrap>
    <bootstrap thing="skKnowLoc"></bootstrap>
    <bootstrap thing="fHover">
      <containerreq phase="First" priority="200">DragonAge.Wyrmling</containerreq>
      </bootstrap>
    <bootstrap thing="fImpInit">
      <containerreq phase="First" priority="200">DragonAge.Wyrmling</containerreq>
      </bootstrap>
    <bootstrap thing="fMultiAtt">
      <containerreq phase="First" priority="200">DragonAge.Wyrmling</containerreq>
      </bootstrap>
    <bootstrap thing="fPowerAtt">
      <containerreq phase="First" priority="200">DragonAge.Wyrmling</containerreq>
      </bootstrap>
    <bootstrap thing="raxUmbShaB">
      <containerreq phase="First" priority="200">DragonAge.Adult</containerreq>
      </bootstrap>
    <bootstrap thing="lDraconic">
      <containerreq phase="First" priority="200">DragonAge.Wyrmling</containerreq>
      </bootstrap>
    <bootstrap thing="fVitStr">
      <containerreq phase="First" priority="200">DragonAge.VeryYoung</containerreq>
      </bootstrap>
    <bootstrap thing="fImpVitStr">
      <containerreq phase="First" priority="200">DragonAge.YngAdult</containerreq>
      </bootstrap>
    <bootstrap thing="fSkillFoc">
      <containerreq phase="First" priority="200">DragonAge.Juvenile</containerreq>
      <autotag group="Target" tag="skStealth"/>
      </bootstrap>
    <bootstrap thing="fSnatch">
      <containerreq phase="First" priority="200">DragonAge.Adult</containerreq>
      </bootstrap>
    <bootstrap thing="fImpCrit">
      <containerreq phase="First" priority="200">DragonAge.Young</containerreq>
      <autotag group="Target" tag="wBite"/>
      </bootstrap>
    <bootstrap thing="fCritFoc">
      <containerreq phase="First" priority="200">DragonAge.MatAdult</containerreq>
      </bootstrap>
    <bootstrap thing="fBlindCrit">
      <containerreq phase="First" priority="200">DragonAge.VeryOld</containerreq>
      </bootstrap>
    <bootstrap thing="fFlybyAt">
      <containerreq phase="First" priority="200">DragonAge.Old</containerreq>
      </bootstrap>
    <bootstrap thing="fGrtVitStr">
      <containerreq phase="First" priority="200">DragonAge.Ancient</containerreq>
      </bootstrap>
    <bootstrap thing="fImpVitStr">
      <containerreq phase="First" priority="200">DragonAge.Old</containerreq>
      </bootstrap>
    <bootstrap thing="skKnowRel"></bootstrap>
    <bootstrap thing="fStunCrit">
      <containerreq phase="First" priority="200">DragonAge.GreatWyrm</containerreq>
      </bootstrap>
    <bootstrap thing="fStagCrit">
      <containerreq phase="First" priority="200">DragonAge.Wyrm</containerreq>
      </bootstrap>
    <bootstrap thing="xSplRs">
      <containerreq phase="First" priority="200">DragonAge.YngAdult</containerreq>
      </bootstrap>
    <eval phase="First" priority="550" index="2"><![CDATA[~ set caster level of racial spells

~age catagory
var ageCat as number
ageCat = hero.childfound[raxDragonA].tagvalue[Value.?]

perform hero.findchild[BaseRace].setfocus

~ set caster level
if (ageCat >= 3) then
 perform focus.assign[SplLookup.cHelpSor]
 perform focus.assign[sClass.cHelpClr]
 focus.field[cMagicLev].value = 2*ageCat - 5
endif

perform state.clearfocus]]></eval>
    <eval phase="PreLevel" priority="4000" index="3">~ innate skill ranks 
var ageCat as number
ageCat = hero.childfound[raxDragonA].tagvalue[Value.?]

if (ageCat = 1) then
  #skillinnate[skBluff] += 7
  #skillinnate[skDiplo] += 7
  #skillinnate[skFly] += 7
  #skillinnate[skKnowArca] += 7
  #skillinnate[skKnowPlan] += 7
  #skillinnate[skPercep] += 7
  #skillinnate[skSenseMot] += 7
  #skillinnate[skStealth] += 7

elseif (ageCat = 2) then
  #skillinnate[skBluff] += 9
  #skillinnate[skDiplo] += 9
  #skillinnate[skFly] += 9
  #skillinnate[skKnowArca] += 9
  #skillinnate[skKnowLoc] += 9
  #skillinnate[skKnowPlan] += 9
  #skillinnate[skPercep] += 9
  #skillinnate[skSenseMot] += 9
  #skillinnate[skStealth] += 9

elseif (ageCat = 3) then
  #skillinnate[skBluff] += 11
  #skillinnate[skDiplo] += 11
  #skillinnate[skFly] += 11
  #skillinnate[skKnowArca] += 11
  #skillinnate[skKnowLoc] += 11
  #skillinnate[skKnowPlan] += 11
  #skillinnate[skPercep] += 11
  #skillinnate[skSenseMot] += 11
  #skillinnate[skStealth] += 11

elseif (ageCat = 4) then
  #skillinnate[skBluff] += 13
  #skillinnate[skDiplo] += 13
  #skillinnate[skFly] += 13
  #skillinnate[skKnowArca] += 13
  #skillinnate[skKnowLoc] += 13
  #skillinnate[skKnowPlan] += 13
  #skillinnate[skPercep] += 13
  #skillinnate[skSenseMot] += 13
  #skillinnate[skStealth] += 13
  #skillinnate[skSurvival] += 13

elseif (ageCat = 5) then
  #skillinnate[skBluff] += 15
  #skillinnate[skDiplo] += 15
  #skillinnate[skFly] += 15
  #skillinnate[skKnowArca] += 15
  #skillinnate[skKnowLoc] += 15
  #skillinnate[skKnowPlan] += 15
  #skillinnate[skPercep] += 15
  #skillinnate[skSenseMot] += 15
  #skillinnate[skStealth] += 15
  #skillinnate[skSurvival] += 15

elseif (ageCat = 6) then
  #skillinnate[skBluff] += 17
  #skillinnate[skDiplo] += 17
  #skillinnate[skFly] += 17
  #skillinnate[skKnowArca] += 17
  #skillinnate[skKnowLoc] += 17
  #skillinnate[skKnowPlan] += 17
  #skillinnate[skPercep] += 17
  #skillinnate[skSenseMot] += 17
  #skillinnate[skSpellcr] += 17
  #skillinnate[skStealth] += 17
  #skillinnate[skSurvival] += 17

elseif (ageCat = 7) then
  #skillinnate[skBluff] += 19
  #skillinnate[skDiplo] += 19
  #skillinnate[skFly] += 19
  #skillinnate[skKnowArca] += 19
  #skillinnate[skKnowLoc] += 19
  #skillinnate[skKnowPlan] += 19
  #skillinnate[skPercep] += 19
  #skillinnate[skSenseMot] += 19
  #skillinnate[skSpellcr] += 19
  #skillinnate[skStealth] += 19
  #skillinnate[skSurvival] += 19

elseif (ageCat = 8) then 
  #skillinnate[skAppraise] += 21
  #skillinnate[skBluff] += 21
  #skillinnate[skDiplo] += 21
  #skillinnate[skFly] += 21
  #skillinnate[skKnowArca] += 21
  #skillinnate[skKnowLoc] += 21
  #skillinnate[skKnowPlan] += 21
  #skillinnate[skPercep] += 21
  #skillinnate[skSenseMot] += 21
  #skillinnate[skSpellcr] += 21
  #skillinnate[skStealth] += 21
  #skillinnate[skSurvival] += 21

elseif (ageCat = 9) then
  #skillinnate[skAppraise] += 23
  #skillinnate[skBluff] += 23
  #skillinnate[skDiplo] += 23
  #skillinnate[skFly] += 23
  #skillinnate[skKnowArca] += 23
  #skillinnate[skKnowLoc] += 23
  #skillinnate[skKnowPlan] += 23
  #skillinnate[skPercep] += 23
  #skillinnate[skSenseMot] += 23
  #skillinnate[skSpellcr] += 23
  #skillinnate[skStealth] += 23
  #skillinnate[skSurvival] += 23

elseif (ageCat = 10) then
  #skillinnate[skAppraise] += 25
  #skillinnate[skBluff] += 25
  #skillinnate[skDiplo] += 25
  #skillinnate[skFly] += 25
  #skillinnate[skKnowArca] += 25
  #skillinnate[skKnowLoc] += 25
  #skillinnate[skKnowPlan] += 25
  #skillinnate[skKnowRel] += 25
  #skillinnate[skPercep] += 25
  #skillinnate[skSenseMot] += 25
  #skillinnate[skSpellcr] += 25
  #skillinnate[skStealth] += 25
  #skillinnate[skSurvival] += 25

elseif (ageCat = 11) then
  #skillinnate[skAppraise] += 27
  #skillinnate[skBluff] += 27
  #skillinnate[skDiplo] += 27
  #skillinnate[skFly] += 27
  #skillinnate[skKnowArca] += 27
  #skillinnate[skKnowLoc] += 27
  #skillinnate[skKnowPlan] += 27
  #skillinnate[skKnowRel] += 27
  #skillinnate[skPercep] += 27
  #skillinnate[skSenseMot] += 27
  #skillinnate[skSpellcr] += 27
  #skillinnate[skStealth] += 27
  #skillinnate[skSurvival] += 27

elseif (ageCat = 12) then
  #skillinnate[skAppraise] += 29
  #skillinnate[skBluff] += 29
  #skillinnate[skDiplo] += 29
  #skillinnate[skFly] += 29
  #skillinnate[skIntim] += 29
  #skillinnate[skKnowArca] += 29
  #skillinnate[skKnowLoc] += 29
  #skillinnate[skKnowPlan] += 29
  #skillinnate[skKnowRel] += 29
  #skillinnate[skPercep] += 29
  #skillinnate[skSenseMot] += 29
  #skillinnate[skSpellcr] += 29
  #skillinnate[skStealth] += 29
  #skillinnate[skSurvival] += 29

endif
      <before name="Skill Bonus Feats"/>
      </eval>
    <eval phase="Final" priority="1000"><![CDATA[~ set Frightful Presence, DR, SR, and CL
var ageCat as number
ageCat = hero.childfound[raxDragonA].tagvalue[Value.?]

~ frightful presesnce
if (ageCat >= 4) then
  hero.child[raxFrightP].field[abValue].value = 30 * ageCat
endif

~ Dragons have SR = to 11 + thier CR
if (ageCat >= 5) then
  var damage as number
  damage = herofield[tCR].value + 11
  #applysr[damage]
endif

~ Dragons have spell like abilities of CL = to TOTAL (not racial) hit dice
if (ageCat >= 2) then
  var CL as number
  CL = herofield[tHitDice].value
  field[rSpCastLev].value = CL
endif

~ DR 
if (ageCat >= 5) then
  var drVal as number
  drVal = (ageCat - 5)/2
  drVal = 5 * (1 + round(drVal,0,-1))
  #applydr[xDamRdMag,drVal]
endif]]></eval>
    </thing>
  <thing id="raxUmbScio" name="Umbral Scion" description="Umbral dragons have negative energy affinity and are immune to energy drain and death effects." compset="RaceSpec">
    <usesource source="VarDragons"/>
    <tag group="AbilType" tag="Extra"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <tag group="Helper" tag="ShowSpec"/>
    <bootstrap thing="raNegAffin"></bootstrap>
    <bootstrap thing="xImmEnerDr"></bootstrap>
    <bootstrap thing="xImmDeath"></bootstrap>
    </thing>
  <thing id="raxUmbShaB" name="Shadow Breath" description=" Three times per day, an adult or older umbral dragon can breathe a cone of shadows. Creatures who fail a Fortitude save are blinded for 1d4 rounds and take 1 point of Str drain per age category possessed by the dragon. A successful save negates the blindness and reduces Str drain to 1d4 points." compset="RaceSpec">
    <usesource source="VarDragons"/>
    <tag group="Helper" tag="ShowSpec" name="Show Spec" abbrev="Show Spec"/>
    <tag group="StandardDC" tag="aCON" name="Constitution" abbrev="Constitution"/>
    <tag group="AbilType" tag="Super" name="Supernatural Ability" abbrev=" (Su)"/>
    <tag group="SpecType" tag="Attack"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <tag group="Custom" tag="DragonBrea"/>
    <eval phase="Final" priority="1000"><![CDATA[var ageCat as number
ageCat= hero.child[raxDragonA].tagvalue[Value.?]

~ get dragon size
var dragSize as number
dragSize = herofield[tSize].value

~ breath range for cone
if (dragSize = -2) then
  field[abValue2].value = 15
elseif (dragSize = -1) then
  field[abValue2].value = 20
elseif (dragSize = 0) then
  field[abValue2].value = 30
elseif (dragSize = 1) then 
  field[abValue2].value = 40
elseif (dragSize = 2) then
  field[abValue2].value = 50
elseif (dragSize = 3) then
  field[abValue2].value = 60
elseif (dragSize >= 4) then
  field[abValue2].value = 70
endif

field[livename].text = "Shadow Breath (" & field[abValue2].value & " ft.-cone, blindness 1d4 rnds + " & ageCat & " Str drain, Fort neg./1d4 Str drain)"]]></eval>
    </thing>
  <thing id="rxDragFore" name="Dragon, Forest" description="Forest dragons, or dilung, are fickle and malevolent dragons that dwell in deep, rugged woodlands. While a forest dragon can fly, it prefers to stalk the earth, flying only to pursue objects of its wrath." compset="Race">
    <fieldval field="shortname" value="Forest Dragon"/>
    <fieldval field="rHitDice" value="7"/>
    <fieldval field="rHPStart" value="45"/>
    <fieldval field="rDEX" value="4"/>
    <fieldval field="rSpeed" value="40"/>
    <fieldval field="rAC" value="6"/>
    <fieldval field="rCR" value="6"/>
    <fieldval field="rDescript" value="This massive serpentine and wingless creature has jade scales and antlers, and sounds like grinding stones as it stalks forth."/>
    <fieldval field="rEnviron" value="any forest"/>
    <fieldval field="rOrgan" value="solitary"/>
    <fieldval field="rTreasure" value="triple"/>
    <fieldval field="rWIS" value="1"/>
    <fieldval field="rSTR" value="5"/>
    <fieldval field="rCON" value="4"/>
    <usesource source="VarDragons"/>
    <tag group="Helper" tag="Quadruped"/>
    <tag group="Hero" tag="NoDefComm"/>
    <tag group="DragType" tag="Imperial" name="Dragon, Imperial"/>
    <tag group="Race" tag="rTrueDrago"/>
    <tag group="Helper" tag="NotHum"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <tag group="RaceType" tag="NPC"/>
    <tag group="RaceSize" tag="Small11"/>
    <tag group="Alignment" tag="Chaotic"/>
    <tag group="Alignment" tag="Evil"/>
    <tag group="HasType" tag="tpDragon"/>
    <tag group="ClassSkill" tag="skAcrobat"/>
    <tag group="Language" tag="Any"/>
    <bootstrap thing="raxDrgBrea">
      <autotag group="BreathShp" tag="Cone"/>
      <assignval field="abValue" value="2"/>
      <assignval field="abValue3" value="6"/>
      <assignval field="abText" value="piercing"/>
      </bootstrap>
    <bootstrap thing="wBite">
      <autotag group="wMain" tag="1d6_5"/>
      <autotag group="Helper" tag="NatPrimary"/>
      <autotag group="Helper" tag="NatTwoHand"/>
      </bootstrap>
    <bootstrap thing="wClaw">
      <autotag group="Value" tag="2"/>
      <autotag group="wMain" tag="1d4_4"/>
      <autotag group="Helper" tag="NatPrimary"/>
      </bootstrap>
    <bootstrap thing="raDrSenses"></bootstrap>
    <bootstrap thing="xFly">
      <autotag group="Maneuver" tag="Average"/>
      <autotag group="Value" tag="150"/>
      </bootstrap>
    <bootstrap thing="wCrush"></bootstrap>
    <bootstrap thing="wTailSweep"></bootstrap>
    <bootstrap thing="xDamRdAdam">
      <containerreq phase="First" priority="200">DragonAge.YngAdult</containerreq>
      </bootstrap>
    <bootstrap thing="xImmPois">
      <containerreq phase="First" priority="200">DragonAge.Wyrmling</containerreq>
      </bootstrap>
    <bootstrap thing="stEarth"></bootstrap>
    <bootstrap thing="raWoodStr">
      <containerreq phase="First" priority="200">DragonAge.Wyrmling</containerreq>
      </bootstrap>
    <bootstrap thing="raSoundImi">
      <containerreq phase="First" priority="200">DragonAge.VeryYoung</containerreq>
      </bootstrap>
    <bootstrap thing="spAnimPla7">
      <containerreq phase="First" priority="200">DragonAge.Ancient</containerreq>
      <autotag group="Usage" tag="AtWill"/>
      <autotag group="Helper" tag="SpellLike"/>
      </bootstrap>
    <bootstrap thing="spBlight5">
      <containerreq phase="First" priority="200">DragonAge.Adult</containerreq>
      <autotag group="Usage" tag="AtWill"/>
      <autotag group="Helper" tag="SpellLike"/>
      </bootstrap>
    <bootstrap thing="spEarthqu8">
      <containerreq phase="First" priority="200">DragonAge.GreatWyrm</containerreq>
      <autotag group="Usage" tag="AtWill"/>
      <autotag group="Helper" tag="SpellLike"/>
      </bootstrap>
    <bootstrap thing="spEntangl1">
      <containerreq phase="First" priority="200">DragonAge.Juvenile</containerreq>
      <autotag group="Usage" tag="AtWill"/>
      <autotag group="Helper" tag="SpellLike"/>
      </bootstrap>
    <bootstrap thing="spPasswit1">
      <containerreq phase="First" priority="200">DragonAge.Young</containerreq>
      <autotag group="Usage" tag="AtWill"/>
      <autotag group="Helper" tag="SpellLike"/>
      </bootstrap>
    <bootstrap thing="spTreeStr5">
      <containerreq phase="First" priority="200">DragonAge.Old</containerreq>
      <autotag group="Usage" tag="AtWill"/>
      <autotag group="Helper" tag="SpellLike"/>
      </bootstrap>
    <bootstrap thing="raChangeSh">
      <autotag group="Usage" tag="Day"/>
      <assignval field="livename" value="Change Shape (any humanoid; {i}polymorph{/i})"/>
      <assignval field="trkMax" value="3"/>
      </bootstrap>
    <bootstrap thing="raDestCrus">
      <containerreq phase="First" priority="200">DragonAge.Old</containerreq>
      </bootstrap>
    <bootstrap thing="raElemBre">
      <containerreq phase="First" priority="200">DragonAge.Ancient</containerreq>
      </bootstrap>
    <bootstrap thing="raxForStoD">
      <containerreq phase="First" priority="200">DragonAge.GreatWyrm</containerreq>
      </bootstrap>
    <bootstrap thing="skKnowArca"></bootstrap>
    <bootstrap thing="skKnowNat"></bootstrap>
    <bootstrap thing="lDraconic">
      <containerreq phase="First" priority="200">DragonAge.Wyrmling</containerreq>
      </bootstrap>
    <bootstrap thing="fImpInit">
      <containerreq phase="First" priority="200">DragonAge.Wyrmling</containerreq>
      </bootstrap>
    <bootstrap thing="fMultiAtt">
      <containerreq phase="First" priority="200">DragonAge.Wyrmling</containerreq>
      </bootstrap>
    <bootstrap thing="fSkillFoc">
      <containerreq phase="First" priority="200">DragonAge.Wyrmling</containerreq>
      <autotag group="Target" tag="skStealth"/>
      </bootstrap>
    <bootstrap thing="fToughness">
      <containerreq phase="First" priority="200">DragonAge.Wyrmling</containerreq>
      </bootstrap>
    <bootstrap thing="fWepFoc">
      <containerreq phase="First" priority="200">DragonAge.VeryYoung</containerreq>
      <autotag group="Target" tag="wBite"/>
      </bootstrap>
    <bootstrap thing="fPowerAtt">
      <containerreq phase="First" priority="200">DragonAge.Young</containerreq>
      </bootstrap>
    <bootstrap thing="tmxDragAge"></bootstrap>
    <bootstrap thing="xBurrow">
      <autotag group="Value" tag="20"/>
      </bootstrap>
    <bootstrap thing="xClimb">
      <autotag group="Value" tag="30"/>
      </bootstrap>
    <bootstrap thing="raxFrightP">
      <containerreq phase="First" priority="200">DragonAge.Juvenile</containerreq>
      </bootstrap>
    <bootstrap thing="fImpNatArm">
      <containerreq phase="First" priority="200">DragonAge.Adult</containerreq>
      </bootstrap>
    <bootstrap thing="fIronWill">
      <containerreq phase="First" priority="200">DragonAge.YngAdult</containerreq>
      </bootstrap>
    <bootstrap thing="fStealthy">
      <containerreq phase="First" priority="200">DragonAge.Juvenile</containerreq>
      </bootstrap>
    <bootstrap thing="fComCast">
      <containerreq phase="First" priority="200">DragonAge.Old</containerreq>
      </bootstrap>
    <bootstrap thing="fDeceit">
      <containerreq phase="First" priority="200">DragonAge.MatAdult</containerreq>
      </bootstrap>
    <bootstrap thing="fGrtWepFoc">
      <containerreq phase="First" priority="200">DragonAge.VeryOld</containerreq>
      <autotag group="Target" tag="wBite"/>
      <autotag group="thing" tag="skipprereq"/>
      </bootstrap>
    <bootstrap thing="fImpCrit">
      <containerreq phase="First" priority="200">DragonAge.Ancient</containerreq>
      <autotag group="Target" tag="wBite"/>
      </bootstrap>
    <bootstrap thing="skKnowLoc"></bootstrap>
    <bootstrap thing="fImpBull">
      <containerreq phase="First" priority="200">DragonAge.Wyrm</containerreq>
      </bootstrap>
    <bootstrap thing="fSnatch">
      <containerreq phase="First" priority="200">DragonAge.GreatWyrm</containerreq>
      </bootstrap>
    <bootstrap thing="wGore">
      <autotag group="wMain" tag="1d6_5"/>
      <autotag group="Helper" tag="NatPrimary"/>
      <autotag group="Helper" tag="NatTwoHand"/>
      </bootstrap>
    <bootstrap thing="wTailSlap">
      <autotag group="wMain" tag="1d8_6"/>
      <autotag group="Helper" tag="NatTwoHand"/>
      </bootstrap>
    <eval phase="Final" priority="1000"><![CDATA[~ set Frightful Presence, DR, SR, and CL
var ageCat as number
ageCat = hero.childfound[raxDragonA].tagvalue[Value.?]

~ frightful presesnce
if (ageCat >= 4) then
  hero.child[raxFrightP].field[abValue].value = 30 * ageCat
endif

~ Dragons have SR = to 11 + thier CR
~if (ageCat >= 5) then
~  var damage as number
~  damage = herofield[tCR].value + 11
~  #applysr[damage]
~endif

~ Dragons have spell like abilities of CL = to TOTAL (not racial) hit dice
if (ageCat >= 3) then
  var CL as number
  CL = herofield[tHitDice].value
  field[rSpCastLev].value = CL
endif

~ DR 
if (ageCat >= 11) then
  #applydr[xDamRdAdam,15]
elseif (ageCat >= 9) then
  #applydr[xDamRdAdam,10]
elseif (ageCat >= 7) then
  #applydr[xDamRdAdam,5]
elseif (ageCat >= 5) then
  #applydr[xDamRdAdam,2]
endif]]></eval>
    <eval phase="First" priority="550" index="2"><![CDATA[~ set caster level of racial spells

~age catagory
var ageCat as number
ageCat = hero.childfound[raxDragonA].tagvalue[Value.?]

perform hero.findchild[BaseRace].setfocus

~ set caster level
if (ageCat >= 3) then
 perform focus.assign[SplLookup.cHelpSor]
 focus.field[cMagicLev].value = 2*ageCat - 5
endif

perform state.clearfocus]]></eval>
    <eval phase="PreLevel" priority="4000" index="3">~ innate skill ranks 
var ageCat as number
ageCat = hero.childfound[raxDragonA].tagvalue[Value.?]

if (ageCat = 1) then
  #skillinnate[skAcrobat] += 4
  #skillinnate[skBluff] += 7
  #skillinnate[skClimb] += 7
  #skillinnate[skIntim] += 7
  #skillinnate[skPercep] += 7
  #skillinnate[skStealth] += 7
  #skillinnate[skSurvival] += 3

elseif (ageCat = 2) then
  #skillinnate[skAcrobat] += 5
  #skillinnate[skBluff] += 9
  #skillinnate[skClimb] += 9
  #skillinnate[skIntim] += 9
  #skillinnate[skKnowArca] += 4
  #skillinnate[skKnowNat] += 4
  #skillinnate[skPercep] += 9
  #skillinnate[skStealth] += 9
  #skillinnate[skSurvival] += 5

elseif (ageCat = 3) then
  #skillinnate[skAcrobat] += 6
  #skillinnate[skBluff] += 11
  #skillinnate[skClimb] += 11
  #skillinnate[skIntim] += 11
  #skillinnate[skKnowArca] += 5
  #skillinnate[skKnowNat] += 5
  #skillinnate[skPercep] += 11
  #skillinnate[skStealth] += 11
  #skillinnate[skSurvival] += 6

elseif (ageCat = 4) then
  #skillinnate[skAcrobat] += 7
  #skillinnate[skBluff] += 13
  #skillinnate[skClimb] += 13
  #skillinnate[skIntim] += 13
  #skillinnate[skFly] += 13
  #skillinnate[skKnowArca] += 6
  #skillinnate[skKnowNat] += 6
  #skillinnate[skPercep] += 13
  #skillinnate[skStealth] += 13
  #skillinnate[skSurvival] += 7

elseif (ageCat = 5) then
  #skillinnate[skAcrobat] += 8
  #skillinnate[skBluff] += 15
  #skillinnate[skClimb] += 15
  #skillinnate[skIntim] += 15
  #skillinnate[skFly] += 15
  #skillinnate[skKnowArca] += 7
  #skillinnate[skKnowNat] += 7
  #skillinnate[skPercep] += 15
  #skillinnate[skStealth] += 15
  #skillinnate[skSurvival] += 8

elseif (ageCat = 6) then
  #skillinnate[skAcrobat] += 8
  #skillinnate[skBluff] += 17
  #skillinnate[skClimb] += 17
  #skillinnate[skIntim] += 17
  #skillinnate[skFly] += 17
  #skillinnate[skKnowArca] += 8
  #skillinnate[skKnowNat] += 8
  #skillinnate[skPercep] += 17
  #skillinnate[skSpellcr] += 17
  #skillinnate[skStealth] += 17
  #skillinnate[skSurvival] += 10

elseif (ageCat = 7) then
  #skillinnate[skAcrobat] += 9
  #skillinnate[skBluff] += 19
  #skillinnate[skClimb] += 19
  #skillinnate[skIntim] += 19
  #skillinnate[skFly] += 19
  #skillinnate[skKnowArca] += 9
  #skillinnate[skKnowNat] += 9
  #skillinnate[skPercep] += 19
  #skillinnate[skSpellcr] += 19
  #skillinnate[skStealth] += 19
  #skillinnate[skSurvival] += 11

elseif (ageCat = 8) then 
  #skillinnate[skAcrobat] += 10
  #skillinnate[skBluff] += 21
  #skillinnate[skClimb] += 21
  #skillinnate[skIntim] += 21
  #skillinnate[skEscape] += 21
  #skillinnate[skFly] += 21
  #skillinnate[skKnowArca] += 10
  #skillinnate[skKnowNat] += 10
  #skillinnate[skPercep] += 21
  #skillinnate[skSpellcr] += 21
  #skillinnate[skStealth] += 21
  #skillinnate[skSurvival] += 12

elseif (ageCat = 9) then
  #skillinnate[skAcrobat] += 11
  #skillinnate[skBluff] += 23
  #skillinnate[skClimb] += 23
  #skillinnate[skIntim] += 23
  #skillinnate[skEscape] += 23
  #skillinnate[skFly] += 23
  #skillinnate[skKnowArca] += 11
  #skillinnate[skKnowNat] += 11
  #skillinnate[skPercep] += 23
  #skillinnate[skSpellcr] += 23
  #skillinnate[skStealth] += 23
  #skillinnate[skSurvival] += 13

elseif (ageCat = 10) then
  #skillinnate[skAcrobat] += 23
  #skillinnate[skBluff] += 25
  #skillinnate[skClimb] += 23
  #skillinnate[skEscape] += 25
  #skillinnate[skFly] += 12
  #skillinnate[skIntim] += 25
  #skillinnate[skKnowArca] += 23
  #skillinnate[skKnowNat] += 23
  #skillinnate[skPercep] += 25
  #skillinnate[skSpellcr] += 25
  #skillinnate[skStealth] += 25
  #skillinnate[skSurvival] += 21

elseif (ageCat = 11) then
  #skillinnate[skAcrobat] += 25
  #skillinnate[skBluff] += 27
  #skillinnate[skClimb] += 25
  #skillinnate[skEscape] += 27
  #skillinnate[skFly] += 12
  #skillinnate[skIntim] += 27
  #skillinnate[skKnowArca] += 25
  #skillinnate[skKnowNat] += 25
  #skillinnate[skPercep] += 27
  #skillinnate[skSpellcr] += 27
  #skillinnate[skStealth] += 27
  #skillinnate[skSurvival] += 23

elseif (ageCat = 12) then
  #skillinnate[skAcrobat] += 27
  #skillinnate[skBluff] += 29
  #skillinnate[skClimb] += 27
  #skillinnate[skEscape] += 29
  #skillinnate[skFly] += 14
  #skillinnate[skIntim] += 29
  #skillinnate[skKnowArca] += 27
  #skillinnate[skKnowLoc] += 27
  #skillinnate[skKnowNat] += 27
  #skillinnate[skPercep] += 29
  #skillinnate[skSpellcr] += 29
  #skillinnate[skStealth] += 29
  #skillinnate[skSurvival] += 25

endif
      <before name="Skill Bonus Feats"/>
      </eval>
    </thing>
  <thing id="raxForStoD" name="Stony Death" description="Any creature reduced to 0 or fewer hit points by a great wyrm forest dragon's breath weapon must also make a Fortitude save (same DC as the forest dragon's breath weapon) or be petrified as the flesh to stone spell. This is a death effect." compset="RaceSpec">
    <usesource source="VarDragons"/>
    <tag group="StandardDC" tag="aCON"/>
    <tag group="AbilType" tag="Super"/>
    <tag group="SpecType" tag="Attack"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <tag group="Helper" tag="ShowSpec"/>
    </thing>
  <thing id="rxDragSea" name="Dragon, Sea" description="Infused with the power of waves and storms, sea dragons-or jiaolungs, as they are known in many lands-are draconic protectors of oceans and their creatures. Possessing tempestuous natures, sea dragons wander widely, sometimes claiming thousands of miles of ocean and coastlines as their protectorates." compset="Race">
    <fieldval field="shortname" value="Sea Dragon"/>
    <fieldval field="rHitDice" value="5"/>
    <fieldval field="rDEX" value="4"/>
    <fieldval field="rSpeed" value="40"/>
    <fieldval field="rAC" value="5"/>
    <fieldval field="rCR" value="4"/>
    <fieldval field="rDescript" value="The long, undulating body of this serpentine dragon rolls and bends with scales the color of the ocean's waves."/>
    <fieldval field="rEnviron" value="any water"/>
    <fieldval field="rOrgan" value="solitary"/>
    <fieldval field="rTreasure" value="triple"/>
    <fieldval field="rWIS" value="5"/>
    <fieldval field="rSTR" value="3"/>
    <fieldval field="rCON" value="3"/>
    <fieldval field="rHPStart" value="32"/>
    <fieldval field="rINT" value="4"/>
    <fieldval field="rCHA" value="4"/>
    <usesource source="VarDragons"/>
    <tag group="Race" tag="rTrueDrago"/>
    <tag group="Helper" tag="NotHum"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <tag group="RaceType" tag="NPC"/>
    <tag group="RaceSize" tag="Small11"/>
    <tag group="Alignment" tag="Chaotic"/>
    <tag group="HasType" tag="tpDragon"/>
    <tag group="Language" tag="Any"/>
    <tag group="DragType" tag="Imperial" name="Dragon, Imperial"/>
    <tag group="Helper" tag="Quadruped"/>
    <tag group="Hero" tag="NoDefComm"/>
    <tag group="Alignment" tag="Good"/>
    <bootstrap thing="xFly">
      <autotag group="Maneuver" tag="Average"/>
      <autotag group="Value" tag="150"/>
      </bootstrap>
    <bootstrap thing="wCrush"></bootstrap>
    <bootstrap thing="wTailSweep"></bootstrap>
    <bootstrap thing="raChangeSh">
      <containerreq phase="First" priority="200">DragonAge.Young</containerreq>
      <autotag group="Usage" tag="Day"/>
      <assignval field="trkMax" value="3"/>
      <assignval field="livename" value="Change Shape (any humanoid; {i}polymorph{/i})"/>
      </bootstrap>
    <bootstrap thing="skKnowArca"></bootstrap>
    <bootstrap thing="skKnowNat"></bootstrap>
    <bootstrap thing="lDraconic">
      <containerreq phase="First" priority="200">DragonAge.Wyrmling</containerreq>
      </bootstrap>
    <bootstrap thing="tmxDragAge"></bootstrap>
    <bootstrap thing="xSwim">
      <autotag group="Value" tag="60"/>
      </bootstrap>
    <bootstrap thing="wGore">
      <autotag group="wMain" tag="1d6_5"/>
      <autotag group="Helper" tag="NatPrimary"/>
      <autotag group="Helper" tag="NatTwoHand"/>
      </bootstrap>
    <bootstrap thing="wTailSlap">
      <autotag group="wMain" tag="1d8_6"/>
      <autotag group="Helper" tag="NatTwoHand"/>
      </bootstrap>
    <bootstrap thing="raxDrgBrea">
      <autotag group="BreathShp" tag="Cone"/>
      <autotag group="BloodEner" tag="Fire"/>
      <assignval field="abValue3" value="6"/>
      <assignval field="abValue" value="2"/>
      </bootstrap>
    <bootstrap thing="stWater"></bootstrap>
    <bootstrap thing="wBite">
      <autotag group="wMain" tag="1d6_5"/>
      <autotag group="Helper" tag="NatPrimary"/>
      <autotag group="Helper" tag="NatTwoHand"/>
      </bootstrap>
    <bootstrap thing="wClaw">
      <autotag group="Value" tag="2"/>
      <autotag group="wMain" tag="1d4_4"/>
      <autotag group="Helper" tag="NatPrimary"/>
      </bootstrap>
    <bootstrap thing="raDrSenses"></bootstrap>
    <bootstrap thing="raWaBreath">
      <containerreq phase="First" priority="200">DragonAge.Wyrmling</containerreq>
      </bootstrap>
    <bootstrap thing="xImmElec">
      <containerreq phase="First" priority="200">DragonAge.Wyrmling</containerreq>
      </bootstrap>
    <bootstrap thing="raxSeaBeat">
      <containerreq phase="First" priority="200">DragonAge.VeryYoung</containerreq>
      <autotag group="BreathShp" tag="Line"/>
      <assignval field="abValue3" value="6"/>
      <assignval field="abValue" value="2"/>
      </bootstrap>
    <bootstrap thing="spCallLig3">
      <containerreq phase="First" priority="200">DragonAge.Adult</containerreq>
      <autotag group="Usage" tag="AtWill"/>
      <autotag group="Helper" tag="SpellLike"/>
      </bootstrap>
    <bootstrap thing="spContWat6">
      <containerreq phase="First" priority="200">DragonAge.Old</containerreq>
      <autotag group="Usage" tag="AtWill"/>
      <autotag group="Helper" tag="SpellLike"/>
      </bootstrap>
    <bootstrap thing="spCreaWat0">
      <containerreq phase="First" priority="200">DragonAge.Young</containerreq>
      <autotag group="Usage" tag="AtWill"/>
      <autotag group="Helper" tag="SpellLike"/>
      </bootstrap>
    <bootstrap thing="spHydrPus1">
      <containerreq phase="First" priority="200">DragonAge.Juvenile</containerreq>
      <autotag group="Usage" tag="AtWill"/>
      <autotag group="Helper" tag="SpellLike"/>
      </bootstrap>
    <bootstrap thing="spVortex7">
      <containerreq phase="First" priority="200">DragonAge.GreatWyrm</containerreq>
      <autotag group="Usage" tag="AtWill"/>
      <autotag group="Helper" tag="SpellLike"/>
      </bootstrap>
    <bootstrap thing="spWateWal3">
      <containerreq phase="First" priority="200">DragonAge.Ancient</containerreq>
      <autotag group="Usage" tag="AtWill"/>
      <autotag group="Helper" tag="SpellLike"/>
      </bootstrap>
    <bootstrap thing="raSeaStrid">
      <containerreq phase="First" priority="200">DragonAge.Old</containerreq>
      </bootstrap>
    <bootstrap thing="raxSeaTidW">
      <containerreq phase="First" priority="200">DragonAge.GreatWyrm</containerreq>
      </bootstrap>
    <bootstrap thing="raxSeaUnfe">
      <containerreq phase="First" priority="200">DragonAge.Juvenile</containerreq>
      </bootstrap>
    <bootstrap thing="fAlertness">
      <containerreq phase="First" priority="200">DragonAge.Wyrmling</containerreq>
      </bootstrap>
    <bootstrap thing="fGreatFort">
      <containerreq phase="First" priority="200">DragonAge.Wyrmling</containerreq>
      </bootstrap>
    <bootstrap thing="fImpInit">
      <containerreq phase="First" priority="200">DragonAge.Wyrmling</containerreq>
      </bootstrap>
    <bootstrap thing="fLunge">
      <containerreq phase="First" priority="200">DragonAge.Young</containerreq>
      </bootstrap>
    <bootstrap thing="fMultiAtt">
      <containerreq phase="First" priority="200">DragonAge.VeryYoung</containerreq>
      </bootstrap>
    <bootstrap thing="fFlybyAt">
      <containerreq phase="First" priority="200">DragonAge.Old</containerreq>
      </bootstrap>
    <bootstrap thing="fGrtWepFoc">
      <containerreq phase="First" priority="200">DragonAge.Ancient</containerreq>
      <autotag group="Target" tag="wBite"/>
      <autotag group="thing" tag="skipprereq"/>
      </bootstrap>
    <bootstrap thing="fLightRef">
      <containerreq phase="First" priority="200">DragonAge.Adult</containerreq>
      </bootstrap>
    <bootstrap thing="fSnatch">
      <containerreq phase="First" priority="200">DragonAge.VeryOld</containerreq>
      </bootstrap>
    <bootstrap thing="fWepFoc">
      <containerreq phase="First" priority="200">DragonAge.Juvenile</containerreq>
      <autotag group="Target" tag="wBite"/>
      </bootstrap>
    <bootstrap thing="fWepFoc">
      <containerreq phase="First" priority="200">DragonAge.YngAdult</containerreq>
      <autotag group="Target" tag="wClaw"/>
      </bootstrap>
    <bootstrap thing="fWepFoc">
      <containerreq phase="First" priority="200">DragonAge.MatAdult</containerreq>
      <autotag group="Target" tag="wGore"/>
      </bootstrap>
    <bootstrap thing="raxFrightP">
      <containerreq phase="First" priority="200">DragonAge.Juvenile</containerreq>
      </bootstrap>
    <bootstrap thing="fComRef">
      <containerreq phase="First" priority="200">DragonAge.Wyrm</containerreq>
      </bootstrap>
    <bootstrap thing="fPowerAtt">
      <containerreq phase="First" priority="200">DragonAge.GreatWyrm</containerreq>
      </bootstrap>
    <bootstrap thing="skKnowGeog"></bootstrap>
    <bootstrap thing="skKnowHist"></bootstrap>
    <eval phase="First" priority="550" index="2"><![CDATA[~ set caster level of racial spells

~age catagory
var ageCat as number
ageCat = hero.childfound[raxDragonA].tagvalue[Value.?]

perform hero.findchild[BaseRace].setfocus

~ set caster level
if (ageCat >= 3) then
 perform focus.assign[SplLookup.cHelpSor]
 focus.field[cMagicLev].value = 2*ageCat - 5
endif

perform state.clearfocus]]></eval>
    <eval phase="PreLevel" priority="4000" index="3">~ innate skill ranks 
var ageCat as number
ageCat = hero.childfound[raxDragonA].tagvalue[Value.?]

if (ageCat = 1) then
  #skillinnate[skDiplo] += 5
  #skillinnate[skFly] += 5
  #skillinnate[skIntim] += 5
  #skillinnate[skKnowArca] += 5
  #skillinnate[skKnowNat] += 5
  #skillinnate[skSenseMot] += 5
  #skillinnate[skSurvival] += 5
  #skillinnate[skSwim] += 5

elseif (ageCat = 2) then
  #skillinnate[skDiplo] += 7
  #skillinnate[skFly] += 7
  #skillinnate[skIntim] += 7
  #skillinnate[skKnowArca] += 7
  #skillinnate[skKnowNat] += 7
  #skillinnate[skSenseMot] += 7
  #skillinnate[skStealth] += 7
  #skillinnate[skSurvival] += 7
  #skillinnate[skSwim] += 7

elseif (ageCat = 3) then
  #skillinnate[skDiplo] += 9
  #skillinnate[skFly] += 9
  #skillinnate[skIntim] += 9
  #skillinnate[skKnowArca] += 9
  #skillinnate[skKnowNat] += 9
  #skillinnate[skSenseMot] += 9
  #skillinnate[skStealth] += 9
  #skillinnate[skSurvival] += 9
  #skillinnate[skSwim] += 9

elseif (ageCat = 4) then
  #skillinnate[skDiplo] += 11
  #skillinnate[skFly] += 11
  #skillinnate[skIntim] += 11
  #skillinnate[skKnowArca] += 11
  #skillinnate[skKnowGeog] += 11
  #skillinnate[skKnowNat] += 11
  #skillinnate[skSenseMot] += 11
  #skillinnate[skStealth] += 11
  #skillinnate[skSurvival] += 11
  #skillinnate[skSwim] += 11

elseif (ageCat = 5) then
  #skillinnate[skDiplo] += 13
  #skillinnate[skFly] += 13
  #skillinnate[skIntim] += 13
  #skillinnate[skKnowArca] += 13
  #skillinnate[skKnowGeog] += 13
  #skillinnate[skKnowNat] += 13
  #skillinnate[skSenseMot] += 13
  #skillinnate[skStealth] += 13
  #skillinnate[skSurvival] += 13
  #skillinnate[skSwim] += 13

elseif (ageCat = 6) then
  #skillinnate[skDiplo] += 15
  #skillinnate[skFly] += 15
  #skillinnate[skIntim] += 15
  #skillinnate[skKnowArca] += 15
  #skillinnate[skKnowGeog] += 15
  #skillinnate[skKnowNat] += 15
  #skillinnate[skPercep] += 15
  #skillinnate[skSenseMot] += 15
  #skillinnate[skStealth] += 15
  #skillinnate[skSurvival] += 15
  #skillinnate[skSwim] += 15

elseif (ageCat = 7) then
  #skillinnate[skDiplo] += 17
  #skillinnate[skFly] += 17
  #skillinnate[skIntim] += 17
  #skillinnate[skKnowArca] += 17
  #skillinnate[skKnowGeog] += 17
  #skillinnate[skKnowNat] += 17
  #skillinnate[skPercep] += 17
  #skillinnate[skSenseMot] += 17
  #skillinnate[skStealth] += 17
  #skillinnate[skSurvival] += 17
  #skillinnate[skSwim] += 17

elseif (ageCat = 8) then 
  #skillinnate[skDiplo] += 19
  #skillinnate[skFly] += 19
  #skillinnate[skIntim] += 19
  #skillinnate[skKnowArca] += 19
  #skillinnate[skKnowGeog] += 19
  #skillinnate[skKnowHist] += 19
  #skillinnate[skKnowNat] += 19
  #skillinnate[skPercep] += 19
  #skillinnate[skSenseMot] += 19
  #skillinnate[skStealth] += 19
  #skillinnate[skSurvival] += 19
  #skillinnate[skSwim] += 19

elseif (ageCat = 9) then
  #skillinnate[skDiplo] += 21
  #skillinnate[skFly] += 21
  #skillinnate[skIntim] += 21
  #skillinnate[skKnowArca] += 21
  #skillinnate[skKnowGeog] += 21
  #skillinnate[skKnowHist] += 21
  #skillinnate[skKnowNat] += 21
  #skillinnate[skPercep] += 21
  #skillinnate[skSenseMot] += 21
  #skillinnate[skStealth] += 21
  #skillinnate[skSurvival] += 21
  #skillinnate[skSwim] += 21

elseif (ageCat = 10) then
  #skillinnate[skBluff] += 23
  #skillinnate[skDiplo] += 23
  #skillinnate[skFly] += 23
  #skillinnate[skIntim] += 23
  #skillinnate[skKnowArca] += 23
  #skillinnate[skKnowGeog] += 23
  #skillinnate[skKnowHist] += 23
  #skillinnate[skKnowNat] += 23
  #skillinnate[skPercep] += 23
  #skillinnate[skSenseMot] += 23
  #skillinnate[skStealth] += 23
  #skillinnate[skSurvival] += 23
  #skillinnate[skSwim] += 23

elseif (ageCat = 11) then
  #skillinnate[skBluff] += 25
  #skillinnate[skDiplo] += 25
  #skillinnate[skFly] += 25
  #skillinnate[skIntim] += 25
  #skillinnate[skKnowArca] += 25
  #skillinnate[skKnowGeog] += 25
  #skillinnate[skKnowHist] += 25
  #skillinnate[skKnowNat] += 25
  #skillinnate[skPercep] += 25
  #skillinnate[skSenseMot] += 25
  #skillinnate[skStealth] += 25
  #skillinnate[skSurvival] += 25
  #skillinnate[skSwim] += 25

elseif (ageCat = 12) then
  #skillinnate[skBluff] += 27
  #skillinnate[skDiplo] += 27
  #skillinnate[skFly] += 27
  #skillinnate[skIntim] += 27
  #skillinnate[skKnowArca] += 27
  #skillinnate[skKnowGeog] += 27
  #skillinnate[skKnowHist] += 27
  #skillinnate[skKnowNat] += 27
  #skillinnate[skPercep] += 27
  #skillinnate[skSenseMot] += 27
  #skillinnate[skSpellcr] += 27
  #skillinnate[skStealth] += 27
  #skillinnate[skSurvival] += 27
  #skillinnate[skSwim] += 27

endif
      <before name="Skill Bonus Feats"/>
      </eval>
    <eval phase="Final" priority="1000"><![CDATA[~ set Frightful Presence, DR, SR, and CL
var ageCat as number
ageCat = hero.childfound[raxDragonA].tagvalue[Value.?]

~ frightful presesnce
if (ageCat >= 4) then
  hero.child[raxFrightP].field[abValue].value = 30 * ageCat
endif

~ Dragons have SR = to 11 + their CR
if (ageCat >= 5) then
  var damage as number
  damage = herofield[tCR].value + 11
  #applysr[damage]
endif

~ Dragons have spell like abilities of CL = to TOTAL (not racial) hit dice
if (ageCat >= 3) then
  var CL as number
  CL = herofield[tHitDice].value
  field[rSpCastLev].value = CL
endif

~ DR 
if (ageCat >= 11) then
  #applydr[xDamRdMag,20]
elseif (ageCat >= 9) then
  #applydr[xDamRdMag,15]
elseif (ageCat >= 7) then
  #applydr[xDamRdMag,10]
elseif (ageCat >= 5) then
  #applydr[xDamRdMag,5]
endif]]></eval>
    </thing>
  <thing id="raxSeaBeat" name="Torrent Breath" description="Instead of a cone of super-heated steam, a very young or older sea dragon can breathe a line of pressurized water twice the length of the sea dragon's cone breath weapon. This line deals bludgeoning damage." compset="RaceSpec" uniqueness="useronce">
    <comment>This breath weapon is for the modified dragons.

Set the tag BloodEner.? for the appropiate energy type

field[abValue] is the # of damage dice
field[abValue2] is the range
field[baValue3]is the type of damage dice

Assign BreathShp.Cone for cone spahed breath and BreathShp.Line for line shaped</comment>
    <usesource source="VarDragons"/>
    <tag group="SpecType" tag="Attack" name="Attack" abbrev="Attack"/>
    <tag group="AbilType" tag="Super"/>
    <tag group="StandardDC" tag="aCON" name="Constitution" abbrev="Constitution"/>
    <tag group="Helper" tag="ShowSpec" name="Show Spec" abbrev="Show Spec"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <tag group="Custom" tag="DragonBrea"/>
    <eval phase="Final" priority="1000" index="3">~ get age catagory

var ageCat as number
ageCat = hero.childfound[raxDragonA].tagvalue[Value.?]

~ multiply breath weapon damage by age catagory
field[abValue].value *= ageCat</eval>
    <eval phase="Render" priority="2000"><![CDATA[~ Generate our livename.
~ field[abValue] is the # of dice
~ field[abValue2] is the range
~ field[abValue3] is the type of dice
~ we use the tags BreathShp.Line or BreathShp.Cone for breath shape

field[livename].text = "Torrent Breath (" & field[abValue].value & "d" & field[abValue3].value & " bludgeoning, " & field[abValue2].value & " ft"

      if (tagis[BreathShp.Cone] <> 0) then
        field[livename].text &= " Cone"
      elseif (tagis[BreathShp.Line] <> 0) then
        field[livename].text &= " Line"
        endif

      field[livename].text &= ", Ref. half)"]]></eval>
    <eval phase="Final" priority="1000" index="2"><![CDATA[~ get dragon size
var dragSize as number
dragSize = herofield[tSize].value

~ breath range for cone
if (dragSize = -2) then
  field[abValue2].value = 15
elseif (dragSize = -1) then
  field[abValue2].value = 20
elseif (dragSize = 0) then
  field[abValue2].value = 30
elseif (dragSize = 1) then 
  field[abValue2].value = 40
elseif (dragSize = 2) then
  field[abValue2].value = 50
elseif (dragSize = 3) then
  field[abValue2].value = 60
elseif (dragSize >= 4) then
  field[abValue2].value = 70
endif

~ range for line is twice that of cone
if (tagcount[BreathShp.Line] <> 0) then
  field[abValue2].value *= 2
endif]]></eval>
    </thing>
  <thing id="raxSeaTidW" name="Tidal Wave" description="Once per day, a great wyrm sea dragon can cause the sea to rise up and crush his enemies once per day as a standard action. This affects an area of coastline 120 feet in length and targets all creatures within 40 feet of the shore-treat the targets as if struck by an avalanche. Treat all creatures as if they were in the bury zone. The save DC to halve this damage is equal to the dragon's breath weapon DC. Those who fail their saves take full damage and are drawn 60 feet off shore and deposited 20 feet under the surface on the round after the wave hits." compset="RaceSpec">
    <usesource source="VarDragons"/>
    <tag group="Helper" tag="ShowSpec" name="Show Spec" abbrev="Show Spec"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <tag group="AbilType" tag="Super" name="Supernatural Ability" abbrev=" (Su)"/>
    </thing>
  <thing id="raxSeaUnfe" name="Unfettered Swimmer" description="A juvenile sea dragon gains a 10-foot bonus to its swim speed. The sea dragon's swim speed continues to increase by an additional 10 feet every two age categories. Furthermore, while swimming, the sea dragon is treated as if under the effects of the spell {i}freedom of movement{/i}." compset="RaceSpec">
    <usesource source="VarDragons"/>
    <tag group="AbilType" tag="Super"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <tag group="Helper" tag="ShowSpec"/>
    <eval phase="Final" priority="1000">~ get age catagory

var ageCat as number
ageCat = hero.child[raxDragonA].tagvalue[Value.?] - 2

hero.child[xSwim].field[abValue].value += 10 * round(ageCat/2,0,-1)</eval>
    </thing>
  <thing id="xDragSky" name="Dragon, Sky" description="Benevolent and noble, sky dragons, or tienlungs, are fearsome champions of good and protectors of those in need. They are often sought out for their wise council, which they grant only to the deserving and true." compset="Race">
    <fieldval field="shortname" value="Sky Dragon"/>
    <fieldval field="rHitDice" value="6"/>
    <fieldval field="rDEX" value="4"/>
    <fieldval field="rSpeed" value="40"/>
    <fieldval field="rAC" value="6"/>
    <fieldval field="rCR" value="5"/>
    <fieldval field="rDescript" value="Although wingless, this dragon twists gracefully though the sky, its scales reflecting the shifting hues of the heavens."/>
    <fieldval field="rEnviron" value="temperate or warm mountains"/>
    <fieldval field="rOrgan" value="solitary"/>
    <fieldval field="rTreasure" value="triple"/>
    <fieldval field="rWIS" value="5"/>
    <fieldval field="rSTR" value="3"/>
    <fieldval field="rCON" value="3"/>
    <fieldval field="rHPStart" value="39"/>
    <fieldval field="rINT" value="4"/>
    <fieldval field="rCHA" value="4"/>
    <usesource source="VarDragons"/>
    <tag group="Race" tag="rTrueDrago"/>
    <tag group="Helper" tag="NotHum"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <tag group="RaceType" tag="NPC"/>
    <tag group="RaceSize" tag="Small11"/>
    <tag group="HasType" tag="tpDragon"/>
    <tag group="Language" tag="Any"/>
    <tag group="DragType" tag="Imperial" name="Dragon, Imperial"/>
    <tag group="Helper" tag="Quadruped"/>
    <tag group="Hero" tag="NoDefComm"/>
    <tag group="Alignment" tag="Good"/>
    <tag group="Alignment" tag="Lawful"/>
    <bootstrap thing="wCrush"></bootstrap>
    <bootstrap thing="wTailSweep"></bootstrap>
    <bootstrap thing="raChangeSh">
      <containerreq phase="First" priority="200">DragonAge.Young</containerreq>
      <autotag group="Usage" tag="Day"/>
      <assignval field="trkMax" value="3"/>
      <assignval field="livename" value="Change Shape (any humanoid; {i}polymorph{/i})"/>
      </bootstrap>
    <bootstrap thing="skKnowArca"></bootstrap>
    <bootstrap thing="lDraconic">
      <containerreq phase="First" priority="200">DragonAge.Wyrmling</containerreq>
      </bootstrap>
    <bootstrap thing="tmxDragAge"></bootstrap>
    <bootstrap thing="wGore">
      <autotag group="wMain" tag="1d6_5"/>
      <autotag group="Helper" tag="NatPrimary"/>
      <autotag group="Helper" tag="NatTwoHand"/>
      </bootstrap>
    <bootstrap thing="wTailSlap">
      <autotag group="wMain" tag="1d8_6"/>
      <autotag group="Helper" tag="NatTwoHand"/>
      </bootstrap>
    <bootstrap thing="raxDrgBrea">
      <autotag group="BreathShp" tag="Cone"/>
      <autotag group="BloodEner" tag="Elec"/>
      <assignval field="abValue3" value="8"/>
      <assignval field="abValue" value="2"/>
      </bootstrap>
    <bootstrap thing="wBite">
      <autotag group="wMain" tag="1d6_5"/>
      <autotag group="Helper" tag="NatPrimary"/>
      <autotag group="Helper" tag="NatTwoHand"/>
      </bootstrap>
    <bootstrap thing="wClaw">
      <autotag group="Value" tag="2"/>
      <autotag group="wMain" tag="1d4_4"/>
      <autotag group="Helper" tag="NatPrimary"/>
      </bootstrap>
    <bootstrap thing="raDrSenses"></bootstrap>
    <bootstrap thing="xImmElec">
      <containerreq phase="First" priority="200">DragonAge.Wyrmling</containerreq>
      </bootstrap>
    <bootstrap thing="raxFrightP">
      <containerreq phase="First" priority="200">DragonAge.Juvenile</containerreq>
      </bootstrap>
    <bootstrap thing="stAir"></bootstrap>
    <bootstrap thing="xFly">
      <autotag group="Maneuver" tag="Average"/>
      <autotag group="Value" tag="150"/>
      </bootstrap>
    <bootstrap thing="raxSkyBorn">
      <containerreq phase="First" priority="200">DragonAge.Wyrmling</containerreq>
      </bootstrap>
    <bootstrap thing="skKnowRel"></bootstrap>
    <bootstrap thing="skPerfSing"></bootstrap>
    <bootstrap thing="raCloudSig">
      <containerreq phase="First" priority="200">DragonAge.VeryYoung</containerreq>
      </bootstrap>
    <bootstrap thing="raGoundBre">
      <containerreq phase="First" priority="200">DragonAge.Ancient</containerreq>
      </bootstrap>
    <bootstrap thing="raPrimaLig">
      <containerreq phase="First" priority="200">DragonAge.Old</containerreq>
      </bootstrap>
    <bootstrap thing="spCallLig5">
      <containerreq phase="First" priority="200">DragonAge.Old</containerreq>
      <autotag group="Usage" tag="AtWill"/>
      <autotag group="Helper" tag="SpellLike"/>
      </bootstrap>
    <bootstrap thing="spContWin5">
      <containerreq phase="First" priority="200">DragonAge.Ancient</containerreq>
      <autotag group="Usage" tag="AtWill"/>
      <autotag group="Helper" tag="SpellLike"/>
      </bootstrap>
    <bootstrap thing="spDeteEvi1">
      <containerreq phase="First" priority="200">DragonAge.Young</containerreq>
      <autotag group="Usage" tag="AtWill"/>
      <autotag group="Helper" tag="SpellLike"/>
      </bootstrap>
    <bootstrap thing="spFeatFal1">
      <containerreq phase="First" priority="200">DragonAge.Juvenile</containerreq>
      <autotag group="Usage" tag="AtWill"/>
      <autotag group="Helper" tag="SpellLike"/>
      </bootstrap>
    <bootstrap thing="spGustWin2">
      <containerreq phase="First" priority="200">DragonAge.Adult</containerreq>
      <autotag group="Usage" tag="AtWill"/>
      <autotag group="Helper" tag="SpellLike"/>
      </bootstrap>
    <bootstrap thing="spStormbo8">
      <containerreq phase="First" priority="200">DragonAge.GreatWyrm</containerreq>
      <autotag group="Usage" tag="AtWill"/>
      <autotag group="Helper" tag="SpellLike"/>
      </bootstrap>
    <bootstrap thing="raxSkyCelE">
      <containerreq phase="First" priority="200">DragonAge.GreatWyrm</containerreq>
      </bootstrap>
    <bootstrap thing="fLightRef">
      <containerreq phase="First" priority="200">DragonAge.Wyrmling</containerreq>
      </bootstrap>
    <bootstrap thing="fMultiAtt">
      <containerreq phase="First" priority="200">DragonAge.Wyrmling</containerreq>
      </bootstrap>
    <bootstrap thing="fSkillFoc">
      <containerreq phase="First" priority="200">DragonAge.Wyrmling</containerreq>
      <autotag group="Target" tag="skPercep"/>
      </bootstrap>
    <bootstrap thing="fFlybyAt">
      <containerreq phase="First" priority="200">DragonAge.VeryYoung</containerreq>
      </bootstrap>
    <bootstrap thing="fHover">
      <containerreq phase="First" priority="200">DragonAge.Young</containerreq>
      </bootstrap>
    <bootstrap thing="fImpInit">
      <containerreq phase="First" priority="200">DragonAge.Juvenile</containerreq>
      </bootstrap>
    <bootstrap thing="fIronWill">
      <containerreq phase="First" priority="200">DragonAge.YngAdult</containerreq>
      </bootstrap>
    <bootstrap thing="fImpCrit">
      <containerreq phase="First" priority="200">DragonAge.Adult</containerreq>
      <autotag group="Target" tag="wBite"/>
      </bootstrap>
    <bootstrap thing="fWepFoc">
      <containerreq phase="First" priority="200">DragonAge.MatAdult</containerreq>
      <autotag group="Target" tag="wBite"/>
      </bootstrap>
    <bootstrap thing="fToughness">
      <containerreq phase="First" priority="200">DragonAge.Old</containerreq>
      </bootstrap>
    <bootstrap thing="fVitStr">
      <containerreq phase="First" priority="200">DragonAge.VeryOld</containerreq>
      </bootstrap>
    <bootstrap thing="fLunge">
      <containerreq phase="First" priority="200">DragonAge.Ancient</containerreq>
      </bootstrap>
    <bootstrap thing="fImpVitStr">
      <containerreq phase="First" priority="200">DragonAge.Wyrm</containerreq>
      </bootstrap>
    <bootstrap thing="fRendClaw">
      <containerreq phase="First" priority="200">DragonAge.GreatWyrm</containerreq>
      </bootstrap>
    <bootstrap thing="skKnowGeog"></bootstrap>
    <bootstrap thing="skKnowPlan"></bootstrap>
    <bootstrap thing="skKnowNat"></bootstrap>
    <eval phase="Final" priority="1000"><![CDATA[~ set Frightful Presence, DR, SR, and CL
var ageCat as number
ageCat = hero.childfound[raxDragonA].tagvalue[Value.?]

~ frightful presesnce
if (ageCat >= 4) then
  hero.child[raxFrightP].field[abValue].value = 30 * ageCat
endif

~ Dragons have SR = to 11 + their CR
if (ageCat >= 5) then
  var damage as number
  damage = herofield[tCR].value + 11
  #applysr[damage]
endif

~ Dragons have spell like abilities of CL = to TOTAL (not racial) hit dice
if (ageCat >= 3) then
  var CL as number
  CL = herofield[tHitDice].value
  field[rSpCastLev].value = CL
endif

~ DR 
if (ageCat >= 11) then
  #applydr[xDamRdMag,20]
elseif (ageCat >= 9) then
  #applydr[xDamRdMag,15]
elseif (ageCat >= 7) then
  #applydr[xDamRdMag,10]
elseif (ageCat >= 5) then
  #applydr[xDamRdMag,5]
endif]]></eval>
    <eval phase="First" priority="550" index="2"><![CDATA[~ set caster level of racial spells

~age catagory
var ageCat as number
ageCat = hero.childfound[raxDragonA].tagvalue[Value.?]

perform hero.findchild[BaseRace].setfocus

~ set caster level
if (ageCat >= 3) then
 perform focus.assign[SplLookup.cHelpSor]
 focus.field[cMagicLev].value = 2*ageCat - 5
endif

perform state.clearfocus]]></eval>
    <eval phase="PreLevel" priority="4000" index="3">~ innate skill ranks 
var ageCat as number
ageCat = hero.childfound[raxDragonA].tagvalue[Value.?]

if (ageCat = 1) then
  #skillinnate[skDiplo] += 6
  #skillinnate[skFly] += 6
  #skillinnate[skHeal] += 6
  #skillinnate[skKnowArca] += 6
  #skillinnate[skKnowRel] += 6
  #skillinnate[skPercep] += 6
  #skillinnate[skSenseMot] += 6
  #skillinnate[skSpellcr] += 6  

elseif (ageCat = 2) then
  #skillinnate[skDiplo] += 8
  #skillinnate[skFly] += 8
  #skillinnate[skHeal] += 8
  #skillinnate[skKnowArca] += 8
  #skillinnate[skKnowRel] += 8
  #skillinnate[skPercep] += 8
  #skillinnate[skPerfSing] += 8
  #skillinnate[skSenseMot] += 8
  #skillinnate[skSpellcr] += 8

elseif (ageCat = 3) then
  #skillinnate[skDiplo] += 10
  #skillinnate[skFly] += 10
  #skillinnate[skHeal] += 10
  #skillinnate[skKnowArca] += 10
  #skillinnate[skKnowRel] += 10
  #skillinnate[skPercep] += 10
  #skillinnate[skPerfSing] += 10
  #skillinnate[skSenseMot] += 10
  #skillinnate[skSpellcr] += 10

elseif (ageCat = 4) then
  #skillinnate[skAcrobat] += 12
  #skillinnate[skDiplo] += 12
  #skillinnate[skFly] += 12
  #skillinnate[skHeal] += 12
  #skillinnate[skKnowArca] += 12
  #skillinnate[skKnowRel] += 12
  #skillinnate[skPercep] += 12
  #skillinnate[skPerfSing] += 12
  #skillinnate[skSenseMot] += 12
  #skillinnate[skSpellcr] += 12

elseif (ageCat = 5) then
  #skillinnate[skAcrobat] += 14
  #skillinnate[skDiplo] += 14
  #skillinnate[skFly] += 14
  #skillinnate[skHeal] += 14
  #skillinnate[skKnowArca] += 14
  #skillinnate[skKnowRel] += 14
  #skillinnate[skPercep] += 14
  #skillinnate[skPerfSing] += 14
  #skillinnate[skSenseMot] += 14
  #skillinnate[skSpellcr] += 14

elseif (ageCat = 6) then
  #skillinnate[skAcrobat] += 16
  #skillinnate[skDiplo] += 16
  #skillinnate[skFly] += 16
  #skillinnate[skHeal] += 16
  #skillinnate[skKnowArca] += 16
  #skillinnate[skKnowGeog] += 16
  #skillinnate[skKnowRel] += 16
  #skillinnate[skPercep] += 16
  #skillinnate[skPerfSing] += 16
  #skillinnate[skSenseMot] += 16
  #skillinnate[skSpellcr] += 16

elseif (ageCat = 7) then
  #skillinnate[skAcrobat] += 18
  #skillinnate[skDiplo] += 18
  #skillinnate[skFly] += 18
  #skillinnate[skHeal] += 18
  #skillinnate[skKnowArca] += 18
  #skillinnate[skKnowGeog] += 18
  #skillinnate[skKnowRel] += 18
  #skillinnate[skPercep] += 18
  #skillinnate[skPerfSing] += 18
  #skillinnate[skSenseMot] += 18
  #skillinnate[skSpellcr] += 18

elseif (ageCat = 8) then 
  #skillinnate[skAcrobat] += 20
  #skillinnate[skDiplo] += 20
  #skillinnate[skFly] += 20
  #skillinnate[skHeal] += 20
  #skillinnate[skKnowArca] += 20
  #skillinnate[skKnowGeog] += 20
  #skillinnate[skKnowPlan] += 20
  #skillinnate[skKnowRel] += 20
  #skillinnate[skPercep] += 20
  #skillinnate[skPerfSing] += 20
  #skillinnate[skSenseMot] += 20
  #skillinnate[skSpellcr] += 20

elseif (ageCat = 9) then
  #skillinnate[skAcrobat] += 22
  #skillinnate[skDiplo] += 22
  #skillinnate[skFly] += 22
  #skillinnate[skHeal] += 22
  #skillinnate[skKnowArca] += 22
  #skillinnate[skKnowGeog] += 22
  #skillinnate[skKnowPlan] += 22
  #skillinnate[skKnowRel] += 22
  #skillinnate[skPercep] += 22
  #skillinnate[skPerfSing] += 22
  #skillinnate[skSenseMot] += 22
  #skillinnate[skSpellcr] += 22

elseif (ageCat = 10) then
  #skillinnate[skAcrobat] += 24
  #skillinnate[skAppraise] += 24
  #skillinnate[skDiplo] += 24
  #skillinnate[skFly] += 24
  #skillinnate[skHeal] += 24
  #skillinnate[skKnowArca] += 24
  #skillinnate[skKnowGeog] += 24
  #skillinnate[skKnowPlan] += 24
  #skillinnate[skKnowRel] += 24
  #skillinnate[skPercep] += 24
  #skillinnate[skPerfSing] += 24
  #skillinnate[skSenseMot] += 24
  #skillinnate[skSpellcr] += 24

elseif (ageCat = 11) then
  #skillinnate[skAcrobat] += 26
  #skillinnate[skAppraise] += 26
  #skillinnate[skDiplo] += 26
  #skillinnate[skFly] += 26
  #skillinnate[skHeal] += 26
  #skillinnate[skKnowArca] += 26
  #skillinnate[skKnowGeog] += 26
  #skillinnate[skKnowPlan] += 26
  #skillinnate[skKnowRel] += 26
  #skillinnate[skPercep] += 26
  #skillinnate[skPerfSing] += 26
  #skillinnate[skSenseMot] += 26
  #skillinnate[skSpellcr] += 26

elseif (ageCat = 12) then
  #skillinnate[skAcrobat] += 28
  #skillinnate[skAppraise] += 28
  #skillinnate[skDiplo] += 28
  #skillinnate[skFly] += 28
  #skillinnate[skHeal] += 28
  #skillinnate[skKnowArca] += 28
  #skillinnate[skKnowGeog] += 28
  #skillinnate[skKnowNat] += 28
  #skillinnate[skKnowPlan] += 28
  #skillinnate[skKnowRel] += 28
  #skillinnate[skPercep] += 28
  #skillinnate[skPerfSing] += 28
  #skillinnate[skSenseMot] += 28
  #skillinnate[skSpellcr] += 28

endif
      <before name="Skill Bonus Feats"/>
      </eval>
    </thing>
  <thing id="raxSkyBorn" name="Borne Aloft" description="Old or younger sky dragons fly with good maneuverability while all older sky dragons have perfect." compset="RaceSpec">
    <usesource source="VarDragons"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <tag group="Helper" tag="ShowSpec"/>
    <eval phase="PostAttr" priority="1000"><![CDATA[~ get age catagory
var ageCat as number
ageCat = hero.child[raxDragonA].tagvalue[Value.?]

if (ageCat <= 8) then
  perform hero.child[xFly].tagreplace[Maneuver.?,Maneuver.Good]
else
  perform hero.child[xFly].tagreplace[Maneuver.?,Maneuver.Perfect]
endif]]></eval>
    </thing>
  <thing id="raxSkyCelE" name="Celestial Emissary" description="Three times per day, a great wyrm sky dragon can imbue others with the celestial aspect of the oracle spell divine vessel, but it can only be cast on another willing creature of good alignment." compset="RaceSpec">
    <fieldval field="trkMax" value="3"/>
    <usesource source="VarDragons"/>
    <tag group="SpInfo" tag="spDiviVes8"/>
    <tag group="Helper" tag="ShowSpec"/>
    <tag group="Usage" tag="Day"/>
    <tag group="User" tag="Tracker"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <tag group="AbilType" tag="Super"/>
    <tag group="Helper" tag="SpellLike"/>
    </thing>
  <thing id="rxDragSove" name="Dragon, Sovereign" description="Guardians of balance, sovereign dragons, or lungwangs as they are also known, were placed in the skies by the gods themselves to safeguard harmony in the world." compset="Race">
    <fieldval field="shortname" value="Sovereign Dragon"/>
    <fieldval field="rHitDice" value="8"/>
    <fieldval field="rDEX" value="4"/>
    <fieldval field="rSpeed" value="50"/>
    <fieldval field="rAC" value="7"/>
    <fieldval field="rCR" value="7"/>
    <fieldval field="rDescript" value="This magnificent dragon is covered in splendid gold scales, and horns jut from its head like a crown."/>
    <fieldval field="rEnviron" value="any mountains"/>
    <fieldval field="rOrgan" value="solitary"/>
    <fieldval field="rTreasure" value="triple"/>
    <fieldval field="rWIS" value="5"/>
    <fieldval field="rSTR" value="7"/>
    <fieldval field="rCON" value="5"/>
    <fieldval field="rHPStart" value="52"/>
    <fieldval field="rINT" value="4"/>
    <fieldval field="rCHA" value="4"/>
    <usesource source="VarDragons"/>
    <tag group="Race" tag="rTrueDrago"/>
    <tag group="Helper" tag="NotHum"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <tag group="RaceType" tag="NPC"/>
    <tag group="RaceSize" tag="Small11"/>
    <tag group="HasType" tag="tpDragon"/>
    <tag group="Language" tag="Any"/>
    <tag group="DragType" tag="Imperial" name="Dragon, Imperial"/>
    <tag group="Helper" tag="Quadruped"/>
    <tag group="Hero" tag="NoDefComm"/>
    <tag group="Alignment" tag="NeutralLC"/>
    <tag group="Alignment" tag="NeutralGE"/>
    <bootstrap thing="raChangeSh">
      <containerreq phase="First" priority="200">DragonAge.Young</containerreq>
      <autotag group="Usage" tag="Day"/>
      <assignval field="trkMax" value="3"/>
      <assignval field="livename" value="Change Shape (any humanoid; {i}polymorph{/i})"/>
      </bootstrap>
    <bootstrap thing="lDraconic">
      <containerreq phase="First" priority="200">DragonAge.Wyrmling</containerreq>
      </bootstrap>
    <bootstrap thing="tmxDragAge"></bootstrap>
    <bootstrap thing="wGore">
      <autotag group="wMain" tag="1d6_5"/>
      <autotag group="Helper" tag="NatPrimary"/>
      <autotag group="Helper" tag="NatTwoHand"/>
      </bootstrap>
    <bootstrap thing="wTailSlap">
      <autotag group="wMain" tag="1d8_6"/>
      <autotag group="Helper" tag="NatTwoHand"/>
      </bootstrap>
    <bootstrap thing="raxDrgBrea">
      <autotag group="BreathShp" tag="Cone"/>
      <autotag group="BloodEner" tag="Sonic"/>
      <assignval field="abValue3" value="6"/>
      <assignval field="abValue" value="2"/>
      </bootstrap>
    <bootstrap thing="wBite">
      <autotag group="wMain" tag="1d6_5"/>
      <autotag group="Helper" tag="NatPrimary"/>
      <autotag group="Helper" tag="NatTwoHand"/>
      </bootstrap>
    <bootstrap thing="wClaw">
      <autotag group="Value" tag="2"/>
      <autotag group="wMain" tag="1d4_4"/>
      <autotag group="Helper" tag="NatPrimary"/>
      </bootstrap>
    <bootstrap thing="raDrSenses"></bootstrap>
    <bootstrap thing="raxFrightP">
      <containerreq phase="First" priority="200">DragonAge.Juvenile</containerreq>
      </bootstrap>
    <bootstrap thing="xFly">
      <autotag group="Maneuver" tag="Average"/>
      <autotag group="Value" tag="150"/>
      </bootstrap>
    <bootstrap thing="spCalmEmo2">
      <containerreq phase="First" priority="200">DragonAge.Juvenile</containerreq>
      <autotag group="Usage" tag="AtWill"/>
      <autotag group="Helper" tag="SpellLike"/>
      </bootstrap>
    <bootstrap thing="spDeteEvi1">
      <containerreq phase="First" priority="200">DragonAge.VeryYoung</containerreq>
      <autotag group="Usage" tag="AtWill"/>
      <autotag group="Helper" tag="SpellLike"/>
      </bootstrap>
    <bootstrap thing="spDeteGoo1">
      <containerreq phase="First" priority="200">DragonAge.VeryYoung</containerreq>
      <autotag group="Usage" tag="AtWill"/>
      <autotag group="Helper" tag="SpellLike"/>
      </bootstrap>
    <bootstrap thing="spMomePre8">
      <containerreq phase="First" priority="200">DragonAge.GreatWyrm</containerreq>
      <autotag group="Usage" tag="AtWill"/>
      <autotag group="Helper" tag="SpellLike"/>
      </bootstrap>
    <bootstrap thing="spPrisSpr7">
      <containerreq phase="First" priority="200">DragonAge.Ancient</containerreq>
      <autotag group="Usage" tag="AtWill"/>
      <autotag group="Helper" tag="SpellLike"/>
      </bootstrap>
    <bootstrap thing="spSympVib6">
      <containerreq phase="First" priority="200">DragonAge.Old</containerreq>
      <autotag group="Usage" tag="AtWill"/>
      <autotag group="Helper" tag="SpellLike"/>
      </bootstrap>
    <bootstrap thing="spTongues3">
      <containerreq phase="First" priority="200">DragonAge.Adult</containerreq>
      <autotag group="Usage" tag="AtWill"/>
      <autotag group="Helper" tag="SpellLike"/>
      </bootstrap>
    <bootstrap thing="wCrush"></bootstrap>
    <bootstrap thing="wTailSweep"></bootstrap>
    <bootstrap thing="raDogmaDis">
      <containerreq phase="First" priority="200">DragonAge.Wyrmling</containerreq>
      </bootstrap>
    <bootstrap thing="raViolRet">
      <containerreq phase="First" priority="200">DragonAge.Young</containerreq>
      </bootstrap>
    <bootstrap thing="raxSovGldA">
      <containerreq phase="First" priority="200">DragonAge.Old</containerreq>
      </bootstrap>
    <bootstrap thing="skKnowArca"></bootstrap>
    <bootstrap thing="skKnowHist"></bootstrap>
    <bootstrap thing="fImpInit">
      <containerreq phase="First" priority="200">DragonAge.Wyrmling</containerreq>
      </bootstrap>
    <bootstrap thing="fIronWill">
      <containerreq phase="First" priority="200">DragonAge.Wyrmling</containerreq>
      </bootstrap>
    <bootstrap thing="fLightRef">
      <containerreq phase="First" priority="200">DragonAge.Wyrmling</containerreq>
      </bootstrap>
    <bootstrap thing="fWepFoc">
      <containerreq phase="First" priority="200">DragonAge.Wyrmling</containerreq>
      <autotag group="Target" tag="wBite"/>
      </bootstrap>
    <bootstrap thing="fMultiAtt">
      <containerreq phase="First" priority="200">DragonAge.VeryYoung</containerreq>
      </bootstrap>
    <bootstrap thing="fPersuas">
      <containerreq phase="First" priority="200">DragonAge.Young</containerreq>
      </bootstrap>
    <bootstrap thing="fImpCrit">
      <containerreq phase="First" priority="200">DragonAge.Juvenile</containerreq>
      <autotag group="Target" tag="wBite"/>
      </bootstrap>
    <bootstrap thing="fFlybyAt">
      <containerreq phase="First" priority="200">DragonAge.YngAdult</containerreq>
      </bootstrap>
    <bootstrap thing="fHover">
      <containerreq phase="First" priority="200">DragonAge.Adult</containerreq>
      </bootstrap>
    <bootstrap thing="fWepFoc">
      <containerreq phase="First" priority="200">DragonAge.MatAdult</containerreq>
      <autotag group="Target" tag="wClaw"/>
      </bootstrap>
    <bootstrap thing="fImpCrit">
      <containerreq phase="First" priority="200">DragonAge.Old</containerreq>
      <autotag group="Target" tag="wClaw"/>
      </bootstrap>
    <bootstrap thing="fImpIronWi">
      <containerreq phase="First" priority="200">DragonAge.VeryOld</containerreq>
      </bootstrap>
    <bootstrap thing="fSkillFoc">
      <containerreq phase="First" priority="200">DragonAge.Ancient</containerreq>
      <autotag group="Target" tag="skPercep"/>
      </bootstrap>
    <bootstrap thing="skKnowNobl"></bootstrap>
    <bootstrap thing="skPerfOrat"></bootstrap>
    <bootstrap thing="skKnowPlan"></bootstrap>
    <bootstrap thing="skKnowRel"></bootstrap>
    <bootstrap thing="fComRef">
      <containerreq phase="First" priority="200">DragonAge.Wyrm</containerreq>
      </bootstrap>
    <bootstrap thing="fVitStr">
      <containerreq phase="First" priority="200">DragonAge.GreatWyrm</containerreq>
      </bootstrap>
    <eval phase="Final" priority="1000"><![CDATA[~ set Frightful Presence, DR, SR, and CL
var ageCat as number
ageCat = hero.childfound[raxDragonA].tagvalue[Value.?]

~ frightful presesnce
if (ageCat >= 4) then
  hero.child[raxFrightP].field[abValue].value = 30 * ageCat
endif

~ Dragons have SR = to 11 + their CR
if (ageCat >= 5) then
  var damage as number
  damage = herofield[tCR].value + 11
  #applysr[damage]
endif

~ Dragons have spell like abilities of CL = to TOTAL (not racial) hit dice
if (ageCat >= 3) then
  var CL as number
  CL = herofield[tHitDice].value
  field[rSpCastLev].value = CL
endif

~ DR 
if (ageCat >= 11) then
  #applydr[xDamRdMag,20]
elseif (ageCat >= 9) then
  #applydr[xDamRdMag,15]
elseif (ageCat >= 7) then
  #applydr[xDamRdMag,10]
elseif (ageCat >= 5) then
  #applydr[xDamRdMag,5]
endif]]></eval>
    <eval phase="First" priority="550" index="2"><![CDATA[~ set caster level of racial spells

~age catagory
var ageCat as number
ageCat = hero.childfound[raxDragonA].tagvalue[Value.?]

perform hero.findchild[BaseRace].setfocus

~ set caster level
if (ageCat >= 3) then
 perform focus.assign[SplLookup.cHelpSor]
 focus.field[cMagicLev].value = 2*ageCat - 5
endif

perform state.clearfocus]]></eval>
    <eval phase="PreLevel" priority="4000" index="3">~ innate skill ranks 
var ageCat as number
ageCat = hero.childfound[raxDragonA].tagvalue[Value.?]

if (ageCat = 1) then
  #skillinnate[skAppraise] += 8
  #skillinnate[skBluff] += 8
  #skillinnate[skDiplo] += 8
  #skillinnate[skIntim] += 8
  #skillinnate[skKnowArca] += 8
  #skillinnate[skPercep] += 8
  #skillinnate[skSenseMot] += 8
  #skillinnate[skSpellcr] += 8

elseif (ageCat = 2) then
  #skillinnate[skAppraise] += 10
  #skillinnate[skBluff] += 10
  #skillinnate[skDiplo] += 10
  #skillinnate[skIntim] += 10
  #skillinnate[skPercep] += 10
  #skillinnate[skKnowArca] += 10
  #skillinnate[skKnowHist] += 10
  #skillinnate[skSenseMot] += 10
  #skillinnate[skSpellcr] += 10

elseif (ageCat = 3) then
  #skillinnate[skAppraise] += 12
  #skillinnate[skBluff] += 12
  #skillinnate[skDiplo] += 12
  #skillinnate[skIntim] += 12
  #skillinnate[skPercep] += 12
  #skillinnate[skKnowArca] += 12
  #skillinnate[skKnowHist] += 12
  #skillinnate[skSenseMot] += 12
  #skillinnate[skSpellcr] += 12

elseif (ageCat = 4) then
  #skillinnate[skAppraise] += 14
  #skillinnate[skBluff] += 14
  #skillinnate[skDiplo] += 14
  #skillinnate[skHeal] += 14
  #skillinnate[skIntim] += 14
  #skillinnate[skPercep] += 14
  #skillinnate[skKnowArca] += 14
  #skillinnate[skKnowHist] += 14
  #skillinnate[skSenseMot] += 14
  #skillinnate[skSpellcr] += 14

elseif (ageCat = 5) then
  #skillinnate[skAppraise] += 16
  #skillinnate[skBluff] += 16
  #skillinnate[skDiplo] += 16
  #skillinnate[skHeal] += 16
  #skillinnate[skIntim] += 16
  #skillinnate[skPercep] += 16
  #skillinnate[skKnowArca] += 16
  #skillinnate[skKnowHist] += 16
  #skillinnate[skSenseMot] += 16
  #skillinnate[skSpellcr] += 16

elseif (ageCat = 6) then
  #skillinnate[skAppraise] += 18
  #skillinnate[skBluff] += 18
  #skillinnate[skDiplo] += 18
  #skillinnate[skHeal] += 18
  #skillinnate[skIntim] += 18
  #skillinnate[skPercep] += 18
  #skillinnate[skKnowArca] += 18
  #skillinnate[skKnowHist] += 18
  #skillinnate[skKnowNobl] += 18
  #skillinnate[skSenseMot] += 18
  #skillinnate[skSpellcr] += 18

elseif (ageCat = 7) then
  #skillinnate[skAppraise] += 20
  #skillinnate[skBluff] += 20
  #skillinnate[skDiplo] += 20
  #skillinnate[skHeal] += 20
  #skillinnate[skIntim] += 20
  #skillinnate[skPercep] += 20
  #skillinnate[skKnowArca] += 20
  #skillinnate[skKnowHist] += 20
  #skillinnate[skKnowNobl] += 20
  #skillinnate[skSenseMot] += 20
  #skillinnate[skSpellcr] += 20

elseif (ageCat = 8) then 
  #skillinnate[skAppraise] += 22
  #skillinnate[skBluff] += 22
  #skillinnate[skDiplo] += 22
  #skillinnate[skHeal] += 22
  #skillinnate[skIntim] += 22
  #skillinnate[skPercep] += 22
  #skillinnate[skKnowArca] += 22
  #skillinnate[skKnowHist] += 22
  #skillinnate[skKnowNobl] += 22
  #skillinnate[skPerfOrat] += 22
  #skillinnate[skSenseMot] += 22
  #skillinnate[skSpellcr] += 22

elseif (ageCat = 9) then
  #skillinnate[skAppraise] += 24
  #skillinnate[skBluff] += 24
  #skillinnate[skDiplo] += 24
  #skillinnate[skHeal] += 24
  #skillinnate[skIntim] += 24
  #skillinnate[skPercep] += 24
  #skillinnate[skKnowArca] += 24
  #skillinnate[skKnowHist] += 24
  #skillinnate[skKnowNobl] += 24
  #skillinnate[skPerfOrat] += 24
  #skillinnate[skSenseMot] += 24
  #skillinnate[skSpellcr] += 24

elseif (ageCat = 10) then
  #skillinnate[skAppraise] += 26
  #skillinnate[skBluff] += 26
  #skillinnate[skDiplo] += 26
  #skillinnate[skHeal] += 26
  #skillinnate[skIntim] += 26
  #skillinnate[skPercep] += 26
  #skillinnate[skKnowArca] += 26
  #skillinnate[skKnowHist] += 26
  #skillinnate[skKnowNobl] += 26
  #skillinnate[skKnowPlan] += 26
  #skillinnate[skPerfOrat] += 26
  #skillinnate[skSenseMot] += 26
  #skillinnate[skSpellcr] += 26

elseif (ageCat = 11) then
  #skillinnate[skAppraise] += 28
  #skillinnate[skBluff] += 28
  #skillinnate[skDiplo] += 28
  #skillinnate[skHeal] += 28
  #skillinnate[skIntim] += 28
  #skillinnate[skPercep] += 28
  #skillinnate[skKnowArca] += 28
  #skillinnate[skKnowHist] += 28
  #skillinnate[skKnowNobl] += 28
  #skillinnate[skKnowPlan] += 28
  #skillinnate[skPerfOrat] += 28
  #skillinnate[skSenseMot] += 28
  #skillinnate[skSpellcr] += 28

elseif (ageCat = 12) then
  #skillinnate[skAppraise] += 30
  #skillinnate[skBluff] += 30
  #skillinnate[skDiplo] += 30
  #skillinnate[skHeal] += 30
  #skillinnate[skIntim] += 30
  #skillinnate[skPercep] += 30
  #skillinnate[skKnowArca] += 30
  #skillinnate[skKnowHist] += 30
  #skillinnate[skKnowNobl] += 30
  #skillinnate[skKnowPlan] += 30
  #skillinnate[skKnowRel] += 30
  #skillinnate[skPerfOrat] += 30
  #skillinnate[skSenseMot] += 30
  #skillinnate[skSpellcr] += 30

endif
      <before name="Skill Bonus Feats"/>
      </eval>
    </thing>
  <thing id="raxSocMstC" name="Master Counterspelling" description="A great wyrm sovereign dragon can counterspell once per round as an immediate action. It need not know the spell it is countering, but can instead expend any spell that is one level higher to automatically counter the spell." compset="RaceSpec">
    <usesource source="VarDragons"/>
    <tag group="SpecType" tag="Defense"/>
    <tag group="AbilType" tag="Super"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <tag group="Helper" tag="ShowSpec"/>
    </thing>
  <thing id="raxSovGldA" name="Golden Armor" description="Once per day as a standard action, an old or older sovereign dragon can cover its form in golden armor, granting it a +4 armor bonus to AC and energy resistance 15 to one energy type, chosen at the time the armor is summoned. This armor lasts for a number of rounds equal to the dragon's age category. The sovereign dragon can dismiss the armor as a free action." compset="RaceSpec">
    <fieldval field="actName" value="Golden Armor"/>
    <fieldval field="trkMax" value="1"/>
    <usesource source="VarDragons"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <tag group="AbilType" tag="Super"/>
    <tag group="User" tag="Activation"/>
    <tag group="Helper" tag="ShowSpec"/>
    <tag group="User" tag="Tracker"/>
    <tag group="SpecType" tag="Defense"/>
    <tag group="Usage" tag="Day"/>
    <tag group="fShowWhat" tag="Energy"/>
    <tag group="User" tag="NoAutoName"/>
    <eval phase="Final" priority="1000" index="2"><![CDATA[doneif (field[usrChosen1].ischosen = 0)

var csn as string
csn = field[usrChosen1].chosen.idstring

if (compare(csn,"selEnAcid")=0) then
  hero.child[xDamRsAcid].field[abValue].value = maximum(15,hero.child[xDamRsAcid].field[abValue].value)

elseif (compare(csn,"selEnCold")=0) then
  hero.child[xDamRsCold].field[abValue].value = maximum(15,hero.child[xDamRsCold].field[abValue].value)

elseif (compare(csn,"selEnElec")=0) then
  hero.child[xDamRsElec].field[abValue].value = maximum(15,hero.child[xDamRsElec].field[abValue].value)

elseif (compare(csn,"selEnFire")=0) then
  hero.child[xDamRsFire].field[abValue].value = maximum(15,hero.child[xDamRsFire].field[abValue].value)

elseif (compare(csn,"selEnSonic")=0) then
  hero.child[xDamRsSoni].field[abValue].value = maximum(15,hero.child[xDamRsSoni].field[abValue].value)

endif]]></eval>
    <eval phase="PreLevel" priority="1000"><![CDATA[
var ageCat as number
ageCat = hero.child[raxDragonA].tagvalue[Value.?]

field[livename].text = "Golden Armor (" & ageCat & " rounds)"


doneif (field[abilActive].value = 0)

hero.child[ArmorClass].field[Bonus].value += 4]]></eval>
    </thing>
  <thing id="rxDragUnde" name="Dragon, Underworld" description="Underworld dragons-also called futsanglungs-are calculating, greedy creatures that carve great labyrinthine tunnels beneath the world, defending their hidden treasures. Preferring the earth to the heavens, they channel the fires of the world's core within their twisting, stonelike bodies and through flaming breath hot enough to turn granite into slag." compset="Race">
    <fieldval field="shortname" value="Underworld Dragon"/>
    <fieldval field="rHitDice" value="4"/>
    <fieldval field="rDEX" value="4"/>
    <fieldval field="rSpeed" value="40"/>
    <fieldval field="rAC" value="4"/>
    <fieldval field="rCR" value="3"/>
    <fieldval field="rDescript" value="This serpentine dragon has skin the color of deep volcanic rock, enormous claws, and jagged, stonelike horns and scales."/>
    <fieldval field="rEnviron" value="any underground"/>
    <fieldval field="rOrgan" value="solitary"/>
    <fieldval field="rTreasure" value="triple"/>
    <fieldval field="rWIS" value="1"/>
    <fieldval field="rSTR" value="3"/>
    <fieldval field="rCON" value="3"/>
    <fieldval field="rHPStart" value="26"/>
    <usesource source="VarDragons"/>
    <tag group="Race" tag="rTrueDrago"/>
    <tag group="Helper" tag="NotHum"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <tag group="RaceType" tag="NPC"/>
    <tag group="RaceSize" tag="Tiny12"/>
    <tag group="HasType" tag="tpDragon"/>
    <tag group="Language" tag="Any"/>
    <tag group="DragType" tag="Imperial" name="Dragon, Imperial"/>
    <tag group="Helper" tag="Quadruped"/>
    <tag group="Hero" tag="NoDefComm"/>
    <tag group="Alignment" tag="NeutralLC"/>
    <tag group="Alignment" tag="NeutralGE"/>
    <bootstrap thing="raChangeSh">
      <containerreq phase="First" priority="200">DragonAge.Young</containerreq>
      <autotag group="Usage" tag="Day"/>
      <assignval field="trkMax" value="3"/>
      <assignval field="livename" value="Change Shape (any humanoid; {i}polymorph{/i})"/>
      </bootstrap>
    <bootstrap thing="lDraconic">
      <containerreq phase="First" priority="200">DragonAge.Wyrmling</containerreq>
      </bootstrap>
    <bootstrap thing="tmxDragAge"></bootstrap>
    <bootstrap thing="wGore">
      <autotag group="wMain" tag="1d6_5"/>
      <autotag group="Helper" tag="NatPrimary"/>
      <autotag group="Helper" tag="NatTwoHand"/>
      </bootstrap>
    <bootstrap thing="wTailSlap">
      <autotag group="wMain" tag="1d8_6"/>
      <autotag group="Helper" tag="NatTwoHand"/>
      </bootstrap>
    <bootstrap thing="raxDrgBrea">
      <autotag group="BreathShp" tag="Line"/>
      <autotag group="BloodEner" tag="Fire"/>
      <assignval field="abValue3" value="6"/>
      <assignval field="abValue" value="2"/>
      </bootstrap>
    <bootstrap thing="wBite">
      <autotag group="wMain" tag="1d6_5"/>
      <autotag group="Helper" tag="NatPrimary"/>
      <autotag group="Helper" tag="NatTwoHand"/>
      </bootstrap>
    <bootstrap thing="wClaw">
      <autotag group="Value" tag="2"/>
      <autotag group="wMain" tag="1d4_4"/>
      <autotag group="Helper" tag="NatPrimary"/>
      </bootstrap>
    <bootstrap thing="raDrSenses"></bootstrap>
    <bootstrap thing="raxFrightP">
      <containerreq phase="First" priority="200">DragonAge.Juvenile</containerreq>
      </bootstrap>
    <bootstrap thing="xFly">
      <autotag group="Maneuver" tag="Average"/>
      <autotag group="Value" tag="150"/>
      </bootstrap>
    <bootstrap thing="wCrush"></bootstrap>
    <bootstrap thing="wTailSweep"></bootstrap>
    <bootstrap thing="stFire"></bootstrap>
    <bootstrap thing="xBurrow">
      <autotag group="Value" tag="30"/>
      </bootstrap>
    <bootstrap thing="spClasRoc9">
      <containerreq phase="First" priority="200">DragonAge.GreatWyrm</containerreq>
      <autotag group="Helper" tag="SpellLike"/>
      <autotag group="Usage" tag="AtWill"/>
      </bootstrap>
    <bootstrap thing="spRepeMet9">
      <containerreq phase="First" priority="200">DragonAge.Ancient</containerreq>
      <autotag group="Helper" tag="SpellLike"/>
      <autotag group="Usage" tag="AtWill"/>
      </bootstrap>
    <bootstrap thing="spSoftEar2">
      <containerreq phase="First" priority="200">DragonAge.Young</containerreq>
      <autotag group="Helper" tag="SpellLike"/>
      <autotag group="Usage" tag="AtWill"/>
      </bootstrap>
    <bootstrap thing="spSpikSto4">
      <containerreq phase="First" priority="200">DragonAge.Adult</containerreq>
      <autotag group="Helper" tag="SpellLike"/>
      <autotag group="Usage" tag="AtWill"/>
      </bootstrap>
    <bootstrap thing="spStonSha4">
      <containerreq phase="First" priority="200">DragonAge.Juvenile</containerreq>
      <autotag group="Helper" tag="SpellLike"/>
      <autotag group="Usage" tag="AtWill"/>
      </bootstrap>
    <bootstrap thing="spWallSto5">
      <containerreq phase="First" priority="200">DragonAge.Old</containerreq>
      <autotag group="Helper" tag="SpellLike"/>
      <autotag group="Usage" tag="AtWill"/>
      </bootstrap>
    <bootstrap thing="raAdamClaw">
      <containerreq phase="First" priority="200">DragonAge.Wyrmling</containerreq>
      </bootstrap>
    <bootstrap thing="raSmokeVis">
      <containerreq phase="First" priority="200">DragonAge.VeryYoung</containerreq>
      </bootstrap>
    <bootstrap thing="raxUndLava">
      <containerreq phase="First" priority="200">DragonAge.GreatWyrm</containerreq>
      </bootstrap>
    <bootstrap thing="raxUndBurr">
      <containerreq phase="First" priority="200">DragonAge.Adult</containerreq>
      </bootstrap>
    <bootstrap thing="skKnowGeog"></bootstrap>
    <bootstrap thing="skKnowDun"></bootstrap>
    <bootstrap thing="fImpInit">
      <containerreq phase="First" priority="200">DragonAge.Wyrmling</containerreq>
      </bootstrap>
    <bootstrap thing="fSkillFoc">
      <containerreq phase="First" priority="200">DragonAge.Wyrmling</containerreq>
      <autotag group="Target" tag="skStealth"/>
      </bootstrap>
    <bootstrap thing="fWepFoc">
      <containerreq phase="First" priority="200">DragonAge.VeryYoung</containerreq>
      <autotag group="Target" tag="wBite"/>
      </bootstrap>
    <bootstrap thing="fImpCrit">
      <containerreq phase="First" priority="200">DragonAge.Young</containerreq>
      <autotag group="Target" tag="wClaw"/>
      </bootstrap>
    <bootstrap thing="fImpNatArm">
      <containerreq phase="First" priority="200">DragonAge.Juvenile</containerreq>
      </bootstrap>
    <bootstrap thing="fWepFoc">
      <containerreq phase="First" priority="200">DragonAge.YngAdult</containerreq>
      <autotag group="Target" tag="wClaw"/>
      </bootstrap>
    <bootstrap thing="fLunge">
      <containerreq phase="First" priority="200">DragonAge.Adult</containerreq>
      </bootstrap>
    <bootstrap thing="fPowerAtt">
      <containerreq phase="First" priority="200">DragonAge.MatAdult</containerreq>
      </bootstrap>
    <bootstrap thing="fImpCrit">
      <containerreq phase="First" priority="200">DragonAge.Old</containerreq>
      <autotag group="Target" tag="wBite"/>
      </bootstrap>
    <bootstrap thing="fImpBull">
      <containerreq phase="First" priority="200">DragonAge.VeryOld</containerreq>
      </bootstrap>
    <bootstrap thing="fGrtWepFoc">
      <containerreq phase="First" priority="200">DragonAge.Ancient</containerreq>
      <autotag group="thing" tag="skipprereq"/>
      <autotag group="Target" tag="wClaw"/>
      </bootstrap>
    <bootstrap thing="fCleave">
      <containerreq phase="First" priority="200">DragonAge.Wyrm</containerreq>
      </bootstrap>
    <bootstrap thing="fVitStr">
      <containerreq phase="First" priority="200">DragonAge.GreatWyrm</containerreq>
      </bootstrap>
    <bootstrap thing="skKnowPlan"></bootstrap>
    <bootstrap thing="skKnowArca"></bootstrap>
    <eval phase="Final" priority="1000"><![CDATA[~ set Frightful Presence, DR, SR, and CL
var ageCat as number
ageCat = hero.childfound[raxDragonA].tagvalue[Value.?]

~ frightful presesnce
if (ageCat >= 4) then
  hero.child[raxFrightP].field[abValue].value = 30 * ageCat
endif

~ Dragons have SR = to 11 + their CR
if (ageCat >= 5) then
  var damage as number
  damage = herofield[tCR].value + 11
  #applysr[damage]
endif

~ Dragons have spell like abilities of CL = to TOTAL (not racial) hit dice
if (ageCat >= 3) then
  var CL as number
  CL = herofield[tHitDice].value
  field[rSpCastLev].value = CL
endif

~ DR 
if (ageCat >= 11) then
  #applydr[xDamRdMag,20]
elseif (ageCat >= 9) then
  #applydr[xDamRdMag,15]
elseif (ageCat >= 7) then
  #applydr[xDamRdMag,10]
elseif (ageCat >= 5) then
  #applydr[xDamRdMag,5]
endif]]></eval>
    <eval phase="First" priority="550" index="2"><![CDATA[~ set caster level of racial spells

~age catagory
var ageCat as number
ageCat = hero.childfound[raxDragonA].tagvalue[Value.?]

perform hero.findchild[BaseRace].setfocus

~ set caster level
if (ageCat >= 4) then
 perform focus.assign[SplLookup.cHelpSor]
 focus.field[cMagicLev].value = 2*ageCat - 7
endif

perform state.clearfocus]]></eval>
    <eval phase="PreLevel" priority="4000" index="3">~ innate skill ranks 
var ageCat as number
ageCat = hero.childfound[raxDragonA].tagvalue[Value.?]

if (ageCat = 1) then
  #skillinnate[skAppraise] += 4
  #skillinnate[skClimb] += 4
  #skillinnate[skIntim] += 4
  #skillinnate[skKnowDun] += 4
  #skillinnate[skPercep] += 4
  #skillinnate[skStealth] += 4

elseif (ageCat = 2) then
  #skillinnate[skAppraise] += 6
  #skillinnate[skClimb] += 6
  #skillinnate[skIntim] += 6
  #skillinnate[skKnowDun] += 6
  #skillinnate[skKnowGeog] += 6
  #skillinnate[skPercep] += 6
  #skillinnate[skStealth] += 6

elseif (ageCat = 3) then
  #skillinnate[skAppraise] += 8
  #skillinnate[skClimb] += 8
  #skillinnate[skIntim] += 8
  #skillinnate[skKnowDun] += 8
  #skillinnate[skKnowGeog] += 8
  #skillinnate[skPercep] += 8
  #skillinnate[skStealth] += 8

elseif (ageCat = 4) then
  #skillinnate[skAppraise] += 10
  #skillinnate[skBluff] += 10
  #skillinnate[skClimb] += 10
  #skillinnate[skIntim] += 10
  #skillinnate[skKnowDun] += 10
  #skillinnate[skKnowGeog] += 10
  #skillinnate[skPercep] += 10
  #skillinnate[skStealth] += 10

elseif (ageCat = 5) then
  #skillinnate[skAppraise] += 12
  #skillinnate[skBluff] += 12
  #skillinnate[skClimb] += 12
  #skillinnate[skIntim] += 12
  #skillinnate[skKnowDun] += 12
  #skillinnate[skKnowGeog] += 12
  #skillinnate[skPercep] += 12
  #skillinnate[skStealth] += 12

elseif (ageCat = 6) then
  #skillinnate[skAppraise] += 14
  #skillinnate[skBluff] += 14
  #skillinnate[skClimb] += 14
  #skillinnate[skFly] += 14
  #skillinnate[skIntim] += 14
  #skillinnate[skKnowDun] += 14
  #skillinnate[skKnowGeog] += 14
  #skillinnate[skPercep] += 14
  #skillinnate[skStealth] += 14

elseif (ageCat = 7) then
  #skillinnate[skAppraise] += 16
  #skillinnate[skBluff] += 16
  #skillinnate[skClimb] += 16
  #skillinnate[skFly] += 16
  #skillinnate[skIntim] += 16
  #skillinnate[skKnowDun] += 16
  #skillinnate[skKnowGeog] += 16
  #skillinnate[skPercep] += 16
  #skillinnate[skStealth] += 16

elseif (ageCat = 8) then 
  #skillinnate[skAcrobat] += 18
  #skillinnate[skAppraise] += 18
  #skillinnate[skBluff] += 18
  #skillinnate[skClimb] += 18
  #skillinnate[skFly] += 18
  #skillinnate[skIntim] += 18
  #skillinnate[skKnowDun] += 18
  #skillinnate[skKnowGeog] += 18
  #skillinnate[skPercep] += 18
  #skillinnate[skStealth] += 18

elseif (ageCat = 9) then
  #skillinnate[skAcrobat] += 20
  #skillinnate[skAppraise] += 20
  #skillinnate[skBluff] += 20
  #skillinnate[skClimb] += 20
  #skillinnate[skFly] += 20
  #skillinnate[skIntim] += 20
  #skillinnate[skKnowDun] += 20
  #skillinnate[skKnowGeog] += 20
  #skillinnate[skPercep] += 20
  #skillinnate[skStealth] += 20

elseif (ageCat = 10) then
  #skillinnate[skAcrobat] += 22
  #skillinnate[skAppraise] += 22
  #skillinnate[skBluff] += 22
  #skillinnate[skClimb] += 22
  #skillinnate[skFly] += 22
  #skillinnate[skIntim] += 22
  #skillinnate[skKnowDun] += 22
  #skillinnate[skKnowGeog] += 22
  #skillinnate[skKnowPlan] += 22
  #skillinnate[skPercep] += 22
  #skillinnate[skStealth] += 22

elseif (ageCat = 11) then
  #skillinnate[skAcrobat] += 24
  #skillinnate[skAppraise] += 24
  #skillinnate[skBluff] += 24
  #skillinnate[skClimb] += 24
  #skillinnate[skFly] += 24
  #skillinnate[skIntim] += 24
  #skillinnate[skKnowDun] += 24
  #skillinnate[skKnowGeog] += 24
  #skillinnate[skKnowPlan] += 24
  #skillinnate[skPercep] += 24
  #skillinnate[skStealth] += 24

elseif (ageCat = 12) then
  #skillinnate[skAcrobat] += 26
  #skillinnate[skAppraise] += 26
  #skillinnate[skBluff] += 26
  #skillinnate[skClimb] += 26
  #skillinnate[skFly] += 26
  #skillinnate[skIntim] += 26
  #skillinnate[skKnowArca] += 26
  #skillinnate[skKnowDun] += 26
  #skillinnate[skKnowGeog] += 26
  #skillinnate[skKnowPlan] += 26
  #skillinnate[skPercep] += 26
  #skillinnate[skStealth] += 26

endif
      <before name="Skill Bonus Feats"/>
      </eval>
    </thing>
  <thing id="raxUndBurr" name="Underworld Burrower" description="An adult underworld dragon gains a 10-foot bonus to its burrow speed. When the underworld dragon becomes old and every two age categories thereafter, its burrow speed increases by an additional 10 feet." compset="RaceSpec">
    <usesource source="VarDragons"/>
    <tag group="AbilType" tag="Super"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <tag group="Helper" tag="ShowSpec"/>
    <eval phase="Final" priority="1000">~ get age catagory

var ageCat as number
ageCat = hero.child[raxDragonA].tagvalue[Value.?] - 4

hero.child[xSwim].field[abValue].value += 10 * round(ageCat/2,0,-1)</eval>
    </thing>
  <thing id="raxUndLava" name="Lava Eruption" description="As a full-round action, a great wyrm underworld dragon can burrow through the ground up to twice its burrow speed. At the end of that movement, if the underworld dragon has use of its breath weapon, it can emerge from the ground spouting lava in a 30-foot-radius burst, dealing damage as the breath weapon." compset="RaceSpec">
    <usesource source="VarDragons"/>
    <tag group="SpecType" tag="Attack"/>
    <tag group="AbilType" tag="Super"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <tag group="Helper" tag="ShowSpec"/>
    </thing>
  <thing id="cfgxDrgAge" name="Dragon Age" description="Dragon Age Catagory" compset="Configure" uniqueness="unique">
    <fieldval field="cfgMax1" value="1"/>
    <fieldval field="cfgObject1" value="Dragon Age"/>
    <usesource source="VarDragons"/>
    </thing>
  <thing id="rcxDrAgWyr" name="Wyrmling" compset="RaceCustom" uniqueness="useronce">
    <usesource source="VarDragons"/>
    <tag group="Helper" tag="SpecUp"/>
    <tag group="AllowRCust" tag="cfgxDrgAge"/>
    <eval phase="First" priority="75">~ store age catagory
perform hero.child[raxDragonA].assign[Value.1]

~ assign dragon age tags
~ we assign all tags from wyrmling through selected age
~ for bootstraped abilities

perform hero.assign[DragonAge.Wyrmling]

~ but just our selected age to the helper for naming
perform hero.child[raxDragonA].assign[DragonAge.Wyrmling]</eval>
    </thing>
  <thing id="rcxDRAgVYg" name="Very Young" compset="RaceCustom" uniqueness="useronce">
    <usesource source="VarDragons"/>
    <tag group="Helper" tag="SpecUp"/>
    <tag group="AllowRCust" tag="cfgxDrgAge"/>
    <eval phase="First" priority="75">~ store age catagory
perform hero.child[raxDragonA].assign[Value.2]

~ assign dragon age tags
~ we assign all tags from wyrmling through selected age
~ for bootstraped abilities

perform hero.assign[DragonAge.Wyrmling]
perform hero.assign[DragonAge.VeryYoung]

~ but just our selected age to the helper for naming
perform hero.child[raxDragonA].assign[DragonAge.VeryYoung]</eval>
    </thing>
  <thing id="tmxDragAge" name="Dragon Age Catagory" description="Template for adding an age catagory to a true dragon." compset="Template" uniqueness="unique">
    <comment><![CDATA[This helper template implements a dragon's age cataory as a configurable. When making a new dragon, make the base dragon and implement scripts and conditionals to assign/bootstrap the dragon's abilities.

The age catagory tags (they are definied in a sperate 1st file) are assigned to the hero at PreLevels/100 in the Racial Special Dragon Age (raxDragonA) and are as follows:

Wyrmling - DragonAge.Wyrmling
Very Young - DragonAge.VeryYoung
Young - DragonAge.Young
Juvenile - DragonAge.Juvenile
Young Adult - DragonAge.YngAdult
Adult - DragonAge.Adult
Mature Adult - DragonAge.MatAdult
Old - DragonAge.Old
Ancient - DragonAge.Ancient
Wyrm - DragonAge.Wyrm
Great Wyrm - DragonAge.GreatWyrm]]></comment>
    <usesource source="VarDragons" parent="pHLComm" name="Variant Dragons"/>
    <tag group="Helper" tag="Helper"/>
    <tag group="ClVaryName" tag="Replace"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <bootstrap thing="cfgxDrgAge"></bootstrap>
    <bootstrap thing="raxDragonA"></bootstrap>
    <eval phase="PreLevel" priority="9900" index="3"><![CDATA[
~ size dependent abilities

var dragSize as number
dragSize = herofield[tSize].value

if (dragSize = -2) then
  perform hero.child[wBite].tagreplace[wMain.?,wMain.1d4_4]
  perform hero.child[wClaw].tagreplace[wMain.?,wMain.1d3_3]
  if (hero.findchild[BaseRace].tagcount[DragType.Imperial] <> 0) then
     perform hero.childfound[wGore].assign[Hide.Weapon]
  else
     perform hero.childfound[wWing].assign[Hide.Weapon]
  endif
  perform hero.child[wTailSlap].assign[Hide.Weapon]
  perform hero.child[wCrush].assign[Hide.Weapon]
  perform hero.child[wTailSweep].assign[Hide.Weapon]
  hero.child[xFly].field[abValue].value = 100
  perform hero.child[xFly].tagreplace[Maneuver.?,Maneuver.Average]
elseif (dragSize = -1) then
  perform hero.child[wBite].tagreplace[wMain.?,wMain.1d6_5]
  perform hero.child[wClaw].tagreplace[wMain.?,wMain.1d4_4]
  if (hero.findchild[BaseRace].tagcount[DragType.Imperial] <> 0) then
     perform hero.childfound[wGore].assign[Hide.Weapon]
  else
     perform hero.childfound[wWing].assign[Hide.Weapon]
  endif
  perform hero.child[wTailSlap].assign[Hide.Weapon]
  perform hero.child[wCrush].assign[Hide.Weapon]
  perform hero.child[wTailSweep].assign[Hide.Weapon]
  hero.child[xFly].field[abValue].value = 150
  perform hero.child[xFly].tagreplace[Maneuver.?,Maneuver.Average]
elseif (dragSize = 0) then
  perform hero.child[wBite].tagreplace[wMain.?,wMain.1d8_6]
  perform hero.child[wClaw].tagreplace[wMain.?,wMain.1d6_5]
  if (hero.findchild[BaseRace].tagcount[DragType.Imperial] <> 0) then
     perform hero.childfound[wGore].tagreplace[wMain.?,wMain.1d6_5]
  else
     perform hero.childfound[wWing].tagreplace[wMain.?,wMain.1d4_4]
  endif
  perform hero.child[wTailSlap].assign[Hide.Weapon]
  perform hero.child[wCrush].assign[Hide.Weapon]
  perform hero.child[wTailSweep].assign[Hide.Weapon]
  hero.child[xFly].field[abValue].value = 150
  perform hero.child[xFly].tagreplace[Maneuver.?,Maneuver.Average]
elseif (dragSize = 1) then
  perform hero.child[wBite].tagreplace[wMain.?,wMain.2d6_104]
  perform hero.child[wClaw].tagreplace[wMain.?,wMain.1d8_6]
  if (hero.findchild[BaseRace].tagcount[DragType.Imperial] <> 0) then
     perform hero.childfound[wGore].tagreplace[wMain.?,wMain.1d8_6]
  else
     perform hero.childfound[wWing].tagreplace[wMain.?,wMain.1d6_5]
  endif
  perform hero.child[wTailSlap].tagreplace[wMain.?,wMain.1d8_6]
  perform hero.child[wCrush].assign[Hide.Weapon]
  perform hero.child[wTailSweep].assign[Hide.Weapon]
  hero.child[xFly].field[abValue].value = 200
  perform hero.child[xFly].tagreplace[Maneuver.?,Maneuver.Poor]
elseif (dragSize = 2) then
  perform hero.child[wBite].tagreplace[wMain.?,wMain.2d8_305]
  perform hero.child[wClaw].tagreplace[wMain.?,wMain.2d6_104]
  if (hero.findchild[BaseRace].tagcount[DragType.Imperial] <> 0) then
     perform hero.childfound[wGore].tagreplace[wMain.?,wMain.2d6_104]
  else
     perform hero.childfound[wWing].tagreplace[wMain.?,wMain.1d8_6]
  endif
  perform hero.child[wTailSlap].tagreplace[wMain.?,wMain.2d6_104]
  perform hero.child[wCrush].assign[wMain.2d8_305]
  hero.child[wCrush].field[gSize].value = 2
  perform hero.child[wTailSweep].assign[Hide.Weapon]
  hero.child[xFly].field[abValue].value = 200
  perform hero.child[xFly].tagreplace[Maneuver.?,Maneuver.Poor]
elseif (dragSize = 3) then
  perform hero.child[wBite].tagreplace[wMain.?,wMain.4d6_106]
  perform hero.child[wClaw].tagreplace[wMain.?,wMain.2d8_305]
  if (hero.findchild[BaseRace].tagcount[DragType.Imperial] <> 0) then
     perform hero.childfound[wGore].tagreplace[wMain.?,wMain.2d8_305]
  else
     perform hero.childfound[wWing].tagreplace[wMain.?,wMain.2d6_104]
  endif
  perform hero.child[wTailSlap].tagreplace[wMain.?,wMain.2d8_305]
  perform hero.child[wCrush].assign[wMain.4d6_106]
  hero.child[wCrush].field[gSize].value = 3
  perform hero.child[wTailSweep].assign[wMain.2d6_104]
  hero.child[wTailSweep].field[gSize].value = 3
  hero.child[xFly].field[abValue].value = 250
  perform hero.child[xFly].tagreplace[Maneuver.?,Maneuver.Clumsy]
elseif (dragSize >= 4) then
  perform hero.child[wBite].tagreplace[wMain.?,wMain.4d8_206]
  perform hero.child[wClaw].tagreplace[wMain.?,wMain.4d6_106]
  if (hero.findchild[BaseRace].tagcount[DragType.Imperial] <> 0) then
     perform hero.childfound[wGore].tagreplace[wMain.?,wMain.4d8_206]
  else
     perform hero.childfound[wWing].tagreplace[wMain.?,wMain.2d8_305]
  endif
  perform hero.child[wTailSlap].tagreplace[wMain.?,wMain.4d6_106]
  perform hero.child[wCrush].assign[wMain.4d8_206]
  hero.child[wCrush].field[gSize].value = 4
  perform hero.child[wTailSweep].assign[wMain.2d8_305]
  hero.child[wTailSweep].field[gSize].value = 4
  hero.child[xFly].field[abValue].value = 250
  perform hero.child[xFly].tagreplace[Maneuver.?,Maneuver.Clumsy]
endif]]></eval>
    <eval phase="First" priority="120" index="2"><![CDATA[
~ change size
perform hero.findchild[BaseRace].setfocus

var newSize as number
var oldSize as number

~ get base race size and set to -4 to 4 scale
oldSize = focus.tagvalue[RaceSize.?]
if (oldSize >= 10) then
 oldSize = 10 - oldSize
endif

~ get size modifier
var ageCat as number
  ageCat = hero.child[raxDragonA].tagvalue[Value.?]
var sizemod as number
if (ageCat = 1) then
  sizemod = 0
elseif (ageCat = 2) then
  sizemod = 1
elseif (ageCat <= 4) then
  sizemod = 2
elseif (ageCat <= 7) then
  sizemod = 3
elseif (ageCat <= 11) then
  sizemod = 4
elseif (ageCat = 12) then
  sizemod = 5
endif

~ calculate new size
newSize = oldSize + sizemod
newSize = minimum(4,newSize)

~ replace size tags
if (newSize = -2) then
  perform focus.tagreplace[RaceSize.?,RaceSize.Tiny12]
elseif (newSize = -1) then
  perform focus.tagreplace[RaceSize.?,RaceSize.Small11]
elseif (newSize = 0) then
  perform focus.tagreplace[RaceSize.?,RaceSize.Medium0]
elseif (newSize = 1) then
  perform focus.tagreplace[RaceSize.?,RaceSize.Large1]
elseif (newSize = 2) then
  perform focus.tagreplace[RaceSize.?,RaceSize.Huge2]
elseif (newSize = 3) then
  perform focus.tagreplace[RaceSize.?,RaceSize.Gargant3]
elseif (newSize = 4) then
  perform focus.tagreplace[RaceSize.?,RaceSize.Colossal4]
endif

perform state.clearfocus]]></eval>
    <eval phase="First" priority="90"><![CDATA[~ first take care of basic stats based on age

var ageCat as number
ageCat = hero.child[raxDragonA].tagvalue[Value.?]

doneif (ageCat <= 0)

~set focus on base race to modify base races stats
perform hero.findchild[BaseRace].setfocus


if (ageCat = 1) then
  ~ do nothing since the wyrmling stats are the base
elseif (ageCat = 2) then
  field[tmCRArray].arrayvalue[0] += 2
  focus.field[rHitDice].value += 2
  focus.field[rAC].value += 3
  focus.field[rSTR].value += 4
  focus.field[rDEX].value -= 2
  focus.field[rCON].value += 2
  focus.field[rINT].value += 2
  focus.field[rWIS].value += 2
  focus.field[rCHA].value += 2
elseif (ageCat = 3) then
  field[tmCRArray].arrayvalue[0] += 4
  focus.field[rHitDice].value += 4
  focus.field[rAC].value += 6
  focus.field[rSTR].value += 8
  focus.field[rDEX].value -= 2
  focus.field[rCON].value += 4
  focus.field[rINT].value += 2
  focus.field[rWIS].value += 2
  focus.field[rCHA].value += 2
elseif (ageCat = 4) then
  field[tmCRArray].arrayvalue[0] += 5
  focus.field[rHitDice].value += 6
  focus.field[rAC].value += 9
  focus.field[rSTR].value += 10
  focus.field[rDEX].value -= 2
  focus.field[rCON].value += 6
  focus.field[rINT].value += 4
  focus.field[rWIS].value += 4
  focus.field[rCHA].value += 4
elseif (ageCat = 5) then
  field[tmCRArray].arrayvalue[0] += 7
  focus.field[rHitDice].value += 8
  focus.field[rAC].value += 12
  focus.field[rSTR].value += 12
  focus.field[rDEX].value -= 4
  focus.field[rCON].value += 6
  focus.field[rINT].value += 4
  focus.field[rWIS].value += 4
  focus.field[rCHA].value += 4
elseif (ageCat = 6) then
  field[tmCRArray].arrayvalue[0] += 8
  focus.field[rHitDice].value += 10
  focus.field[rAC].value += 15
  focus.field[rSTR].value += 14
  focus.field[rDEX].value -= 4
  focus.field[rCON].value += 8
  focus.field[rINT].value += 6
  focus.field[rWIS].value += 6
  focus.field[rCHA].value += 6
elseif (ageCat = 7) then
  field[tmCRArray].arrayvalue[0] += 9
  focus.field[rHitDice].value += 12
  focus.field[rAC].value += 18
  focus.field[rSTR].value += 16
  focus.field[rDEX].value -= 4
  focus.field[rCON].value += 8
  focus.field[rINT].value += 6
  focus.field[rWIS].value += 6
  focus.field[rCHA].value += 6
elseif (ageCat = 8) then
  field[tmCRArray].arrayvalue[0] += 11
  focus.field[rHitDice].value += 14
  focus.field[rAC].value += 21
  focus.field[rSTR].value += 18
  focus.field[rDEX].value -= 6
  focus.field[rCON].value += 10
  focus.field[rINT].value += 8
  focus.field[rWIS].value += 8
  focus.field[rCHA].value += 8
elseif (ageCat = 9) then
  field[tmCRArray].arrayvalue[0] += 12
  focus.field[rHitDice].value += 16
  focus.field[rAC].value += 24
  focus.field[rSTR].value += 20
  focus.field[rDEX].value -= 6
  focus.field[rCON].value += 10
  focus.field[rINT].value += 8
  focus.field[rWIS].value += 8
  focus.field[rCHA].value += 8
elseif (ageCat = 10) then
  field[tmCRArray].arrayvalue[0] += 13
  focus.field[rHitDice].value += 18
  focus.field[rAC].value += 27
  focus.field[rSTR].value += 22
  focus.field[rDEX].value -= 6
  focus.field[rCON].value += 12
  focus.field[rINT].value += 10
  focus.field[rWIS].value += 10
  focus.field[rCHA].value += 10
elseif (ageCat = 11) then
  field[tmCRArray].arrayvalue[0] += 14
  focus.field[rHitDice].value += 20
  focus.field[rAC].value += 30
  focus.field[rSTR].value += 24
  focus.field[rDEX].value -= 8
  focus.field[rCON].value += 12
  focus.field[rINT].value += 10
  focus.field[rWIS].value += 10
  focus.field[rCHA].value += 10
elseif (ageCat = 12) then
  field[tmCRArray].arrayvalue[0] += 16
  focus.field[rHitDice].value += 22
  focus.field[rAC].value += 33
  focus.field[rSTR].value += 26
  focus.field[rDEX].value -= 8
  focus.field[rCON].value += 14
  focus.field[rINT].value += 12
  focus.field[rWIS].value += 12
  focus.field[rCHA].value += 10
endif

if (herofield[tNoPreSel].value = 0) then
  var racialHD as number
  racialHD = focus.field[rHitDice].value
  focus.field[rFeat].value = -1 * round(racialHD/2,0,1)
else
  focus.field[rFeat].value = 0
endif

~clear the focus
perform state.clearfocus]]></eval>
    <eval phase="First" priority="600" index="4"><![CDATA[~ template name change

var raceName as string
var dragonAge as string
dragonAge = hero.child[raxDragonA].tagnames[DragonAge.?,""]


~ focus on base race
perform hero.findchild[BaseRace].setfocus
raceName = focus.field[shortname].text

field[livename].text = dragonAge & " " & raceName

~ clear focus
perform state.clearfocus]]>
      <before name="Template Name Modification"/>
      </eval>
    </thing>
  <thing id="raxDragAg2" name="Dragon Age" description="True dragon&apos;s age a catagory." compset="RaceSpec" uniqueness="unique">
    <comment>We store the numeric age catagory in field[abValue].</comment>
    <fieldval field="abValue" value="1"/>
    <arrayval field="usrArray" index="2" value="Young"/>
    <arrayval field="usrArray" index="3" value="Juvenile"/>
    <arrayval field="usrArray" index="4" value="Young Adult"/>
    <arrayval field="usrArray" index="5" value="Adult"/>
    <arrayval field="usrArray" index="6" value="Mature Adult"/>
    <arrayval field="usrArray" index="7" value="Old"/>
    <arrayval field="usrArray" index="8" value="Very Old"/>
    <arrayval field="usrArray" index="9" value="Ancient"/>
    <arrayval field="usrArray" index="10" value="Wyrm"/>
    <arrayval field="usrArray" index="11" value="Great Wyrm"/>
    <arrayval field="usrArray" index="0" value="Wyrmling"/>
    <arrayval field="usrArray" index="1" value="Very Young"/>
    <usesource source="VarDragons"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <eval phase="PreLevel"><![CDATA[~ pass user choice to parent template

var ageChoice as string
ageChoice = field[usrSelect].text
~ assign age catagory value
var ageValue as number
if (compare(ageChoice,"Wyrmling") = 0) then
  ageValue = 1
elseif (compare(ageChoice,"Very Young") = 0) then
  ageValue = 2
elseif (compare(ageChoice,"Young") = 0) then
  ageValue = 3
elseif (compare(ageChoice,"Juvenile") = 0) then
  ageValue = 4
elseif (compare(ageChoice,"Young Adult") = 0) then
  ageValue = 5
elseif (compare(ageChoice,"Adult") = 0) then
  ageValue = 6
elseif (compare(ageChoice,"Mature Adult") = 0) then
  ageValue = 7
elseif (compare(ageChoice,"Old") = 0) then
  ageValue = 8
elseif (compare(ageChoice,"Very Old") = 0) then
  ageValue = 9
elseif (compare(ageChoice,"Ancient") = 0) then
  ageValue = 10
elseif (compare(ageChoice,"Wyrm") = 0) then
  ageValue = 11
elseif (compare(ageChoice,"Great Wyrm") = 0) then
  ageValue = 12
else
 ~ error handling
  ageValue = -1
endif

~ store in abValue for later use
field[abValue].value = ageValue

~ now assign dragon age tags based on age value
~ older ages get multiple tags
~ these tags are for conditions that turn on dragon abilities

~ have doneif statement just incase we have an error for the choosing
doneif (field[abValue].value < 0)

~ first remove any dragon age tags
perform hero.delete[DragonAge.?]

if (field[abValue].value >= 1) then
  perform hero.assign[DragonAge.Wyrmling]
endif

if (field[abValue].value >= 2) then
  perform hero.assign[DragonAge.VeryYoung]
endif

if (field[abValue].value >= 3) then
  perform hero.assign[DragonAge.Young]
endif

if (field[abValue].value >= 4) then
  perform hero.assign[DragonAge.Juvenile]
endif

if (field[abValue].value >= 5) then
  perform hero.assign[DragonAge.YngAdult]
endif

if (field[abValue].value >= 6) then
  perform hero.assign[DragonAge.Adult]
endif

if (field[abValue].value >= 7) then
  perform hero.assign[DragonAge.MatAdult]
endif

if (field[abValue].value >= 8) then
  perform hero.assign[DragonAge.Old]
endif 

if (field[abValue].value >= 9) then
  perform hero.assign[DragonAge.VeryOld]
endif

if (field[abValue].value >= 10) then
  perform hero.assign[DragonAge.Ancient]
endif

if (field[abValue].value >= 11) then
  perform hero.assign[DragonAge.Wyrm]
endif

if (field[abValue].value >= 12) then
  perform hero.assign[DragonAge.GreatWyrm]
endif


debug "dragon age value: " & field[abValue].value]]></eval>
    </thing>
  <thing id="rcxDrAgYng" name="Young" compset="RaceCustom" uniqueness="useronce">
    <usesource source="VarDragons"/>
    <tag group="Helper" tag="SpecUp"/>
    <tag group="AllowRCust" tag="cfgxDrgAge"/>
    <eval phase="First" priority="75">~ store age catagory
perform hero.child[raxDragonA].assign[Value.3]

~ assign dragon age tags
~ we assign all tags from wyrmling through selected age
~ for bootstraped abilities

perform hero.assign[DragonAge.Wyrmling]
perform hero.assign[DragonAge.VeryYoung]
perform hero.assign[DragonAge.Young]

~ but just our selected age to the helper for naming
perform hero.child[raxDragonA].assign[DragonAge.Young]</eval>
    </thing>
  <thing id="rcxDrAgJuv" name="Juvenile" compset="RaceCustom" uniqueness="useronce">
    <usesource source="VarDragons"/>
    <tag group="Helper" tag="SpecUp"/>
    <tag group="AllowRCust" tag="cfgxDrgAge"/>
    <eval phase="First" priority="75">~ store age catagory
perform hero.child[raxDragonA].assign[Value.4]

~ assign dragon age tags
~ we assign all tags from wyrmling through selected age
~ for bootstraped abilities

perform hero.assign[DragonAge.Wyrmling]
perform hero.assign[DragonAge.VeryYoung]
perform hero.assign[DragonAge.Young]
perform hero.assign[DragonAge.Juvenile]

~ but just our selected age to the helper for naming
perform hero.child[raxDragonA].assign[DragonAge.Juvenile]</eval>
    </thing>
  <thing id="rcxDrAgYgA" name="Young Adult" compset="RaceCustom" uniqueness="useronce">
    <usesource source="VarDragons"/>
    <tag group="Helper" tag="SpecUp"/>
    <tag group="AllowRCust" tag="cfgxDrgAge"/>
    <eval phase="First" priority="75">~ store age catagory
perform hero.child[raxDragonA].assign[Value.5]

~ assign dragon age tags
~ we assign all tags from wyrmling through selected age
~ for bootstraped abilities

perform hero.assign[DragonAge.Wyrmling]
perform hero.assign[DragonAge.VeryYoung]
perform hero.assign[DragonAge.Young]
perform hero.assign[DragonAge.Juvenile]
perform hero.assign[DragonAge.YngAdult]

~ but just our selected age to the helper for naming
perform hero.child[raxDragonA].assign[DragonAge.YngAdult]</eval>
    </thing>
  <thing id="rcxDrAgAdt" name="Adult" compset="RaceCustom" uniqueness="useronce">
    <usesource source="VarDragons"/>
    <tag group="Helper" tag="SpecUp"/>
    <tag group="AllowRCust" tag="cfgxDrgAge"/>
    <eval phase="First" priority="75">~ store age catagory
perform hero.child[raxDragonA].assign[Value.6]

~ assign dragon age tags
~ we assign all tags from wyrmling through selected age
~ for bootstraped abilities

perform hero.assign[DragonAge.Wyrmling]
perform hero.assign[DragonAge.VeryYoung]
perform hero.assign[DragonAge.Young]
perform hero.assign[DragonAge.Juvenile]
perform hero.assign[DragonAge.YngAdult]
perform hero.assign[DragonAge.Adult]

~ but just our selected age to the helper for naming
perform hero.child[raxDragonA].assign[DragonAge.Adult]</eval>
    </thing>
  <thing id="rcxDrAgMAd" name="Mature Adult" compset="RaceCustom" uniqueness="useronce">
    <usesource source="VarDragons"/>
    <tag group="Helper" tag="SpecUp"/>
    <tag group="AllowRCust" tag="cfgxDrgAge"/>
    <eval phase="First" priority="75">~ store age catagory
perform hero.child[raxDragonA].assign[Value.7]

~ assign dragon age tags
~ we assign all tags from wyrmling through selected age
~ for bootstraped abilities

perform hero.assign[DragonAge.Wyrmling]
perform hero.assign[DragonAge.VeryYoung]
perform hero.assign[DragonAge.Young]
perform hero.assign[DragonAge.Juvenile]
perform hero.assign[DragonAge.YngAdult]
perform hero.assign[DragonAge.Adult]
perform hero.assign[DragonAge.MatAdult]

~ but just our selected age to the helper for naming
perform hero.child[raxDragonA].assign[DragonAge.MatAdult]</eval>
    </thing>
  <thing id="rcxDRAgOld" name="Old" compset="RaceCustom" uniqueness="useronce">
    <usesource source="VarDragons"/>
    <tag group="Helper" tag="SpecUp"/>
    <tag group="AllowRCust" tag="cfgxDrgAge"/>
    <eval phase="First" priority="75">~ store age catagory
perform hero.child[raxDragonA].assign[Value.8]

~ assign dragon age tags
~ we assign all tags from wyrmling through selected age
~ for bootstraped abilities

perform hero.assign[DragonAge.Wyrmling]
perform hero.assign[DragonAge.VeryYoung]
perform hero.assign[DragonAge.Young]
perform hero.assign[DragonAge.Juvenile]
perform hero.assign[DragonAge.YngAdult]
perform hero.assign[DragonAge.Adult]
perform hero.assign[DragonAge.MatAdult]
perform hero.assign[DragonAge.Old]

~ but just our selected age to the helper for naming
perform hero.child[raxDragonA].assign[DragonAge.Old]</eval>
    </thing>
  <thing id="rcxDrAgVOd" name="Very Old" compset="RaceCustom" uniqueness="useronce">
    <usesource source="VarDragons"/>
    <tag group="Helper" tag="SpecUp"/>
    <tag group="AllowRCust" tag="cfgxDrgAge"/>
    <eval phase="First" priority="75">~ store age catagory
perform hero.child[raxDragonA].assign[Value.9]

~ assign dragon age tags
~ we assign all tags from wyrmling through selected age
~ for bootstraped abilities

perform hero.assign[DragonAge.Wyrmling]
perform hero.assign[DragonAge.VeryYoung]
perform hero.assign[DragonAge.Young]
perform hero.assign[DragonAge.Juvenile]
perform hero.assign[DragonAge.YngAdult]
perform hero.assign[DragonAge.Adult]
perform hero.assign[DragonAge.MatAdult]
perform hero.assign[DragonAge.Old]
perform hero.assign[DragonAge.VeryOld]

~ but just our selected age to the helper for naming
perform hero.child[raxDragonA].assign[DragonAge.VeryOld]</eval>
    </thing>
  <thing id="rcxDrAgAnc" name="Ancient" compset="RaceCustom" uniqueness="useronce">
    <usesource source="VarDragons"/>
    <tag group="Helper" tag="SpecUp"/>
    <tag group="AllowRCust" tag="cfgxDrgAge"/>
    <eval phase="First" priority="75">~ store age catagory
perform hero.child[raxDragonA].assign[Value.10]

~ assign dragon age tags
~ we assign all tags from wyrmling through selected age
~ for bootstraped abilities

perform hero.assign[DragonAge.Wyrmling]
perform hero.assign[DragonAge.VeryYoung]
perform hero.assign[DragonAge.Young]
perform hero.assign[DragonAge.Juvenile]
perform hero.assign[DragonAge.YngAdult]
perform hero.assign[DragonAge.Adult]
perform hero.assign[DragonAge.MatAdult]
perform hero.assign[DragonAge.Old]
perform hero.assign[DragonAge.VeryOld]
perform hero.assign[DragonAge.Ancient]

~ but just our selected age to the helper for naming
perform hero.child[raxDragonA].assign[DragonAge.Ancient]</eval>
    </thing>
  <thing id="rcxDrAgWym" name="Wyrm" compset="RaceCustom" uniqueness="useronce">
    <usesource source="VarDragons"/>
    <tag group="Helper" tag="SpecUp"/>
    <tag group="AllowRCust" tag="cfgxDrgAge"/>
    <eval phase="First" priority="75">~ store age catagory
perform hero.child[raxDragonA].assign[Value.11]

~ assign dragon age tags
~ we assign all tags from wyrmling through selected age
~ for bootstraped abilities

perform hero.assign[DragonAge.Wyrmling]
perform hero.assign[DragonAge.VeryYoung]
perform hero.assign[DragonAge.Young]
perform hero.assign[DragonAge.Juvenile]
perform hero.assign[DragonAge.YngAdult]
perform hero.assign[DragonAge.Adult]
perform hero.assign[DragonAge.MatAdult]
perform hero.assign[DragonAge.Old]
perform hero.assign[DragonAge.VeryOld]
perform hero.assign[DragonAge.Ancient]
perform hero.assign[DragonAge.Wyrm]

~ but just our selected age to the helper for naming
perform hero.child[raxDragonA].assign[DragonAge.Wyrm]</eval>
    </thing>
  <thing id="rcxDrAgGWm" name="Great Wyrm" compset="RaceCustom" uniqueness="useronce">
    <usesource source="VarDragons"/>
    <tag group="Helper" tag="SpecUp"/>
    <tag group="AllowRCust" tag="cfgxDrgAge"/>
    <eval phase="First" priority="75">~ store age catagory
perform hero.child[raxDragonA].assign[Value.12]

~ assign dragon age tags
~ we assign all tags from wyrmling through selected age
~ for bootstraped abilities

perform hero.assign[DragonAge.Wyrmling]
perform hero.assign[DragonAge.VeryYoung]
perform hero.assign[DragonAge.Young]
perform hero.assign[DragonAge.Juvenile]
perform hero.assign[DragonAge.YngAdult]
perform hero.assign[DragonAge.Adult]
perform hero.assign[DragonAge.MatAdult]
perform hero.assign[DragonAge.Old]
perform hero.assign[DragonAge.VeryOld]
perform hero.assign[DragonAge.Ancient]
perform hero.assign[DragonAge.Wyrm]
perform hero.assign[DragonAge.GreatWyrm]

~ but just our selected age to the helper for naming
perform hero.child[raxDragonA].assign[DragonAge.GreatWyrm]</eval>
    </thing>
  <thing id="raxFrightP" name="Frightful Presence" description="This special quality makes a creature&apos;s very presence unsettling to foes. Activating this ability is a free action that is usually part of an attack or charge. Opponents within range who witness the action may become frightened or shaken. The range is usually 30 feet, and the duration is usually 5d6 rounds. This ability affects only opponents with fewer Hit Dice or levels than the creature has. An affected opponent can resist the effects with a successful Will save (DC 10 + 1/2 frightful creature&apos;s racial HD + frightful creature&apos;s Cha modifier; the exact DC is given in the creature&apos;s descriptive text). On a failed save, the opponent is shaken, or panicked if 4 Hit Dice or fewer. An opponent that succeeds on the saving throw is immune to that same creature&apos;s frightful presence for 24 hours. Frightful presence is a mind-affecting fear effect." compset="RaceSpec">
    <fieldval field="abValue" value="30"/>
    <tag group="SpecType" tag="Aura" name="Aura" abbrev="Aura"/>
    <tag group="StandardDC" tag="aCHA" name="Charisma" abbrev="Charisma"/>
    <tag group="Universal" tag="Universal" name="Universal Monster Ability or Core Rulebook ability" abbrev="Universal Monster Ability or Core Rulebook ability"/>
    <tag group="Helper" tag="ShowSpec" name="Show Spec" abbrev="Show Spec"/>
    <bootstrap thing="aaFear"></bootstrap>
    <eval phase="Final" priority="10000">call CalcValue

      ~if nothing else has set the number of rounds, assume 5d6
      if (field[abDuration].value = 0) then
        field[abDuration].value = 5
        endif</eval>
    <eval phase="Render" priority="90000" index="2"><![CDATA[
 ~ Use our value field as the range of our aura
      field[livename].text = "Frightful Presence (" & field[abValue].value & "-ft., DC " & field[abDC].value & ", " & field[abDuration].value & "d6 rounds)"

call abilLabel]]></eval>
    </thing>
  </document>
