<?xml version="1.0" encoding="ISO-8859-1"?>
<document signature="Hero Lab Data">
  <fileinfo>
    <info_history>June 12, 2013 - Jai Erwin
- Consolidated individual template files into a single file.  Changed source marks as requested.</info_history>
    </fileinfo>
  <thing id="tmxDrdLace" name="Dread Lacedon" description="Dread lacedons are corpses animated by the restless spirits of those who drowned or were killed but not devoured by a dread lacedon. They swim through the ocean depths in deadly schools or stalk though swamps seeking other creatures to drown and devour.\n\nWith its bloated body discolored by rot, a dread lacedon is horrifying to look upon. Its thick limbs sport sharp claws almost hidden by folds of flesh, and its mouth is a gaping maw filled with sharklike teeth. Heedless of its body&#146;s condition, a dread lacedon takes no notice of the seaweed that tangles in its hair or the tiny sea creatures that take up residence in its body. Now and then, the inexorable killing bite of a dread lacedon is accompanied by a crustacean crawling from its mouth or eye socket, coming to partake of the meal before the dread lacedon consumes it all." compset="Template" uniqueness="unique">
    <fieldval field="tmInfHD" value="Change all HD to d8."/>
    <fieldval field="tmReplHD" value="8"/>
    <fieldval field="tmSTR" value="4"/>
    <fieldval field="tmDEX" value="4"/>
    <fieldval field="tmINT" value="2"/>
    <fieldval field="tmWIS" value="4"/>
    <fieldval field="tmCHA" value="4"/>
    <fieldval field="tmAC" value="3"/>
    <arrayval field="tmCRArray" index="0" value="1"/>
    <usesource source="CampRazorC"/>
    <tag group="Custom" tag="drdLc_Bite" name="drdLc_Bite" abbrev="drdLc_Bite"/>
    <tag group="Custom" tag="drdLc_Claw" name="drdLc_Claw" abbrev="drdLc_Claw"/>
    <tag group="TemplHelp" tag="Acquired" name="Acquired" abbrev="Acquired"/>
    <tag group="TypeAndAug" tag="tpUndead" name="Undead" abbrev="Undead"/>
    <tag group="Alignment" tag="Chaotic" name="Chaotic" abbrev="C"/>
    <tag group="Alignment" tag="Evil" name="Evil" abbrev="E"/>
    <tag group="Custom" tag="drdLace" name="drdLace" abbrev="drdLace"/>
    <tag group="ProductId" tag="FrogGod"/>
    <bootstrap thing="wClaw">
      <containerreq phase="First" priority="450">hero#Custom.drdLc_Claw</containerreq>
      <autotag group="wMain" tag="1d3_3"/>
      <autotag group="Custom" tag="drdLace"/>
      </bootstrap>
    <bootstrap thing="typUndead"></bootstrap>
    <bootstrap thing="xChanRes">
      <autotag group="Value" tag="4"/>
      </bootstrap>
    <bootstrap thing="raxDrLCmdL"></bootstrap>
    <bootstrap thing="raxDrLCdWt"></bootstrap>
    <bootstrap thing="raxDrLNauF"></bootstrap>
    <bootstrap thing="raGrab"></bootstrap>
    <bootstrap thing="raParalysi">
      <assignval field="livename" value="Paralysis (1d4+1 rounds)"/>
      </bootstrap>
    <bootstrap thing="wBite">
      <containerreq phase="First" priority="450">hero#Custom.drdLc_Bite</containerreq>
      <autotag group="wMain" tag="1d6_5"/>
      <autotag group="Value" tag="1"/>
      <autotag group="Custom" tag="drdLace"/>
      </bootstrap>
    <bootstrap thing="xSwim"></bootstrap>
    <eval phase="Final" priority="10000" index="5"><![CDATA[ if (hero.tagis[Hero.Grab] = 0) then
            ~add a +4 bonus to the Grapple CMB
            hero.child[manGrapple].field[manCMB].value += 4
            endif
    
          perform hero.assign[Hero.Grab] 
    
    foreach pick in hero where "wGroup.Natural"
           
          if (pos(eachpick.field[wDamExtra].text,"grab") = -1) then
            #extradamage[eachpick," plus grab",field[name].text]
          endif
    
    nexteach]]></eval>
    <eval phase="First" priority="200" index="4"><![CDATA[~ assign tags
    
    if (hero.childcount[wBite] <= 1) then
       perform hero.assign[Custom.drdLc_Bite]
    endif
    
    var hnds as number
    hnds = herofield[tNumHands].value
    
    if (hero.childcount[wClaw] <= 1) then
       perform hero.assign[Custom.drdLc_Claw]
       if (hnds > 0) then
       perform hero.child[wClaw].assignstr["Value." & hnds]
       endif
    endif]]></eval>
    <eval phase="First" priority="1000" index="6"><![CDATA[var cnt as number
    
    foreach pick in hero from BaseNatWep where "!Custom.drdLace"
      cnt += 1
    nexteach
    
    if (cnt <> 0) then
      if (hero.childfound[wBite].tagcount[Custom.drdLace] <> 0) then
         perform hero.child[wBite].delete[Helper.NatPrimary]
      endif
      if (hero.childfound[wClaw].tagcount[Custom.drdLace] <> 0) then
         perform hero.child[wClaw].delete[Helper.NatPrimary]
      endif
    endif]]></eval>
    <eval phase="Final" index="2"><![CDATA[~ Set our speeds
          var landspeed as number
          var swimspeed as number
          landspeed = hero.child[Speed].field[tSpeed].value
          swimspeed = hero.child[xSwim].field[abValue].value
    
          if ( landspeed + swimspeed = 0 ) then
            foreach pick in hero from Ability where "SpecType.Movement & !(thingid.Speed | thingid.xSwim)"
               hero.child[Speed].field[tSpeed].value = maximum(eachpick.field[abValue].value,hero.child[Speed].field[tSpeed].value)
               hero.child[xSwim].field[abValue].value = maximum(eachpick.field[abValue].value,hero.child[xSwim].field[abValue].value)
            nexteach
            hero.child[Speed].field[tSpeed].value = round(hero.child[Speed].field[tSpeed].value * 0.5,0,-1)
            hero.child[xSwim].field[abValue].value = round(hero.child[xSwim].field[abValue].value * 0.5,0,-1)
          elseif (landspeed > swimspeed) then
            hero.child[xSwim].field[abValue].value = hero.child[Speed].field[tSpeed].value
          elseif (swimspeed > landspeed) then
            hero.child[Speed].field[tSpeed].value = hero.child[xSwim].field[abValue].value
    
          endif
    
    foreach pick in hero where "thingid.raGrab"
      if (eachpick.tagis[SpecSource.tmxDrdLace] = 0) then
         perform eachpick.assign[Helper.SpcDisable]
         perform eachpick.assign[Hide.Special]
      endif
    nexteach]]></eval>
    <eval phase="PreLevel" priority="10000">~ We have bonuses to skills
          #skillbonus[skSwim] += 8</eval>
    <prereq message="Living creature required.">
      <validate><![CDATA[        ~once we've been selected, we're fine (since this makes the creature undead).
            validif (@ispick <> 0)
    
            ~we're valid if the hero is not unliving
            validif (hero.tagis[NotLiving.?] = 0)]]></validate>
      </prereq>
    </thing>
  <thing id="tmxDrdWrSv" name="Dread Wraith Sovereign" description="Ancient and evil beyond measure, dread wraith sovereigns dwell in the hearts of lost cities and in abandoned graveyards. No living things dwell near such places, but a dread wraith sovereign often holds court over a host of the undead, both those it created and those that bowed to its rule. The dread wraith sovereign can sense nearby life and seeks to snuff it out wherever it might be.\n\nThe spectral figure of a dread wraith sovereign looks much like it did in life, but its form and features are constantly shrouded in darkness. A dread wraith sovereign can be distinguished from a normal wraith or a dread wraith by the gloom accompanying it and the unnatural chill that fills the air wherever it passes." compset="Template" uniqueness="unique">
    <fieldval field="tmDEX" value="20"/>
    <fieldval field="tmINT" value="6"/>
    <fieldval field="tmWIS" value="8"/>
    <fieldval field="tmCHA" value="14"/>
    <arrayval field="tmCRArray" index="0" value="3"/>
    <usesource source="CampRazorC"/>
    <tag group="TemplHelp" tag="Acquired"/>
    <tag group="TypeAndAug" tag="tpUndead"/>
    <tag group="Helper" tag="NoPathSoc"/>
    <tag group="AlgnReq" tag="Evil"/>
    <tag group="Custom" tag="AddAttack" name="Added Attack"/>
    <tag group="ProductId" tag="FrogGod"/>
    <tag group="ClVaryName" tag="Prepend"/>
    <bootstrap thing="xImmCold"></bootstrap>
    <bootstrap thing="typUndead"></bootstrap>
    <bootstrap thing="wOtherMel">
      <autotag group="wMain" tag="1d8_6"/>
      <autotag group="wMaxStrBon" tag="0"/>
      <autotag group="wMaxStrPen" tag="0"/>
      <autotag group="Custom" tag="AddAttack"/>
      <assignval field="wDamExtra" value=" neg. energy"/>
      <assignval field="livename" value="Incorporeal Touch"/>
      </bootstrap>
    <bootstrap thing="fAlertness">
      <autotag group="thing" tag="skipprereq"/>
      </bootstrap>
    <bootstrap thing="fImpInit">
      <autotag group="thing" tag="skipprereq"/>
      </bootstrap>
    <bootstrap thing="stIncorpor"></bootstrap>
    <bootstrap thing="raxDWSUnCh"></bootstrap>
    <bootstrap thing="raxDWSCmdW"></bootstrap>
    <bootstrap thing="raxDWSConD"></bootstrap>
    <bootstrap thing="raxDWSCrSp"></bootstrap>
    <bootstrap thing="raxDWSDayV"></bootstrap>
    <bootstrap thing="raLifesens">
      <autotag group="Value" tag="60"/>
      </bootstrap>
    <bootstrap thing="raAuUnnat">
      <autotag group="Value" tag="100"/>
      </bootstrap>
    <bootstrap thing="xChanRes"></bootstrap>
    <eval phase="First" priority="10000" index="2"><![CDATA[var cnt as number
    cnt = 0
    foreach pick in hero from BaseNatWep where "!Custom.AddAttack"
      cnt += 1
    nexteach
    
    if (cnt <> 0) then
    foreach pick in hero from BaseNatWep where "!Custom.AddAttack"
       eachpick.field[livename].text = "Incorporeal Touch"
       perform eachpick.assign[wMaxStrBon.0]
       perform eachpick.assign[wMaxStrPen.0]
       eachpick.field[wDamExtra].text = " neg. energy"
    nexteach
    foreach pick in hero from BaseNatWep where "Custom.AddAttack & thingid.wOtherMel"
      perform eachpick.assign[Hide.Weapon]
    nexteach
    endif]]></eval>
    <eval phase="Final" priority="1000"><![CDATA[~ channel resistance +4
    hero.child[xChanRes].field[abValue].value += 4
    
    ~ spell resistance
    var sr as number
    sr = herofield[tCR].value + 12
    #applysr[sr]
    
    ~ speeds
    var mxSpd as number
    mxSpd = hero.child[Speed].field[tSpeed].value
    hero.child[Speed].field[tSpeed].value = 0
    
    foreach pick in hero from Ability where "SpecType.Movement"
      mxSpd = maximum(eachpick.field[abValue].value,mxSpd)
      eachpick.field[abValue].value = 0
    nexteach
    
    hero.child[xFly].field[abValue].value = mxSpd
    
      perform hero.child[xFly].delete[Maneuver.?]
      perform hero.child[xFly].assign[Maneuver.Perfect]]]></eval>
    </thing>
  <thing id="tmFGGRIcyC" name="Icy Creature" compset="Template" uniqueness="unique">
    <fieldval field="tmDEX" value="-2"/>
    <fieldval field="tmCON" value="4"/>
    <arrayval field="tmCRArray" index="0" value="1"/>
    <usesource source="CampRazorC"/>
    <tag group="TemplHelp" tag="Inherited"/>
    <tag group="ClVaryName" tag="Prepend"/>
    <tag group="ProductId" tag="FrogGod"/>
    <bootstrap thing="stExtrapla"></bootstrap>
    <bootstrap thing="stCold"></bootstrap>
    <bootstrap thing="stElement"></bootstrap>
    <bootstrap thing="lAquan"></bootstrap>
    <bootstrap thing="raFGGRCldA">
      <assignval field="livename" value="Cold Aura (10 ft.)"/>
      </bootstrap>
    <bootstrap thing="raFGGRExuI"></bootstrap>
    <bootstrap thing="raFGGRIceM"></bootstrap>
    <bootstrap thing="raFGGRIcTc"></bootstrap>
    <bootstrap thing="stWater"></bootstrap>
    <eval phase="First"><![CDATA[field[livename].text = "Icy"]]>
      <before name="Template Name Modification"/>
      </eval>
    <eval phase="PreLevel" priority="4000" index="2">#racialbonus[skAcrobat] += 4</eval>
    </thing>
  <thing id="tmFGPrisma" name="Prismatic" description="Glowing and beautiful, prismatics have bright forms that belie their sometimes dark natures. Their bodies shift through the colors of the rainbow, and though most find them difficult to dislike, they run the gamut of good and evil.\n\nA creature can become a prismatic by surviving exposure to great prismatic assaults, such as many color spray, rainbow pattern, searing light, or similar spells in a day. Alternatively, the transformation can occur after a creature has managed to survive all the terrible eff ects of a spell such as prismatic wall. The exact reason why such exposure should create prismatics baffles sages, but many suspect that some longdead god&#146;s essence might still be exerting influence through the release of such energies. Regardless of their origins, prismatic creatures are rare, since the eff ects that create them are hard to reproduce." compset="Template" uniqueness="unique">
    <fieldval field="tmCHA" value="4"/>
    <arrayval field="tmCRArray" index="8" value="1"/>
    <usesource source="CampRazorC"/>
    <tag group="TemplHelp" tag="Acquired"/>
    <tag group="ProductId" tag="FrogGod"/>
    <tag group="ClVaryName" tag="Prepend"/>
    <bootstrap thing="spDayligh3">
      <containerreq phase="First" priority="750"><![CDATA[count:Hero.HitDice >= 7]]></containerreq>
      <autotag group="Helper" tag="SpellLike"/>
      <autotag group="Usage" tag="Day"/>
      <assignval field="trkMax" value="1"/>
      </bootstrap>
    <bootstrap thing="spHypnPat2">
      <containerreq phase="First" priority="750"><![CDATA[count:Hero.HitDice >= 5]]></containerreq>
      <autotag group="Usage" tag="Day"/>
      <autotag group="Helper" tag="SpellLike"/>
      <assignval field="trkMax" value="1"/>
      </bootstrap>
    <bootstrap thing="spPrisSph9">
      <containerreq phase="First" priority="750"><![CDATA[count:Hero.HitDice >= 19]]></containerreq>
      <autotag group="Usage" tag="Day"/>
      <autotag group="Helper" tag="SpellLike"/>
      <assignval field="trkMax" value="1"/>
      </bootstrap>
    <bootstrap thing="spPrisSpr7">
      <containerreq phase="First" priority="750"><![CDATA[count:Hero.HitDice >= 13]]></containerreq>
      <autotag group="Usage" tag="Day"/>
      <autotag group="Helper" tag="SpellLike"/>
      <assignval field="trkMax" value="1"/>
      </bootstrap>
    <bootstrap thing="spPrisWal8">
      <containerreq phase="First" priority="750"><![CDATA[count:Hero.HitDice >= 17]]></containerreq>
      <autotag group="Usage" tag="Day"/>
      <autotag group="Helper" tag="SpellLike"/>
      <assignval field="trkMax" value="1"/>
      </bootstrap>
    <bootstrap thing="spRainPat4">
      <containerreq phase="First" priority="750"><![CDATA[count:Hero.HitDice >= 11]]></containerreq>
      <autotag group="Usage" tag="Day"/>
      <autotag group="Helper" tag="SpellLike"/>
      <assignval field="trkMax" value="1"/>
      </bootstrap>
    <bootstrap thing="spScinPat8">
      <containerreq phase="First" priority="750"><![CDATA[count:Hero.HitDice >= 15]]></containerreq>
      <autotag group="Usage" tag="Day"/>
      <autotag group="Helper" tag="SpellLike"/>
      <assignval field="trkMax" value="1"/>
      </bootstrap>
    <bootstrap thing="spSearLig3">
      <containerreq phase="First" priority="750"><![CDATA[count:Hero.HitDice >= 9]]></containerreq>
      <autotag group="Usage" tag="Day"/>
      <autotag group="Helper" tag="SpellLike"/>
      <assignval field="trkMax" value="1"/>
      </bootstrap>
    <bootstrap thing="raFGPrisBo"></bootstrap>
    <bootstrap thing="raFGPrisIm"></bootstrap>
    <bootstrap thing="raLowLight"></bootstrap>
    <bootstrap thing="spDancLig0">
      <containerreq phase="First" priority="750"><![CDATA[count:Hero.HitDice >= 1]]></containerreq>
      <autotag group="Usage" tag="Day"/>
      <autotag group="Helper" tag="SpellLike"/>
      <assignval field="trkMax" value="3"/>
      </bootstrap>
    <bootstrap thing="spFlare0">
      <containerreq phase="First" priority="750"><![CDATA[count:Hero.HitDice >= 1]]></containerreq>
      <autotag group="Usage" tag="AtWill"/>
      <autotag group="Helper" tag="SpellLike"/>
      </bootstrap>
    <bootstrap thing="spColoSpr1">
      <containerreq phase="First" priority="750"><![CDATA[count:Hero.HitDice >= 3]]></containerreq>
      <autotag group="Usage" tag="Day"/>
      <autotag group="Helper" tag="SpellLike"/>
      <assignval field="trkMax" value="2"/>
      </bootstrap>
    <eval phase="PreLevel" priority="4000"><![CDATA[#racialsituational[hero.child[skStealth],"-8 when lit",field[name].text]]]></eval>
    <exprreq message="Charisma score of 3 or higher required."><![CDATA[#attrvalue[aCHA] >= 3]]></exprreq>
    </thing>
  <thing id="tmuGRRTelp" name="Psychic (Telepath)" description="Gifted with abnormal mental fortitude and strange mind powers by some accident of birth, psychics have access to knowledge and talents that other creatures of their kinds do not. As they age, experience hones their minds even further, granting them ever more power.\n\nPsychics come in eight different varieties according to their particular specialties: clairaudiant, clairvoyant, empath, precognizant, psychometer, pyrokinetic, telekinetic, and telepath. Any given psychic may have one or more of these specialties, which are defined as follows.\n\n    {b}Clairaudiants{/b} can hear sounds made in locations other than their own and have powers over sound.\n    {b}Clairvoyants{/b} can see events in locations other than their own and have power over sight.\n    {b}Empaths{/b} are sensitive to other creature&#146;s feelings and have powers over emotion.\n    {b}Precognizants{/b} can see future events and determine appropriate courses of action.\n    {b}Psychometers{/b} can determine the history and qualities of an object or place by concentrating.\n    {b}Pyrokenetics{/b} can control and produce flame with a thought.\n    {b}Telekinetics{/b} can move objects and produce force effects with their minds.\n    Telepaths can read and project thoughts.\n\nA psychic looks like any other member of its race, and psychics with different specialties are indistinguishable except for their abilities." compset="Template" uniqueness="unique">
    <arrayval field="tmCRArray" index="0" value="1"/>
    <usesource source="CampRazorC"/>
    <tag group="TemplHelp" tag="Inherited"/>
    <tag group="ProductId" tag="FrogGod"/>
    <tag group="ClVaryName" tag="AppNoComma"/>
    <bootstrap thing="spPhanKil6">
      <autotag group="Helper" tag="SpellLike"/>
      <autotag group="Usage" tag="Day"/>
      <assignval field="trkMax" value="1"/>
      </bootstrap>
    <bootstrap thing="spTeleBon5">
      <autotag group="Helper" tag="SpellLike"/>
      <autotag group="Usage" tag="Day"/>
      <assignval field="trkMax" value="1"/>
      </bootstrap>
    <bootstrap thing="fIronWill"></bootstrap>
    <bootstrap thing="xTelepathy">
      <autotag group="Value" tag="100"/>
      </bootstrap>
    <bootstrap thing="rauGRRIfP"></bootstrap>
    <bootstrap thing="spDeteTho2">
      <autotag group="Helper" tag="SpellLike"/>
      <autotag group="Usage" tag="AtWill"/>
      </bootstrap>
    <bootstrap thing="spDream4">
      <autotag group="Helper" tag="SpellLike"/>
      <autotag group="Usage" tag="Day"/>
      <assignval field="trkMax" value="1"/>
      </bootstrap>
    <bootstrap thing="spMindBla8">
      <autotag group="Helper" tag="SpellLike"/>
      <autotag group="Usage" tag="Day"/>
      <assignval field="trkMax" value="1"/>
      </bootstrap>
    <eval phase="First" priority="600"><![CDATA[field[livename].text = "Telepath"]]>
      <before name="Template Name Modification"/>
      </eval>
    </thing>
  <thing id="tmuGRREmpa" name="Psychic (Empath)" description="Gifted with abnormal mental fortitude and strange mind powers by some accident of birth, psychics have access to knowledge and talents that other creatures of their kinds do not. As they age, experience hones their minds even further, granting them ever more power.\n\nPsychics come in eight different varieties according to their particular specialties: clairaudiant, clairvoyant, empath, precognizant, psychometer, pyrokinetic, telekinetic, and telepath. Any given psychic may have one or more of these specialties, which are defined as follows.\n\n    {b}Clairaudiants{/b} can hear sounds made in locations other than their own and have powers over sound.\n    {b}Clairvoyants{/b} can see events in locations other than their own and have power over sight.\n    {b}Empaths{/b} are sensitive to other creature&#146;s feelings and have powers over emotion.\n    {b}Precognizants{/b} can see future events and determine appropriate courses of action.\n    {b}Psychometers{/b} can determine the history and qualities of an object or place by concentrating.\n    {b}Pyrokenetics{/b} can control and produce flame with a thought.\n    {b}Telekinetics{/b} can move objects and produce force effects with their minds.\n    Telepaths can read and project thoughts.\n\nA psychic looks like any other member of its race, and psychics with different specialties are indistinguishable except for their abilities." compset="Template" uniqueness="unique">
    <usesource source="CampRazorC"/>
    <tag group="TemplHelp" tag="Inherited"/>
    <tag group="ProductId" tag="FrogGod"/>
    <tag group="ClVaryName" tag="AppNoComma"/>
    <bootstrap thing="spCausFea1">
      <containerreq phase="First" priority="750"><![CDATA[count:Hero.HitDice >= 3]]></containerreq>
      <autotag group="Helper" tag="SpellLike"/>
      <autotag group="Usage" tag="Day"/>
      <assignval field="trkMax" value="1"/>
      </bootstrap>
    <bootstrap thing="spOpprBor2">
      <containerreq phase="First" priority="750"><![CDATA[count:Hero.HitDice >= 5]]></containerreq>
      <autotag group="Usage" tag="Day"/>
      <autotag group="Helper" tag="SpellLike"/>
      <assignval field="trkMax" value="3"/>
      </bootstrap>
    <bootstrap thing="spScare2">
      <containerreq phase="First" priority="750"><![CDATA[count:Hero.HitDice >= 5]]></containerreq>
      <autotag group="Usage" tag="Day"/>
      <autotag group="Helper" tag="SpellLike"/>
      <assignval field="trkMax" value="1"/>
      </bootstrap>
    <bootstrap thing="spGoodHop3">
      <containerreq phase="First" priority="750"><![CDATA[count:Hero.HitDice >= 7]]></containerreq>
      <autotag group="Usage" tag="Day"/>
      <autotag group="Helper" tag="SpellLike"/>
      <assignval field="trkMax" value="2"/>
      </bootstrap>
    <bootstrap thing="spRage2">
      <containerreq phase="First" priority="750"><![CDATA[count:Hero.HitDice >= 9]]></containerreq>
      <autotag group="Usage" tag="Day"/>
      <autotag group="Helper" tag="SpellLike"/>
      <assignval field="trkMax" value="2"/>
      </bootstrap>
    <bootstrap thing="spFear3">
      <containerreq phase="First" priority="750"><![CDATA[count:Hero.HitDice >= 11]]></containerreq>
      <autotag group="Usage" tag="Day"/>
      <autotag group="Helper" tag="SpellLike"/>
      <assignval field="trkMax" value="2"/>
      </bootstrap>
    <bootstrap thing="spCrusDes3">
      <containerreq phase="First" priority="750"><![CDATA[count:Hero.HitDice >= 13]]></containerreq>
      <autotag group="Usage" tag="Day"/>
      <autotag group="Helper" tag="SpellLike"/>
      <assignval field="trkMax" value="3"/>
      </bootstrap>
    <bootstrap thing="spSymbFea6">
      <containerreq phase="First" priority="750"><![CDATA[count:Hero.HitDice >= 15]]></containerreq>
      <autotag group="Usage" tag="Day"/>
      <autotag group="Helper" tag="SpellLike"/>
      <assignval field="trkMax" value="1"/>
      </bootstrap>
    <bootstrap thing="spSympath9">
      <containerreq phase="First" priority="750"><![CDATA[count:Hero.HitDice >= 17]]></containerreq>
      <autotag group="Usage" tag="Day"/>
      <autotag group="Helper" tag="SpellLike"/>
      <assignval field="trkMax" value="1"/>
      </bootstrap>
    <bootstrap thing="spAntipat9">
      <containerreq phase="First" priority="750"><![CDATA[count:Hero.HitDice >= 19]]></containerreq>
      <autotag group="Usage" tag="Day"/>
      <autotag group="Helper" tag="SpellLike"/>
      <assignval field="trkMax" value="1"/>
      </bootstrap>
    <bootstrap thing="spHideLau1">
      <containerreq phase="First" priority="750"><![CDATA[count:Hero.HitDice >= 1]]></containerreq>
      <autotag group="Usage" tag="Day"/>
      <autotag group="Helper" tag="SpellLike"/>
      <assignval field="trkMax" value="1"/>
      </bootstrap>
    <bootstrap thing="spRemoFea1">
      <containerreq phase="First" priority="750"><![CDATA[count:Hero.HitDice >= 1]]></containerreq>
      <autotag group="Usage" tag="Day"/>
      <autotag group="Helper" tag="SpellLike"/>
      <assignval field="trkMax" value="3"/>
      </bootstrap>
    <eval phase="PreLevel" priority="4000" index="3">#racialbonus[skBluff] += 5
    #racialbonus[skDiplo] += 5
    #racialbonus[skIntim] += 5
    #racialbonus[skSenseMot] += 10</eval>
    <eval phase="First" priority="600" index="2"><![CDATA[field[livename].text = "Empath"]]></eval>
    <eval phase="PostLevel"><![CDATA[~ cr adjustment
    
     if (#totallevelcount[] > 10) then
       herofield[tCR].value += 1
     endif]]></eval>
    </thing>
  <thing id="tmGRRaveno" name="Ravenous Creature" description="Unnatural acts provoke unnatural hungers, and depravity follows perversity in a cascade. Dark powers watch for the growth of evil in mortals&#146; hearts, and they reward such creatures with great power to nurture the black bloom of their wickedness. Cannibalism garners a particularly abhorrent &#147;blessing.&#148; Ravenous creatures are living beings that have eaten the flesh of their own kind and been cursed with a supernatural hunger for more. A ravenous creature must continue to eat the flesh of its own kind or starve to death. Most ravenous creatures welcome this burden because of the power it brings them." compset="Template" uniqueness="unique">
    <fieldval field="tmSTR" value="6"/>
    <fieldval field="tmDEX" value="4"/>
    <fieldval field="tmCON" value="4"/>
    <arrayval field="tmCRArray" index="0" value="1"/>
    <usesource source="CampRazorC"/>
    <tag group="TemplHelp" tag="Acquired"/>
    <tag group="ClVaryName" tag="Prepend"/>
    <tag group="ProductId" tag="FrogGod"/>
    <tag group="AlgnReq" tag="Evil"/>
    <bootstrap thing="fImpGrapp">
      <autotag group="thing" tag="skipprereq"/>
      </bootstrap>
    <bootstrap thing="fImpUnarm">
      <autotag group="thing" tag="skipprereq"/>
      </bootstrap>
    <bootstrap thing="wBite">
      <autotag group="wMain" tag="1d6_5"/>
      <autotag group="Helper" tag="NatTwoHand"/>
      </bootstrap>
    <bootstrap thing="xDamRd">
      <autotag group="Value" tag="5"/>
      </bootstrap>
    <bootstrap thing="raGRRvCnHl">
      <assignval field="abValue" value="10"/>
      </bootstrap>
    <bootstrap thing="raGRRvFvPr"></bootstrap>
    <bootstrap thing="raGRRvHgSA"></bootstrap>
    <bootstrap thing="raGRRvRvBd"></bootstrap>
    <bootstrap thing="raGRRvSpri"></bootstrap>
    <bootstrap thing="raGRRvAgel"></bootstrap>
    <bootstrap thing="raDarkVis">
      <autotag group="Value" tag="60"/>
      </bootstrap>
    <bootstrap thing="raLowLight"></bootstrap>
    <bootstrap thing="fBlindFgt">
      <autotag group="thing" tag="skipprereq"/>
      </bootstrap>
    <eval phase="First" priority="600"><![CDATA[field[livename].text = "Ravenous"]]>
      <before name="Template Name Modification"/>
      </eval>
    <eval phase="PreLevel" priority="4000" index="2">#racialbonus[skAcrobat] += 4
    #racialbonus[skEscape] += 4
    #racialbonus[skIntim] += 4
    #racialbonus[skStealth] += 4
    #racialbonus[skClimb] += 8
    #racialbonus[skPercep] += 8
    #racialbonus[skSurvival] += 8</eval>
    <prereq message="Living Creature required.">
      <validate><![CDATA[        ~once we've been selected, we're fine.
            validif (@ispick <> 0)
    
            ~we're valid if the hero is not unliving
            validif (hero.tagis[NotLiving.?] = 0)]]></validate>
      </prereq>
    </thing>
  <thing id="tmDWThunC" name="Thunder Child" compset="Template" uniqueness="unique">
    <fieldval field="tmDEX" value="4"/>
    <fieldval field="tmINT" value="2"/>
    <fieldval field="tmWIS" value="2"/>
    <fieldval field="tmReplRaHD" value="10"/>
    <fieldval field="tmInfHD" value="Change to d10s"/>
    <arrayval field="tmCRArray" index="0" value="2"/>
    <usesource source="CampRazorC"/>
    <tag group="ClVaryName" tag="Prepend"/>
    <tag group="TemplHelp" tag="Inherited"/>
    <tag group="ProductId" tag="FrogGod"/>
    <tag group="TypeAndAug" tag="tpOutsider"/>
    <bootstrap thing="spFogClo2">
      <autotag group="Helper" tag="SpellLike"/>
      <autotag group="Usage" tag="Day"/>
      <assignval field="trkMax" value="3"/>
      </bootstrap>
    <bootstrap thing="spGaseFor3">
      <autotag group="Helper" tag="SpellLike"/>
      <autotag group="Usage" tag="Day"/>
      <assignval field="trkMax" value="3"/>
      </bootstrap>
    <bootstrap thing="spSounBur2">
      <autotag group="Helper" tag="SpellLike"/>
      <autotag group="Usage" tag="Day"/>
      <assignval field="trkMax" value="3"/>
      </bootstrap>
    <bootstrap thing="fImpInit">
      <autotag group="thing" tag="skipprereq"/>
      </bootstrap>
    <bootstrap thing="fLightRef">
      <autotag group="thing" tag="skipprereq"/>
      </bootstrap>
    <bootstrap thing="fQuickDraw">
      <autotag group="thing" tag="skipprereq"/>
      </bootstrap>
    <bootstrap thing="stElement"></bootstrap>
    <bootstrap thing="xImmCold"></bootstrap>
    <bootstrap thing="xImmInhPoi"></bootstrap>
    <bootstrap thing="xFGImmGas"></bootstrap>
    <bootstrap thing="raxTCEleAu"></bootstrap>
    <bootstrap thing="raxTCBrtWe"></bootstrap>
    <bootstrap thing="raxTCElecG"></bootstrap>
    <bootstrap thing="raxTCLgtJu"></bootstrap>
    <bootstrap thing="raxTCAirBr"></bootstrap>
    <bootstrap thing="raxTCCldSi"></bootstrap>
    <bootstrap thing="stExtrapla"></bootstrap>
    <bootstrap thing="stAir"></bootstrap>
    <eval phase="PreLevel" priority="4000" index="3">#racialbonus[skSurvival] += 4</eval>
    <eval phase="Final" priority="1000" index="2"><![CDATA[hero.child[Speed].field[tSpeed].value *= 2
    
    
    foreach pick in hero from Ability where "SpecType.Movement"
      eachpick.field[abValue].value *= 2
    nexteach
    
    hero.child[skKnowNat].field[Bonus].value += 4]]></eval>
    <eval phase="Final" priority="10000"><![CDATA[var searchStr as string
    searchStr = "wCategory.Melee & (wGroup.Natural | EquipType.Metal | wCategory.Unarmed)"
    
    
    foreach pick in hero from BaseWep where searchStr
      eachpick.field[wDamExtra].text &= " plus 1d6 electricity"
    nexteach
    
    hero.child[ArmorClass].field[tACDodge].value += 4]]></eval>
    </thing>
  <thing id="tmFGFelLyc" name="Fel Lycanthrope, Dire Shark" description="Dajobas blesses his subjects with abilities beyond those of a normal lycanthrope, all the better to help conquer the world." compset="Template" uniqueness="unique">
    <fieldval field="tmAC" value="2"/>
    <fieldval field="tmWIS" value="2"/>
    <fieldval field="tmHitDice" value="7"/>
    <fieldval field="tmHDSides" value="8"/>
    <arrayval field="tmCRArray" index="0" value="4"/>
    <arrayval field="tmCRArray" index="20" value="6"/>
    <usesource source="CampRazorC"/>
    <tag group="ClassSkill" tag="skClimb"/>
    <tag group="ClassSkill" tag="skFly"/>
    <tag group="ClassSkill" tag="skPercep"/>
    <tag group="ClassSkill" tag="skStealth"/>
    <tag group="ClassSkill" tag="skSwim"/>
    <tag group="TemplHelp" tag="AddHitDice"/>
    <tag group="ClVaryName" tag="Prepend"/>
    <tag group="ClassSkill" tag="skAcrobat"/>
    <tag group="TemplHelp" tag="Acquired"/>
    <tag group="ProductId" tag="FrogGod"/>
    <bootstrap thing="wClaw">
      <containerreq phase="First" priority="100">Hero.LyHybrid</containerreq>
      <autotag group="Value" tag="2"/>
      <autotag group="wMain" tag="1d4_4"/>
      </bootstrap>
    <bootstrap thing="xSwim">
      <containerreq phase="First" priority="100">Hero.LyAnimal</containerreq>
      <autotag group="Value" tag="60"/>
      </bootstrap>
    <bootstrap thing="xSharkSce"></bootstrap>
    <bootstrap thing="stShapecha"></bootstrap>
    <bootstrap thing="raFGShaEmp"></bootstrap>
    <bootstrap thing="fIronWill">
      <autotag group="thing" tag="skipprereq"/>
      </bootstrap>
    <bootstrap thing="rBlindsen">
      <containerreq phase="First" priority="100">Hero.LyHybrid | Hero.LyAnimal</containerreq>
      <autotag group="Value" tag="30"/>
      </bootstrap>
    <bootstrap thing="xLyChange"></bootstrap>
    <bootstrap thing="raLowLight"></bootstrap>
    <bootstrap thing="wBite">
      <containerreq phase="First" priority="100">Hero.LyHybrid | Hero.LyAnimal</containerreq>
      <autotag group="wMain" tag="1d6_5"/>
      <autotag group="Helper" tag="NatSizeDmg"/>
      </bootstrap>
    <eval phase="Attr" priority="10000" index="3"><![CDATA[
    ~ Set up our changing statistics
    var v_strbonus as number
    var v_dexbonus as number
    var v_conbonus as number
    var v_intbonus as number
    var v_wisbonus as number
    var v_chabonus as number
    
    ~ Ability bonuses
    v_strbonus = 0
    v_dexbonus = 0
    v_conbonus = 0
    v_intbonus = 0
    v_wisbonus = 0
    v_chabonus = 0
    ~ Make all changes appropriately
    call LycanAttr
    
    ~ If we're not enabled, get out now
    doneif (hero.tagis[Hero.LyHybrid] + hero.tagis[Hero.LyAnimal] = 0)
    ~ Add to our chosen attribute
    hero.child[aSTR].field[aPostMod].value += 4
    hero.child[aDEX].field[aPostMod].value += 4]]></eval>
    <eval phase="PostAttr" index="4">~ Add Animal Skill Points from the 7HD
    #resmax[resSkill] += (maximum(2 + #attrmod[aINT],1) + herofield[tSkBonus].value) * 7</eval>
    <eval phase="First"><![CDATA[
    ~ NOTE: This has to be done very early so that the Teeth of Dajorba
    ~       can pick up these hit dice to do its calculations.
    
    ~ Get the total number of Fel Lycanthrope hit dice
    var iX as number
    iX = 0
    while (iX < field[tmHitDice].value)
       iX += 1
       perform hero.assign[FelLycan.HitDice]
    loop]]></eval>
    <eval phase="First" priority="750" index="2">~ Set up our changing statistics
    var v_animsize as number
    var v_animnat as number
    var v_animspd as number
    
    ~ Size of the animal - small = -1, medium = 0, large = 1
    v_animsize = 1
    ~ Animal natural armor class bonus
    v_animnat = 2
    ~ Animal speed
    v_animspd = 30
    ~ Make all changes appropriately
    call LycanForm</eval>
    <eval phase="Final" priority="50000" index="5"><![CDATA[~ For animal form adjust the reach down
    If (hero.tagis[Hero.LyAnimal] <> 0) Then
       herofield[tReach].value += -5
    Endif]]></eval>
    <eval phase="First" priority="600" index="6"><![CDATA[field[livename].text = "Fel-Dire Shark"]]>
      <before name="Template Name Modification"/>
      </eval>
    <eval phase="First" index="7"></eval>
    <eval phase="PreLevel" priority="4000" index="8">#racialbonus[skSwim] += 8</eval>
    </thing>
  <thing id="tmFGMalMah" name="Maldraht Maht" description="Most insidiously, a creature who becomes addicted to maht transforms into a Maldraht maht." compset="Template" uniqueness="unique">
    <fieldval field="tmAC" value="2"/>
    <fieldval field="tmSTR" value="6"/>
    <fieldval field="tmDEX" value="2"/>
    <fieldval field="tmCON" value="4"/>
    <fieldval field="tmINT" value="-4"/>
    <fieldval field="tmWIS" value="-4"/>
    <arrayval field="tmCRArray" index="0" value="1"/>
    <usesource source="CampRazorC"/>
    <tag group="ClVaryName" tag="Prepend"/>
    <tag group="TemplHelp" tag="Acquired"/>
    <tag group="ProductId" tag="FrogGod"/>
    <bootstrap thing="wRend">
      <autotag group="wMain" tag="1d6_5"/>
      <autotag group="Helper" tag="NatSizeDmg"/>
      </bootstrap>
    <bootstrap thing="raFGMalFre"></bootstrap>
    <bootstrap thing="wBite">
      <autotag group="wMain" tag="1d4_4"/>
      <autotag group="Helper" tag="NatSizeDmg"/>
      </bootstrap>
    <bootstrap thing="wClaw">
      <autotag group="Value" tag="2"/>
      <autotag group="wMain" tag="1d6_5"/>
      <autotag group="Helper" tag="NatSizeDmg"/>
      </bootstrap>
    <bootstrap thing="xScent"></bootstrap>
    <bootstrap thing="raLowLight"></bootstrap>
    <bootstrap thing="raDarkVis"></bootstrap>
    <eval phase="Attr" priority="100000" index="2">~ reset the base creature&#146;s Charisma to 3 if it was originally higher
    If (hero.child[aCHA].field[aUser].value &gt; 3) Then
       ~ Cha = 3
       hero.child[aCHA].field[aPostMod].value = 3 - hero.child[aCHA].field[aUser].value
    Endif</eval>
    <eval phase="PreLevel" priority="4000" index="3">hero.child[skStealth].field[Penalty].value += -6
    #skillbonus[skIntim] += 4
    
    ~ min for int and wis
    hero.child[aINT].field[aNormMin].value = 1
    hero.child[aWIS].field[aNormMin].value = 1</eval>
    <eval phase="First" priority="1000">~ Increase land speed by 10ft
    hero.child[Speed].field[tSpeed].value += 10</eval>
    <exprreq message="Animal, fey, humanoid, or monstrous humanoid type required."><![CDATA[#hastype[tpAnimal] + #hastype[tpFey] + #hastype[tpHumanoid] + #hastype[tpMonHuman] <> 0]]></exprreq>
    </thing>
  <thing id="tmFGHalfMe" name="Half-Medusa" description="Half-Medusa&apos;s are the rare result of crossbreeding between humanoid and medusa." compset="Template" uniqueness="unique">
    <fieldval field="tmAC" value="2"/>
    <fieldval field="tmDEX" value="4"/>
    <fieldval field="tmWIS" value="2"/>
    <fieldval field="tmCHA" value="4"/>
    <arrayval field="tmCRArray" index="0" value="2"/>
    <usesource source="CampRazorC"/>
    <tag group="TemplHelp" tag="Inherited"/>
    <tag group="ClVaryName" tag="Prepend"/>
    <tag group="ProductId" tag="FrogGod"/>
    <bootstrap thing="raDarkVis"></bootstrap>
    <bootstrap thing="raMedPetrG"></bootstrap>
    <eval phase="Final" priority="20000"><![CDATA[#situational[hero.child[svFort],"+2 bonus vs. poison and toxins.",field[name].text]]]></eval>
    <exprreq message="Humanoid or monstrous humanoid type required."><![CDATA[#hastype[tpHumanoid] + #hastype[tpMonHuman] <> 0]]></exprreq>
    </thing>
  <thing id="tmFGImandw" name="Imandwa" description="Imandwa are powerful undead created when a diseased body is disposed of without ceremony in a defiled place that was once holy." compset="Template" uniqueness="unique">
    <fieldval field="tmReplRaHD" value="8"/>
    <fieldval field="tmDEX" value="4"/>
    <fieldval field="tmINT" value="2"/>
    <fieldval field="tmCHA" value="2"/>
    <usesource source="CampRazorC"/>
    <tag group="TemplHelp" tag="Acquired"/>
    <tag group="AlgnReq" tag="ChaotEvil"/>
    <tag group="TypeAndAug" tag="tpUndead"/>
    <tag group="ClVaryName" tag="Prepend"/>
    <tag group="ProductId" tag="FrogGod"/>
    <bootstrap thing="xImmAcid"></bootstrap>
    <bootstrap thing="xImmFire"></bootstrap>
    <bootstrap thing="xRegen">
      <autotag group="Value" tag="5"/>
      </bootstrap>
    <bootstrap thing="xChanRes">
      <autotag group="Value" tag="4"/>
      </bootstrap>
    <bootstrap thing="wClaw">
      <autotag group="wMain" tag="2d8_204"/>
      <autotag group="Value" tag="2"/>
      <autotag group="Helper" tag="NatSizeDmg"/>
      </bootstrap>
    <bootstrap thing="raLightSen"></bootstrap>
    <bootstrap thing="xScent"></bootstrap>
    <bootstrap thing="xFly">
      <autotag group="Maneuver" tag="Average"/>
      <autotag group="Value" tag="30"/>
      </bootstrap>
    <bootstrap thing="raFGImDisA"></bootstrap>
    <bootstrap thing="typUndead"></bootstrap>
    <bootstrap thing="raFGImFesD"></bootstrap>
    <bootstrap thing="raFGImBloS"></bootstrap>
    <bootstrap thing="raFGImShaF"></bootstrap>
    <bootstrap thing="raFGImUnhA"></bootstrap>
    <bootstrap thing="raFGImCalH"></bootstrap>
    <bootstrap thing="raFGImRetH"></bootstrap>
    <bootstrap thing="raDarkVis"></bootstrap>
    <eval phase="PreLevel" priority="4000" index="2">#skillbonus[skIntim] += 8
    #skillbonus[skPercep] += 8
    #skillbonus[skStealth] += 8</eval>
    <eval phase="PostAttr" priority="1000">~ deflection bonus equal to its Charisma bonus
    #applybonus[tACDeflect,hero.child[ArmorClass],hero.child[aCHA].field[aModBonus].value]</eval>
    </thing>
  <thing id="tmFGWavCur" name="Wave-Cursed" description="The depths of the world&apos;s seas hold mystery and danger seldom fathomed by those that walk the lands above. However, some bear the kiss of both the world of air and light and that of the stygian depths. Such creatures are born either of a union between a land-bound race and one of the aquatic peoples - either their parents or at some point in the distant past with the latent genetic traits emerging once again in the bloodline - or as a result of magical manipulation such as the {i}countenance of the deeps{/i} spell. The recipient of this template is at home both above and below the waves and takes on the gills and the somewhat ichthyoidal appearance of their aquatic forebears. These marks are often considered a blight and are shunned by land-bound creatures, and it is from this prejudice that the template gains its name. Aquatic creatures consider such individuals a curiosity but bear them no real animosity." compset="Template" uniqueness="unique">
    <usesource source="CampRazorC"/>
    <tag group="TemplHelp" tag="Inherited"/>
    <tag group="TemplHelp" tag="Acquired"/>
    <tag group="ClVaryName" tag="Prepend"/>
    <tag group="ProductId" tag="FrogGod"/>
    <bootstrap thing="raFGIchFle"></bootstrap>
    <bootstrap thing="stAquatic"></bootstrap>
    <bootstrap thing="raAmphib"></bootstrap>
    <eval phase="Final">~ Swim speed equal to 1/2 its base land speed + 10 feet
    #value[xSwim] += round(hero.child[Speed].field[tSpeed].value/2,0,-1) + 10</eval>
    <eval phase="First" priority="10000" index="2">if (hero.child[xSwim].field[abValue].value = 0) then
      #skillbonus[skSwim] += 8
    endif</eval>
    <exprreq message="aberration, animal, dragon, fey, humanoid, magical beast, monstrous humanoid, or outsider requried."><![CDATA[#hastype[tpAberr] + #hastype[tpAnimal] + #hastype[tpDragon] + #hastype[tpFey] + #hastype[tpHumanoid] + #hastype[tpMagBeast] + #hastype[tpMonHuman] + #hastype[tpOutsider] <> 0]]></exprreq>
    </thing>
  <thing id="tmFGFjAqua" name="Fah-jee, Aquatic" description="Fah-jee possess an impressive understanding of their undead bodies and frequently perform modification rituals to enhance their dead flesh with parts from non-human creatures.\n\nFlippers from a sea turtle or the sweeping fins of a shark replace arms or legs in this mash-up of humanoid body parts and chunks of whichever creatures swim near fah-jee infested islands. To make an aquatic fah-jee, give the creature a swim speed of 40 ft. The fah-jee gains the aquatic subtype. This modification does not increase the base creature&apos;s CR." compset="Template" uniqueness="unique">
    <usesource source="CampRazorC"/>
    <tag group="TemplHelp" tag="Acquired"/>
    <tag group="ClVaryName" tag="Prepend"/>
    <tag group="ProductId" tag="FrogGod"/>
    <bootstrap thing="stAquatic"></bootstrap>
    <bootstrap thing="xSwim">
      <autotag group="Value" tag="40"/>
      </bootstrap>
    <eval phase="First" priority="600"><![CDATA[field[livename].text = "Aquatic"]]>
      <before name="Template Name Modification"/>
      </eval>
    <exprreq message="Fah-jee or Fah-jee Huna required."><![CDATA[hero.tagis[Race.rFGFahjee] + hero.tagis[Race.rFGFahjeeH] <> 0]]></exprreq>
    </thing>
  <thing id="tmFGFjBMky" name="Fah-jee, Brachiating (Monkey-armed)" description="Fah-jee possess an impressive understanding of their undead bodies and frequently perform modification rituals to enhance their dead flesh with parts from non-human creatures.\n\nUsing the long arms of monkeys and apes, fah-jee hunas modify some members of their tribes to better hunt the jungle canopy. To make a brachiating fah-jee, give the creature a climb speed equal to its current land speed. If ape arms are used, increase the damage for the creature&apos;s slam attack to 1d4. This modification does not increase the base creature&apos;s CR." compset="Template" uniqueness="unique">
    <usesource source="CampRazorC"/>
    <tag group="TemplHelp" tag="Acquired"/>
    <tag group="ProductId" tag="FrogGod"/>
    <bootstrap thing="stAquatic"></bootstrap>
    <eval phase="First">hero.child[xClimb].field[abValue].value = hero.child[Speed].field[tSpeed].value</eval>
    <eval phase="First" priority="600" index="2"><![CDATA[field[livename].text = "Brachiating"]]>
      <before name="Template Name Modification"/>
      </eval>
    <exprreq message="Fah-jee or Fah-jee Huna required."><![CDATA[hero.tagis[Race.rFGFahjee] + hero.tagis[Race.rFGFahjeeH] <> 0]]></exprreq>
    </thing>
  <thing id="tmFGFjBApe" name="Fah-jee, Brachiating (Ape-armed)" description="Fah-jee possess an impressive understanding of their undead bodies and frequently perform modification rituals to enhance their dead flesh with parts from non-human creatures.\n\nUsing the long arms of monkeys and apes, fah-jee hunas modify some members of their tribes to better hunt the jungle canopy. To make a brachiating fah-jee, give the creature a climb speed equal to its current land speed. If ape arms are used, increase the damage for the creature&apos;s slam attack to 1d4. This modification does not increase the base creature&apos;s CR." compset="Template" uniqueness="unique">
    <usesource source="CampRazorC"/>
    <tag group="TemplHelp" tag="Acquired"/>
    <tag group="ProductId" tag="FrogGod"/>
    <bootstrap thing="stAquatic"></bootstrap>
    <eval phase="First">hero.child[xClimb].field[abValue].value = hero.child[Speed].field[tSpeed].value
    
    perform hero.child[wSlam].assign[Helper.DamageUp]</eval>
    <eval phase="First" priority="600" index="2"><![CDATA[field[livename].text = "Brachiating"]]>
      <before name="Template Name Modification"/>
      </eval>
    <exprreq message="Fah-jee or Fah-jee Huna required."><![CDATA[hero.tagis[Race.rFGFahjee] + hero.tagis[Race.rFGFahjeeH] <> 0]]></exprreq>
    </thing>
  <thing id="tmFGNecInh" name="Necroworm Inhabited" description="A necroworm may take a standard action to burrow into any Medium or Large size corpse. After this, it may animate the corpse and control it from within. Corpses animated by a necroworm fight as zombies of their size and type with two exceptions: they are not limited to a single action per round, and the necroworm may extend its tail and stinger out of the zombie&apos;s mouth or back and make an attack with it (in addition to the zombie&apos;s attacks) each round. Damage dealt to the zombie has no effect on a necroworm inhabiting it, except that critical hits scored against the zombie deal their extra damage to the worm inside, and sneak attack damage may also be dealt to the worm. This is an exception to the rule that undead are immune to critical hits and sneak attacks. If a necroworm is killed while inhabiting the zombie, the corpse becomes inert instantly. Zombies animated by necroworms may not be turned, rebuked, or commanded. A necroworm must also use a standard action to exit a corpse downed in combat (this provokes an attack of opportunity), but not if the zombie was utterly destroyed (via a {i}disintegrate{/i} spell for example)." compset="Template" uniqueness="unique">
    <fieldval field="tmHDSides" value="8"/>
    <fieldval field="tmInfHD" value="Drop class levels, all become d8s"/>
    <fieldval field="tmSTR" value="2"/>
    <fieldval field="tmDEX" value="-2"/>
    <arrayval field="tmCRArray" index="0" value="2"/>
    <usesource source="CampRazorC"/>
    <tag group="TemplHelp" tag="NoClasses" name="NoClasses" abbrev="NoClasses"/>
    <tag group="AlgnReq" tag="NeutEvil" name="Neutral Evil" abbrev="Neutral Evil"/>
    <tag group="ClVaryName" tag="Prepend"/>
    <tag group="Helper" tag="NoTypeAbil" name="No Type Abilities" abbrev="No Type Abilities"/>
    <tag group="OverType" tag="tpUndead" name="Undead" abbrev="Undead"/>
    <tag group="TemplHelp" tag="AddHitDice" name="AddHitDice" abbrev="AddHitDice"/>
    <tag group="TemplHelp" tag="Inherited"/>
    <tag group="TemplHelp" tag="Acquired" name="Acquired" abbrev="Acquired"/>
    <tag group="ProductId" tag="FrogGod"/>
    <bootstrap thing="raDarkVis">
      <autotag group="SpecSource" tag="tmFGNecInh"/>
      <autotag group="Value" tag="60"/>
      </bootstrap>
    <bootstrap thing="typUndead"></bootstrap>
    <bootstrap thing="wSting">
      <autotag group="wMain" tag="1d4_4"/>
      <autotag group="Helper" tag="FixSizeDmg"/>
      <autotag group="wMaxStrBon" tag="0"/>
      <autotag group="wMaxStrPen" tag="0"/>
      <assignval field="wDamExtra" value=" plus inject acid"/>
      </bootstrap>
    <bootstrap thing="wSlam">
      <autotag group="wMain" tag="1d6_5"/>
      <autotag group="Helper" tag="NatTwoHand"/>
      </bootstrap>
    <bootstrap thing="xDamRdS">
      <autotag group="SpecSource" tag="tmFGNecInh"/>
      <autotag group="Value" tag="5"/>
      </bootstrap>
    <bootstrap thing="abFGCPImCE">
      <autotag group="SpecSource" tag="tmFGNecInh"/>
      </bootstrap>
    <bootstrap thing="xImmCold">
      <autotag group="SpecSource" tag="tmFGNecInh"/>
      </bootstrap>
    <bootstrap thing="fToughness"></bootstrap>
    <bootstrap thing="raFGNcwIjA">
      <autotag group="SpecSource" tag="tmFGNecInh"/>
      </bootstrap>
    <bootstrap thing="raFGNcISuC">
      <autotag group="SpecSource" tag="tmFGNecInh"/>
      </bootstrap>
    <bootstrap thing="raFGNcISuP">
      <autotag group="SpecSource" tag="tmFGNecInh"/>
      </bootstrap>
    <bootstrap thing="xFGUndeImm">
      <autotag group="SpecSource" tag="tmFGNecInh"/>
      </bootstrap>
    <eval phase="First"><![CDATA[
          ~ Many races and classes bootstrap feats, so go through them disabling
          ~ them all - except Toughness!
          foreach pick in hero from BaseFeat where "!thingid.fToughness & !Helper.ProfGroup"
            perform eachpick.assign[Helper.FtDisable]
            nexteach
    
          ~ Disable all special abilities apart from the ones that we bootstrap
          var searchexpr as string
          searchexpr = "!component.BaseFeat & !SpecSource.tmFGNecInh & !SpecType.Movement & !thingid.typUndead & !SpecType.Immune"
            foreach pick in hero from Ability where searchexpr
              perform eachpick.assign[Helper.SpcDisable]
              perform eachpick.assign[Hide.Special]
              nexteach
    
          ~ Go over all weapons, deleting stuff like weapon focus and
          ~ improved natural attack from them - these tags are often just
          ~ bootstrapped directly onto the weapon
          foreach pick in hero from BaseWep
            perform eachpick.delete[Broadcast.?]
            nexteach]]></eval>
    <eval phase="PreLevel" priority="1000" index="5">~ adjudt sting attack
    
    hero.child[wSting].field[wAttack].value = 6</eval>
    <eval phase="PreLevel" priority="10000" index="2"><![CDATA[
          var result as number
    
          ~ bonus to natural armor based on size
          var bonus as number
          if (hero.tagis[Size.Small] <> 0) then
            bonus = 1
          elseif (hero.tagis[Size.Medium] <> 0) then
            bonus = 2
          elseif (hero.tagis[Size.Large] <> 0) then
            bonus = 3
          elseif (hero.tagis[Size.Huge] <> 0) then
            bonus = 4
          elseif (hero.tagis[Size.Gargantuan] <> 0) then
            bonus = 7
          elseif (hero.tagis[Size.Colossal] <> 0) then
            bonus = 11
            endif
          hero.child[mNatural].field[Bonus].value += bonus
    
          ~ We don't have an INT score
          result = hero.child[aINT].assign[Helper.NoScore]
    
          ~ Force our Wisdom to 10 and our Charisma to 10
          hero.child[aWIS].field[aNormForce].value = 10
          hero.child[aCHA].field[aNormForce].value = 10
    
          var hd as number
          hd = hero.tagcount[Hero.HitDice] - hero.tagcount[Classes.?]
    
          ~ Use the number of HD to calculate CR
          var cr as number
          if (hd <= 1) then
            cr = -2
          elseif (hd <= 2) then
            cr = 0
          elseif (hd <= 4) then
            cr = 1
          elseif (hd <= 6) then
            cr = 2
          elseif (hd <= 10) then
            cr = 3
          elseif (hd <= 14) then
            cr = 4
          elseif (hd <= 16) then
            cr = 5
          else
            cr = 6
            endif
          herofield[tCR].value = cr]]></eval>
    <eval phase="First" priority="530" index="3"><![CDATA[
          ~if we have no racial HD, add one to our template
          if (hero.tagcount[Hero.HitDice] = 0) then
            field[tmHitDice].value += 1
            endif
    
          ~at this timing, the size isn't set up on the hero yet, so we'll look up the Race's size
          perform hero.findchild[BaseRace].setfocus
          doneif (state.isfocus = 0)
    
          var racesize as number
          racesize = focus.tagvalue[RaceSize.?]
          if (racesize > 10) then
            racesize = (racesize - 10) * -1
            endif
    
          ~ Apply modifiers to the race size
          racesize += focus.field[rSizeMod].value
    
          ~now, look up that size on a table to figure out how many additional HD to add
          if (racesize < -1) then
            ~+0
          elseif (racesize <= 0) then
            field[tmHitDice].value += 1
          elseif (racesize = 1) then
            field[tmHitDice].value += 2
          elseif (racesize = 2) then
            field[tmHitDice].value += 4
          elseif (racesize = 3) then
            field[tmHitDice].value += 6
          else
            field[tmHitDice].value += 10
            endif]]></eval>
    <eval phase="Final" priority="9000" index="4">~ Delete all maneuverability tags from flight
          perform hero.childfound[xFly].delete[Maneuver.?]
          perform hero.childfound[xFly].assign[Maneuver.Clumsy]</eval>
    <prereq message="Corporeal creature required." iserror="no">
      <validate><![CDATA[
            ~once we've been selected, we're fine
            validif (@ispick <> 0)
    
            ~we're valid if the incorporeal special isn't present
            validif (#hasability[raIncorpor] = 0)]]></validate>
      </prereq>
    <prereq message="Undead type forbidden." iserror="no">
      <validate><![CDATA[
            ~once we've been selected, we're fine (since this makes the creature undead).
            validif (@ispick <> 0)
    
            ~we're valid if the hero is living
            validif (#hastype[tpUndead] = 0)]]></validate>
      </prereq>
    </thing>
  <thing id="tmFGGiralS" name="Girallon-Sired Orc" description="Rumors abound of terrible white, four-armed orcs, and the image is so strong in some cultures that it must be more than just a tale. Not all subspecies of girallons can mate with other creatures, and although rumors abound of couplings with other races-sometimes even the common humanoid races-producing progeny, mercifully only greenskin orcs (see The Tome of Horrors Complete 468) of the Veiled Isle have so far been reported as being capable of bearing girallon-fathered young. Normal girallons would simply tear apart another race rather than see any breeding potential in them.\n\nMost births result in the death of the offspring, and often the Veiled Isle girallons simply regard such young as a lucky meal, the eating of which blesses them for a year. Some tribes however allow such offspring to live, and a still smaller group regard them as living demigods." compset="Template" uniqueness="unique">
    <fieldval field="tmAC" value="4"/>
    <fieldval field="tmSTR" value="4"/>
    <fieldval field="tmDEX" value="4"/>
    <fieldval field="tmCON" value="4"/>
    <fieldval field="tmINT" value="-2"/>
    <fieldval field="tmCHA" value="-4"/>
    <arrayval field="tmCRArray" index="0" value="1"/>
    <usesource source="CampRazorC"/>
    <tag group="TemplHelp" tag="Inherited"/>
    <tag group="ClVaryName" tag="Prepend"/>
    <tag group="ProductId" tag="FrogGod"/>
    <bootstrap thing="raFGGrOcSp"></bootstrap>
    <bootstrap thing="raLowLight"></bootstrap>
    <bootstrap thing="xScent"></bootstrap>
    <bootstrap thing="wClaw">
      <autotag group="wMain" tag="1d4_4"/>
      <autotag group="Value" tag="4"/>
      </bootstrap>
    <eval phase="Final" index="2">var clb as number
    clb = hero.child[Speed].field[tSpeed].value
    
     hero.child[xClimb].field[abValue].value = maximum(clb - 10,0)</eval>
    <eval phase="First" priority="600"><![CDATA[field[livename].text = "Girallon-sired"]]>
      <before name="Template Name Modification"/>
      </eval>
    <eval phase="PreLevel" priority="4000" index="3">#racialbonus[skClimb] += 8</eval>
    <exprreq message="Orc required."><![CDATA[#hassubtype[stOrc] <> 0]]></exprreq>
    </thing>
  <thing id="tmDWSkyHy" name="Sky Hydra" compset="Template" uniqueness="unique">
    <usesource source="CampRazorC"/>
    <tag group="ClassSkill" tag="skKnowNat"/>
    <tag group="ProductId" tag="FrogGod"/>
    <tag group="TemplHelp" tag="Acquired"/>
    <bootstrap thing="raDWWeakCa"></bootstrap>
    <eval phase="First" priority="1000">hero.child[ManeuvDef].field[Bonus].value += 4</eval>
    </thing>
  <thing id="tmDWAirInf" name="Air-Infused" compset="Template" uniqueness="unique">
    <fieldval field="tmSTR" value="-4"/>
    <fieldval field="tmDEX" value="4"/>
    <fieldval field="tmCON" value="-2"/>
    <fieldval field="tmINT" value="-2"/>
    <fieldval field="tmWIS" value="2"/>
    <fieldval field="tmCHA" value="2"/>
    <arrayval field="tmCRArray" index="0" value="1"/>
    <usesource source="CampRazorC"/>
    <tag group="TemplHelp" tag="Acquired"/>
    <tag group="ClVaryName" tag="Prepend"/>
    <tag group="TemplHelp" tag="Inherited"/>
    <tag group="ProductId" tag="FrogGod"/>
    <bootstrap thing="raxAIAirBo"></bootstrap>
    <bootstrap thing="raxAIBrWep"></bootstrap>
    <bootstrap thing="raxEIElemB"></bootstrap>
    <bootstrap thing="raxAIGasFm"></bootstrap>
    <bootstrap thing="fLightRef">
      <autotag group="thing" tag="skipprereq"/>
      </bootstrap>
    <bootstrap thing="xFly">
      <autotag group="Maneuver" tag="Perfect"/>
      </bootstrap>
    <eval phase="Final" priority="10000"><![CDATA[foreach pick in hero from Ability where "SpecType.Movement & !thingid.xFly"
  hero.child[xFly].field[abValue].value = maximum(eachpick.field[abValue].value, hero.child[xFly].field[abValue].value)
nexteach

hero.child[xFly].field[abValue].value = maximum(hero.child[xFly].field[abValue].value, hero.child[Speed].field[tSpeed].value)]]></eval>
    </thing>
  </document>
