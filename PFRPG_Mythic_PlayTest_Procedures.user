<?xml version="1.0" encoding="ISO-8859-1"?>
<document signature="Hero Lab Data">
  <fileinfo>
    <info_author>
Tim Shadow
Email: ShadowChemosh@yahoo.com
    </info_author>
    <info_history><![CDATA[
November 15, 2012 - Tim Shadow
-Created New
]]>
    </info_history>
  </fileinfo>

  <procedure id="KnownSpell" scripttype="validate"><![CDATA[
~ This procedure tests if a character has a specific spell either Known or
~ in their spell book and sets the valid field.
~ ===How to use this Procedure===
~ var SpellID as String
~ var KnownSpell as number
~ SpellID = "spCureLig1"
~ Call KnownSpell
~ @valid = KnownSpell

var KnownSpell as number
var SpellID    as string
var s2classes  as string
var s2search   as string
var n2X        as number
~ Init fields here
KnownSpell = 0
n2X = 0

~ Add thingid to the spell id passed us
SpellID = "thingid." & SpellID
~ replace the | with |thingid. tag groups
SpellID  = replace(SpellID,"|","|thingid.",0)
~ See if the asked for spell is a valid pick on the hero. If it is 
~ then we know its either in a spellbook or a spell known.
foreach pick in hero from BaseSpell where SpellID
   KnownSpell = 1
nexteach

~ Only do the following if the above found no hits.
If (KnownSpell <> 1) Then
   ~ Get the classes that are valid for the spell ID(s) passed to us
   foreach thing in BaseSpell where SpellID
      ~ only do anything if we a spell with classes
      if (eachthing.tagis[sClass.?] <> 0) then
         ~ if loop counter not zero then add a seperator between strings
         if ( n2X <> 0) then
            ~ add a seperator between each loop
            s2classes &= "|"
         endif    
         ~ Build a search string of all class tags
         s2classes &= eachthing.tagids[sClass.?,"|"]
         ~ increment loop counter
         n2X += 1
     endif
   nexteach
   ~ replace the sClass tags with thingid tag groups
   s2search = replace(s2classes,"sClass","thingid",0)
   ~ add the CasterType.MemAll tag so we only search Memorized all classes
   s2search &= " & CasterType.MemAll"

   ~ Loop through classes and see if we have one of the classes
   ~ valid for casting the spell passed and we are Memorized ALL class.
   foreach pick in hero where s2search
      KnownSpell = 1
   nexteach

Endif
    ]]>
  </procedure>

</document>