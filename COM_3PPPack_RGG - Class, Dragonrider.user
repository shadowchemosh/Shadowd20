<?xml version="1.0" encoding="UTF-8"?>
<document signature="Hero Lab Data">
  <loadonce key="COM_3PPPack_RGG - Class, Dragonrider"/>
  <fileinfo>
    <info_author>Tim Shadow</info_author>
    <info_history><![CDATA[
May 24, 2013 - Tim Shadow
-Fixed the array of values used for Natural Armor it was incorrect.
-Added in the #extradamage[] macro instead of changing the live name.
-Set the magi citem slots on the dragon to be "Quadruped (Claws/paws)" rules from the Animal Archive.

January 27, 2012 - Tim Shadow
-Removed accidently left in debug statments.
    
v1.1 - July 8, 2011 - Tim Shadow
-FIX: Removed Acid Weapon adjustment so we don't clash with other d20pfsrd .user file add-ons.

v1.0 - Released June 8, 2011 - Tim Shadow
-First version released to the community.

3/17/2011
-Created new]]></info_history>
    </fileinfo>
  <thing id="cDragonrid" name="Dragonrider" description="Dragonriders are heroic figures with the power to bond with dragons, gaining lifelong steeds, companions and allies. This bond is more than simply a close friendship, it is a mystic connection between dragonrider and dragon, creating a permanent link fueled by the arcane power inherent to all true dragons.\n\n{b}Role{/b}: Dragonriders are fair combatants, though they tend to stay away from heavy armors as it restricts their ability to cast spells and maximize their skill riding a dragon. Though they cannot match a dedicated fighter&apos;s skill or a barbarian&apos;s fury in battle, a dragonrider often needs only survive long enough for their steed&apos;s fiery breath to end any opposition they face. Dragonriders often focus on ranged combat, both to maximize the mobility they enjoy on dragonback, and to keep them away from the heaviest front-line fighting.\n\n{b}Alignment{/b}: Though a dragonrider may be of any alignment, he may only bond to dragons within one step of his alignment.\n\n{b}Note:{/b} Dragon Steeds are located on the {i}Other{/i} tab as a free mininon. Once added the steed will auto level based on the Dragonrider class levels." compset="ClassLevel" maxlimit="20">
    <usesource source="sggDragRid"/>
    <tag group="ClassType" tag="Normal"/>
    <bootstrap thing="cHelpDRR"></bootstrap>
    <link linkage="helper" thing="cHelpDRR"/>
    </thing>
  <thing id="cDrrMartWe" name="Martial Weapons" description="A dragonrider is proficient with all simple weapons, plus any one martial melee weapon and one martial ranged weapon." compset="ClSpecial">
    <fieldval field="usrCandid2" value="component.BaseWep &amp; !Helper.NoSelect &amp; !component.Specific &amp; !wCategory.Ammunition &amp; (wCategory.RangeThrow &amp; wProfReq.Martial | wCategory.RangeProj &amp; wProfReq.Martial)"/>
    <fieldval field="usrCandid1" value="component.BaseWep &amp; !Helper.NoSelect &amp; !component.Specific &amp; !wCategory.Ammunition &amp; (wCategory.Melee &amp; wProfReq.Martial)"/>
    <tag group="ChooseSrc2" tag="Thing"/>
    <tag group="ChooseSrc1" tag="Thing"/>
    <eval phase="PreLevel" priority="4000"><![CDATA[~ If we've not chosen anything, get out
doneif (field[usrChosen1].ischosen = 0)
~ If we've not chosen anything, get out
doneif (field[usrChosen2].ischosen = 0)

var id as string
id = field[usrChosen1].chosen.idstring
perform field[usrChosen1].chosen.forward[WepProf.?]
foreach pick in hero where "IsWeapon." & id
    perform eachpick.assign[Broadcast.WepProf]
nexteach

var id2 as string
id2 = field[usrChosen2].chosen.idstring
perform field[usrChosen2].chosen.forward[WepProf.?]
foreach pick in hero where "IsWeapon." & id2
    perform eachpick.assign[Broadcast.WepProf]
nexteach]]></eval>
    </thing>
  <thing id="cDrrSteed" name="Bonded Dragon Steed" description="A dragonrider has a mystic bond with a youthful true dragon, a bond that guarantees the dragons loyalty to the rider (as long as it is treated with respect), and allows the dragonrider to tap into some of the bonded steed&apos;s arcane power. A character that starts as a dragonrider at 1st level is assumed to have already bonded with a dragon of his choice. A character multiclassing into dragonrider is approached by a dragon as a prospective bonded mount within 30 days. The bond causes the dragon to grow slightly in size, and drives it to gain power as its dragonrider gains experience, rather than as it gains age categories. Many of a dragon&apos;s normal powers (spell-like abilities, spellcasting, unlimited breath weapon use) are either suspended or modified as the arcane power that drives them is used to fuel the bond between dragonrider and dragon mount. This bond, once forged, ends only if both rider and steed decide to end it, or if one is killed and not resurrected in a timely fashion.\n\nA bonded dragon can carry it&apos;s rider as soon as it is the same size category as its rider, assuming it&apos;s strength is great enough to bear the rider and his gear. Dragons&apos; carrying capacity is modified for their size as normal creatures, and as bonded dragon steeds they can fly (at full speed) even if heavily encumbered. A dragon can carry two creatures one size smaller than it, four creatures two sizes smaller, and sixteen creatures three or more sizes smaller (all assuming it has the Strength to do so).\n\n{b}Note:{/b} Dragon Steeds are located on the {i}Other{/i} tab as a free mininon. Once added the steed will auto level based on the Dragonrider class levels." compset="ClSpecial">
    <fieldval field="shortname" value="Steed"/>
    <tag group="AbilType" tag="Extra"/>
    <eval phase="First" priority="450">~ Set the Level of the hero so the correct HD can be 
~ added to the Steed
field[abValue].value += #levelcount[Dragonrid]</eval>
    </thing>
  <thing id="anSgBlkDra" name="Black Dragon" compset="AnimalComp">
    <fieldval field="rNumHands" value="0"/>
    <arrayval field="anCON" index="0" value="3"/>
    <arrayval field="anCON" index="7" value="4"/>
    <arrayval field="anDEX" index="0" value="6"/>
    <arrayval field="anDEX" index="7" value="-2"/>
    <arrayval field="anINT" index="0" value="-2"/>
    <arrayval field="anWIS" index="0" value="1"/>
    <arrayval field="anCHA" index="0" value="-2"/>
    <arrayval field="anSizeMod" index="7" value="1"/>
    <arrayval field="anSizeMod" index="15" value="3"/>
    <arrayval field="anSTR" index="0" value="1"/>
    <arrayval field="anSTR" index="7" value="8"/>
    <arrayval field="anSTR" index="15" value="8"/>
    <arrayval field="anSpeed" index="0" value="50"/>
    <arrayval field="anSpeed" index="7" value="60"/>
    <arrayval field="anSpeed" index="15" value="70"/>
    <usesource source="sggDragRid"/>
    <tag group="RaceSize" tag="Medium0"/>
    <tag group="Helper" tag="NotHum" name="NotHum" abbrev="NotHum"/>
    <tag group="BloodEner" tag="Acid"/>
    <tag group="HasType" tag="tpSgDragon"/>
    <tag group="CompList" tag="cHelpDRR"/>
    <tag group="Alignment" tag="Chaotic"/>
    <tag group="Alignment" tag="Evil"/>
    <bootstrap thing="zSggDrrNat"></bootstrap>
    <bootstrap thing="zSggDrrStr"></bootstrap>
    <bootstrap thing="xFly">
      <autotag group="Maneuver" tag="Clumsy"/>
      <autotag group="Value" tag="40"/>
      </bootstrap>
    <bootstrap thing="xImmAcid"></bootstrap>
    <bootstrap thing="raLowLight"></bootstrap>
    <bootstrap thing="raSgDrFocu"></bootstrap>
    <bootstrap thing="xSwim"></bootstrap>
    <bootstrap thing="raDarkVis"></bootstrap>
    <bootstrap thing="zSggDrrInt"></bootstrap>
    <bootstrap thing="xScent"></bootstrap>
    <bootstrap thing="wBite">
      <autotag group="wMain" tag="1d6_5"/>
      </bootstrap>
    <bootstrap thing="wClaw">
      <autotag group="wMain" tag="1d4_4"/>
      <autotag group="Value" tag="2"/>
      </bootstrap>
    <bootstrap thing="raBlaSwamS">
      <containerreq phase="First" priority="502"><![CDATA[fieldval:anCompLev >= 8]]></containerreq>
      </bootstrap>
    <bootstrap thing="raBlaWateB">
      <containerreq phase="First" priority="502"><![CDATA[fieldval:anCompLev >= 8]]></containerreq>
      </bootstrap>
    <bootstrap thing="raSgAcidBi">
      <containerreq phase="First" priority="502"><![CDATA[fieldval:anCompLev >= 16]]></containerreq>
      </bootstrap>
    <bootstrap thing="xSplRs"></bootstrap>
    <eval phase="First" priority="5000"><![CDATA[~Set init focus to Move action
#value[raSgDrFocu] = 3
~ Set Steed Natural Armor
#value[zSggDrrNat] = field[anCompLev].value
~ Set Steed Str/Con bonus
#value[zSggDrrStr] = field[anCompLev].value
~ Set Steed Int/Cha bonus
#value[zSggDrrInt] = field[anCompLev].value

~ Set Form of the Dragon Breath weapon on PC
If (master.childlives[raSgBreath] <> 0) then
   perform pulltags[BloodEner.?]
   perform master.child[raSgBreath].pushtags[BloodEner.?]
   ~ Set length of breath
   master.child[raSgBreath].field[abValue].value = 100
   ~ Set Type: Line=1,Cone=0
   master.child[raSgBreath].field[abValue2].value = 1
Endif

~ Give SR at 16th level
If (field[anCompLev].value >= 16) then
   #applysr[field[anCompLev].value+5]
Endif

~ Set natural armor bonus for this dragon
hero.child[ArmorClass].field[tACNatural].value += 3
~ 8th level improvments
If (field[anCompLev].value >= 8) then
   #applydr[xDamRdMag,5]
   #applyvalue[xFly,50]
   #applyvalue[raDarkVis,120]
   #value[raSgDrFocu] += 1
Endif
~ 16th level improvments
If (field[anCompLev].value >= 16) then
   #applydr[xDamRdMag,10]
   #applyvalue[xFly,60]
   #applyvalue[xSwim,50]
   #value[raSgDrFocu] += 1
Endif]]></eval>
    <eval phase="First" priority="250" index="2"><![CDATA[~ Push energy type tag to hero level
perform pulltags[BloodEner.?]
perform hero.pushtags[BloodEner.?]

~ Set Form of the Dragon Breath weapon on PC
If (master.childlives[cDrrDragon] <> 0) then
   perform master.child[cDrrDragon].pushtags[BloodEner.?]   
Endif]]></eval>
    <prereq message="Wrong alignment to bond to this dragon.">
      <validate><![CDATA[validif (isminion = 0)
~ If master is Lawful or Good can't bond this dragon
validif (master.tagis[Alignment.Good] + master.tagis[Alignment.Lawful] = 0)]]></validate>
      </prereq>
    </thing>
  <thing id="tpSgDragon" name="Dragon Steed" description="A dragon is a reptile-like creature, usually winged, with magical or unusual abilities.\n\n{b}Traits{/b}: A dragon possesses the following traits (unless otherwise noted in a creature&apos;s entry).\n* Darkvision 60 feet and low-light vision.\n* Immunity to magic sleep effects and paralysis effects.\n* Proficient with its natural weapons only.\n* Proficient with no armor.\n* Dragons breathe, eat, and sleep." compset="Type">
    <fieldval field="tpSkillPts" value="4"/>
    <fieldval field="tpHDSides" value="12"/>
    <usesource source="sggDragRid"/>
    <tag group="ClassSkill" tag="skPercep" name="Perception" abbrev="Perception"/>
    <tag group="ClassSkill" tag="skStealth" name="Stealth" abbrev="Stealth"/>
    <tag group="ClassSkill" tag="skSurvival" name="Survival" abbrev="Survival"/>
    <tag group="ClassSkill" tag="skSwim" name="Swim" abbrev="Swim"/>
    <tag group="SaveGood" tag="svFort" name="Fortitude Save" abbrev="Fortitude Save"/>
    <tag group="SaveGood" tag="svRef" name="Reflex Save" abbrev="Reflex Save"/>
    <tag group="SaveGood" tag="svWill" name="Will Save" abbrev="Will Save"/>
    <tag group="cAttack" tag="Good" name="Fast" abbrev="Fast"/>
    <tag group="ClassSkill" tag="skClimb" name="Climb" abbrev="Climb"/>
    <tag group="ClassSkill" tag="skFly" name="Fly" abbrev="Fly"/>
    <tag group="ClassSkill" tag="skAcrobat"/>
    <tag group="ClassSkill" tag="skEscape"/>
    <tag group="ClassSkill" tag="skIntim" name="Intimidate" abbrev="Intimidate"/>
    <tag group="Type" tag="tpDragon"/>
    <bootstrap thing="raDarkVis">
      <containerreq phase="First" priority="600" name="Bootstrap Type Abilities"><![CDATA[
        (HasType.tpSgDragon | OverType.tpSgDragon) & !NoTypeAbil.tpSgDragon]]>
        <after name="Activate Normal Type"/>
        </containerreq>
      </bootstrap>
    <bootstrap thing="xImmSleep">
      <containerreq phase="First" priority="600" name="Bootstrap Type Abilities"><![CDATA[
        (HasType.tpSgDragon | OverType.tpSgDragon) & !NoTypeAbil.tpSgDragon]]>
        <after name="Activate Normal Type"/>
        </containerreq>
      </bootstrap>
    <bootstrap thing="xImmParaly">
      <containerreq phase="First" priority="600" name="Bootstrap Type Abilities"><![CDATA[
        (HasType.tpSgDragon | OverType.tpSgDragon) & !NoTypeAbil.tpSgDragon]]>
        <after name="Activate Normal Type"/>
        </containerreq>
      </bootstrap>
    <bootstrap thing="xScent">
      <containerreq phase="First" priority="600" name="Bootstrap Type Abilities"><![CDATA[  (HasType.tpSgDragon | OverType.tpSgDragon) & !NoTypeAbil.tpSgDragon]]>
        <after name="Activate Normal Type"/>
        </containerreq>
      </bootstrap>
    <bootstrap thing="raLowLight">
      <containerreq phase="First" priority="600" name="Bootstrap Type Abilities"><![CDATA[
        (HasType.tpSgDragon | OverType.tpSgDragon) & !NoTypeAbil.tpSgDragon]]>
        <after name="Activate Normal Type"/>
        </containerreq>
      </bootstrap>
    </thing>
  <thing id="raSgDrFocu" name="Focus:" description="For the dragon to take any other action in a typical encounter, the dragonrider must establish a mystic focus. Each dragon steed lists the kind of action required each round for a dragonrider to establish this focus, and focus lasts until the beginning of the dragonrider&apos;s next turn. For the most powerful true dragons, it may take a dragonrider a standard action to establish focus. As the dragonrider and his dragon steed gain levels, the amount of time required to establish focus is reduced, going from a standard action to a move action, a move action to a swift action, and a swift action to a free action action. A dragonrider must be within 30 feet of his steed to establish focus.\n\nOnce focus is established, the dragon is free to act however the dragonrider wishes. The dragon steed can use its breath weapon, make double moves, engage in melee attacks, and generally take whatever actions the dragonrider instructs. As the mystic focus establishes a mental bond between the dragonrider and his dragon steed, no vocal communication is required between the two while the mystic focus is in effect." compset="RaceSpec" uniqueness="unique">
    <usesource source="sggDragRid"/>
    <tag group="Helper" tag="ShowSpec"/>
    <eval phase="Final" priority="20000"><![CDATA[var action as string
~ Correctly set the type of action
If (field[abValue].value = 1) then
   action = " Full-Round"
ElseIf (field[abValue].value = 2) then
   action = " Standard"
ElseIf (field[abValue].value = 3) then
   action = " Move"
ElseIf (field[abValue].value = 4) then
   action = " Swift"
ElseIf (field[abValue].value = 5) then
   action = " Free"
Endif
~ Set focus name into livename
field[livename].text = field[thingname].text & action]]></eval>
    </thing>
  <thing id="cDrrLink" name="Link" description="A dragonrider and his bonded dragon steed always know the direction to each other, and are aware of any conditions the other is suffering." compset="ClSpecial">
    <tag group="AbilType" tag="Extra" name="Extraordinary Ability" abbrev=" (Ex)"/>
    </thing>
  <thing id="zSggDrrNat" name="Dragon Steed Natural Armor" description="This ability will calculate the natural armor bonus for a dragon steed." compset="Ability">
    <usesource source="sggDragRid"/>
    <eval phase="PostAttr" priority="10000">~ Calc adjustment to Natural armor for each animal compnion level
If (field[abValue].value = 1) then
    field[abValue2].value = 0
elseif (field[abValue].value = 2) then
    field[abValue2].value = 1
elseif (field[abValue].value = 3) then
    field[abValue2].value = 2
elseif (field[abValue].value = 4) then
    field[abValue2].value = 2
elseif (field[abValue].value = 5) then
    field[abValue2].value = 3
elseif (field[abValue].value = 6) then
    field[abValue2].value = 4
elseif (field[abValue].value = 7) then
    field[abValue2].value = 5
elseif (field[abValue].value = 8) then
    field[abValue2].value = 6
elseif (field[abValue].value = 9) then
    field[abValue2].value = 6
elseif (field[abValue].value = 10) then
    field[abValue2].value = 7
elseif (field[abValue].value = 11) then
    field[abValue2].value = 8
elseif (field[abValue].value = 12) then
    field[abValue2].value = 8
elseif (field[abValue].value = 13) then
    field[abValue2].value = 9
elseif (field[abValue].value = 14) then
    field[abValue2].value = 10
elseif (field[abValue].value = 15) then
    field[abValue2].value = 11
elseif (field[abValue].value = 16) then
    field[abValue2].value = 12
elseif (field[abValue].value = 17) then
    field[abValue2].value = 12
elseif (field[abValue].value = 18) then
    field[abValue2].value = 13
elseif (field[abValue].value = 19) then
    field[abValue2].value = 14
elseif (field[abValue].value = 20) then
    field[abValue2].value = 15
endif
~ Give bonus to Natural Armor
hero.child[ArmorClass].field[tACNatural].value += field[abValue2].value</eval>
    </thing>
  <thing id="zSggDrrStr" name="Dragon Steed Str/Con Bonus" description="This ability will calculate the Str/Con bonus for a dragon steed." compset="Ability" uniqueness="unique">
    <usesource source="sggDragRid"/>
    <eval phase="PreAttr" priority="10000"><![CDATA[~ Calc the bonus for each animal compnion level
If (field[abValue].value = 1) then
    field[abValue2].value = 0
elseif (field[abValue].value = 2) then
    field[abValue2].value = 0
elseif (field[abValue].value = 3) then
    field[abValue2].value = 1
elseif (field[abValue].value = 4) then
    field[abValue2].value = 1
elseif (field[abValue].value = 5) then
    field[abValue2].value = 1
elseif (field[abValue].value = 6) then
    field[abValue2].value = 2
elseif (field[abValue].value = 7) then
    field[abValue2].value = 2
elseif (field[abValue].value = 8) then
    field[abValue2].value = 3
elseif (field[abValue].value = 9) then
    field[abValue2].value = 3
elseif (field[abValue].value = 10) then
    field[abValue2].value = 3
elseif (field[abValue].value = 11) then
    field[abValue2].value = 4
elseif (field[abValue].value = 12) then
    field[abValue2].value = 4
elseif (field[abValue].value = 13) then
    field[abValue2].value = 5
elseif (field[abValue].value = 14) then
    field[abValue2].value = 5
elseif (field[abValue].value = 15) then
    field[abValue2].value = 5
elseif (field[abValue].value = 16) then
    field[abValue2].value = 6
elseif (field[abValue].value = 17) then
    field[abValue2].value = 6
elseif (field[abValue].value = 18) then
    field[abValue2].value = 7
elseif (field[abValue].value = 19) then
    field[abValue2].value = 7
elseif (field[abValue].value = 20) then
    field[abValue2].value = 7
endif
~ Give bonus Str
hero.child[aSTR].field[aNormMod].value += field[abValue2].value
~ Give bonus to Con
hero.child[aCON].field[aNormMod].value += field[abValue2].value

~ 8th Level advancement
If (field[abValue].value >= 8) Then
   hero.child[aSTR].field[aNormMod].value += 8
   hero.child[aCON].field[aNormMod].value += 4
   hero.child[aDEX].field[aNormMod].value += -2
Endif
~ 16th Level advancement
If (field[abValue].value >= 16) Then
   hero.child[aSTR].field[aNormMod].value += 8
   hero.child[aCON].field[aNormMod].value += 4
   hero.child[aDEX].field[aNormMod].value += -2
Endif]]></eval>
    </thing>
  <thing id="zSggDrrInt" name="Dragon Steed Int/Cha Bonus" description="This ability will calculate the Int/Cha bonus for a dragon steed." compset="Ability" uniqueness="unique">
    <usesource source="sggDragRid"/>
    <tag group="Custom" tag="sggLine" name="Breath Weapon,Line" abbrev="Line"/>
    <tag group="Custom" tag="sggCone" name="Breath Weapon,Cone" abbrev="Cone"/>
    <eval phase="PreAttr" priority="10000">~ Calc the bonus for each animal compnion level
If (field[abValue].value = 1) then
    field[abValue2].value = 0
elseif (field[abValue].value = 2) then
    field[abValue2].value = 0
elseif (field[abValue].value = 3) then
    field[abValue2].value = 1
elseif (field[abValue].value = 4) then
    field[abValue2].value = 1
elseif (field[abValue].value = 5) then
    field[abValue2].value = 1
elseif (field[abValue].value = 6) then
    field[abValue2].value = 2
elseif (field[abValue].value = 7) then
    field[abValue2].value = 2
elseif (field[abValue].value = 8) then
    field[abValue2].value = 2
elseif (field[abValue].value = 9) then
    field[abValue2].value = 3
elseif (field[abValue].value = 10) then
    field[abValue2].value = 3
elseif (field[abValue].value = 11) then
    field[abValue2].value = 3
elseif (field[abValue].value = 12) then
    field[abValue2].value = 4
elseif (field[abValue].value = 13) then
    field[abValue2].value = 4
elseif (field[abValue].value = 14) then
    field[abValue2].value = 4
elseif (field[abValue].value = 15) then
    field[abValue2].value = 5
elseif (field[abValue].value = 16) then
    field[abValue2].value = 5
elseif (field[abValue].value = 17) then
    field[abValue2].value = 5
elseif (field[abValue].value = 18) then
    field[abValue2].value = 6
elseif (field[abValue].value = 19) then
    field[abValue2].value = 6
elseif (field[abValue].value = 20) then
    field[abValue2].value = 6
endif
~ Give bonus to Int
hero.child[aINT].field[aNormMod].value += field[abValue2].value
~ Give bonus to Cha
hero.child[aCHA].field[aNormMod].value += field[abValue2].value</eval>
    </thing>
  <thing id="raSgAcidBi" name="Acidic Bite" description="A black dragon&apos;s bite deals an additional 2d6 points of acid damage." compset="RaceSpec">
    <usesource source="sggDragRid"/>
    <tag group="Helper" tag="ShowSpec" name="ShowSpec" abbrev="ShowSpec"/>
    <tag group="AbilType" tag="Super" name="Supernatural Ability" abbrev=" (Su)"/>
    <eval phase="Final" priority="25000"><![CDATA[
~ Change bite to display the +2d6 info
#extradamage[hero.childfound[wBite],"+2d6 Acid",field[name].text]]]></eval>
    </thing>
  <thing id="cDrrLowLig" name="Low-Light Vision" description="As the bond between dragonrider and dragon strengthens, it eventually grants the dragonrider some of his steeds amazing senses. At 2nd level, the dragonrider gains low-light vision. If the dragonrider already has natural low-light vision, the range of his low-light is doubled (allowing him to see four times as far as normal in dim or shadowy conditions)." compset="ClSpecial">
    <tag group="AbilType" tag="Extra"/>
    <eval phase="Final" priority="5000"><![CDATA[~ If we're not shown, just get out now
doneif (tagis[Helper.ShowSpec] = 0)

~ If we already have racial low-light its 4x
If (hero.childlives[raLowLight] = 1) Then
   field[livename].text = field[thingname].text & " 4x"
Else
   field[livename].text = field[thingname].text & " 2x"
Endif]]></eval>
    </thing>
  <thing id="cDrrResEne" name="Resist Energy" description="Beginning at 3rd level, a dragonrider gains a natural resistance to damage of the same energy type as the damage of his bonded dragon steed&apos;s breath weapon. This begins at energy resistance 5, and increase by 5 every 5 levels, to a maximum of energy resistance 20 at 18th level. The energy resistance is tied to the dragonrider&apos;s current steed - should he change bonded dragons steed to one with a new type of breath weapon damage, his resistance also changes to the new type." compset="ClSpecial">
    <tag group="AbilType" tag="Super"/>
    <eval phase="PostLevel" priority="10000"><![CDATA[~ If we're not shown, just get out now
doneif (tagis[Helper.ShowSpec] = 0)
~ If we don't have a Animal companion we are done
doneif (hero.childlives[cAnimComp] = 0)

~ Apply the correct Energy Reistance based on the dragon steed
If (hero.childfound[cAnimComp].minion.tagis[BloodEner.Acid] = 1) then
   #applyresist[xDamRsAcid,field[abValue].value]
ElseIf (hero.childfound[cAnimComp].minion.tagis[BloodEner.Elec] = 1) then
   #applyresist[xDamRsElec,field[abValue].value]
ElseIf (hero.childfound[cAnimComp].minion.tagis[BloodEner.Fire] = 1) then
   #applyresist[xDamRsFire,field[abValue].value]
ElseIf (hero.childfound[cAnimComp].minion.tagis[BloodEner.Cold] = 1) then
   #applyresist[xDamRsCold,field[abValue].value]
Endif]]></eval>
    <eval phase="PostLevel" priority="5000" index="2"><![CDATA[~Set the list name
var list as number
list = field[xIndex].value * 5
field[listname].text = field[thingname].text & " " & list

      ~ If we're not shown, just get out now
      doneif (tagis[Helper.ShowSpec] = 0)
field[abValue].value += field[xCount].value * 5
field[livename].text = field[thingname].text & " " & field[abValue].value]]></eval>
    </thing>
  <thing id="cDrrSumSte" name="Summon Steed" description="Once per day, as a full round action, a dragonrider may magically call his steed to his side. This ability is the equivalent of a spell of a level equal to one third the dragonrider&apos;s level. The steed immediately appears adjacent to the dragonrider. A dragonrider can use this ability once per day at 4th level, and one additional time per day for every 4 levels thereafter, for a total of five times per day at 19th level." compset="ClSpecial">
    <tag group="AbilType" tag="SpellLike"/>
    <tag group="User" tag="Tracker"/>
    <tag group="Usage" tag="Day"/>
    <eval phase="PostLevel" priority="5000"><![CDATA[~Set the list name
field[listname].text = field[thingname].text & " " & field[xIndex].value & "/day"

      ~ If we're not shown, just get out now
      doneif (tagis[Helper.ShowSpec] = 0)
field[abValue].value += field[xCount].value
field[trkMax].value = field[abValue].value]]></eval>
    </thing>
  <thing id="cDrrDracTr" name="Draconic Training" description="The unique experience and training a dragonrider receives as part of his time with his bonded dragon steed grants him a bonus feat at 5th level. The feat must be selected from the list below, and the dragonrider must meet all the feat&apos;s prerequisites normally. The dragonrider gains an additional feat at 9th, 12th, and 17th level." compset="ClSpecial">
    <tag group="Helper" tag="SpecUp"/>
    </thing>
  <thing id="cDrrDarkvi" name="Darkvision" description="At 6th level, the senses of the dragonrider are again enhanced by his link to his dragon steed, granting him darkvision to a range of 60 feet. If the dragonrider already has natural darkvision, the range of that vision is increased by 60 feet." compset="ClSpecial">
    <tag group="AbilType" tag="Extra"/>
    <tag group="SpecType" tag="Sense"/>
    <eval phase="Final" priority="5000"><![CDATA[~ If we're not shown, just get out now
doneif (tagis[Helper.ShowSpec] = 0)

~ If we already have racial darkvision increase by 60ft
If (hero.childlives[raDarkVis] = 1) Then
   ~ Increase the racial ability by the amount set in other script
   hero.child[raDarkVis].field[abValue].value += 60
Else
   field[livename].text = field[thingname].text & " (60 feet)"
Endif]]></eval>
    </thing>
  <thing id="cDrrScent" name="Scent" description="At 10th level, the senses of the dragonrider are again enhanced by his link to his dragon steed, granting him the scent ability. For more information on the scent ability, see the Pathfinder Roleplaying Game Bestiary." compset="ClSpecial">
    <tag group="AbilType" tag="Extra"/>
    <tag group="Helper" tag="SpecUp"/>
    <bootstrap thing="xScent">
      <containerreq phase="First" priority="500"><![CDATA[count:Classes.Dragonrid >= 10]]></containerreq>
      </bootstrap>
    </thing>
  <thing id="cDrrBlinds" name="Blindsense" description="At 14th level, the senses of the dragonrider are again enhanced by his link to his dragon steed, granting him blindsense to a range of 15 feet. If the dragonrider already has natural blindsense, the range of this ability is increased by 15 feet." compset="ClSpecial">
    <tag group="AbilType" tag="Extra"/>
    <tag group="Helper" tag="SpecUp"/>
    <bootstrap thing="rBlindsen">
      <containerreq phase="First" priority="500"><![CDATA[count:Classes.Dragonrid >= 14]]></containerreq>
      </bootstrap>
    <eval phase="PostLevel" priority="10000"><![CDATA[~ If we're not shown, just get out now
doneif (tagis[Helper.ShowSpec] = 0)

hero.child[rBlindsen].field[abValue].value += 15]]></eval>
    </thing>
  <thing id="cDrrSR" name="Spell Resistance" description="Beginning at 16th level a dragonrider gains spell resistance. The SR is equal to 5 + the dragonrider&apos;s level, and is shared by the dragonrider&apos;s bonded dragon steed." compset="ClSpecial">
    <tag group="AbilType" tag="Super"/>
    <tag group="SpecType" tag="SR"/>
    <tag group="Helper" tag="SpecUp"/>
    <eval phase="PostLevel" priority="5000"><![CDATA[~ If we're not shown, just get out now
doneif (tagis[Helper.ShowSpec] = 0)

field[abValue].value += 5 + field[xAllLev].value
#applysr[field[abValue].value]]]></eval>
    </thing>
  <thing id="cDrrDragon" name="Dragonform" description="At 20th level the bond between a dragonrider and his dragon is so strong, the dragonrider can actually take the form of a dragon. This ability can be used once per day and acts as the spell {i}form of the dragon III{/i}, but the dragonrider may only take the form of the race of dragon that matches his bonded dragon steed.\n\n{b}Form of the Dragon III{/b}\nThis spell functions as form of the dragon II save that it also allows you to take the form of a Huge chromatic or metallic dragon. You gain the following abilities: a +10 size bonus to Strength, a +8 size bonus to Constitution, a +8 natural armor bonus, fly 120 feet (poor), blindsense 60 feet, darkvision 120 feet, a breath weapon, damage reduction 10/magic, frightful presence (DC equal to the DC for this spell), and immunity to one element (of the same type form of the dragon I grants resistance to). You also gain one bite (2d8), two claws (2d6), two wing attacks (1d8), and one tail slap attack (2d6). You can use the breath weapon as often as you like, but you must wait 1d4 rounds between uses. All breath weapons deal 12d8 points of damage and allow a Reflex save for half damage. Line breath weapons increase to 100-foot lines and cones increase to 50-foot cones." compset="ClSpecial">
    <fieldval field="trkMax" value="1"/>
    <fieldval field="actName" value="Form of the Dragon III"/>
    <tag group="AbilType" tag="SpellLike"/>
    <tag group="Usage" tag="Day"/>
    <tag group="User" tag="Activation"/>
    <tag group="User" tag="Tracker"/>
    <bootstrap thing="xImmAcid">
      <containerreq phase="First" priority="500">BloodEner.Acid</containerreq>
      </bootstrap>
    <bootstrap thing="xImmFire">
      <containerreq phase="First" priority="500">BloodEner.Fire</containerreq>
      </bootstrap>
    <bootstrap thing="xImmCold">
      <containerreq phase="First" priority="500">BloodEner.Cold</containerreq>
      </bootstrap>
    <bootstrap thing="xImmElec">
      <containerreq phase="First" priority="500">BloodEner.Elec</containerreq>
      </bootstrap>
    <bootstrap thing="wBite">
      <containerreq phase="First" priority="500"><![CDATA[      fieldval:abilActive <> 0]]></containerreq>
      <autotag group="wMain" tag="2d8_204"/>
      </bootstrap>
    <bootstrap thing="wClaw">
      <containerreq phase="First" priority="500"><![CDATA[      fieldval:abilActive <> 0]]></containerreq>
      <autotag group="wMain" tag="2d6_104"/>
      <autotag group="Value" tag="2"/>
      </bootstrap>
    <bootstrap thing="wWing">
      <containerreq phase="First" priority="500"><![CDATA[      fieldval:abilActive <> 0]]></containerreq>
      <autotag group="Value" tag="2"/>
      <autotag group="wMain" tag="1d8_6"/>
      </bootstrap>
    <bootstrap thing="wSlam">
      <containerreq phase="First" priority="500"><![CDATA[      fieldval:abilActive <> 0]]></containerreq>
      <autotag group="wMain" tag="2d6_104"/>
      <assignval field="livename" value="Tail Slap"/>
      </bootstrap>
    <bootstrap thing="raSgBreath">
      <containerreq phase="First" priority="500"><![CDATA[fieldval:abilActive <> 0]]></containerreq>
      </bootstrap>
    <eval phase="First" priority="20000"><![CDATA[
~ If we're not enabled, get out now
doneif (field[abilActive].value = 0)

~ Apply DR 10/magic to the hero
#applydr[xDamRdMag,10]

~ Set size to Huge regardless of previous size
field[abValue].value = 2 - herofield[tSize].value
herofield[tSize].value = 2

~ Increase the size of all our equipment by 1 apart from 
~ unarmed strike, which changes automatically
foreach pick in hero from MyGear where "!wCategory.Unarmed & !Helper.GearNoSize"
   eachpick.field[gSizeMod].value += field[abValue].value
   ~ Projectile weapons DO NOT do increase damage dice
   If (eachpick.tagis[wCategory.RangeProj] = 1) then
       perform eachpick.assign[Helper.DamageDown]
       perform eachpick.assign[Helper.DamageDown]
       If (field[abValue].value = 3) Then
           perform eachpick.assign[Helper.DamageDown]
       Endif
   Endif
nexteach

~change the size of our natural weapons
~foreach pick in hero from BaseNatWep where "!Helper.NatSizeDmg"
~   perform eachpick.assign[Helper.DamageUp]
~nexteach
      
~ Bonus to Str and Con
hero.child[aSTR].field[Bonus].value += 10
hero.child[aCON].field[Bonus].value += 8
~ Increase Natural AC by 3
hero.child[ArmorClass].field[tACNatural].value += 8
~ Give Fly speed
#applyvalue[xFly, 120]
~ Set fly speed to poor
perform hero.child[xFly].assign[Maneuver.Poor]
~ Set Blindsense distance of 45 so it adds to the existing 15 to get 
~ a total of 60
#applyvalue[rBlindsen, 45]]]></eval>
    </thing>
  <thing id="raSgBreath" name="Breath Weapon" description="Some creatures can exhale a cone, line, or cloud of energy or other magical effects. A breath weapon attack usually deals damage and is often based on some type of energy. Breath weapons allow a Reflex save for half damage (DC 10 + 1/2 the breathing creature&apos;s racial HD + the breathing creature&apos;s Con modifier; the exact DC is given in the creature&apos;s descriptive text). A creature is immune to its own breath weapon unless otherwise noted. Some breath weapons allow a Fortitude save or a Will save instead of a Reflex save. Each breath weapon also includes notes on how often it can be used, even if this number is limited in times per day." compset="RaceSpec">
    <usesource source="sggDragRid"/>
    <tag group="SpecType" tag="Attack" name="Attack" abbrev="Attack"/>
    <tag group="StandardDC" tag="aCON" name="Constitution" abbrev="Constitution"/>
    <tag group="Helper" tag="ShowSpec" name="ShowSpec" abbrev="ShowSpec"/>
    <eval phase="Final" priority="20000"><![CDATA[~ No custom values set then just get out now
doneif (field[abValue].value = 0)

var effect as string
var energy as string
If (field[abValue2].value = 1) then
   effect = " line of "
Else
   effect = " cone of "
Endif

energy = "(energy)"
if (root.tagcount[BloodEner.?] <> 0) then
   energy = root.tagnames[BloodEner.?]
endif

field[livename].text &= " (" & field[abValue].value & "-foot" & effect & energy & ")"]]></eval>
    </thing>
  <thing id="zSGDrrDrui" name="Dragonrider - Druid Multiclassing" description="For a dragonrider multiclassing into druid, sacrificing the druid’s animal companion ability increases the draconic steed’s level by a number equal to the character’s druid level -2, with a minimum of +1 draconic steed level." compset="Simple" uniqueness="unique">
    <usesource source="sggDragRid"/>
    <eval phase="First" priority="449">~ If no druid levels just get out
doneif (#levelcount[Druid] = 0)
~ If druid animal companion just get out
doneif (hero.childlives[cAnimComp] = 1)

~ Give a bonus to animal companion based on druid level - 2 min +1
hero.childfound[cDrrSteed].field[abValue].value += maximum(#levelcount[Druid] - 2,1)</eval>
    </thing>
  <thing id="minSteeRed" name="Dragon Steed, Red" description="The bonded dragon mount for the Dragonrider class.\n\nA dragonrider’s alignment must be within one step of his dragon steed (see Chapter Seven in the Pathfinder Roleplaying game for more information on alignment steps)." compset="Minion" stacking="never" uniqueness="useronce">
    <usesource source="sggDragRid"/>
    <tag group="gType" tag="Mounts" name="Mounts, Pets and Related Gear" abbrev="Mounts"/>
    <tag group="Helper" tag="NoPathSoc"/>
    <exprreq message="You must have at least one level in Dragonrider to take this mount."><![CDATA[#custspeciallevelcount[Dragonrid] <> 0]]></exprreq>
    <exprreq message="Wrong alignment to bond to this dragon.">tagis[Alignment.Good] + tagis[Alignment.Lawful] = 0</exprreq>
    <minion id="Mount">
      <tag group="Hero" tag="FixedRace" name="FixedRace" abbrev="FixedRace"/>
      <bootstrap thing="rSGDrrRed"></bootstrap>
      </minion>
    </thing>
  <thing id="rSGDrrRed" name="Dragon Steed, Red" description="This is the Dragonrider class dragon steed mount." compset="Race" uniqueness="unique">
    <fieldval field="rAC" value="6"/>
    <fieldval field="rSTR" value="7"/>
    <fieldval field="rDEX" value="4"/>
    <fieldval field="rCON" value="5"/>
    <fieldval field="rWIS" value="1"/>
    <fieldval field="rSpeed" value="40"/>
    <usesource source="sggDragRid"/>
    <tag group="RaceType" tag="Animal"/>
    <tag group="BloodEner" tag="Fire" name="Fire"/>
    <tag group="RaceSize" tag="Large1"/>
    <tag group="HasType" tag="tpSgDragon"/>
    <tag group="Alignment" tag="Chaotic"/>
    <tag group="Alignment" tag="Evil"/>
    <tag group="Helper" tag="NoPathSoc"/>
    <tag group="Helper" tag="Quadruped"/>
    <tag group="Helper" tag="NotHum"/>
    <tag group="SlotSet" tag="selMISQuaC"/>
    <bootstrap thing="cBonusHD"></bootstrap>
    <bootstrap thing="cBonusHD">
      <containerreq phase="First" priority="500"><![CDATA[fieldval:anCompLev >= 2]]></containerreq>
      </bootstrap>
    <bootstrap thing="cBonusHD">
      <containerreq phase="First" priority="500"><![CDATA[fieldval:anCompLev >= 4]]></containerreq>
      </bootstrap>
    <bootstrap thing="cBonusHD">
      <containerreq phase="First" priority="500"><![CDATA[fieldval:anCompLev >= 5]]></containerreq>
      </bootstrap>
    <bootstrap thing="cBonusHD">
      <containerreq phase="First" priority="500"><![CDATA[fieldval:anCompLev >= 6]]></containerreq>
      </bootstrap>
    <bootstrap thing="cBonusHD">
      <containerreq phase="First" priority="500"><![CDATA[fieldval:anCompLev >= 8]]></containerreq>
      </bootstrap>
    <bootstrap thing="cBonusHD">
      <containerreq phase="First" priority="500"><![CDATA[fieldval:anCompLev >= 9]]></containerreq>
      </bootstrap>
    <bootstrap thing="cBonusHD">
      <containerreq phase="First" priority="500"><![CDATA[fieldval:anCompLev >= 10]]></containerreq>
      </bootstrap>
    <bootstrap thing="cBonusHD">
      <containerreq phase="First" priority="500"><![CDATA[fieldval:anCompLev >= 12]]></containerreq>
      </bootstrap>
    <bootstrap thing="cBonusHD">
      <containerreq phase="First" priority="500"><![CDATA[fieldval:anCompLev >= 13]]></containerreq>
      </bootstrap>
    <bootstrap thing="cBonusHD">
      <containerreq phase="First" priority="500"><![CDATA[fieldval:anCompLev >= 14]]></containerreq>
      </bootstrap>
    <bootstrap thing="cBonusHD">
      <containerreq phase="First" priority="500"><![CDATA[fieldval:anCompLev >= 16]]></containerreq>
      </bootstrap>
    <bootstrap thing="cBonusHD">
      <containerreq phase="First" priority="500"><![CDATA[fieldval:anCompLev >= 17]]></containerreq>
      </bootstrap>
    <bootstrap thing="cBonusHD">
      <containerreq phase="First" priority="500"><![CDATA[fieldval:anCompLev >= 18]]></containerreq>
      </bootstrap>
    <bootstrap thing="cBonusHD">
      <containerreq phase="First" priority="500"><![CDATA[fieldval:anCompLev >= 20]]></containerreq>
      </bootstrap>
    <bootstrap thing="zSggDrrInt"></bootstrap>
    <bootstrap thing="zSggDrrNat"></bootstrap>
    <bootstrap thing="zSggDrrStr"></bootstrap>
    <bootstrap thing="raSgSteedB">
      <autotag group="Custom" tag="sggCone"/>
      </bootstrap>
    <bootstrap thing="raSgDrFocu"></bootstrap>
    <bootstrap thing="raSgLink"></bootstrap>
    <bootstrap thing="raSgSharSp">
      <containerreq phase="First" priority="500"><![CDATA[fieldval:anCompLev >= 2]]></containerreq>
      </bootstrap>
    <bootstrap thing="raSgEvasio">
      <containerreq phase="First" priority="500"><![CDATA[fieldval:anCompLev >= 3]]></containerreq>
      </bootstrap>
    <bootstrap thing="raSgDevoti">
      <containerreq phase="First" priority="500"><![CDATA[fieldval:anCompLev >= 6]]></containerreq>
      </bootstrap>
    <bootstrap thing="fMultiAtt">
      <containerreq phase="First" priority="500"><![CDATA[fieldval:anCompLev >= 11]]></containerreq>
      </bootstrap>
    <bootstrap thing="xFly">
      <autotag group="Maneuver" tag="Clumsy"/>
      <autotag group="Value" tag="30"/>
      </bootstrap>
    <bootstrap thing="wBite">
      <autotag group="wMain" tag="1d6_5"/>
      <autotag group="Helper" tag="NatSizeDmg"/>
      </bootstrap>
    <bootstrap thing="wClaw">
      <autotag group="wMain" tag="1d4_4"/>
      <autotag group="Value" tag="2"/>
      <autotag group="Helper" tag="NatSizeDmg"/>
      </bootstrap>
    <bootstrap thing="xImmFire"></bootstrap>
    <bootstrap thing="raSgImpEva">
      <containerreq phase="First" priority="500"><![CDATA[fieldval:anCompLev >= 16]]></containerreq>
      </bootstrap>
    <bootstrap thing="raSgIncine">
      <containerreq phase="First" priority="500"><![CDATA[fieldval:anCompLev >= 8]]></containerreq>
      </bootstrap>
    <bootstrap thing="raSgFirAur">
      <containerreq phase="First" priority="500"><![CDATA[fieldval:anCompLev >= 16]]></containerreq>
      </bootstrap>
    <bootstrap thing="cBonusHD"></bootstrap>
    <eval phase="PostAttr" priority="500" index="3">~ Calculate the Dragon steeds skill points
#resmax[resSkill] += (hero.child[tpSgDragon].field[tpSkillPts].value + hero.child[aINT].field[aModBonus].value) * #totallevelcount[]</eval>
    <eval phase="First" priority="500" index="2"><![CDATA[~Set focus 1 Full, 2 Standard, 3 Move, 4 Swift, 5 Free
#value[raSgDrFocu] = 2
~ Set Steed Natural Armor
#value[zSggDrrNat] = field[anCompLev].value
~ Set Steed Str/Con bonus
#value[zSggDrrStr] = field[anCompLev].value
~ Set Steed Int/Cha bonus
#value[zSggDrrInt] = field[anCompLev].value

~ Set Form of the Dragon Breath weapon on PC
If (master.childlives[raSgBreath] <> 0) then
   perform pulltags[BloodEner.?]
   perform master.child[raSgBreath].pushtags[BloodEner.?]
   ~ Set length of breath
   master.child[raSgBreath].field[abValue].value = 100
   ~ Set Type: Line=1,Cone=0
   master.child[raSgBreath].field[abValue2].value = 1
Endif

~ Set Dragons breath weapon
perform pulltags[BloodEner.?]
perform hero.child[raSgSteedB].pushtags[BloodEner.?]
~ Set length of breath
hero.child[raSgSteedB].field[abValue].value = 30
~ Set die size
hero.child[raSgSteedB].field[abValue3].value = 8
~ Set Companion Level
hero.child[raSgSteedB].field[abValue4].value = field[anCompLev].value

~ Give SR at 16th level
~If (field[anCompLev].value >= 16) then
~   #applysr[field[anCompLev].value+5]
~Endif

~ Set natural armor bonus for this dragon
~hero.child[ArmorClass].field[tACNatural].value += 3

~ 8th level improvments
If (field[anCompLev].value >= 8) then
   herofield[tSize].value += 1
   #applydr[xDamRdMag,5]
   #applyvalue[xFly,40]
   #applyvalue[raDarkVis,120]
   #value[raSgDrFocu] += 1
Endif
~ 16th level improvments
If (field[anCompLev].value >= 16) then
   herofield[tSize].value += 1
   #applydr[xDamRdMag,10]
   #applyvalue[xFly,50]
   ~#applyvalue[xSwim,50]
   #value[raSgDrFocu] += 1
Endif]]></eval>
    <eval phase="First" priority="490"><![CDATA[~ Set animal companion level based off the Steed Class ability
~ this is so the bootstrap Bonus HD work correctly.
field[anCompLev].value += master.hero.child[cDrrSteed].field[abValue].value

~ Push energy type tag to hero level
perform pulltags[BloodEner.?]
perform hero.pushtags[BloodEner.?]

~ Set Form of the Dragon Breath weapon on PC
If (master.childlives[cDrrDragon] <> 0) then
   perform master.child[cDrrDragon].pushtags[BloodEner.?]   
Endif]]></eval>
    </thing>
  <thing id="raSgSteedB" name="Breath Weapon" description="Every steed deals one kind of damage, and has either a line or a cone. Each breath weapon allows a Reflex save for half damage, the save DC for a dragon steed’s breath weapon is 10 + one-half steed’s hit dice + steed’s Constitution modifier. A dragon steed may use its breath weapon once every four rounds, not to exceed a total number of uses per day equal to 3 + the steed’s Constitution modifier.\n\nAs the dragon steed gains HD, it’s breath weapon deals more dice of damage and gains additional range." compset="RaceSpec">
    <usesource source="sggDragRid"/>
    <tag group="SpecType" tag="Attack" name="Attack" abbrev="Attack"/>
    <tag group="StandardDC" tag="aCON" name="Constitution" abbrev="Constitution"/>
    <tag group="Usage" tag="Day"/>
    <tag group="User" tag="Tracker"/>
    <tag group="Helper" tag="ShowSpec" name="ShowSpec" abbrev="ShowSpec"/>
    <eval phase="PostAttr" index="2">field[trkMax].value += 3 + hero.child[aCON].field[aModBonus].value</eval>
    <eval phase="Final" priority="20000"><![CDATA[~ No custom values set then just get out now
doneif (field[abValue].value = 0)

var effect as string
var energy as string
var sDice as string
var nDice as number
var breath as number

breath = field[abValue].value
nDice = 1

If (field[abValue4].value >= 2) Then
   breath = field[abValue].value * 2
Endif
If (field[abValue4].value >= 3) Then
   nDice = 2
Endif
If (field[abValue4].value >= 5) Then
   nDice = 3
Endif
If (field[abValue4].value >= 7) Then
   breath = field[abValue].value * 3
Endif
If (field[abValue4].value >= 8) Then
   nDice = 4
Endif
If (field[abValue4].value >= 10) Then
   nDice = 5
Endif
If (field[abValue4].value >= 12) Then
   breath = field[abValue].value * 4
Endif
If (field[abValue4].value >= 13) Then
   nDice = 6
Endif
If (field[abValue4].value >= 15) Then
   nDice = 7
Endif
If (field[abValue4].value >= 17) Then
   breath = field[abValue].value * 5
Endif
If (field[abValue4].value >= 18) Then
   nDice = 8
Endif
If (field[abValue4].value >= 20) Then
   nDice = 9
Endif

sDice =  nDice & "d" & field[abValue3].value

If (tagis[Custom.sggLine] <> 0) then
   effect = " line of "
ElseIf (tagis[Custom.sggCone] <> 0) then
   effect = " cone of "
Endif

energy = "(energy)"
if (root.tagcount[BloodEner.?] <> 0) then
   energy = root.tagnames[BloodEner.?]
endif

field[livename].text &= " (" & breath & "-ft" & effect & energy & ", " & sDice & ")"]]></eval>
    </thing>
  <thing id="raSgLink" name="Link" description="A dragonrider and his bonded dragon steed always know the direction to each other, and are aware of any conditions the other is suffering." compset="RaceSpec">
    <usesource source="sggDragRid"/>
    <tag group="AbilType" tag="Extra"/>
    <tag group="Helper" tag="ShowSpec"/>
    </thing>
  <thing id="raSgSharSp" name="Share Spells" description="The dragonrider may cast a spell with a target of &quot;You&quot; on his dragon steed (as a spell with a range of touch) instead of on himself. A dragonrider may cast spells on his dragon steed even if the spells normally do not affect creatures of the steed’s type (dragon). Spells cast in this way must come from a class that grants a dragon steed. This ability does not allow the steed to share abilities that are not spells, even if they function like spells." compset="RaceSpec">
    <usesource source="sggDragRid"/>
    <tag group="AbilType" tag="Extra"/>
    <tag group="Helper" tag="ShowSpec"/>
    </thing>
  <thing id="raSgEvasio" name="Evasion" description="When subjected to an attack that normally allows a Reflex save for half damage, a dragon steed takes no damage if it makes a successful saving throw." compset="RaceSpec">
    <usesource source="sggDragRid"/>
    <tag group="AbilType" tag="Extra"/>
    <tag group="Helper" tag="ShowSpec"/>
    </thing>
  <thing id="raSgDevoti" name="Devotion" description="A dragon steed gains a +4 morale bonus on Will saves against enchantment spells and effects" compset="RaceSpec">
    <usesource source="sggDragRid"/>
    <tag group="AbilType" tag="Extra"/>
    <tag group="Helper" tag="ShowSpec"/>
    </thing>
  <thing id="raSgImpEva" name="Improved Evasion" description="When subjected to an attack that allows a Reflex saving throw for half damage, a dragon steed takes no damage if it makes a successful saving throw and only half damage if the saving throw fails." compset="RaceSpec">
    <usesource source="sggDragRid"/>
    <tag group="AbilType" tag="Extra"/>
    <tag group="Helper" tag="ShowSpec"/>
    </thing>
  <thing id="raSgIncine" name="Incinerate" description="A red dragon can incinerate creatures in its fiery breath. A creature reduced to fewer than 0 hit points by its breath weapon must make a Fortitude save (using the breath weapon&apos;s DC). Failure indicates that the creature is reduced to ash. Creatures destroyed in this way can only be restored to life through true resurrection or similar magic." compset="RaceSpec">
    <usesource source="sggDragRid"/>
    <tag group="SpecType" tag="Attack" name="Attack" abbrev="Attack"/>
    <tag group="StandardDC" tag="aCON" name="Constitution" abbrev="Constitution"/>
    <tag group="Helper" tag="ShowSpec" name="ShowSpec" abbrev="ShowSpec"/>
    <tag group="AbilType" tag="Super"/>
    </thing>
  <thing id="raSgFirAur" name="Fire Aura(1d6)" description="An red dragon is surrounded by an aura of intense heat. All creatures within 5 feet take 1d6 points of fire damage at the beginning of the dragon&apos;s turn." compset="RaceSpec">
    <usesource source="sggDragRid"/>
    <tag group="SpecType" tag="Attack" name="Attack" abbrev="Attack"/>
    <tag group="StandardDC" tag="aCON" name="Constitution" abbrev="Constitution"/>
    <tag group="Helper" tag="ShowSpec" name="ShowSpec" abbrev="ShowSpec"/>
    <tag group="AbilType" tag="Super"/>
    </thing>
  <thing id="cHelpDRR" name="Dragonrider" compset="Class" uniqueness="unique">
    <fieldval field="cHDSides" value="10"/>
    <fieldval field="cAbbr" value="DRR"/>
    <fieldval field="cSkills" value="2"/>
    <fieldval field="cSplMaxLvl" value="4"/>
    <arrayval field="cCastTot" index="4" value="99"/>
    <arrayval field="cCastTot" index="4" column="1" value="1"/>
    <arrayval field="cCastTot" index="5" value="99"/>
    <arrayval field="cCastTot" index="5" column="1" value="1"/>
    <arrayval field="cCastTot" index="6" value="99"/>
    <arrayval field="cCastTot" index="6" column="1" value="1"/>
    <arrayval field="cCastTot" index="7" value="99"/>
    <arrayval field="cCastTot" index="7" column="1" value="1"/>
    <arrayval field="cCastTot" index="7" column="2" value="1"/>
    <arrayval field="cCastTot" index="8" value="99"/>
    <arrayval field="cCastTot" index="8" column="1" value="2"/>
    <arrayval field="cCastTot" index="8" column="2" value="1"/>
    <arrayval field="cCastTot" index="9" value="99"/>
    <arrayval field="cCastTot" index="9" column="1" value="2"/>
    <arrayval field="cCastTot" index="9" column="2" value="1"/>
    <arrayval field="cCastTot" index="10" value="99"/>
    <arrayval field="cCastTot" index="10" column="1" value="2"/>
    <arrayval field="cCastTot" index="10" column="2" value="1"/>
    <arrayval field="cCastTot" index="10" column="3" value="1"/>
    <arrayval field="cCastTot" index="11" value="99"/>
    <arrayval field="cCastTot" index="11" column="1" value="2"/>
    <arrayval field="cCastTot" index="11" column="2" value="2"/>
    <arrayval field="cCastTot" index="11" column="3" value="1"/>
    <arrayval field="cCastTot" index="12" value="99"/>
    <arrayval field="cCastTot" index="12" column="1" value="3"/>
    <arrayval field="cCastTot" index="12" column="2" value="2"/>
    <arrayval field="cCastTot" index="12" column="3" value="1"/>
    <arrayval field="cCastTot" index="13" value="99"/>
    <arrayval field="cCastTot" index="13" column="1" value="3"/>
    <arrayval field="cCastTot" index="13" column="2" value="2"/>
    <arrayval field="cCastTot" index="13" column="3" value="1"/>
    <arrayval field="cCastTot" index="13" column="4" value="1"/>
    <arrayval field="cCastTot" index="14" value="99"/>
    <arrayval field="cCastTot" index="14" column="1" value="3"/>
    <arrayval field="cCastTot" index="14" column="2" value="2"/>
    <arrayval field="cCastTot" index="14" column="3" value="1"/>
    <arrayval field="cCastTot" index="14" column="4" value="1"/>
    <arrayval field="cCastTot" index="15" value="99"/>
    <arrayval field="cCastTot" index="15" column="1" value="3"/>
    <arrayval field="cCastTot" index="15" column="2" value="3"/>
    <arrayval field="cCastTot" index="15" column="3" value="2"/>
    <arrayval field="cCastTot" index="15" column="4" value="1"/>
    <arrayval field="cCastTot" index="16" value="99"/>
    <arrayval field="cCastTot" index="16" column="1" value="4"/>
    <arrayval field="cCastTot" index="16" column="2" value="3"/>
    <arrayval field="cCastTot" index="16" column="3" value="2"/>
    <arrayval field="cCastTot" index="16" column="4" value="1"/>
    <arrayval field="cCastTot" index="17" value="99"/>
    <arrayval field="cCastTot" index="17" column="1" value="4"/>
    <arrayval field="cCastTot" index="17" column="2" value="3"/>
    <arrayval field="cCastTot" index="17" column="3" value="2"/>
    <arrayval field="cCastTot" index="17" column="4" value="2"/>
    <arrayval field="cCastTot" index="18" value="99"/>
    <arrayval field="cCastTot" index="18" column="1" value="4"/>
    <arrayval field="cCastTot" index="18" column="2" value="3"/>
    <arrayval field="cCastTot" index="18" column="3" value="3"/>
    <arrayval field="cCastTot" index="18" column="4" value="2"/>
    <arrayval field="cCastTot" index="19" value="99"/>
    <arrayval field="cCastTot" index="19" column="1" value="4"/>
    <arrayval field="cCastTot" index="19" column="2" value="4"/>
    <arrayval field="cCastTot" index="19" column="3" value="3"/>
    <arrayval field="cCastTot" index="19" column="4" value="2"/>
    <arrayval field="cKnowTot" index="4" value="4"/>
    <arrayval field="cKnowTot" index="4" column="1" value="2"/>
    <arrayval field="cKnowTot" index="5" value="4"/>
    <arrayval field="cKnowTot" index="5" column="1" value="2"/>
    <arrayval field="cKnowTot" index="6" value="5"/>
    <arrayval field="cKnowTot" index="6" column="1" value="2"/>
    <arrayval field="cKnowTot" index="7" value="5"/>
    <arrayval field="cKnowTot" index="7" column="1" value="2"/>
    <arrayval field="cKnowTot" index="7" column="2" value="2"/>
    <arrayval field="cKnowTot" index="8" value="5"/>
    <arrayval field="cKnowTot" index="8" column="1" value="3"/>
    <arrayval field="cKnowTot" index="8" column="2" value="2"/>
    <arrayval field="cKnowTot" index="9" value="5"/>
    <arrayval field="cKnowTot" index="9" column="1" value="3"/>
    <arrayval field="cKnowTot" index="9" column="2" value="2"/>
    <arrayval field="cKnowTot" index="10" value="6"/>
    <arrayval field="cKnowTot" index="10" column="1" value="3"/>
    <arrayval field="cKnowTot" index="10" column="2" value="2"/>
    <arrayval field="cKnowTot" index="10" column="3" value="2"/>
    <arrayval field="cKnowTot" index="11" value="6"/>
    <arrayval field="cKnowTot" index="11" column="1" value="3"/>
    <arrayval field="cKnowTot" index="11" column="2" value="3"/>
    <arrayval field="cKnowTot" index="11" column="3" value="2"/>
    <arrayval field="cKnowTot" index="12" value="6"/>
    <arrayval field="cKnowTot" index="12" column="1" value="4"/>
    <arrayval field="cKnowTot" index="12" column="2" value="3"/>
    <arrayval field="cKnowTot" index="12" column="3" value="2"/>
    <arrayval field="cKnowTot" index="13" value="6"/>
    <arrayval field="cKnowTot" index="13" column="1" value="4"/>
    <arrayval field="cKnowTot" index="13" column="2" value="3"/>
    <arrayval field="cKnowTot" index="13" column="3" value="2"/>
    <arrayval field="cKnowTot" index="13" column="4" value="2"/>
    <arrayval field="cKnowTot" index="14" value="7"/>
    <arrayval field="cKnowTot" index="14" column="1" value="4"/>
    <arrayval field="cKnowTot" index="14" column="2" value="3"/>
    <arrayval field="cKnowTot" index="14" column="3" value="3"/>
    <arrayval field="cKnowTot" index="14" column="4" value="2"/>
    <arrayval field="cKnowTot" index="15" value="7"/>
    <arrayval field="cKnowTot" index="15" column="1" value="4"/>
    <arrayval field="cKnowTot" index="15" column="2" value="4"/>
    <arrayval field="cKnowTot" index="15" column="3" value="3"/>
    <arrayval field="cKnowTot" index="15" column="4" value="2"/>
    <arrayval field="cKnowTot" index="16" value="7"/>
    <arrayval field="cKnowTot" index="16" column="1" value="5"/>
    <arrayval field="cKnowTot" index="16" column="2" value="4"/>
    <arrayval field="cKnowTot" index="16" column="3" value="3"/>
    <arrayval field="cKnowTot" index="16" column="4" value="2"/>
    <arrayval field="cKnowTot" index="17" value="7"/>
    <arrayval field="cKnowTot" index="17" column="1" value="5"/>
    <arrayval field="cKnowTot" index="17" column="2" value="4"/>
    <arrayval field="cKnowTot" index="17" column="3" value="3"/>
    <arrayval field="cKnowTot" index="17" column="4" value="3"/>
    <arrayval field="cKnowTot" index="18" value="8"/>
    <arrayval field="cKnowTot" index="18" column="1" value="5"/>
    <arrayval field="cKnowTot" index="18" column="2" value="4"/>
    <arrayval field="cKnowTot" index="18" column="3" value="4"/>
    <arrayval field="cKnowTot" index="18" column="4" value="3"/>
    <arrayval field="cKnowTot" index="19" value="8"/>
    <arrayval field="cKnowTot" index="19" column="1" value="5"/>
    <arrayval field="cKnowTot" index="19" column="2" value="5"/>
    <arrayval field="cKnowTot" index="19" column="3" value="4"/>
    <arrayval field="cKnowTot" index="19" column="4" value="3"/>
    <arrayval field="cBonFtTot" index="4" value="1"/>
    <arrayval field="cBonFtTot" index="8" value="2"/>
    <arrayval field="cBonFtTot" index="11" value="3"/>
    <arrayval field="cBonFtTot" index="17" value="4"/>
    <usesource source="sggDragRid" parent="pSGG" name="Dragonrider"/>
    <tag group="cWill" tag="Good"/>
    <tag group="Classes" tag="Dragonrid" name="Dragonrider"/>
    <tag group="cAttack" tag="Good"/>
    <tag group="cFort" tag="Good"/>
    <tag group="ClassSkill" tag="Craft"/>
    <tag group="ClassSkill" tag="Profession"/>
    <tag group="ClassSkill" tag="skClimb"/>
    <tag group="ClassSkill" tag="skDiplo"/>
    <tag group="ClassSkill" tag="skFly"/>
    <tag group="ClassSkill" tag="skHandleAn"/>
    <tag group="ClassSkill" tag="skIntim"/>
    <tag group="ClassSkill" tag="skKnowArca"/>
    <tag group="ClassSkill" tag="skKnowGeog"/>
    <tag group="ClassSkill" tag="skPercep"/>
    <tag group="ClassSkill" tag="skRide"/>
    <tag group="ClassSkill" tag="skSpellcr"/>
    <tag group="CastInfini" tag="0"/>
    <tag group="CasterType" tag="SpontKnow"/>
    <tag group="cRef" tag="Good"/>
    <tag group="sClass" tag="cHelpWiz"/>
    <tag group="CasterSrc" tag="Arcane"/>
    <tag group="CastArmor" tag="Light"/>
    <tag group="fInclude" tag="fAlertness"/>
    <tag group="fInclude" tag="fAnimAff"/>
    <tag group="fInclude" tag="fArcArmMas"/>
    <tag group="fInclude" tag="fArcArmTra"/>
    <tag group="fInclude" tag="fArcStrike"/>
    <tag group="fInclude" tag="fArmMedium"/>
    <tag group="fInclude" tag="fBlindFgt"/>
    <tag group="fInclude" tag="fComCast"/>
    <tag group="fInclude" tag="fComExpert"/>
    <tag group="fInclude" tag="fDazzDisp"/>
    <tag group="fInclude" tag="fDiehard"/>
    <tag group="fInclude" tag="fEndure"/>
    <tag group="fInclude" tag="fEschewMat"/>
    <tag group="fInclude" tag="fGreatFort"/>
    <tag group="fInclude" tag="fImpGrtFor"/>
    <tag group="fInclude" tag="fImpIronWi"/>
    <tag group="fInclude" tag="fImpLgtRef"/>
    <tag group="fInclude" tag="fIntProw"/>
    <tag group="fInclude" tag="fIronWill"/>
    <tag group="fInclude" tag="fLeader"/>
    <tag group="fInclude" tag="fLightRef"/>
    <tag group="fInclude" tag="fMountArc"/>
    <tag group="fInclude" tag="fMountCom"/>
    <tag group="fInclude" tag="fPersuas"/>
    <tag group="fInclude" tag="fRideBy"/>
    <tag group="fInclude" tag="fSpirChar"/>
    <tag group="fInclude" tag="fToughness"/>
    <tag group="fInclude" tag="fWepFoc"/>
    <tag group="Helper" tag="NoPathSoc"/>
    <bootstrap thing="cDrrResEne">
      <autotag group="ClSpecWhen" tag="18"/>
      </bootstrap>
    <bootstrap thing="cDrrSumSte">
      <autotag group="ClSpecWhen" tag="4"/>
      </bootstrap>
    <bootstrap thing="cDrrSumSte">
      <autotag group="ClSpecWhen" tag="7"/>
      </bootstrap>
    <bootstrap thing="cDrrSumSte">
      <autotag group="ClSpecWhen" tag="11"/>
      </bootstrap>
    <bootstrap thing="cDrrSumSte">
      <autotag group="ClSpecWhen" tag="15"/>
      </bootstrap>
    <bootstrap thing="cDrrSumSte">
      <autotag group="ClSpecWhen" tag="19"/>
      </bootstrap>
    <bootstrap thing="cDrrDracTr">
      <autotag group="ClSpecWhen" tag="5"/>
      </bootstrap>
    <bootstrap thing="cDrrDracTr">
      <autotag group="ClSpecWhen" tag="12"/>
      </bootstrap>
    <bootstrap thing="cDrrDracTr">
      <autotag group="ClSpecWhen" tag="17"/>
      </bootstrap>
    <bootstrap thing="cDrrMartWe">
      <autotag group="ClSpecWhen" tag="1"/>
      </bootstrap>
    <bootstrap thing="cDrrSteed">
      <autotag group="ClSpecWhen" tag="1"/>
      </bootstrap>
    <bootstrap thing="fSimple"></bootstrap>
    <bootstrap thing="fArmLight"></bootstrap>
    <bootstrap thing="fArmShield"></bootstrap>
    <bootstrap thing="cAnimClass"></bootstrap>
    <bootstrap thing="cDrrLink">
      <autotag group="ClSpecWhen" tag="1"/>
      </bootstrap>
    <bootstrap thing="cDrrLowLig">
      <autotag group="ClSpecWhen" tag="2"/>
      </bootstrap>
    <bootstrap thing="cDrrResEne">
      <autotag group="ClSpecWhen" tag="3"/>
      </bootstrap>
    <bootstrap thing="cDrrResEne">
      <autotag group="ClSpecWhen" tag="8"/>
      </bootstrap>
    <bootstrap thing="cDrrDarkvi">
      <autotag group="ClSpecWhen" tag="6"/>
      </bootstrap>
    <bootstrap thing="cDrrScent">
      <autotag group="ClSpecWhen" tag="10"/>
      </bootstrap>
    <bootstrap thing="cDrrBlinds">
      <autotag group="ClSpecWhen" tag="14"/>
      </bootstrap>
    <bootstrap thing="cDrrSR">
      <autotag group="ClSpecWhen" tag="16"/>
      </bootstrap>
    <bootstrap thing="cDrrDragon">
      <autotag group="ClSpecWhen" tag="20"/>
      </bootstrap>
    <bootstrap thing="cDrrResEne">
      <autotag group="ClSpecWhen" tag="13"/>
      </bootstrap>
    <bootstrap thing="zSGDrrDrui"></bootstrap>
    <bootstrap thing="zSGDrrCava"></bootstrap>
    <bootstrap thing="zSGDrrPala"></bootstrap>
    <bootstrap thing="zSGDrrRang"></bootstrap>
    <bootstrap thing="zSGDrrSorc"></bootstrap>
    <bootstrap thing="zSGDrrWiza"></bootstrap>
    <link linkage="maxsplattr" thing="aCHA"/>
    <link linkage="spellattr" thing="aCHA"/>
    </thing>
  <thing id="zSGDrrCava" name="Dragonrider - Cavalier Multiclassing" description="For a dragonrider multiclassing into cavalier, sacrificing the cavalier’s mount ability increases the draconic steed’s level by a number equal to the character’s cavalier level -2, with a minimum of +1 draconic steed level." compset="Simple" uniqueness="unique">
    <usesource source="sggDragRid"/>
    <eval phase="First" priority="449">~ If no druid levels just get out
doneif (#levelcount[Cavalier] = 0)
~ If Cavalier animal companion just get out
doneif (hero.childlives[cAnimComp] = 1)

~ Give a bonus to animal companion based on Cavalier level - 2 min +1
hero.childfound[cDrrSteed].field[abValue].value += maximum(#levelcount[Cavalier] - 2,1)</eval>
    </thing>
  <thing id="zSGDrrPala" name="Dragonrider - Paladin Multiclassing" description="For a dragonrider multiclassing into paladin, sacrificing the paladin’s divine bond ability increases the draconic steed’s level by a number equal to half the character’s paladin level, with a minimum of +1 draconic steed level." compset="Simple" uniqueness="unique">
    <usesource source="sggDragRid"/>
    <eval phase="First" priority="449"><![CDATA[~ If Paladin levels less then 5 just get out
doneif (#levelcount[Paladin] < 5)
~ If Paladin animal companion just get out
doneif (hero.childlives[cAnimComp] = 1)

~ Give a bonus to animal companion based on Paladin level - 2 min +1
hero.childfound[cDrrSteed].field[abValue].value += maximum(#levelcount[Paladin] - 2,1)]]></eval>
    </thing>
  <thing id="zSGDrrRang" name="Dragonrider - Ranger Multiclassing" description="For a dragonrider multiclassing into ranger, sacrificing the ranger’s divine bond ability increases the draconic steed’s level by a number equal to half the character’s ranger level, with a minimum of +1 draconic steed level." compset="Simple" uniqueness="unique">
    <usesource source="sggDragRid"/>
    <eval phase="First" priority="449"><![CDATA[~ If Ranger levels less then 4 just get out
doneif (#levelcount[Ranger] < 4)
~ If Paladin animal companion just get out
doneif (hero.childlives[cAnimComp] = 1)

~ Give a bonus to animal companion based on Ranger level - 2 min +1
hero.childfound[cDrrSteed].field[abValue].value += maximum(#levelcount[Ranger] - 2,1)]]></eval>
    </thing>
  <thing id="zSGDrrSorc" name="Dragonrider - Sorcerer Multiclassing" description="For a dragonrider multiclassing into wizard (or arcane bloodline sorcerers), sacrificing the arcane bond ability increases the draconic steed’s level by a number equal to the character’s wizard (or sorcerer) level -2, with a minimum of +1 draconic steed level." compset="Simple" uniqueness="unique">
    <usesource source="sggDragRid"/>
    <eval phase="First" priority="449">~ If Sorcerer levels 0 just get out
doneif (#levelcount[Sorcerer] = 0)
~ If not Sorcerer Arcane Bloodline just get out
doneif (hero.childlives[cSorArcane] = 0)
~ If Sorcerer animal companion just get out
doneif (hero.childlives[cArcFClass] = 1)

~ Give a bonus to animal companion based on Ranger level - 2 min +1
hero.childfound[cDrrSteed].field[abValue].value += maximum(#levelcount[Sorcerer] - 2,1)</eval>
    </thing>
  <thing id="zSGDrrWiza" name="Dragonrider - Wizard Multiclassing" description="For a dragonrider multiclassing into wizard (or arcane bloodline sorcerers), sacrificing the arcane bond ability increases the draconic steed’s level by a number equal to the character’s wizard (or sorcerer) level -2, with a minimum of +1 draconic steed level." compset="Simple" uniqueness="unique">
    <usesource source="sggDragRid"/>
    <eval phase="First" priority="449">~ If Wizard levels 0 just get out
doneif (#levelcount[Wizard] = 0)
~ If no Wizard Familiar Bond just get out
doneif (hero.childlives[cWizFam] = 0)
~ If Wizard animal companion just get out
doneif (hero.childlives[cArcFClass] = 1)
~ Give a bonus to animal companion based on Wizard level - 2 min +1
hero.childfound[cDrrSteed].field[abValue].value += maximum(#levelcount[Wizard] - 2,1)</eval>
    </thing>
  <thing id="minSteeBla" name="Dragon Steed, Black" description="The bonded dragon mount for the Dragonrider class.\n\nA dragonrider’s alignment must be within one step of his dragon steed (see Chapter Seven in the Pathfinder Roleplaying game for more information on alignment steps)." compset="Minion" stacking="never" uniqueness="useronce">
    <usesource source="sggDragRid"/>
    <tag group="gType" tag="Mounts" name="Mounts, Pets and Related Gear" abbrev="Mounts"/>
    <tag group="Helper" tag="NoPathSoc"/>
    <exprreq message="You must have at least one level in Dragonrider to take this mount."><![CDATA[#custspeciallevelcount[Dragonrid] <> 0]]></exprreq>
    <exprreq message="Wrong alignment to bond to this dragon.">tagis[Alignment.Good] + tagis[Alignment.Lawful] = 0</exprreq>
    <minion id="Mount">
      <tag group="Hero" tag="FixedRace" name="FixedRace" abbrev="FixedRace"/>
      <bootstrap thing="rSGDrrBlck"></bootstrap>
      </minion>
    </thing>
  <thing id="rSGDrrBlck" name="Dragon Steed, Black" description="This is the Dragonrider class dragon steed mount." compset="Race" uniqueness="unique">
    <fieldval field="rAC" value="3"/>
    <fieldval field="rSTR" value="1"/>
    <fieldval field="rDEX" value="6"/>
    <fieldval field="rCON" value="3"/>
    <fieldval field="rWIS" value="1"/>
    <fieldval field="rSpeed" value="50"/>
    <fieldval field="rINT" value="-2"/>
    <fieldval field="rCHA" value="-2"/>
    <usesource source="sggDragRid"/>
    <tag group="RaceSize" tag="Medium0"/>
    <tag group="HasType" tag="tpSgDragon"/>
    <tag group="Alignment" tag="Chaotic"/>
    <tag group="Alignment" tag="Evil"/>
    <tag group="Helper" tag="NoPathSoc"/>
    <tag group="Helper" tag="Quadruped"/>
    <tag group="Helper" tag="NotHum"/>
    <tag group="BloodEner" tag="Acid" name="Acid"/>
    <tag group="RaceType" tag="Animal"/>
    <tag group="SlotSet" tag="selMISQuaC"/>
    <bootstrap thing="cBonusHD"></bootstrap>
    <bootstrap thing="cBonusHD">
      <containerreq phase="First" priority="500"><![CDATA[fieldval:anCompLev >= 2]]></containerreq>
      </bootstrap>
    <bootstrap thing="cBonusHD">
      <containerreq phase="First" priority="500"><![CDATA[fieldval:anCompLev >= 4]]></containerreq>
      </bootstrap>
    <bootstrap thing="cBonusHD">
      <containerreq phase="First" priority="500"><![CDATA[fieldval:anCompLev >= 5]]></containerreq>
      </bootstrap>
    <bootstrap thing="cBonusHD">
      <containerreq phase="First" priority="500"><![CDATA[fieldval:anCompLev >= 6]]></containerreq>
      </bootstrap>
    <bootstrap thing="cBonusHD">
      <containerreq phase="First" priority="500"><![CDATA[fieldval:anCompLev >= 8]]></containerreq>
      </bootstrap>
    <bootstrap thing="cBonusHD">
      <containerreq phase="First" priority="500"><![CDATA[fieldval:anCompLev >= 9]]></containerreq>
      </bootstrap>
    <bootstrap thing="cBonusHD">
      <containerreq phase="First" priority="500"><![CDATA[fieldval:anCompLev >= 10]]></containerreq>
      </bootstrap>
    <bootstrap thing="cBonusHD">
      <containerreq phase="First" priority="500"><![CDATA[fieldval:anCompLev >= 12]]></containerreq>
      </bootstrap>
    <bootstrap thing="cBonusHD">
      <containerreq phase="First" priority="500"><![CDATA[fieldval:anCompLev >= 13]]></containerreq>
      </bootstrap>
    <bootstrap thing="cBonusHD">
      <containerreq phase="First" priority="500"><![CDATA[fieldval:anCompLev >= 14]]></containerreq>
      </bootstrap>
    <bootstrap thing="cBonusHD">
      <containerreq phase="First" priority="500"><![CDATA[fieldval:anCompLev >= 16]]></containerreq>
      </bootstrap>
    <bootstrap thing="cBonusHD">
      <containerreq phase="First" priority="500"><![CDATA[fieldval:anCompLev >= 17]]></containerreq>
      </bootstrap>
    <bootstrap thing="cBonusHD">
      <containerreq phase="First" priority="500"><![CDATA[fieldval:anCompLev >= 18]]></containerreq>
      </bootstrap>
    <bootstrap thing="cBonusHD">
      <containerreq phase="First" priority="500"><![CDATA[fieldval:anCompLev >= 20]]></containerreq>
      </bootstrap>
    <bootstrap thing="zSggDrrInt"></bootstrap>
    <bootstrap thing="zSggDrrNat"></bootstrap>
    <bootstrap thing="zSggDrrStr"></bootstrap>
    <bootstrap thing="raSgSteedB">
      <autotag group="Custom" tag="sggLine"/>
      </bootstrap>
    <bootstrap thing="raSgDrFocu"></bootstrap>
    <bootstrap thing="raSgLink"></bootstrap>
    <bootstrap thing="raSgSharSp">
      <containerreq phase="First" priority="500"><![CDATA[fieldval:anCompLev >= 2]]></containerreq>
      </bootstrap>
    <bootstrap thing="raSgEvasio">
      <containerreq phase="First" priority="500"><![CDATA[fieldval:anCompLev >= 3]]></containerreq>
      </bootstrap>
    <bootstrap thing="raSgDevoti">
      <containerreq phase="First" priority="500"><![CDATA[fieldval:anCompLev >= 6]]></containerreq>
      </bootstrap>
    <bootstrap thing="fMultiAtt">
      <containerreq phase="First" priority="500"><![CDATA[fieldval:anCompLev >= 11]]></containerreq>
      </bootstrap>
    <bootstrap thing="xFly">
      <autotag group="Maneuver" tag="Clumsy"/>
      <autotag group="Value" tag="40"/>
      </bootstrap>
    <bootstrap thing="wBite">
      <autotag group="wMain" tag="1d6_5"/>
      <autotag group="Helper" tag="NatSizeDmg"/>
      </bootstrap>
    <bootstrap thing="wClaw">
      <autotag group="wMain" tag="1d4_4"/>
      <autotag group="Value" tag="2"/>
      <autotag group="Helper" tag="NatSizeDmg"/>
      </bootstrap>
    <bootstrap thing="xImmAcid"></bootstrap>
    <bootstrap thing="raSgImpEva">
      <containerreq phase="First" priority="500"><![CDATA[fieldval:anCompLev >= 16]]></containerreq>
      </bootstrap>
    <bootstrap thing="raBlaSwamS">
      <containerreq phase="First" priority="500"><![CDATA[fieldval:anCompLev >= 8]]></containerreq>
      </bootstrap>
    <bootstrap thing="raBlaWateB">
      <containerreq phase="First" priority="500"><![CDATA[fieldval:anCompLev >= 8]]></containerreq>
      </bootstrap>
    <bootstrap thing="raSgAcidBi">
      <containerreq phase="First" priority="500"><![CDATA[fieldval:anCompLev >= 16]]></containerreq>
      </bootstrap>
    <bootstrap thing="cBonusHD"></bootstrap>
    <eval phase="First" priority="490"><![CDATA[~ Set animal companion level based off the Steed Class ability
~ this is so the bootstrap Bonus HD work correctly.
field[anCompLev].value += master.hero.child[cDrrSteed].field[abValue].value

~ Push energy type tag to hero level
perform pulltags[BloodEner.?]
perform hero.pushtags[BloodEner.?]

~ Set Form of the Dragon Breath weapon on PC
If (master.childlives[cDrrDragon] <> 0) then
   perform master.child[cDrrDragon].pushtags[BloodEner.?]   
Endif]]></eval>
    <eval phase="PostAttr" priority="500" index="3">~ Calculate the Dragon steeds skill points
#resmax[resSkill] += (hero.child[tpSgDragon].field[tpSkillPts].value + hero.child[aINT].field[aModBonus].value) * #totallevelcount[]</eval>
    <eval phase="First" priority="500" index="2"><![CDATA[~Set focus 1 Full, 2 Standard, 3 Move, 4 Swift, 5 Free
#value[raSgDrFocu] = 3
~ Set Steed Natural Armor
#value[zSggDrrNat] = field[anCompLev].value
~ Set Steed Str/Con bonus
#value[zSggDrrStr] = field[anCompLev].value
~ Set Steed Int/Cha bonus
#value[zSggDrrInt] = field[anCompLev].value

~ Set Form of the Dragon Breath weapon on PC
If (master.childlives[raSgBreath] <> 0) then
   perform pulltags[BloodEner.?]
   perform master.child[raSgBreath].pushtags[BloodEner.?]
   ~ Set length of breath
   master.child[raSgBreath].field[abValue].value = 100
   ~ Set Type: Line=1,Cone=0
   master.child[raSgBreath].field[abValue2].value = 1
Endif

~ Set Dragons breath weapon
perform pulltags[BloodEner.?]
perform hero.child[raSgSteedB].pushtags[BloodEner.?]
~ Set length of breath
hero.child[raSgSteedB].field[abValue].value = 30
~ Set die size
hero.child[raSgSteedB].field[abValue3].value = 6
~ Set Companion Level
hero.child[raSgSteedB].field[abValue4].value = field[anCompLev].value

~ 8th level improvments
If (field[anCompLev].value >= 8) then
   herofield[tSize].value += 1
   #applydr[xDamRdMag,5]
   #applyvalue[xFly,50]
   #applyvalue[raDarkVis,120]
   #applyvalue[xSwim,40]
   #value[raSgDrFocu] += 1
Endif
~ 16th level improvments
If (field[anCompLev].value >= 16) then
   herofield[tSize].value += 1
   #applydr[xDamRdMag,10]
   #applyvalue[xFly,60]
   #applyvalue[xSwim,50]
   #value[raSgDrFocu] += 1
Endif]]></eval>
    </thing>
  <thing id="rSGDrrBlue" name="Dragon Steed, Blue" description="This is the Dragonrider class dragon steed mount." compset="Race" uniqueness="unique">
    <fieldval field="rAC" value="5"/>
    <fieldval field="rSTR" value="3"/>
    <fieldval field="rDEX" value="4"/>
    <fieldval field="rCON" value="3"/>
    <fieldval field="rWIS" value="1"/>
    <fieldval field="rCHA" value="-2"/>
    <usesource source="sggDragRid"/>
    <tag group="RaceSize" tag="Medium0"/>
    <tag group="HasType" tag="tpSgDragon"/>
    <tag group="Alignment" tag="Evil"/>
    <tag group="Helper" tag="NoPathSoc"/>
    <tag group="Helper" tag="Quadruped"/>
    <tag group="Helper" tag="NotHum"/>
    <tag group="BloodEner" tag="Elec" name="Electricity"/>
    <tag group="RaceType" tag="Animal"/>
    <tag group="Alignment" tag="Lawful"/>
    <tag group="SlotSet" tag="selMISBipC"/>
    <bootstrap thing="cBonusHD">
      <containerreq phase="First" priority="500"><![CDATA[fieldval:anCompLev >= 2]]></containerreq>
      </bootstrap>
    <bootstrap thing="cBonusHD">
      <containerreq phase="First" priority="500"><![CDATA[fieldval:anCompLev >= 4]]></containerreq>
      </bootstrap>
    <bootstrap thing="cBonusHD">
      <containerreq phase="First" priority="500"><![CDATA[fieldval:anCompLev >= 5]]></containerreq>
      </bootstrap>
    <bootstrap thing="cBonusHD">
      <containerreq phase="First" priority="500"><![CDATA[fieldval:anCompLev >= 6]]></containerreq>
      </bootstrap>
    <bootstrap thing="cBonusHD">
      <containerreq phase="First" priority="500"><![CDATA[fieldval:anCompLev >= 8]]></containerreq>
      </bootstrap>
    <bootstrap thing="cBonusHD">
      <containerreq phase="First" priority="500"><![CDATA[fieldval:anCompLev >= 9]]></containerreq>
      </bootstrap>
    <bootstrap thing="cBonusHD">
      <containerreq phase="First" priority="500"><![CDATA[fieldval:anCompLev >= 10]]></containerreq>
      </bootstrap>
    <bootstrap thing="cBonusHD">
      <containerreq phase="First" priority="500"><![CDATA[fieldval:anCompLev >= 12]]></containerreq>
      </bootstrap>
    <bootstrap thing="cBonusHD">
      <containerreq phase="First" priority="500"><![CDATA[fieldval:anCompLev >= 13]]></containerreq>
      </bootstrap>
    <bootstrap thing="cBonusHD">
      <containerreq phase="First" priority="500"><![CDATA[fieldval:anCompLev >= 14]]></containerreq>
      </bootstrap>
    <bootstrap thing="cBonusHD">
      <containerreq phase="First" priority="500"><![CDATA[fieldval:anCompLev >= 16]]></containerreq>
      </bootstrap>
    <bootstrap thing="cBonusHD">
      <containerreq phase="First" priority="500"><![CDATA[fieldval:anCompLev >= 17]]></containerreq>
      </bootstrap>
    <bootstrap thing="cBonusHD">
      <containerreq phase="First" priority="500"><![CDATA[fieldval:anCompLev >= 18]]></containerreq>
      </bootstrap>
    <bootstrap thing="cBonusHD">
      <containerreq phase="First" priority="500"><![CDATA[fieldval:anCompLev >= 20]]></containerreq>
      </bootstrap>
    <bootstrap thing="zSggDrrInt"></bootstrap>
    <bootstrap thing="zSggDrrNat"></bootstrap>
    <bootstrap thing="zSggDrrStr"></bootstrap>
    <bootstrap thing="raSgSteedB">
      <autotag group="Custom" tag="sggLine"/>
      </bootstrap>
    <bootstrap thing="raSgDrFocu"></bootstrap>
    <bootstrap thing="raSgLink"></bootstrap>
    <bootstrap thing="raSgSharSp">
      <containerreq phase="First" priority="500"><![CDATA[fieldval:anCompLev >= 2]]></containerreq>
      </bootstrap>
    <bootstrap thing="raSgEvasio">
      <containerreq phase="First" priority="500"><![CDATA[fieldval:anCompLev >= 3]]></containerreq>
      </bootstrap>
    <bootstrap thing="raSgDevoti">
      <containerreq phase="First" priority="500"><![CDATA[fieldval:anCompLev >= 6]]></containerreq>
      </bootstrap>
    <bootstrap thing="fMultiAtt">
      <containerreq phase="First" priority="500"><![CDATA[fieldval:anCompLev >= 11]]></containerreq>
      </bootstrap>
    <bootstrap thing="xFly">
      <autotag group="Maneuver" tag="Clumsy"/>
      <autotag group="Value" tag="40"/>
      </bootstrap>
    <bootstrap thing="wBite">
      <autotag group="wMain" tag="1d6_5"/>
      <autotag group="Helper" tag="NatSizeDmg"/>
      </bootstrap>
    <bootstrap thing="wClaw">
      <autotag group="wMain" tag="1d4_4"/>
      <autotag group="Value" tag="2"/>
      <autotag group="Helper" tag="NatSizeDmg"/>
      </bootstrap>
    <bootstrap thing="xImmElec"></bootstrap>
    <bootstrap thing="raSgImpEva">
      <containerreq phase="First" priority="500"><![CDATA[fieldval:anCompLev >= 16]]></containerreq>
      </bootstrap>
    <bootstrap thing="raBluSounI">
      <containerreq phase="First" priority="500"><![CDATA[fieldval:anCompLev >= 8]]></containerreq>
      </bootstrap>
    <bootstrap thing="raBluElecA">
      <containerreq phase="First" priority="500"><![CDATA[fieldval:anCompLev >= 16]]></containerreq>
      </bootstrap>
    <bootstrap thing="cBonusHD"></bootstrap>
    <bootstrap thing="cBonusHD"></bootstrap>
    <eval phase="PostAttr" priority="500" index="3">~ Calculate the Dragon steeds skill points
#resmax[resSkill] += (hero.child[tpSgDragon].field[tpSkillPts].value + hero.child[aINT].field[aModBonus].value) * #totallevelcount[]</eval>
    <eval phase="First" priority="500" index="2"><![CDATA[~Set focus 1 Full, 2 Standard, 3 Move, 4 Swift, 5 Free
#value[raSgDrFocu] = 3
~ Set Steed Natural Armor
#value[zSggDrrNat] = field[anCompLev].value
~ Set Steed Str/Con bonus
#value[zSggDrrStr] = field[anCompLev].value
~ Set Steed Int/Cha bonus
#value[zSggDrrInt] = field[anCompLev].value

~ Set Form of the Dragon Breath weapon on PC
If (master.childlives[raSgBreath] <> 0) then
   perform pulltags[BloodEner.?]
   perform master.child[raSgBreath].pushtags[BloodEner.?]
   ~ Set length of breath
   master.child[raSgBreath].field[abValue].value = 100
   ~ Set Type: Line=1,Cone=0
   master.child[raSgBreath].field[abValue2].value = 1
Endif

~ Set Dragons breath weapon
perform pulltags[BloodEner.?]
perform hero.child[raSgSteedB].pushtags[BloodEner.?]
~ Set length of breath
hero.child[raSgSteedB].field[abValue].value = 30
~ Set die size
hero.child[raSgSteedB].field[abValue3].value = 4
~ Set Companion Level
hero.child[raSgSteedB].field[abValue4].value = field[anCompLev].value

~ 8th level improvments
If (field[anCompLev].value >= 8) then
   herofield[tSize].value += 1
   #applydr[xDamRdMag,5]
   #applyvalue[xFly,50]
   #applyvalue[raDarkVis,120]
   #applyvalue[xBurrow,10]
   #value[raSgDrFocu] += 1
Endif
~ 16th level improvments
If (field[anCompLev].value >= 16) then
   herofield[tSize].value += 1
   #applydr[xDamRdMag,10]
   #applyvalue[xFly,60]
   #applyvalue[xBurrow,20]
   #value[raSgDrFocu] += 1
Endif]]></eval>
    <eval phase="First" priority="490"><![CDATA[~ Set animal companion level based off the Steed Class ability
~ this is so the bootstrap Bonus HD work correctly.
field[anCompLev].value += master.hero.child[cDrrSteed].field[abValue].value

~ Push energy type tag to hero level
perform pulltags[BloodEner.?]
perform hero.pushtags[BloodEner.?]

~ Set Form of the Dragon Breath weapon on PC
If (master.childlives[cDrrDragon] <> 0) then
   perform master.child[cDrrDragon].pushtags[BloodEner.?]   
Endif]]></eval>
    </thing>
  <thing id="minSteeBlu" name="Dragon Steed, Blue" description="The bonded dragon mount for the Dragonrider class.\n\nA dragonrider’s alignment must be within one step of his dragon steed (see Chapter Seven in the Pathfinder Roleplaying game for more information on alignment steps)." compset="Minion" stacking="never" uniqueness="useronce">
    <usesource source="sggDragRid"/>
    <tag group="gType" tag="Mounts" name="Mounts, Pets and Related Gear" abbrev="Mounts"/>
    <tag group="Helper" tag="NoPathSoc"/>
    <exprreq message="You must have at least one level in Dragonrider to take this mount."><![CDATA[#custspeciallevelcount[Dragonrid] <> 0]]></exprreq>
    <exprreq message="Wrong alignment to bond to this dragon.">tagis[Alignment.Good] + tagis[Alignment.Chaotic] = 0</exprreq>
    <minion id="Mount">
      <tag group="Hero" tag="FixedRace" name="FixedRace" abbrev="FixedRace"/>
      <bootstrap thing="rSGDrrBlue"></bootstrap>
      </minion>
    </thing>
  <thing id="rSGDrrGree" name="Dragon Steed, Green" description="This is the Dragonrider class dragon steed mount." compset="Race" uniqueness="unique">
    <fieldval field="rAC" value="4"/>
    <fieldval field="rSTR" value="3"/>
    <fieldval field="rDEX" value="4"/>
    <fieldval field="rCON" value="3"/>
    <fieldval field="rWIS" value="1"/>
    <fieldval field="rSpeed" value="40"/>
    <usesource source="sggDragRid"/>
    <tag group="RaceType" tag="Animal"/>
    <tag group="BloodEner" tag="Acid" name="Acid"/>
    <tag group="RaceSize" tag="Large1"/>
    <tag group="HasType" tag="tpSgDragon"/>
    <tag group="Alignment" tag="Evil"/>
    <tag group="Helper" tag="NoPathSoc"/>
    <tag group="Helper" tag="Quadruped"/>
    <tag group="Helper" tag="NotHum"/>
    <tag group="Alignment" tag="Lawful"/>
    <tag group="SlotSet" tag="selMISQuaC"/>
    <bootstrap thing="cBonusHD">
      <containerreq phase="First" priority="500"><![CDATA[fieldval:anCompLev >= 2]]></containerreq>
      </bootstrap>
    <bootstrap thing="cBonusHD">
      <containerreq phase="First" priority="500"><![CDATA[fieldval:anCompLev >= 4]]></containerreq>
      </bootstrap>
    <bootstrap thing="cBonusHD">
      <containerreq phase="First" priority="500"><![CDATA[fieldval:anCompLev >= 5]]></containerreq>
      </bootstrap>
    <bootstrap thing="cBonusHD">
      <containerreq phase="First" priority="500"><![CDATA[fieldval:anCompLev >= 6]]></containerreq>
      </bootstrap>
    <bootstrap thing="cBonusHD">
      <containerreq phase="First" priority="500"><![CDATA[fieldval:anCompLev >= 8]]></containerreq>
      </bootstrap>
    <bootstrap thing="cBonusHD">
      <containerreq phase="First" priority="500"><![CDATA[fieldval:anCompLev >= 9]]></containerreq>
      </bootstrap>
    <bootstrap thing="cBonusHD">
      <containerreq phase="First" priority="500"><![CDATA[fieldval:anCompLev >= 10]]></containerreq>
      </bootstrap>
    <bootstrap thing="cBonusHD">
      <containerreq phase="First" priority="500"><![CDATA[fieldval:anCompLev >= 12]]></containerreq>
      </bootstrap>
    <bootstrap thing="cBonusHD">
      <containerreq phase="First" priority="500"><![CDATA[fieldval:anCompLev >= 13]]></containerreq>
      </bootstrap>
    <bootstrap thing="cBonusHD">
      <containerreq phase="First" priority="500"><![CDATA[fieldval:anCompLev >= 14]]></containerreq>
      </bootstrap>
    <bootstrap thing="cBonusHD">
      <containerreq phase="First" priority="500"><![CDATA[fieldval:anCompLev >= 16]]></containerreq>
      </bootstrap>
    <bootstrap thing="cBonusHD">
      <containerreq phase="First" priority="500"><![CDATA[fieldval:anCompLev >= 17]]></containerreq>
      </bootstrap>
    <bootstrap thing="cBonusHD">
      <containerreq phase="First" priority="500"><![CDATA[fieldval:anCompLev >= 18]]></containerreq>
      </bootstrap>
    <bootstrap thing="cBonusHD">
      <containerreq phase="First" priority="500"><![CDATA[fieldval:anCompLev >= 20]]></containerreq>
      </bootstrap>
    <bootstrap thing="zSggDrrInt"></bootstrap>
    <bootstrap thing="zSggDrrNat"></bootstrap>
    <bootstrap thing="zSggDrrStr"></bootstrap>
    <bootstrap thing="raSgSteedB">
      <autotag group="Custom" tag="sggCone"/>
      </bootstrap>
    <bootstrap thing="raSgDrFocu"></bootstrap>
    <bootstrap thing="raSgLink"></bootstrap>
    <bootstrap thing="raSgSharSp">
      <containerreq phase="First" priority="500"><![CDATA[fieldval:anCompLev >= 2]]></containerreq>
      </bootstrap>
    <bootstrap thing="raSgEvasio">
      <containerreq phase="First" priority="500"><![CDATA[fieldval:anCompLev >= 3]]></containerreq>
      </bootstrap>
    <bootstrap thing="raSgDevoti">
      <containerreq phase="First" priority="500"><![CDATA[fieldval:anCompLev >= 6]]></containerreq>
      </bootstrap>
    <bootstrap thing="fMultiAtt">
      <containerreq phase="First" priority="500"><![CDATA[fieldval:anCompLev >= 11]]></containerreq>
      </bootstrap>
    <bootstrap thing="xFly">
      <autotag group="Maneuver" tag="Clumsy"/>
      <autotag group="Value" tag="30"/>
      </bootstrap>
    <bootstrap thing="wBite">
      <autotag group="wMain" tag="1d6_5"/>
      <autotag group="Helper" tag="NatSizeDmg"/>
      </bootstrap>
    <bootstrap thing="wClaw">
      <autotag group="wMain" tag="1d4_4"/>
      <autotag group="Value" tag="2"/>
      <autotag group="Helper" tag="NatSizeDmg"/>
      </bootstrap>
    <bootstrap thing="xImmAcid"></bootstrap>
    <bootstrap thing="raSgImpEva">
      <containerreq phase="First" priority="500"><![CDATA[fieldval:anCompLev >= 16]]></containerreq>
      </bootstrap>
    <bootstrap thing="raGreTracS">
      <containerreq phase="First" priority="500"><![CDATA[fieldval:anCompLev >= 8]]></containerreq>
      </bootstrap>
    <bootstrap thing="cBonusHD"></bootstrap>
    <bootstrap thing="raGreWateB">
      <containerreq phase="First" priority="500"><![CDATA[fieldval:anCompLev >= 8]]></containerreq>
      </bootstrap>
    <bootstrap thing="raGreWoodS">
      <containerreq phase="First" priority="500"><![CDATA[fieldval:anCompLev >= 8]]></containerreq>
      </bootstrap>
    <bootstrap thing="raGreCamou">
      <containerreq phase="First" priority="500"><![CDATA[fieldval:anCompLev >= 16]]></containerreq>
      </bootstrap>
    <bootstrap thing="cBonusHD"></bootstrap>
    <eval phase="First" priority="500" index="2"><![CDATA[~Set focus 1 Full, 2 Standard, 3 Move, 4 Swift, 5 Free
#value[raSgDrFocu] = 2
~ Set Steed Natural Armor
#value[zSggDrrNat] = field[anCompLev].value
~ Set Steed Str/Con bonus
#value[zSggDrrStr] = field[anCompLev].value
~ Set Steed Int/Cha bonus
#value[zSggDrrInt] = field[anCompLev].value

~ Set Form of the Dragon Breath weapon on PC
If (master.childlives[raSgBreath] <> 0) then
   perform pulltags[BloodEner.?]
   perform master.child[raSgBreath].pushtags[BloodEner.?]
   ~ Set length of breath
   master.child[raSgBreath].field[abValue].value = 100
   ~ Set Type: Line=1,Cone=0
   master.child[raSgBreath].field[abValue2].value = 1
Endif

~ Set Dragons breath weapon
perform pulltags[BloodEner.?]
perform hero.child[raSgSteedB].pushtags[BloodEner.?]
~ Set length of breath
hero.child[raSgSteedB].field[abValue].value = 15
~ Set die size
hero.child[raSgSteedB].field[abValue3].value = 8
~ Set Companion Level
hero.child[raSgSteedB].field[abValue4].value = field[anCompLev].value

~ Give SR at 16th level
~If (field[anCompLev].value >= 16) then
~   #applysr[field[anCompLev].value+5]
~Endif

~ Set natural armor bonus for this dragon
~hero.child[ArmorClass].field[tACNatural].value += 3

~ 8th level improvments
If (field[anCompLev].value >= 8) then
   herofield[tSize].value += 1
   #applydr[xDamRdMag,5]
   #applyvalue[xFly,40]
   hero.child[Speed].field[tSpeed].value += 10
   #applyvalue[raDarkVis,120]
   #value[raSgDrFocu] += 1
Endif
~ 16th level improvments
If (field[anCompLev].value >= 16) then
   herofield[tSize].value += 1
   #applydr[xDamRdMag,10]
   #applyvalue[xFly,50]
   hero.child[Speed].field[tSpeed].value += 10
   #applyvalue[xSwim,40]
   #value[raSgDrFocu] += 1
Endif]]></eval>
    <eval phase="First" priority="490"><![CDATA[~ Set animal companion level based off the Steed Class ability
~ this is so the bootstrap Bonus HD work correctly.
field[anCompLev].value += master.hero.child[cDrrSteed].field[abValue].value

~ Push energy type tag to hero level
perform pulltags[BloodEner.?]
perform hero.pushtags[BloodEner.?]

~ Set Form of the Dragon Breath weapon on PC
If (master.childlives[cDrrDragon] <> 0) then
   perform master.child[cDrrDragon].pushtags[BloodEner.?]   
Endif]]></eval>
    <eval phase="PostAttr" priority="500" index="3">~ Calculate the Dragon steeds skill points
#resmax[resSkill] += (hero.child[tpSgDragon].field[tpSkillPts].value + hero.child[aINT].field[aModBonus].value) * #totallevelcount[]</eval>
    </thing>
  <thing id="minSteeGre" name="Dragon Steed, Green" description="The bonded dragon mount for the Dragonrider class.\n\nA dragonrider’s alignment must be within one step of his dragon steed (see Chapter Seven in the Pathfinder Roleplaying game for more information on alignment steps)." compset="Minion" stacking="never" uniqueness="useronce">
    <usesource source="sggDragRid"/>
    <tag group="gType" tag="Mounts" name="Mounts, Pets and Related Gear" abbrev="Mounts"/>
    <tag group="Helper" tag="NoPathSoc"/>
    <exprreq message="You must have at least one level in Dragonrider to take this mount."><![CDATA[#custspeciallevelcount[Dragonrid] <> 0]]></exprreq>
    <exprreq message="Wrong alignment to bond to this dragon.">tagis[Alignment.Good] + tagis[Alignment.Chaotic] = 0</exprreq>
    <minion id="Mount">
      <tag group="Hero" tag="FixedRace" name="FixedRace" abbrev="FixedRace"/>
      <bootstrap thing="rSGDrrGree"></bootstrap>
      </minion>
    </thing>
  <thing id="rSGDrrWhit" name="Dragon Steed, White" description="This is the Dragonrider class dragon steed mount." compset="Race" uniqueness="unique">
    <fieldval field="rAC" value="2"/>
    <fieldval field="rSTR" value="1"/>
    <fieldval field="rDEX" value="6"/>
    <fieldval field="rCON" value="3"/>
    <fieldval field="rWIS" value="-1"/>
    <fieldval field="rSpeed" value="50"/>
    <fieldval field="rINT" value="-4"/>
    <fieldval field="rCHA" value="-4"/>
    <usesource source="sggDragRid"/>
    <tag group="RaceSize" tag="Small11"/>
    <tag group="HasType" tag="tpSgDragon"/>
    <tag group="Alignment" tag="Evil"/>
    <tag group="Helper" tag="NoPathSoc"/>
    <tag group="Helper" tag="Quadruped"/>
    <tag group="Helper" tag="NotHum"/>
    <tag group="BloodEner" tag="Cold" name="Cold"/>
    <tag group="RaceType" tag="Animal"/>
    <tag group="Alignment" tag="Chaotic"/>
    <tag group="SlotSet" tag="selMISQuaC"/>
    <bootstrap thing="cBonusHD"></bootstrap>
    <bootstrap thing="cBonusHD"></bootstrap>
    <bootstrap thing="cBonusHD">
      <containerreq phase="First" priority="500"><![CDATA[fieldval:anCompLev >= 2]]></containerreq>
      </bootstrap>
    <bootstrap thing="cBonusHD">
      <containerreq phase="First" priority="500"><![CDATA[fieldval:anCompLev >= 4]]></containerreq>
      </bootstrap>
    <bootstrap thing="cBonusHD">
      <containerreq phase="First" priority="500"><![CDATA[fieldval:anCompLev >= 5]]></containerreq>
      </bootstrap>
    <bootstrap thing="cBonusHD">
      <containerreq phase="First" priority="500"><![CDATA[fieldval:anCompLev >= 6]]></containerreq>
      </bootstrap>
    <bootstrap thing="cBonusHD">
      <containerreq phase="First" priority="500"><![CDATA[fieldval:anCompLev >= 8]]></containerreq>
      </bootstrap>
    <bootstrap thing="cBonusHD">
      <containerreq phase="First" priority="500"><![CDATA[fieldval:anCompLev >= 9]]></containerreq>
      </bootstrap>
    <bootstrap thing="cBonusHD">
      <containerreq phase="First" priority="500"><![CDATA[fieldval:anCompLev >= 10]]></containerreq>
      </bootstrap>
    <bootstrap thing="cBonusHD">
      <containerreq phase="First" priority="500"><![CDATA[fieldval:anCompLev >= 12]]></containerreq>
      </bootstrap>
    <bootstrap thing="cBonusHD">
      <containerreq phase="First" priority="500"><![CDATA[fieldval:anCompLev >= 13]]></containerreq>
      </bootstrap>
    <bootstrap thing="cBonusHD">
      <containerreq phase="First" priority="500"><![CDATA[fieldval:anCompLev >= 14]]></containerreq>
      </bootstrap>
    <bootstrap thing="cBonusHD">
      <containerreq phase="First" priority="500"><![CDATA[fieldval:anCompLev >= 16]]></containerreq>
      </bootstrap>
    <bootstrap thing="cBonusHD">
      <containerreq phase="First" priority="500"><![CDATA[fieldval:anCompLev >= 17]]></containerreq>
      </bootstrap>
    <bootstrap thing="cBonusHD">
      <containerreq phase="First" priority="500"><![CDATA[fieldval:anCompLev >= 18]]></containerreq>
      </bootstrap>
    <bootstrap thing="cBonusHD">
      <containerreq phase="First" priority="500"><![CDATA[fieldval:anCompLev >= 20]]></containerreq>
      </bootstrap>
    <bootstrap thing="zSggDrrInt"></bootstrap>
    <bootstrap thing="zSggDrrNat"></bootstrap>
    <bootstrap thing="zSggDrrStr"></bootstrap>
    <bootstrap thing="raSgSteedB">
      <autotag group="Custom" tag="sggCone"/>
      </bootstrap>
    <bootstrap thing="raSgDrFocu"></bootstrap>
    <bootstrap thing="raSgLink"></bootstrap>
    <bootstrap thing="raSgSharSp">
      <containerreq phase="First" priority="500"><![CDATA[fieldval:anCompLev >= 2]]></containerreq>
      </bootstrap>
    <bootstrap thing="raSgEvasio">
      <containerreq phase="First" priority="500"><![CDATA[fieldval:anCompLev >= 3]]></containerreq>
      </bootstrap>
    <bootstrap thing="raSgDevoti">
      <containerreq phase="First" priority="500"><![CDATA[fieldval:anCompLev >= 6]]></containerreq>
      </bootstrap>
    <bootstrap thing="fMultiAtt">
      <containerreq phase="First" priority="500"><![CDATA[fieldval:anCompLev >= 11]]></containerreq>
      </bootstrap>
    <bootstrap thing="xFly">
      <autotag group="Maneuver" tag="Clumsy"/>
      <autotag group="Value" tag="50"/>
      </bootstrap>
    <bootstrap thing="wBite">
      <autotag group="wMain" tag="1d6_5"/>
      <autotag group="Helper" tag="NatSizeDmg"/>
      </bootstrap>
    <bootstrap thing="wClaw">
      <autotag group="wMain" tag="1d4_4"/>
      <autotag group="Value" tag="2"/>
      <autotag group="Helper" tag="NatSizeDmg"/>
      </bootstrap>
    <bootstrap thing="xImmCold"></bootstrap>
    <bootstrap thing="raSgImpEva">
      <containerreq phase="First" priority="500"><![CDATA[fieldval:anCompLev >= 16]]></containerreq>
      </bootstrap>
    <bootstrap thing="raWhiIcewa">
      <containerreq phase="First" priority="500"><![CDATA[fieldval:anCompLev >= 8]]></containerreq>
      </bootstrap>
    <bootstrap thing="raWhiSnowV">
      <containerreq phase="First" priority="500"><![CDATA[fieldval:anCompLev >= 8]]></containerreq>
      </bootstrap>
    <bootstrap thing="raWhiColdA">
      <containerreq phase="First" priority="500"><![CDATA[fieldval:anCompLev >= 16]]></containerreq>
      </bootstrap>
    <bootstrap thing="cBonusHD"></bootstrap>
    <eval phase="First" priority="500" index="2"><![CDATA[~Set focus 1 Full, 2 Standard, 3 Move, 4 Swift, 5 Free
#value[raSgDrFocu] = 4
~ Set Steed Natural Armor
#value[zSggDrrNat] = field[anCompLev].value
~ Set Steed Str/Con bonus
#value[zSggDrrStr] = field[anCompLev].value
~ Set Steed Int/Cha bonus
#value[zSggDrrInt] = field[anCompLev].value

~ Set Form of the Dragon Breath weapon on PC
If (master.childlives[raSgBreath] <> 0) then
   perform pulltags[BloodEner.?]
   perform master.child[raSgBreath].pushtags[BloodEner.?]
   ~ Set length of breath
   master.child[raSgBreath].field[abValue].value = 100
   ~ Set Type: Line=1,Cone=0
   master.child[raSgBreath].field[abValue2].value = 1
Endif

~ Set Dragons breath weapon
perform pulltags[BloodEner.?]
perform hero.child[raSgSteedB].pushtags[BloodEner.?]
~ Set length of breath
hero.child[raSgSteedB].field[abValue].value = 15
~ Set die size
hero.child[raSgSteedB].field[abValue3].value = 4
~ Set Companion Level
hero.child[raSgSteedB].field[abValue4].value = field[anCompLev].value

~ Give SR at 16th level
~If (field[anCompLev].value >= 16) then
~   #applysr[field[anCompLev].value+5]
~Endif

~ Set natural armor bonus for this dragon
~hero.child[ArmorClass].field[tACNatural].value += 3

~ 8th level improvments
If (field[anCompLev].value >= 8) then
   herofield[tSize].value += 1
   #applydr[xDamRdMag,5]
   #applyvalue[xFly,60]
   #applyvalue[xBurrow,10]
   hero.child[Speed].field[tSpeed].value = 60
   #applyvalue[raDarkVis,120]
   #value[raSgDrFocu] += 1
Endif
~ 16th level improvments
If (field[anCompLev].value >= 16) then
   herofield[tSize].value += 1
   #applydr[xDamRdMag,10]
   #applyvalue[xFly,70]
   hero.child[Speed].field[tSpeed].value = 70
   #applyvalue[xBurrow,20]
   #value[raSgDrFocu] += 1
Endif]]></eval>
    <eval phase="First" priority="490"><![CDATA[~ Set animal companion level based off the Steed Class ability
~ this is so the bootstrap Bonus HD work correctly.
field[anCompLev].value += master.hero.child[cDrrSteed].field[abValue].value

~ Push energy type tag to hero level
perform pulltags[BloodEner.?]
perform hero.pushtags[BloodEner.?]

~ Set Form of the Dragon Breath weapon on PC
If (master.childlives[cDrrDragon] <> 0) then
   perform master.child[cDrrDragon].pushtags[BloodEner.?]   
Endif]]></eval>
    <eval phase="PostAttr" priority="500" index="3">~ Calculate the Dragon steeds skill points
#resmax[resSkill] += (hero.child[tpSgDragon].field[tpSkillPts].value + hero.child[aINT].field[aModBonus].value) * #totallevelcount[]</eval>
    </thing>
  <thing id="minSteeWhi" name="Dragon Steed, White" description="The bonded dragon mount for the Dragonrider class.\n\nA dragonrider’s alignment must be within one step of his dragon steed (see Chapter Seven in the Pathfinder Roleplaying game for more information on alignment steps)." compset="Minion" stacking="never" uniqueness="useronce">
    <usesource source="sggDragRid"/>
    <tag group="gType" tag="Mounts" name="Mounts, Pets and Related Gear" abbrev="Mounts"/>
    <tag group="Helper" tag="NoPathSoc"/>
    <exprreq message="You must have at least one level in Dragonrider to take this mount."><![CDATA[#custspeciallevelcount[Dragonrid] <> 0]]></exprreq>
    <exprreq message="Wrong alignment to bond to this dragon.">tagis[Alignment.Good] + tagis[Alignment.Lawful] = 0</exprreq>
    <minion id="Mount">
      <tag group="Hero" tag="FixedRace" name="FixedRace" abbrev="FixedRace"/>
      <bootstrap thing="rSGDrrWhit"></bootstrap>
      </minion>
    </thing>
  <thing id="rSGDrrBras" name="Dragon Steed, Brass" description="This is the Dragonrider class dragon steed mount." compset="Race" uniqueness="unique">
    <fieldval field="rAC" value="2"/>
    <fieldval field="rSTR" value="1"/>
    <fieldval field="rDEX" value="6"/>
    <fieldval field="rCON" value="3"/>
    <fieldval field="rWIS" value="1"/>
    <fieldval field="rSpeed" value="50"/>
    <usesource source="sggDragRid"/>
    <tag group="RaceSize" tag="Small11"/>
    <tag group="HasType" tag="tpSgDragon"/>
    <tag group="Helper" tag="NoPathSoc"/>
    <tag group="Helper" tag="Quadruped"/>
    <tag group="Helper" tag="NotHum"/>
    <tag group="BloodEner" tag="Fire" name="Fire"/>
    <tag group="RaceType" tag="Animal"/>
    <tag group="Alignment" tag="Chaotic"/>
    <tag group="Alignment" tag="Good"/>
    <tag group="SlotSet" tag="selMISQuaC"/>
    <bootstrap thing="cBonusHD"></bootstrap>
    <bootstrap thing="cBonusHD">
      <containerreq phase="First" priority="500"><![CDATA[fieldval:anCompLev >= 2]]></containerreq>
      </bootstrap>
    <bootstrap thing="cBonusHD">
      <containerreq phase="First" priority="500"><![CDATA[fieldval:anCompLev >= 4]]></containerreq>
      </bootstrap>
    <bootstrap thing="cBonusHD">
      <containerreq phase="First" priority="500"><![CDATA[fieldval:anCompLev >= 5]]></containerreq>
      </bootstrap>
    <bootstrap thing="cBonusHD">
      <containerreq phase="First" priority="500"><![CDATA[fieldval:anCompLev >= 6]]></containerreq>
      </bootstrap>
    <bootstrap thing="cBonusHD">
      <containerreq phase="First" priority="500"><![CDATA[fieldval:anCompLev >= 8]]></containerreq>
      </bootstrap>
    <bootstrap thing="cBonusHD">
      <containerreq phase="First" priority="500"><![CDATA[fieldval:anCompLev >= 9]]></containerreq>
      </bootstrap>
    <bootstrap thing="cBonusHD">
      <containerreq phase="First" priority="500"><![CDATA[fieldval:anCompLev >= 10]]></containerreq>
      </bootstrap>
    <bootstrap thing="cBonusHD">
      <containerreq phase="First" priority="500"><![CDATA[fieldval:anCompLev >= 12]]></containerreq>
      </bootstrap>
    <bootstrap thing="cBonusHD">
      <containerreq phase="First" priority="500"><![CDATA[fieldval:anCompLev >= 13]]></containerreq>
      </bootstrap>
    <bootstrap thing="cBonusHD">
      <containerreq phase="First" priority="500"><![CDATA[fieldval:anCompLev >= 14]]></containerreq>
      </bootstrap>
    <bootstrap thing="cBonusHD">
      <containerreq phase="First" priority="500"><![CDATA[fieldval:anCompLev >= 16]]></containerreq>
      </bootstrap>
    <bootstrap thing="cBonusHD">
      <containerreq phase="First" priority="500"><![CDATA[fieldval:anCompLev >= 17]]></containerreq>
      </bootstrap>
    <bootstrap thing="cBonusHD">
      <containerreq phase="First" priority="500"><![CDATA[fieldval:anCompLev >= 18]]></containerreq>
      </bootstrap>
    <bootstrap thing="cBonusHD">
      <containerreq phase="First" priority="500"><![CDATA[fieldval:anCompLev >= 20]]></containerreq>
      </bootstrap>
    <bootstrap thing="zSggDrrInt"></bootstrap>
    <bootstrap thing="zSggDrrNat"></bootstrap>
    <bootstrap thing="zSggDrrStr"></bootstrap>
    <bootstrap thing="raSgSteedB">
      <autotag group="Custom" tag="sggLine"/>
      </bootstrap>
    <bootstrap thing="raSgDrFocu"></bootstrap>
    <bootstrap thing="raSgLink"></bootstrap>
    <bootstrap thing="raSgSharSp">
      <containerreq phase="First" priority="500"><![CDATA[fieldval:anCompLev >= 2]]></containerreq>
      </bootstrap>
    <bootstrap thing="raSgEvasio">
      <containerreq phase="First" priority="500"><![CDATA[fieldval:anCompLev >= 3]]></containerreq>
      </bootstrap>
    <bootstrap thing="raSgDevoti">
      <containerreq phase="First" priority="500"><![CDATA[fieldval:anCompLev >= 6]]></containerreq>
      </bootstrap>
    <bootstrap thing="fMultiAtt">
      <containerreq phase="First" priority="500"><![CDATA[fieldval:anCompLev >= 11]]></containerreq>
      </bootstrap>
    <bootstrap thing="xFly">
      <autotag group="Maneuver" tag="Clumsy"/>
      <autotag group="Value" tag="50"/>
      </bootstrap>
    <bootstrap thing="wBite">
      <autotag group="wMain" tag="1d6_5"/>
      <autotag group="Helper" tag="NatSizeDmg"/>
      </bootstrap>
    <bootstrap thing="wClaw">
      <autotag group="wMain" tag="1d4_4"/>
      <autotag group="Value" tag="2"/>
      <autotag group="Helper" tag="NatSizeDmg"/>
      </bootstrap>
    <bootstrap thing="xImmFire"></bootstrap>
    <bootstrap thing="raSgImpEva">
      <containerreq phase="First" priority="500"><![CDATA[fieldval:anCompLev >= 16]]></containerreq>
      </bootstrap>
    <bootstrap thing="raSgGusWin">
      <containerreq phase="First" priority="500"><![CDATA[fieldval:anCompLev >= 8]]></containerreq>
      </bootstrap>
    <bootstrap thing="raSgSleepB">
      <containerreq phase="First" priority="500"><![CDATA[fieldval:anCompLev >= 16]]></containerreq>
      </bootstrap>
    <bootstrap thing="cBonusHD"></bootstrap>
    <eval phase="First" priority="490"><![CDATA[~ Set animal companion level based off the Steed Class ability
~ this is so the bootstrap Bonus HD work correctly.
field[anCompLev].value += master.hero.child[cDrrSteed].field[abValue].value

~ Push energy type tag to hero level
perform pulltags[BloodEner.?]
perform hero.pushtags[BloodEner.?]

~ Set Form of the Dragon Breath weapon on PC
If (master.childlives[cDrrDragon] <> 0) then
   perform master.child[cDrrDragon].pushtags[BloodEner.?]   
Endif]]></eval>
    <eval phase="PostAttr" priority="500" index="3">~ Calculate the Dragon steeds skill points
#resmax[resSkill] += (hero.child[tpSgDragon].field[tpSkillPts].value + hero.child[aINT].field[aModBonus].value) * #totallevelcount[]</eval>
    <eval phase="First" priority="500" index="2"><![CDATA[~Set focus 1 Full, 2 Standard, 3 Move, 4 Swift, 5 Free
#value[raSgDrFocu] = 4
~ Set Steed Natural Armor
#value[zSggDrrNat] = field[anCompLev].value
~ Set Steed Str/Con bonus
#value[zSggDrrStr] = field[anCompLev].value
~ Set Steed Int/Cha bonus
#value[zSggDrrInt] = field[anCompLev].value

~ Set Form of the Dragon Breath weapon on PC
If (master.childlives[raSgBreath] <> 0) then
   perform pulltags[BloodEner.?]
   perform master.child[raSgBreath].pushtags[BloodEner.?]
   ~ Set length of breath
   master.child[raSgBreath].field[abValue].value = 100
   ~ Set Type: Line=1,Cone=0
   master.child[raSgBreath].field[abValue2].value = 1
Endif

~ Set Dragons breath weapon
perform pulltags[BloodEner.?]
perform hero.child[raSgSteedB].pushtags[BloodEner.?]
~ Set length of breath
hero.child[raSgSteedB].field[abValue].value = 30
~ Set die size
hero.child[raSgSteedB].field[abValue3].value = 4
~ Set Companion Level
hero.child[raSgSteedB].field[abValue4].value = field[anCompLev].value

~ Give SR at 16th level
~If (field[anCompLev].value >= 16) then
~   #applysr[field[anCompLev].value+5]
~Endif

~ Set natural armor bonus for this dragon
~hero.child[ArmorClass].field[tACNatural].value += 3

~ 8th level improvments
If (field[anCompLev].value >= 8) then
   herofield[tSize].value += 1
   #applydr[xDamRdMag,5]
   #applyvalue[xFly,60]
   #applyvalue[xBurrow,10]
   hero.child[Speed].field[tSpeed].value = 60
   #applyvalue[raDarkVis,120]
   #value[raSgDrFocu] += 1
Endif
~ 16th level improvments
If (field[anCompLev].value >= 16) then
   herofield[tSize].value += 1
   #applydr[xDamRdMag,10]
   #applyvalue[xFly,70]
   hero.child[Speed].field[tSpeed].value = 70
   #applyvalue[xBurrow,20]
   #value[raSgDrFocu] += 1
Endif]]></eval>
    </thing>
  <thing id="raSgGusWin" name="Gust of Wind" description="A juvenile or older brass dragon can call up the desert wind to serve him. This functions as {i}gust of wind{/i}, but any creature in its path must make a Fortitude save or be blinded for 1d4 rounds by the sand. The save DC for this effect is equal to the dragon&apos;s breath weapon DC." compset="RaceSpec">
    <fieldval field="trkMax" value="3"/>
    <usesource source="sggDragRid"/>
    <tag group="SpecType" tag="SpellLike" name="Spell-Like Ability" abbrev="Spell-Like Ability"/>
    <tag group="Usage" tag="Day" name="/day" abbrev="/day"/>
    <tag group="User" tag="Tracker" name="Tracker" abbrev="Tracker"/>
    <tag group="AbilType" tag="SpellLike" name="Spell-Like Ability" abbrev=" (Sp)"/>
    <tag group="StandardDC" tag="aCHA"/>
    <tag group="Helper" tag="ShowSpec" name="ShowSpec" abbrev="ShowSpec"/>
    </thing>
  <thing id="raSgSleepB" name="Sleep Breath" description="Counts as two uses of breath weapon and uses same area, targets failing a Fortitude save are asleep for 1d6 rounds, and may be awoken using the same methods as targets of the {i}sleep{/i} spell." compset="RaceSpec">
    <usesource source="sggDragRid"/>
    <tag group="StandardDC" tag="aCON"/>
    <tag group="Helper" tag="ShowSpec" name="ShowSpec" abbrev="ShowSpec"/>
    <tag group="SpecType" tag="Attack"/>
    <tag group="AbilType" tag="Super"/>
    </thing>
  <thing id="minSteeBra" name="Dragon Steed, Brass" description="The bonded dragon mount for the Dragonrider class.\n\nA dragonrider’s alignment must be within one step of his dragon steed (see Chapter Seven in the Pathfinder Roleplaying game for more information on alignment steps)." compset="Minion" stacking="never" uniqueness="useronce">
    <usesource source="sggDragRid"/>
    <tag group="gType" tag="Mounts" name="Mounts, Pets and Related Gear" abbrev="Mounts"/>
    <tag group="Helper" tag="NoPathSoc"/>
    <exprreq message="You must have at least one level in Dragonrider to take this mount."><![CDATA[#custspeciallevelcount[Dragonrid] <> 0]]></exprreq>
    <exprreq message="Wrong alignment to bond to this dragon.">tagis[Alignment.Evil] + tagis[Alignment.Lawful] = 0</exprreq>
    <minion id="Mount">
      <tag group="Hero" tag="FixedRace" name="FixedRace" abbrev="FixedRace"/>
      <bootstrap thing="rSGDrrBras"></bootstrap>
      </minion>
    </thing>
  <thing id="rSGDrrBron" name="Dragon Steed, Bronze" description="This is the Dragonrider class dragon steed mount." compset="Race" uniqueness="unique">
    <fieldval field="rAC" value="5"/>
    <fieldval field="rSTR" value="3"/>
    <fieldval field="rDEX" value="4"/>
    <fieldval field="rCON" value="3"/>
    <fieldval field="rWIS" value="5"/>
    <fieldval field="rSpeed" value="50"/>
    <fieldval field="rINT" value="4"/>
    <fieldval field="rCHA" value="4"/>
    <usesource source="sggDragRid"/>
    <tag group="Helper" tag="NoPathSoc"/>
    <tag group="Helper" tag="Quadruped"/>
    <tag group="Helper" tag="NotHum"/>
    <tag group="BloodEner" tag="Elec" name="Electricity"/>
    <tag group="RaceType" tag="Animal"/>
    <tag group="Alignment" tag="Good"/>
    <tag group="HasType" tag="tpSgDragon"/>
    <tag group="RaceSize" tag="Medium0"/>
    <tag group="Alignment" tag="Lawful"/>
    <tag group="SlotSet" tag="selMISQuaC"/>
    <bootstrap thing="cBonusHD">
      <containerreq phase="First" priority="500"><![CDATA[fieldval:anCompLev >= 5]]></containerreq>
      </bootstrap>
    <bootstrap thing="cBonusHD">
      <containerreq phase="First" priority="500"><![CDATA[fieldval:anCompLev >= 6]]></containerreq>
      </bootstrap>
    <bootstrap thing="cBonusHD">
      <containerreq phase="First" priority="500"><![CDATA[fieldval:anCompLev >= 8]]></containerreq>
      </bootstrap>
    <bootstrap thing="cBonusHD">
      <containerreq phase="First" priority="500"><![CDATA[fieldval:anCompLev >= 9]]></containerreq>
      </bootstrap>
    <bootstrap thing="cBonusHD">
      <containerreq phase="First" priority="500"><![CDATA[fieldval:anCompLev >= 10]]></containerreq>
      </bootstrap>
    <bootstrap thing="cBonusHD">
      <containerreq phase="First" priority="500"><![CDATA[fieldval:anCompLev >= 12]]></containerreq>
      </bootstrap>
    <bootstrap thing="cBonusHD">
      <containerreq phase="First" priority="500"><![CDATA[fieldval:anCompLev >= 13]]></containerreq>
      </bootstrap>
    <bootstrap thing="cBonusHD">
      <containerreq phase="First" priority="500"><![CDATA[fieldval:anCompLev >= 14]]></containerreq>
      </bootstrap>
    <bootstrap thing="cBonusHD">
      <containerreq phase="First" priority="500"><![CDATA[fieldval:anCompLev >= 16]]></containerreq>
      </bootstrap>
    <bootstrap thing="cBonusHD">
      <containerreq phase="First" priority="500"><![CDATA[fieldval:anCompLev >= 17]]></containerreq>
      </bootstrap>
    <bootstrap thing="cBonusHD">
      <containerreq phase="First" priority="500"><![CDATA[fieldval:anCompLev >= 18]]></containerreq>
      </bootstrap>
    <bootstrap thing="cBonusHD">
      <containerreq phase="First" priority="500"><![CDATA[fieldval:anCompLev >= 20]]></containerreq>
      </bootstrap>
    <bootstrap thing="zSggDrrInt"></bootstrap>
    <bootstrap thing="zSggDrrNat"></bootstrap>
    <bootstrap thing="zSggDrrStr"></bootstrap>
    <bootstrap thing="raSgSteedB">
      <autotag group="Custom" tag="sggLine"/>
      </bootstrap>
    <bootstrap thing="raSgDrFocu"></bootstrap>
    <bootstrap thing="raSgLink"></bootstrap>
    <bootstrap thing="raSgSharSp">
      <containerreq phase="First" priority="500"><![CDATA[fieldval:anCompLev >= 2]]></containerreq>
      </bootstrap>
    <bootstrap thing="raSgEvasio">
      <containerreq phase="First" priority="500"><![CDATA[fieldval:anCompLev >= 3]]></containerreq>
      </bootstrap>
    <bootstrap thing="raSgDevoti">
      <containerreq phase="First" priority="500"><![CDATA[fieldval:anCompLev >= 6]]></containerreq>
      </bootstrap>
    <bootstrap thing="fMultiAtt">
      <containerreq phase="First" priority="500"><![CDATA[fieldval:anCompLev >= 11]]></containerreq>
      </bootstrap>
    <bootstrap thing="xFly">
      <autotag group="Maneuver" tag="Clumsy"/>
      <autotag group="Value" tag="40"/>
      </bootstrap>
    <bootstrap thing="wBite">
      <autotag group="wMain" tag="1d6_5"/>
      <autotag group="Helper" tag="NatSizeDmg"/>
      </bootstrap>
    <bootstrap thing="wClaw">
      <autotag group="wMain" tag="1d4_4"/>
      <autotag group="Value" tag="2"/>
      <autotag group="Helper" tag="NatSizeDmg"/>
      </bootstrap>
    <bootstrap thing="xImmElec"></bootstrap>
    <bootstrap thing="raSgImpEva">
      <containerreq phase="First" priority="500"><![CDATA[fieldval:anCompLev >= 16]]></containerreq>
      </bootstrap>
    <bootstrap thing="raBroWateB">
      <containerreq phase="First" priority="500"><![CDATA[fieldval:anCompLev >= 8]]></containerreq>
      </bootstrap>
    <bootstrap thing="raBroElecA">
      <containerreq phase="First" priority="500"><![CDATA[fieldval:anCompLev >= 16]]></containerreq>
      </bootstrap>
    <bootstrap thing="cBonusHD"></bootstrap>
    <bootstrap thing="cBonusHD"></bootstrap>
    <bootstrap thing="cBonusHD">
      <containerreq phase="First" priority="500"><![CDATA[fieldval:anCompLev >= 2]]></containerreq>
      </bootstrap>
    <bootstrap thing="raBroWaveM">
      <containerreq phase="First" priority="500"><![CDATA[fieldval:anCompLev >= 8]]></containerreq>
      </bootstrap>
    <bootstrap thing="cBonusHD">
      <containerreq phase="First" priority="500"><![CDATA[fieldval:anCompLev >= 4]]></containerreq>
      </bootstrap>
    <eval phase="PostAttr" priority="500" index="3">~ Calculate the Dragon steeds skill points
#resmax[resSkill] += (hero.child[tpSgDragon].field[tpSkillPts].value + hero.child[aINT].field[aModBonus].value) * #totallevelcount[]</eval>
    <eval phase="First" priority="500" index="2"><![CDATA[~Set focus 1 Full, 2 Standard, 3 Move, 4 Swift, 5 Free
#value[raSgDrFocu] = 4
~ Set Steed Natural Armor
#value[zSggDrrNat] = field[anCompLev].value
~ Set Steed Str/Con bonus
#value[zSggDrrStr] = field[anCompLev].value
~ Set Steed Int/Cha bonus
#value[zSggDrrInt] = field[anCompLev].value

~ Set Form of the Dragon Breath weapon on PC
If (master.childlives[raSgBreath] <> 0) then
   perform pulltags[BloodEner.?]
   perform master.child[raSgBreath].pushtags[BloodEner.?]
   ~ Set length of breath
   master.child[raSgBreath].field[abValue].value = 100
   ~ Set Type: Line=1,Cone=0
   master.child[raSgBreath].field[abValue2].value = 1
Endif

~ Set Dragons breath weapon
perform pulltags[BloodEner.?]
perform hero.child[raSgSteedB].pushtags[BloodEner.?]
~ Set length of breath
hero.child[raSgSteedB].field[abValue].value = 30
~ Set die size
hero.child[raSgSteedB].field[abValue3].value = 4
~ Set Companion Level
hero.child[raSgSteedB].field[abValue4].value = field[anCompLev].value

~ Give SR at 16th level
~If (field[anCompLev].value >= 16) then
~   #applysr[field[anCompLev].value+5]
~Endif

~ Set natural armor bonus for this dragon
~hero.child[ArmorClass].field[tACNatural].value += 3

~ 8th level improvments
If (field[anCompLev].value >= 8) then
   herofield[tSize].value += 1
   #applydr[xDamRdMag,5]
   #applyvalue[xFly,50]
   hero.child[Speed].field[tSpeed].value = 60
   #applyvalue[raDarkVis,120]
   #value[raSgDrFocu] += 1
Endif
~ 16th level improvments
If (field[anCompLev].value >= 16) then
   herofield[tSize].value += 1
   #applydr[xDamRdMag,10]
   #applyvalue[xFly,70]
   hero.child[Speed].field[tSpeed].value = 60
   #value[raSgDrFocu] += 1
Endif]]></eval>
    <eval phase="First" priority="490"><![CDATA[~ Set animal companion level based off the Steed Class ability
~ this is so the bootstrap Bonus HD work correctly.
field[anCompLev].value += master.hero.child[cDrrSteed].field[abValue].value

~ Push energy type tag to hero level
perform pulltags[BloodEner.?]
perform hero.pushtags[BloodEner.?]

~ Set Form of the Dragon Breath weapon on PC
If (master.childlives[cDrrDragon] <> 0) then
   perform master.child[cDrrDragon].pushtags[BloodEner.?]   
Endif]]></eval>
    </thing>
  <thing id="rSGDrrCopp" name="Dragon Steed, Copper" description="This is the Dragonrider class dragon steed mount." compset="Race" uniqueness="unique">
    <fieldval field="rAC" value="5"/>
    <fieldval field="rSTR" value="1"/>
    <fieldval field="rDEX" value="6"/>
    <fieldval field="rCON" value="3"/>
    <fieldval field="rWIS" value="3"/>
    <fieldval field="rINT" value="2"/>
    <fieldval field="rCHA" value="2"/>
    <usesource source="sggDragRid"/>
    <tag group="Helper" tag="NoPathSoc"/>
    <tag group="Helper" tag="Quadruped"/>
    <tag group="Helper" tag="NotHum"/>
    <tag group="BloodEner" tag="Acid" name="Acid"/>
    <tag group="RaceType" tag="Animal"/>
    <tag group="Alignment" tag="Chaotic"/>
    <tag group="Alignment" tag="Good"/>
    <tag group="HasType" tag="tpSgDragon"/>
    <tag group="RaceSize" tag="Medium0"/>
    <tag group="SlotSet" tag="selMISQuaC"/>
    <bootstrap thing="cBonusHD">
      <containerreq phase="First" priority="500"><![CDATA[fieldval:anCompLev >= 4]]></containerreq>
      </bootstrap>
    <bootstrap thing="cBonusHD">
      <containerreq phase="First" priority="500"><![CDATA[fieldval:anCompLev >= 5]]></containerreq>
      </bootstrap>
    <bootstrap thing="cBonusHD">
      <containerreq phase="First" priority="500"><![CDATA[fieldval:anCompLev >= 6]]></containerreq>
      </bootstrap>
    <bootstrap thing="cBonusHD">
      <containerreq phase="First" priority="500"><![CDATA[fieldval:anCompLev >= 8]]></containerreq>
      </bootstrap>
    <bootstrap thing="cBonusHD">
      <containerreq phase="First" priority="500"><![CDATA[fieldval:anCompLev >= 9]]></containerreq>
      </bootstrap>
    <bootstrap thing="cBonusHD">
      <containerreq phase="First" priority="500"><![CDATA[fieldval:anCompLev >= 10]]></containerreq>
      </bootstrap>
    <bootstrap thing="cBonusHD">
      <containerreq phase="First" priority="500"><![CDATA[fieldval:anCompLev >= 12]]></containerreq>
      </bootstrap>
    <bootstrap thing="cBonusHD">
      <containerreq phase="First" priority="500"><![CDATA[fieldval:anCompLev >= 13]]></containerreq>
      </bootstrap>
    <bootstrap thing="cBonusHD">
      <containerreq phase="First" priority="500"><![CDATA[fieldval:anCompLev >= 14]]></containerreq>
      </bootstrap>
    <bootstrap thing="cBonusHD">
      <containerreq phase="First" priority="500"><![CDATA[fieldval:anCompLev >= 16]]></containerreq>
      </bootstrap>
    <bootstrap thing="cBonusHD">
      <containerreq phase="First" priority="500"><![CDATA[fieldval:anCompLev >= 17]]></containerreq>
      </bootstrap>
    <bootstrap thing="cBonusHD">
      <containerreq phase="First" priority="500"><![CDATA[fieldval:anCompLev >= 18]]></containerreq>
      </bootstrap>
    <bootstrap thing="cBonusHD">
      <containerreq phase="First" priority="500"><![CDATA[fieldval:anCompLev >= 20]]></containerreq>
      </bootstrap>
    <bootstrap thing="zSggDrrInt"></bootstrap>
    <bootstrap thing="zSggDrrNat"></bootstrap>
    <bootstrap thing="zSggDrrStr"></bootstrap>
    <bootstrap thing="raSgSteedB">
      <autotag group="Custom" tag="sggLine"/>
      </bootstrap>
    <bootstrap thing="raSgDrFocu"></bootstrap>
    <bootstrap thing="raSgLink"></bootstrap>
    <bootstrap thing="raSgSharSp">
      <containerreq phase="First" priority="500"><![CDATA[fieldval:anCompLev >= 2]]></containerreq>
      </bootstrap>
    <bootstrap thing="raSgEvasio">
      <containerreq phase="First" priority="500"><![CDATA[fieldval:anCompLev >= 3]]></containerreq>
      </bootstrap>
    <bootstrap thing="raSgDevoti">
      <containerreq phase="First" priority="500"><![CDATA[fieldval:anCompLev >= 6]]></containerreq>
      </bootstrap>
    <bootstrap thing="fMultiAtt">
      <containerreq phase="First" priority="500"><![CDATA[fieldval:anCompLev >= 11]]></containerreq>
      </bootstrap>
    <bootstrap thing="xFly">
      <autotag group="Maneuver" tag="Clumsy"/>
      <autotag group="Value" tag="40"/>
      </bootstrap>
    <bootstrap thing="wBite">
      <autotag group="wMain" tag="1d6_5"/>
      <autotag group="Helper" tag="NatSizeDmg"/>
      </bootstrap>
    <bootstrap thing="wClaw">
      <autotag group="wMain" tag="1d4_4"/>
      <autotag group="Value" tag="2"/>
      <autotag group="Helper" tag="NatSizeDmg"/>
      </bootstrap>
    <bootstrap thing="xImmAcid"></bootstrap>
    <bootstrap thing="raSgImpEva">
      <containerreq phase="First" priority="500"><![CDATA[fieldval:anCompLev >= 16]]></containerreq>
      </bootstrap>
    <bootstrap thing="raBroWateB">
      <containerreq phase="First" priority="500"><![CDATA[fieldval:anCompLev >= 8]]></containerreq>
      </bootstrap>
    <bootstrap thing="raSgSlowBr">
      <containerreq phase="First" priority="500"><![CDATA[fieldval:anCompLev >= 16]]></containerreq>
      </bootstrap>
    <bootstrap thing="cBonusHD"></bootstrap>
    <bootstrap thing="cBonusHD"></bootstrap>
    <bootstrap thing="raBroWaveM">
      <containerreq phase="First" priority="500"><![CDATA[fieldval:anCompLev >= 8]]></containerreq>
      </bootstrap>
    <bootstrap thing="cBonusHD">
      <containerreq phase="First" priority="500"><![CDATA[fieldval:anCompLev >= 2]]></containerreq>
      </bootstrap>
    <eval phase="First" priority="490"><![CDATA[~ Set animal companion level based off the Steed Class ability
~ this is so the bootstrap Bonus HD work correctly.
field[anCompLev].value += master.hero.child[cDrrSteed].field[abValue].value

~ Push energy type tag to hero level
perform pulltags[BloodEner.?]
perform hero.pushtags[BloodEner.?]

~ Set Form of the Dragon Breath weapon on PC
If (master.childlives[cDrrDragon] <> 0) then
   perform master.child[cDrrDragon].pushtags[BloodEner.?]   
Endif]]></eval>
    <eval phase="PostAttr" priority="500" index="3">~ Calculate the Dragon steeds skill points
#resmax[resSkill] += (hero.child[tpSgDragon].field[tpSkillPts].value + hero.child[aINT].field[aModBonus].value) * #totallevelcount[]</eval>
    <eval phase="First" priority="500" index="2"><![CDATA[~Set focus 1 Full, 2 Standard, 3 Move, 4 Swift, 5 Free
#value[raSgDrFocu] = 3
~ Set Steed Natural Armor
#value[zSggDrrNat] = field[anCompLev].value
~ Set Steed Str/Con bonus
#value[zSggDrrStr] = field[anCompLev].value
~ Set Steed Int/Cha bonus
#value[zSggDrrInt] = field[anCompLev].value

~ Set Form of the Dragon Breath weapon on PC
If (master.childlives[raSgBreath] <> 0) then
   perform pulltags[BloodEner.?]
   perform master.child[raSgBreath].pushtags[BloodEner.?]
   ~ Set length of breath
   master.child[raSgBreath].field[abValue].value = 100
   ~ Set Type: Line=1,Cone=0
   master.child[raSgBreath].field[abValue2].value = 1
Endif

~ Set Dragons breath weapon
perform pulltags[BloodEner.?]
perform hero.child[raSgSteedB].pushtags[BloodEner.?]
~ Set length of breath
hero.child[raSgSteedB].field[abValue].value = 30
~ Set die size
hero.child[raSgSteedB].field[abValue3].value = 6
~ Set Companion Level
hero.child[raSgSteedB].field[abValue4].value = field[anCompLev].value

~ Give SR at 16th level
~If (field[anCompLev].value >= 16) then
~   #applysr[field[anCompLev].value+5]
~Endif

~ Set natural armor bonus for this dragon
~hero.child[ArmorClass].field[tACNatural].value += 3

~ 8th level improvments
If (field[anCompLev].value >= 8) then
   herofield[tSize].value += 1
   #applydr[xDamRdMag,5]
   hero.child[Speed].field[tSpeed].value = 40
   #applyvalue[xFly,50]
   #applyvalue[xSwim,40]
   #applyvalue[raDarkVis,120]
   #value[raSgDrFocu] += 1
Endif
~ 16th level improvments
If (field[anCompLev].value >= 16) then
   herofield[tSize].value += 1
   #applydr[xDamRdMag,10]
   hero.child[Speed].field[tSpeed].value = 40
   #applyvalue[xFly,60]
   #applyvalue[xSwim,50]
   #value[raSgDrFocu] += 1
Endif]]></eval>
    </thing>
  <thing id="minSteeBro" name="Dragon Steed, Bronze" description="The bonded dragon mount for the Dragonrider class.\n\nA dragonrider’s alignment must be within one step of his dragon steed (see Chapter Seven in the Pathfinder Roleplaying game for more information on alignment steps)." compset="Minion" stacking="never" uniqueness="useronce">
    <usesource source="sggDragRid"/>
    <tag group="gType" tag="Mounts" name="Mounts, Pets and Related Gear" abbrev="Mounts"/>
    <tag group="Helper" tag="NoPathSoc"/>
    <exprreq message="You must have at least one level in Dragonrider to take this mount."><![CDATA[#custspeciallevelcount[Dragonrid] <> 0]]></exprreq>
    <exprreq message="Wrong alignment to bond to this dragon.">tagis[Alignment.Evil] + tagis[Alignment.Chaotic] = 0</exprreq>
    <minion id="Mount">
      <tag group="Hero" tag="FixedRace" name="FixedRace" abbrev="FixedRace"/>
      <bootstrap thing="rSGDrrBron"></bootstrap>
      </minion>
    </thing>
  <thing id="raSgSlowBr" name="Slow Breath" description="Counts as two uses of breath weapon and uses same area, targets failing a Fortitude save is slowed, as per the spell {i}slow{/i}, for 1 round" compset="RaceSpec">
    <usesource source="sggDragRid"/>
    <tag group="StandardDC" tag="aCON"/>
    <tag group="Helper" tag="ShowSpec" name="ShowSpec" abbrev="ShowSpec"/>
    <tag group="AbilType" tag="Super"/>
    <tag group="SpecType" tag="Attack"/>
    </thing>
  <thing id="minSteeCoo" name="Dragon Steed, Copper" description="The bonded dragon mount for the Dragonrider class.\n\nA dragonrider’s alignment must be within one step of his dragon steed (see Chapter Seven in the Pathfinder Roleplaying game for more information on alignment steps)." compset="Minion" stacking="never" uniqueness="useronce">
    <usesource source="sggDragRid"/>
    <tag group="gType" tag="Mounts" name="Mounts, Pets and Related Gear" abbrev="Mounts"/>
    <tag group="Helper" tag="NoPathSoc"/>
    <exprreq message="You must have at least one level in Dragonrider to take this mount."><![CDATA[#custspeciallevelcount[Dragonrid] <> 0]]></exprreq>
    <exprreq message="Wrong alignment to bond to this dragon.">tagis[Alignment.Evil] + tagis[Alignment.Lawful] = 0</exprreq>
    <minion id="Mount">
      <tag group="Hero" tag="FixedRace" name="FixedRace" abbrev="FixedRace"/>
      <bootstrap thing="rSGDrrCopp"></bootstrap>
      </minion>
    </thing>
  <thing id="rSGDrrGold" name="Dragon Steed, Gold" description="This is the Dragonrider class dragon steed mount." compset="Race" uniqueness="unique">
    <fieldval field="rAC" value="7"/>
    <fieldval field="rSTR" value="7"/>
    <fieldval field="rDEX" value="4"/>
    <fieldval field="rCON" value="5"/>
    <fieldval field="rWIS" value="5"/>
    <fieldval field="rSpeed" value="40"/>
    <fieldval field="rINT" value="4"/>
    <fieldval field="rCHA" value="4"/>
    <usesource source="sggDragRid"/>
    <tag group="Helper" tag="NoPathSoc"/>
    <tag group="Helper" tag="Quadruped"/>
    <tag group="Helper" tag="NotHum"/>
    <tag group="BloodEner" tag="Fire" name="Fire"/>
    <tag group="RaceType" tag="Animal"/>
    <tag group="Alignment" tag="Good"/>
    <tag group="HasType" tag="tpSgDragon"/>
    <tag group="RaceSize" tag="Large1"/>
    <tag group="Alignment" tag="Lawful"/>
    <tag group="SlotSet" tag="selMISQuaC"/>
    <bootstrap thing="cBonusHD">
      <containerreq phase="First" priority="500"><![CDATA[fieldval:anCompLev >= 5]]></containerreq>
      </bootstrap>
    <bootstrap thing="cBonusHD">
      <containerreq phase="First" priority="500"><![CDATA[fieldval:anCompLev >= 6]]></containerreq>
      </bootstrap>
    <bootstrap thing="cBonusHD">
      <containerreq phase="First" priority="500"><![CDATA[fieldval:anCompLev >= 8]]></containerreq>
      </bootstrap>
    <bootstrap thing="cBonusHD">
      <containerreq phase="First" priority="500"><![CDATA[fieldval:anCompLev >= 9]]></containerreq>
      </bootstrap>
    <bootstrap thing="cBonusHD">
      <containerreq phase="First" priority="500"><![CDATA[fieldval:anCompLev >= 10]]></containerreq>
      </bootstrap>
    <bootstrap thing="cBonusHD">
      <containerreq phase="First" priority="500"><![CDATA[fieldval:anCompLev >= 12]]></containerreq>
      </bootstrap>
    <bootstrap thing="cBonusHD">
      <containerreq phase="First" priority="500"><![CDATA[fieldval:anCompLev >= 13]]></containerreq>
      </bootstrap>
    <bootstrap thing="cBonusHD">
      <containerreq phase="First" priority="500"><![CDATA[fieldval:anCompLev >= 14]]></containerreq>
      </bootstrap>
    <bootstrap thing="cBonusHD">
      <containerreq phase="First" priority="500"><![CDATA[fieldval:anCompLev >= 16]]></containerreq>
      </bootstrap>
    <bootstrap thing="cBonusHD">
      <containerreq phase="First" priority="500"><![CDATA[fieldval:anCompLev >= 17]]></containerreq>
      </bootstrap>
    <bootstrap thing="cBonusHD">
      <containerreq phase="First" priority="500"><![CDATA[fieldval:anCompLev >= 18]]></containerreq>
      </bootstrap>
    <bootstrap thing="cBonusHD">
      <containerreq phase="First" priority="500"><![CDATA[fieldval:anCompLev >= 20]]></containerreq>
      </bootstrap>
    <bootstrap thing="zSggDrrInt"></bootstrap>
    <bootstrap thing="zSggDrrNat"></bootstrap>
    <bootstrap thing="zSggDrrStr"></bootstrap>
    <bootstrap thing="raSgSteedB">
      <autotag group="Custom" tag="sggCone"/>
      </bootstrap>
    <bootstrap thing="raSgDrFocu"></bootstrap>
    <bootstrap thing="raSgLink"></bootstrap>
    <bootstrap thing="raSgSharSp">
      <containerreq phase="First" priority="500"><![CDATA[fieldval:anCompLev >= 2]]></containerreq>
      </bootstrap>
    <bootstrap thing="raSgEvasio">
      <containerreq phase="First" priority="500"><![CDATA[fieldval:anCompLev >= 3]]></containerreq>
      </bootstrap>
    <bootstrap thing="raSgDevoti">
      <containerreq phase="First" priority="500"><![CDATA[fieldval:anCompLev >= 6]]></containerreq>
      </bootstrap>
    <bootstrap thing="fMultiAtt">
      <containerreq phase="First" priority="500"><![CDATA[fieldval:anCompLev >= 11]]></containerreq>
      </bootstrap>
    <bootstrap thing="xFly">
      <autotag group="Maneuver" tag="Clumsy"/>
      <autotag group="Value" tag="30"/>
      </bootstrap>
    <bootstrap thing="wBite">
      <autotag group="wMain" tag="1d6_5"/>
      <autotag group="Helper" tag="NatSizeDmg"/>
      </bootstrap>
    <bootstrap thing="wClaw">
      <autotag group="wMain" tag="1d4_4"/>
      <autotag group="Value" tag="2"/>
      <autotag group="Helper" tag="NatSizeDmg"/>
      </bootstrap>
    <bootstrap thing="xImmFire"></bootstrap>
    <bootstrap thing="raSgImpEva">
      <containerreq phase="First" priority="500"><![CDATA[fieldval:anCompLev >= 16]]></containerreq>
      </bootstrap>
    <bootstrap thing="raUncanny">
      <containerreq phase="First" priority="500"><![CDATA[fieldval:anCompLev >= 8]]></containerreq>
      </bootstrap>
    <bootstrap thing="raSgWeakBr">
      <containerreq phase="First" priority="500"><![CDATA[fieldval:anCompLev >= 16]]></containerreq>
      </bootstrap>
    <bootstrap thing="cBonusHD"></bootstrap>
    <bootstrap thing="cBonusHD"></bootstrap>
    <bootstrap thing="cBonusHD">
      <containerreq phase="First" priority="500"><![CDATA[fieldval:anCompLev >= 2]]></containerreq>
      </bootstrap>
    <bootstrap thing="cBonusHD">
      <containerreq phase="First" priority="500"><![CDATA[fieldval:anCompLev >= 4]]></containerreq>
      </bootstrap>
    <eval phase="First" priority="490"><![CDATA[~ Set animal companion level based off the Steed Class ability
~ this is so the bootstrap Bonus HD work correctly.
field[anCompLev].value += master.hero.child[cDrrSteed].field[abValue].value

~ Push energy type tag to hero level
perform pulltags[BloodEner.?]
perform hero.pushtags[BloodEner.?]

~ Set Form of the Dragon Breath weapon on PC
If (master.childlives[cDrrDragon] <> 0) then
   perform master.child[cDrrDragon].pushtags[BloodEner.?]   
Endif]]></eval>
    <eval phase="PostAttr" priority="500" index="3">~ Calculate the Dragon steeds skill points
#resmax[resSkill] += (hero.child[tpSgDragon].field[tpSkillPts].value + hero.child[aINT].field[aModBonus].value) * #totallevelcount[]</eval>
    <eval phase="First" priority="500" index="2"><![CDATA[~Set focus 1 Full, 2 Standard, 3 Move, 4 Swift, 5 Free
#value[raSgDrFocu] = 2
~ Set Steed Natural Armor
#value[zSggDrrNat] = field[anCompLev].value
~ Set Steed Str/Con bonus
#value[zSggDrrStr] = field[anCompLev].value
~ Set Steed Int/Cha bonus
#value[zSggDrrInt] = field[anCompLev].value

~ Set Form of the Dragon Breath weapon on PC
If (master.childlives[raSgBreath] <> 0) then
   perform pulltags[BloodEner.?]
   perform master.child[raSgBreath].pushtags[BloodEner.?]
   ~ Set length of breath
   master.child[raSgBreath].field[abValue].value = 100
   ~ Set Type: Line=1,Cone=0
   master.child[raSgBreath].field[abValue2].value = 1
Endif

~ Set Dragons breath weapon
perform pulltags[BloodEner.?]
perform hero.child[raSgSteedB].pushtags[BloodEner.?]
~ Set length of breath
hero.child[raSgSteedB].field[abValue].value = 15
~ Set die size
hero.child[raSgSteedB].field[abValue3].value = 8
~ Set Companion Level
hero.child[raSgSteedB].field[abValue4].value = field[anCompLev].value

~ 8th level improvments
If (field[anCompLev].value >= 8) then
   herofield[tSize].value += 1
   #applydr[xDamRdMag,5]
   hero.child[Speed].field[tSpeed].value = 50
   #applyvalue[xFly,60]
   #applyvalue[raDarkVis,120]
   #value[raSgDrFocu] += 1
Endif
~ 16th level improvments
If (field[anCompLev].value >= 16) then
   herofield[tSize].value += 1
   #applydr[xDamRdMag,10]
   hero.child[Speed].field[tSpeed].value = 60
   #applyvalue[xFly,100]
   #value[raSgDrFocu] += 1
Endif]]></eval>
    </thing>
  <thing id="raSgWeakBr" name="Weakening Breath" description="Counts as two uses of breath weapon and uses same area, targets failing a Fortitude save take 1d4+1 Strength damage." compset="RaceSpec">
    <usesource source="sggDragRid"/>
    <tag group="StandardDC" tag="aCON"/>
    <tag group="Helper" tag="ShowSpec" name="ShowSpec" abbrev="ShowSpec"/>
    <tag group="AbilType" tag="Super"/>
    <tag group="SpecType" tag="Attack"/>
    </thing>
  <thing id="minSteeGol" name="Dragon Steed, Gold" description="The bonded dragon mount for the Dragonrider class.\n\nA dragonrider’s alignment must be within one step of his dragon steed (see Chapter Seven in the Pathfinder Roleplaying game for more information on alignment steps)." compset="Minion" stacking="never" uniqueness="useronce">
    <usesource source="sggDragRid"/>
    <tag group="gType" tag="Mounts" name="Mounts, Pets and Related Gear" abbrev="Mounts"/>
    <tag group="Helper" tag="NoPathSoc"/>
    <exprreq message="You must have at least one level in Dragonrider to take this mount."><![CDATA[#custspeciallevelcount[Dragonrid] <> 0]]></exprreq>
    <exprreq message="Wrong alignment to bond to this dragon.">tagis[Alignment.Evil] + tagis[Alignment.Lawful] = 0</exprreq>
    <minion id="Mount">
      <tag group="Hero" tag="FixedRace" name="FixedRace" abbrev="FixedRace"/>
      <bootstrap thing="rSGDrrGold"></bootstrap>
      </minion>
    </thing>
  <thing id="rSGDrrSilv" name="Dragon Steed, Silver" description="This is the Dragonrider class dragon steed mount." compset="Race" uniqueness="unique">
    <fieldval field="rAC" value="6"/>
    <fieldval field="rSTR" value="3"/>
    <fieldval field="rDEX" value="4"/>
    <fieldval field="rCON" value="3"/>
    <fieldval field="rWIS" value="5"/>
    <fieldval field="rINT" value="4"/>
    <fieldval field="rCHA" value="4"/>
    <usesource source="sggDragRid"/>
    <tag group="Helper" tag="NoPathSoc"/>
    <tag group="Helper" tag="Quadruped"/>
    <tag group="Helper" tag="NotHum"/>
    <tag group="BloodEner" tag="Cold" name="Cold"/>
    <tag group="RaceType" tag="Animal"/>
    <tag group="Alignment" tag="Good"/>
    <tag group="HasType" tag="tpSgDragon"/>
    <tag group="RaceSize" tag="Large1"/>
    <tag group="Alignment" tag="Lawful"/>
    <tag group="SlotSet" tag="selMISQuaC"/>
    <bootstrap thing="cBonusHD">
      <containerreq phase="First" priority="500"><![CDATA[fieldval:anCompLev >= 5]]></containerreq>
      </bootstrap>
    <bootstrap thing="cBonusHD">
      <containerreq phase="First" priority="500"><![CDATA[fieldval:anCompLev >= 6]]></containerreq>
      </bootstrap>
    <bootstrap thing="cBonusHD">
      <containerreq phase="First" priority="500"><![CDATA[fieldval:anCompLev >= 8]]></containerreq>
      </bootstrap>
    <bootstrap thing="cBonusHD">
      <containerreq phase="First" priority="500"><![CDATA[fieldval:anCompLev >= 9]]></containerreq>
      </bootstrap>
    <bootstrap thing="cBonusHD">
      <containerreq phase="First" priority="500"><![CDATA[fieldval:anCompLev >= 10]]></containerreq>
      </bootstrap>
    <bootstrap thing="cBonusHD">
      <containerreq phase="First" priority="500"><![CDATA[fieldval:anCompLev >= 12]]></containerreq>
      </bootstrap>
    <bootstrap thing="cBonusHD">
      <containerreq phase="First" priority="500"><![CDATA[fieldval:anCompLev >= 13]]></containerreq>
      </bootstrap>
    <bootstrap thing="cBonusHD">
      <containerreq phase="First" priority="500"><![CDATA[fieldval:anCompLev >= 14]]></containerreq>
      </bootstrap>
    <bootstrap thing="cBonusHD">
      <containerreq phase="First" priority="500"><![CDATA[fieldval:anCompLev >= 16]]></containerreq>
      </bootstrap>
    <bootstrap thing="cBonusHD">
      <containerreq phase="First" priority="500"><![CDATA[fieldval:anCompLev >= 17]]></containerreq>
      </bootstrap>
    <bootstrap thing="cBonusHD">
      <containerreq phase="First" priority="500"><![CDATA[fieldval:anCompLev >= 18]]></containerreq>
      </bootstrap>
    <bootstrap thing="cBonusHD">
      <containerreq phase="First" priority="500"><![CDATA[fieldval:anCompLev >= 20]]></containerreq>
      </bootstrap>
    <bootstrap thing="zSggDrrInt"></bootstrap>
    <bootstrap thing="zSggDrrNat"></bootstrap>
    <bootstrap thing="zSggDrrStr"></bootstrap>
    <bootstrap thing="raSgSteedB">
      <autotag group="Custom" tag="sggCone"/>
      </bootstrap>
    <bootstrap thing="raSgDrFocu"></bootstrap>
    <bootstrap thing="raSgLink"></bootstrap>
    <bootstrap thing="raSgSharSp">
      <containerreq phase="First" priority="500"><![CDATA[fieldval:anCompLev >= 2]]></containerreq>
      </bootstrap>
    <bootstrap thing="raSgEvasio">
      <containerreq phase="First" priority="500"><![CDATA[fieldval:anCompLev >= 3]]></containerreq>
      </bootstrap>
    <bootstrap thing="raSgDevoti">
      <containerreq phase="First" priority="500"><![CDATA[fieldval:anCompLev >= 6]]></containerreq>
      </bootstrap>
    <bootstrap thing="fMultiAtt">
      <containerreq phase="First" priority="500"><![CDATA[fieldval:anCompLev >= 11]]></containerreq>
      </bootstrap>
    <bootstrap thing="xFly">
      <autotag group="Maneuver" tag="Clumsy"/>
      <autotag group="Value" tag="30"/>
      </bootstrap>
    <bootstrap thing="wBite">
      <autotag group="wMain" tag="1d6_5"/>
      <autotag group="Helper" tag="NatSizeDmg"/>
      </bootstrap>
    <bootstrap thing="wClaw">
      <autotag group="wMain" tag="1d4_4"/>
      <autotag group="Value" tag="2"/>
      <autotag group="Helper" tag="NatSizeDmg"/>
      </bootstrap>
    <bootstrap thing="xImmFire"></bootstrap>
    <bootstrap thing="raSgImpEva">
      <containerreq phase="First" priority="500"><![CDATA[fieldval:anCompLev >= 16]]></containerreq>
      </bootstrap>
    <bootstrap thing="raSgIncine">
      <containerreq phase="First" priority="500"><![CDATA[fieldval:anCompLev >= 8]]></containerreq>
      </bootstrap>
    <bootstrap thing="raSgParaBr">
      <containerreq phase="First" priority="500"><![CDATA[fieldval:anCompLev >= 16]]></containerreq>
      </bootstrap>
    <bootstrap thing="cBonusHD"></bootstrap>
    <bootstrap thing="cBonusHD"></bootstrap>
    <bootstrap thing="cBonusHD">
      <containerreq phase="First" priority="500"><![CDATA[fieldval:anCompLev >= 2]]></containerreq>
      </bootstrap>
    <bootstrap thing="cBonusHD">
      <containerreq phase="First" priority="500"><![CDATA[fieldval:anCompLev >= 4]]></containerreq>
      </bootstrap>
    <eval phase="First" priority="490"><![CDATA[~ Set animal companion level based off the Steed Class ability
~ this is so the bootstrap Bonus HD work correctly.
field[anCompLev].value += master.hero.child[cDrrSteed].field[abValue].value

~ Push energy type tag to hero level
perform pulltags[BloodEner.?]
perform hero.pushtags[BloodEner.?]

~ Set Form of the Dragon Breath weapon on PC
If (master.childlives[cDrrDragon] <> 0) then
   perform master.child[cDrrDragon].pushtags[BloodEner.?]   
Endif]]></eval>
    <eval phase="PostAttr" priority="500" index="3">~ Calculate the Dragon steeds skill points
#resmax[resSkill] += (hero.child[tpSgDragon].field[tpSkillPts].value + hero.child[aINT].field[aModBonus].value) * #totallevelcount[]</eval>
    <eval phase="First" priority="500" index="2"><![CDATA[~Set focus 1 Full, 2 Standard, 3 Move, 4 Swift, 5 Free
#value[raSgDrFocu] = 2
~ Set Steed Natural Armor
#value[zSggDrrNat] = field[anCompLev].value
~ Set Steed Str/Con bonus
#value[zSggDrrStr] = field[anCompLev].value
~ Set Steed Int/Cha bonus
#value[zSggDrrInt] = field[anCompLev].value

~ Set Form of the Dragon Breath weapon on PC
If (master.childlives[raSgBreath] <> 0) then
   perform pulltags[BloodEner.?]
   perform master.child[raSgBreath].pushtags[BloodEner.?]
   ~ Set length of breath
   master.child[raSgBreath].field[abValue].value = 100
   ~ Set Type: Line=1,Cone=0
   master.child[raSgBreath].field[abValue2].value = 1
Endif

~ Set Dragons breath weapon
perform pulltags[BloodEner.?]
perform hero.child[raSgSteedB].pushtags[BloodEner.?]
~ Set length of breath
hero.child[raSgSteedB].field[abValue].value = 15
~ Set die size
hero.child[raSgSteedB].field[abValue3].value = 8
~ Set Companion Level
hero.child[raSgSteedB].field[abValue4].value = field[anCompLev].value

~ 8th level improvments
If (field[anCompLev].value >= 8) then
   herofield[tSize].value += 1
   #applydr[xDamRdMag,5]
   hero.child[Speed].field[tSpeed].value = 40
   #applyvalue[xFly,40]
   #applyvalue[raDarkVis,120]
   #value[raSgDrFocu] += 1
Endif
~ 16th level improvments
If (field[anCompLev].value >= 16) then
   herofield[tSize].value += 1
   #applydr[xDamRdMag,10]
   hero.child[Speed].field[tSpeed].value = 40
   #applyvalue[xFly,50]
   #value[raSgDrFocu] += 1
Endif]]></eval>
    </thing>
  <thing id="raSgParaBr" name="Paralyzing Breath" description="Counts as two uses of breath weapon and uses same area, targets failing a Fortitude save are affected as by a hold person spell." compset="RaceSpec">
    <usesource source="sggDragRid"/>
    <tag group="StandardDC" tag="aCON"/>
    <tag group="Helper" tag="ShowSpec" name="ShowSpec" abbrev="ShowSpec"/>
    <tag group="AbilType" tag="Super"/>
    <tag group="SpecType" tag="Attack"/>
    </thing>
  <thing id="minSteeSil" name="Dragon Steed, Silver" description="The bonded dragon mount for the Dragonrider class.\n\nA dragonrider’s alignment must be within one step of his dragon steed (see Chapter Seven in the Pathfinder Roleplaying game for more information on alignment steps)." compset="Minion" stacking="never" uniqueness="useronce">
    <usesource source="sggDragRid"/>
    <tag group="gType" tag="Mounts" name="Mounts, Pets and Related Gear" abbrev="Mounts"/>
    <tag group="Helper" tag="NoPathSoc"/>
    <exprreq message="You must have at least one level in Dragonrider to take this mount."><![CDATA[#custspeciallevelcount[Dragonrid] <> 0]]></exprreq>
    <exprreq message="Wrong alignment to bond to this dragon.">tagis[Alignment.Evil] + tagis[Alignment.Chaotic] = 0</exprreq>
    <minion id="Mount">
      <tag group="Hero" tag="FixedRace" name="FixedRace" abbrev="FixedRace"/>
      <bootstrap thing="rSGDrrSilv"></bootstrap>
      </minion>
    </thing>
  </document>
