<?xml version="1.0" encoding="UTF-8"?>
<document signature="Hero Lab Data">
  <thing id="cHelpPU0" name="Aegis" compset="Class" uniqueness="unique">
    <fieldval field="cHDSides" value="10"/>
    <fieldval field="cAbbr" value="Aeg"/>
    <fieldval field="cSkills" value="4"/>
    <fieldval field="srcPageNum" value="28"/>
    <fieldval field="srcBookInf" value="Ultimate Psionics"/>
    <fieldval field="cSCRNumDce" value="2"/>
    <fieldval field="cSCRDceSiz" value="6"/>
    <fieldval field="cSCRMult" value="10"/>
    <arrayval field="cPsiPPTot" index="5" value="9"/>
    <arrayval field="cPsiPPTot" index="6" value="11"/>
    <arrayval field="cPsiPPTot" index="7" value="14"/>
    <arrayval field="cPsiPPTot" index="8" value="17"/>
    <arrayval field="cPsiPPTot" index="9" value="20"/>
    <arrayval field="cPsiPPTot" index="10" value="24"/>
    <arrayval field="cPsiPPTot" index="11" value="28"/>
    <arrayval field="cPsiPPTot" index="12" value="32"/>
    <arrayval field="cPsiPPTot" index="13" value="37"/>
    <arrayval field="cPsiPPTot" index="14" value="42"/>
    <arrayval field="cPsiPPTot" index="15" value="47"/>
    <arrayval field="cPsiPPTot" index="16" value="52"/>
    <arrayval field="cPsiPPTot" index="17" value="58"/>
    <arrayval field="cPsiPPTot" index="18" value="64"/>
    <arrayval field="cPsiPPTot" index="19" value="70"/>
    <arrayval field="cPsiPPTot" index="0" value="1"/>
    <arrayval field="cPsiPPTot" index="1" value="2"/>
    <arrayval field="cPsiPPTot" index="2" value="3"/>
    <arrayval field="cPsiPPTot" index="3" value="5"/>
    <arrayval field="cPsiPPTot" index="4" value="7"/>
    <usesource source="pPsiUn"/>
    <tag group="Classes" tag="Aegis" name="Aegis"/>
    <tag group="Psionics" tag="Class"/>
    <tag group="ClassSkill" tag="skAcrobat"/>
    <tag group="ClassSkill" tag="Craft"/>
    <tag group="ClassSkill" tag="Profession"/>
    <tag group="ClassSkill" tag="skPUAhypno"/>
    <tag group="ClassSkill" tag="skClimb"/>
    <tag group="ClassSkill" tag="skFly"/>
    <tag group="ClassSkill" tag="skIntim"/>
    <tag group="ClassSkill" tag="skKnowEng"/>
    <tag group="ClassSkill" tag="skPUKnwPsi"/>
    <tag group="ClassSkill" tag="skSpellcr"/>
    <tag group="ClassSkill" tag="skSwim"/>
    <tag group="ClassSkill" tag="skUseMagic"/>
    <tag group="cFort" tag="Good"/>
    <tag group="cRef" tag="Poor"/>
    <tag group="cWill" tag="Good"/>
    <tag group="cAttack" tag="Good"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <bootstrap thing="cPUAegHelp"></bootstrap>
    <bootstrap thing="cPUReconfi">
      <autotag group="ClSpecWhen" tag="19"/>
      </bootstrap>
    <bootstrap thing="cPUMastCr">
      <autotag group="ClSpecWhen" tag="5"/>
      </bootstrap>
    <bootstrap thing="cPUCanniSu">
      <autotag group="ClSpecWhen" tag="12"/>
      </bootstrap>
    <bootstrap thing="cPUCanniSu">
      <autotag group="ClSpecWhen" tag="14"/>
      </bootstrap>
    <bootstrap thing="cPUCanniSu">
      <autotag group="ClSpecWhen" tag="16"/>
      </bootstrap>
    <bootstrap thing="cPUCanniSu">
      <autotag group="ClSpecWhen" tag="18"/>
      </bootstrap>
    <bootstrap thing="cPUCanniSu">
      <autotag group="ClSpecWhen" tag="20"/>
      </bootstrap>
    <bootstrap thing="cPUPerfMer">
      <autotag group="ClSpecWhen" tag="20"/>
      </bootstrap>
    <bootstrap thing="cPUAugSuit">
      <autotag group="ClSpecWhen" tag="4"/>
      </bootstrap>
    <bootstrap thing="cPUAugSuit">
      <autotag group="ClSpecWhen" tag="8"/>
      </bootstrap>
    <bootstrap thing="cPUAugSuit">
      <autotag group="ClSpecWhen" tag="12"/>
      </bootstrap>
    <bootstrap thing="cPUAugSuit">
      <autotag group="ClSpecWhen" tag="16"/>
      </bootstrap>
    <bootstrap thing="cPUAugSuit">
      <autotag group="ClSpecWhen" tag="20"/>
      </bootstrap>
    <bootstrap thing="cPUAstrRep">
      <autotag group="ClSpecWhen" tag="1"/>
      </bootstrap>
    <bootstrap thing="cPUCraftsm">
      <autotag group="ClSpecWhen" tag="2"/>
      </bootstrap>
    <bootstrap thing="cPUCraftsm">
      <autotag group="ClSpecWhen" tag="6"/>
      </bootstrap>
    <bootstrap thing="cPUCraftsm">
      <autotag group="ClSpecWhen" tag="10"/>
      </bootstrap>
    <bootstrap thing="cPUCraftsm">
      <autotag group="ClSpecWhen" tag="14"/>
      </bootstrap>
    <bootstrap thing="cPUCraftsm">
      <autotag group="ClSpecWhen" tag="18"/>
      </bootstrap>
    <bootstrap thing="cPUAstSuit">
      <autotag group="ClSpecWhen" tag="1"/>
      </bootstrap>
    <bootstrap thing="cPUAegDR">
      <autotag group="ClSpecWhen" tag="2"/>
      </bootstrap>
    <bootstrap thing="cPUAegDR">
      <autotag group="ClSpecWhen" tag="5"/>
      </bootstrap>
    <bootstrap thing="cPUAegDR">
      <autotag group="ClSpecWhen" tag="8"/>
      </bootstrap>
    <bootstrap thing="cPUAegDR">
      <autotag group="ClSpecWhen" tag="11"/>
      </bootstrap>
    <bootstrap thing="cPUAegDR">
      <autotag group="ClSpecWhen" tag="14"/>
      </bootstrap>
    <bootstrap thing="cPUAegDR">
      <autotag group="ClSpecWhen" tag="17"/>
      </bootstrap>
    <bootstrap thing="cPUAegDR">
      <autotag group="ClSpecWhen" tag="20"/>
      </bootstrap>
    <bootstrap thing="cPUInvigSu">
      <autotag group="ClSpecWhen" tag="3"/>
      </bootstrap>
    <bootstrap thing="cPUReconfi">
      <autotag group="ClSpecWhen" tag="3"/>
      </bootstrap>
    <bootstrap thing="cPUReconfi">
      <autotag group="ClSpecWhen" tag="5"/>
      </bootstrap>
    <bootstrap thing="cPUReconfi">
      <autotag group="ClSpecWhen" tag="7"/>
      </bootstrap>
    <bootstrap thing="cPUReconfi">
      <autotag group="ClSpecWhen" tag="9"/>
      </bootstrap>
    <bootstrap thing="cPUReconfi">
      <autotag group="ClSpecWhen" tag="11"/>
      </bootstrap>
    <bootstrap thing="cPUReconfi">
      <autotag group="ClSpecWhen" tag="13"/>
      </bootstrap>
    <bootstrap thing="cPUReconfi">
      <autotag group="ClSpecWhen" tag="15"/>
      </bootstrap>
    <bootstrap thing="cPUReconfi">
      <autotag group="ClSpecWhen" tag="17"/>
      </bootstrap>
    <bootstrap thing="fArmLight"></bootstrap>
    <bootstrap thing="fArmShield"></bootstrap>
    <bootstrap thing="fWepMart"></bootstrap>
    <bootstrap thing="fSimple"></bootstrap>
    <link linkage="psiattr" thing="aINT"/>
    <eval phase="PostLevel" priority="500"><![CDATA[
      ~ Set Aegis level into Aegis Helper pick &
      hero.childfound[cPUAegHelp].field[S2ClsLevel].value += field[cTotalLev].value]]></eval>
    </thing>
  <thing id="cPUAegis" name="Aegis" description="While the shaper is the master of manipulating ectoplasm and creating any manner of item, the aegis has learned to take ectoplasm and form it into a suit to be worn around his body, granting him a variety of benefits.\n\nThe aegis can shape his astral suit into several different forms and is capable of altering its abilities to suit his needs.\n\n{b}Role:{/b} An aegis is a front-line combatant. His astral suit allows him significant flexibility in handling combat and non-combat situations, and his defensive abilities are considerable.\n\n{b}Alignment:{/b} Any." compset="ClassLevel" maxlimit="20">
    <usesource source="pPsiUn"/>
    <tag group="ClassType" tag="Normal"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <bootstrap thing="cHelpPU0"></bootstrap>
    <link linkage="helper" thing="cHelpPU0"/>
    <eval phase="First" priority="50"><![CDATA[
      ~ Assign Class helper tag very early on the hero for
      ~ testing on the Bootstrap armor Thing. &
      perform hero.assign[Custom.AegisLvls]]]></eval>
    </thing>
  <thing id="cfgPUAstSu" name="Astral Suit" compset="Configure" uniqueness="unique">
    <fieldval field="cfgObject1" value="Astral Suit"/>
    <fieldval field="cfgObject2" value="Customization"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <eval phase="PostLevel" priority="15000" name="Astral Suit Configurable"><![CDATA[
      ~ Set focus to Aegis Helper Pick &
      perform hero.childfound[cPUAegHelp].setfocus
      doneif (state.isfocus = 0)

      ~ Set Astral Suit Level from Aegis Helper &
      field[cfgLevel].value += focus.field[abValue].value

      ~ Set Configurable points from Aegis Helper.
      ~ abValue2 is Bonus points and abValue3 is the Base Points.
      field[cfgMax2].value += focus.field[abValue2].value + focus.field[abValue3].value]]>
      <after name="Set Aegis Base Points"/>
      </eval>
    </thing>
  <thing id="cPUAegHelp" name="Aegis Array Helper" description="This helper pick holds Aegis Suit Customization points and total points." compset="S2GenAry" uniqueness="useronce">
    <comment>S2Array = Points per level; abValue = Suit Level; abValue2 = Bonus/Penalty points; abValue3 = Configurable points.</comment>
    <arrayval field="S2Array" index="0" value="3"/>
    <arrayval field="S2Array" index="1" value="4"/>
    <arrayval field="S2Array" index="2" value="5"/>
    <arrayval field="S2Array" index="3" value="7"/>
    <arrayval field="S2Array" index="4" value="8"/>
    <arrayval field="S2Array" index="5" value="9"/>
    <arrayval field="S2Array" index="6" value="10"/>
    <arrayval field="S2Array" index="7" value="11"/>
    <arrayval field="S2Array" index="8" value="13"/>
    <arrayval field="S2Array" index="9" value="14"/>
    <arrayval field="S2Array" index="10" value="15"/>
    <arrayval field="S2Array" index="11" value="16"/>
    <arrayval field="S2Array" index="12" value="17"/>
    <arrayval field="S2Array" index="13" value="19"/>
    <arrayval field="S2Array" index="14" value="20"/>
    <arrayval field="S2Array" index="15" value="21"/>
    <arrayval field="S2Array" index="16" value="22"/>
    <arrayval field="S2Array" index="17" value="23"/>
    <arrayval field="S2Array" index="18" value="25"/>
    <arrayval field="S2Array" index="19" value="26"/>
    <eval phase="PostLevel" priority="12000" name="Set Aegis Base Points"><![CDATA[
      ~ Set abValue for backwards compatiblity &
      field[abValue].value += field[S2ClsLevel].value
      field[S2AryLevel].value = field[S2ClsLevel].value - 1

      ~ Set base customization points into Value Three
      field[abValue3].value += field[S2Array].arrayvalue[field[S2AryLevel].value]]]></eval>
    </thing>
  <thing id="cPUAstrRep" name="Astral Repair" description="An aegis is capable of repairing mundane items, restoring 2 hit points of damage to the touched item as a standard action usable at will. If the object has the broken condition, this condition is removed if the object is restored to at least half its original hit points. All of the pieces of an object must be present for this ability to function. This ability has no effect on objects that have been warped or otherwise transmuted, but it can still repair damage done to such items." compset="ClSpecial">
    <fieldval field="abValue" value="2"/>
    <tag group="AbilType" tag="PsiLike"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <tag group="Helper" tag="SpecUp"/>
    <bootstrap thing="puAstRep1">
      <containerreq phase="First" priority="2500">!AbReplace.cPUAstrRep</containerreq>
      <autotag group="Usage" tag="AtWill"/>
      <autotag group="Helper" tag="PsiLike"/>
      </bootstrap>
    <eval phase="PostLevel" priority="10000"><![CDATA[
      ~ If we're not shown, just get out now
      doneif (tagis[Helper.ShowSpec] <> 1)
      ~ If we've been Disabled, get out now
      doneif (tagis[Helper.SpcDisable] <> 0)

      ~ Set the total amount of points repaired
      perform hero.childfound[puAstRep1].assignstr["Value." & field[abValue].value]]]></eval>
    </thing>
  <thing id="puAstRep1" name="Astral Repair" description="An aegis is capable of repairing mundane items, restoring 2 hit points of damage to the touched item as a standard action usable at will. If the object has the broken condition, this condition is removed if the object is restored to at least half its original hit points. All of the pieces of an object must be present for this ability to function. This ability has no effect on objects that have been warped or otherwise transmuted, but it can still repair damage done to such items." compset="PsiPower">
    <comment>This is a Helper power to get the astral repair to display correctly as a Psi-Like ability on the Psionics tab.</comment>
    <tag group="sCastTime" tag="Action1"/>
    <tag group="Helper" tag="Helper"/>
    <tag group="sLevel" tag="1"/>
    <tag group="sRange" tag="Touch"/>
    <tag group="sDuration" tag="Instant"/>
    <tag group="sSave" tag="None"/>
    <tag group="psiDiscip" tag="pdPUMetacr"/>
    <tag group="sResist" tag="No"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <eval phase="Final" priority="50000"><![CDATA[
      ~ If no HP value get out now!
      doneif (tagis[Value.?] = 0)

      ~ Display the number of hit points that can be repaired
      field[livename].text = field[thingname].text & " (" & tagvalue[Value.?] & " HP)"]]></eval>
    </thing>
  <thing id="cPUAstSuit" name="Form Astral Suit" description="Every aegis learns to draw forth ectoplasm and form an astral suit around their form. The aegis can select from three different types when forming his astral suit – skin, armor, or juggernaut. An aegis is always considered to be proficient with his astral suit, even if he does not have the appropriate armor proficiency. The amount of time forming this astral suit takes depends on the type of suit being formed. Different astral suit forms grant different free customizations. These free customizations never count against the aegis’s total number of customization points spent on his astral suit.\n\nThe aegis chooses the appearance of his astral suit, although its shape must reflect the selections the aegis has chosen: astral skin would cover the aegis like a {i}psychoactive skin{/i}, astral juggernaut would appear to cover the aegis like plate armor, etc.\n\nAn astral suit can be dismissed as a free action.\n\nAn astral suit does not function in areas where psionics do not work, such as a {i}null psionics field{/i}. {i}Dismiss ectoplasm{/i} can be used against an astral suit; treat the manifester level as the aegis’s class level, although the aegis can simply form his astral suit again on his next turn." compset="ClSpecial" summary="Form an astral suit around your body.">
    <fieldval field="actName" value="Wearing Astral Suit"/>
    <tag group="SpecType" tag="Defense"/>
    <tag group="User" tag="Activation"/>
    <tag group="AbilType" tag="Super"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <bootstrap thing="cfgPUAstSu">
      <containerreq phase="First" priority="450">!AbReplace.cPUAstSuit</containerreq>
      </bootstrap>
    <eval phase="First" priority="90"><![CDATA[
      ~if we've been replaced, get out now
      doneif (tagis[Helper.SpcReplace] <> 0)
      ~ if we've been disabled, get out now
      doneif (tagis[Helper.SpcDisable] <> 0)
      ~ If ability not active get out now!
      doneif (field[abilActive].value = 0)

      ~ Set a hero tag so we can test that we are active by other Picks
      ~ at a very early timing for bootstraps.
      perform hero.assign[Custom.WearAstS]]]></eval>
    <eval phase="PostLevel" priority="10000" index="2"><![CDATA[
      ~ If we're not shown, just get out now
      doneif (tagis[Helper.ShowSpec] <> 1)
      ~ if we've been disabled, get out now
      doneif (tagis[Helper.SpcDisable] <> 0)

      field[abValue].value += field[xCount].value

      ~ The following should only happen once on the first copy
      doneif (tagis[Helper.FirstCopy] = 0)

      ~ Increase the number of allowed Astral Suits
      hero.childfound[cfgPUAstSu].field[cfgMax1].value += field[abValue].value]]></eval>
    </thing>
  <thing id="cPUCraftsm" name="Craftsman" description="Beginning at 2nd level, an aegis gains a +1 bonus to any one Craft skill of his choice. At 6th level and every four levels thereafter, this bonus increases by 1." compset="ClSpecial" summary="Gain a bonus to any one Craft skill of your choice.">
    <tag group="ChooseSrc1" tag="Hero"/>
    <tag group="Helper" tag="SpecUp"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <eval phase="PostLevel" priority="10000"><![CDATA[
      ~ Set the list name
      field[listname].text = field[thingname].text & " " & signed(field[xIndex].value)

      ~ If we're not shown, just get out now
      doneif (tagis[Helper.ShowSpec] <> 1)
      ~ if we've been disabled, get out now
      doneif (tagis[Helper.SpcDisable] <> 0)

      field[abValue].value += field[xCount].value
      field[livename].text = field[thingname].text & " " & signed(field[abValue].value)

      ~ The following should only happen once on the first copy
      doneif (tagis[Helper.FirstCopy] = 0)

      ~ Set custom expression only on the first class special
      field[usrCandid1].text = "component.BaseSkill & Helper.SkCatCraft"

      ~ If nothing chosen get out now!
      doneif (field[usrChosen1].ischosen = 0)

      ~ Increase selected craft skill
      field[usrChosen1].chosen.field[Bonus].value += field[abValue].value]]></eval>
    </thing>
  <thing id="cPUAegDR" name="Damage Reduction" description="Starting at 2nd level, when an aegis is wearing his astral suit, he gains damage reduction 2/-, regardless of what type of astral suit he is wearing. At 5th level and every three levels thereafter, this damage reduction improves by 1." compset="ClSpecial" summary="Gain DR/- when wearing your Astral Suit.">
    <fieldval field="abValue" value="1"/>
    <tag group="Helper" tag="SpecUp"/>
    <tag group="SpecType" tag="DR"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <eval phase="PostLevel" priority="10100"><![CDATA[
      var ListValue as number
      ListValue = field[xIndex].value + 1
      ~ Set the list name
      field[listname].text = field[thingname].text & " " & ListValue & "/-"

      ~ If we're not shown, just get out now
      doneif (tagis[Helper.ShowSpec] <> 1)
      ~ if we've been disabled, get out now
      doneif (tagis[Helper.SpcDisable] <> 0)

      field[abValue].value += field[xCount].value
      field[livename].text = field[thingname].text & " " & field[abValue].value & "/-"

      ~ The following should only happen once on the first copy
      doneif (tagis[Helper.FirstCopy] = 0)
      ~ If we're not wearing the Astral Suit, get out now
      doneif (hero.tagcount[Custom.WearAstS] = 0)

      ~ Apply DR to hero
      #applydr[xDamRd,field[abValue].value]]]></eval>
    </thing>
  <thing id="cPUInvigSu" name="Invigorating Suit" description="An aegis of at least 3rd level wearing his astral suit gains a +4 bonus on the following checks and saves: Swim checks made to resist nonlethal damage from exhaustion; Constitution checks made to continue running; Constitution checks made to avoid nonlethal damage from a forced march; Constitution checks made to hold breath; Constitution checks made to avoid nonlethal damage from starvation or thirst; Fortitude saves made to avoid nonlethal damage from hot or cold environments; and Fortitude saves made to resist damage from suffocation." compset="ClSpecial" summary="Gain a bonus to Consitution checks and Fortitude saves.">
    <fieldval field="abValue" value="4"/>
    <tag group="AbilType" tag="Super"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <eval phase="Final" priority="50000"><![CDATA[
      ~ If we're not shown, just get out now
      doneif (tagis[Helper.ShowSpec] <> 1)
      ~ if we've been disabled, get out now
      doneif (tagis[Helper.SpcDisable] <> 0)
      ~ The following should only happen once on the first copy
      doneif (tagis[Helper.FirstCopy] = 0)
      ~ If we're not wearing the Astral Suit, get out now
      doneif (hero.tagcount[Custom.WearAstS] = 0)

      #situational[hero.childfound[skSwim],signed(field[abValue].value) & " to resist nonlethal damage from exhaustion",field[name].text]
      #situational[hero.childfound[aCON],signed(field[abValue].value) & " to continue running",field[name].text]
      #situational[hero.childfound[aCON],signed(field[abValue].value) & " to avoid nonlethal damage from a forced march",field[name].text]
      #situational[hero.childfound[aCON],signed(field[abValue].value) & " to hold breath",field[name].text]
      #situational[hero.childfound[aCON],signed(field[abValue].value) & " to avoid nonlethal damage from starvation or thirst",field[name].text]
      #situational[hero.childfound[svFort],signed(field[abValue].value) & " to avoid nonlethal damage from hot or cold environments",field[name].text]
      #situational[hero.childfound[svFort],signed(field[abValue].value) & " to resist damage from suffocation",field[name].text]]]></eval>
    </thing>
  <thing id="cPUReconfi" name="Reconfigure" description="Starting at 3rd level, an aegis can reconfigure up to his Intelligence modifier in customization points on his astral suit once per day as a standard action. Every two levels thereafter, he can use this ability an additional time per day." compset="ClSpecial" summary="Reconfigure up to your Int mod in customization points.">
    <tag group="User" tag="Tracker"/>
    <tag group="Usage" tag="Day"/>
    <tag group="SbNamePar" tag="IncUses"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <eval phase="Final" priority="10000"><![CDATA[
      ~ Set the list name
      field[listname].text = field[thingname].text & " " & field[xIndex].value & " point"

      ~ If we're not shown, just get out now
      doneif (tagis[Helper.ShowSpec] <> 1)
      ~ if we've been disabled, get out now
      doneif (tagis[Helper.SpcDisable] <> 0)

      ~ Set amount of customization
      field[abValue].value += #attrbonus[aINT]
      ~ Set number of uses per day
      field[trkMax].value += field[xCount].value

      ~ Show number of customization points
      field[livename].text = field[thingname].text & " (" & field[abValue].value & " customization points)"]]></eval>
    </thing>
  <thing id="cPUAugSuit" name="Augment Suit" description="An aegis learns how to infuse his astral suit with his psionic power, augmenting the capacity of his suit. Beginning at 4th level, the aegis may spend up to one power point per four class levels to customize his Astral Suit, gaining one temporary customization point for each power point spent. \n\nThis ability, activated as a standard action, lasts for a number of rounds equal to the aegis’ Intelligence modifier.\n\nActivating this ability again, while already in use, immediately causes the previous duration to end. \n\nAn aegis may end the duration as a free action at any time." compset="ClSpecial" summary="Spend power points to gain temp customization points.">
    <tag group="AbilType" tag="Super"/>
    <tag group="User" tag="Tracker"/>
    <tag group="Usage" tag="Rounds"/>
    <tag group="User" tag="Activation"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <eval phase="PostLevel" priority="10000"><![CDATA[
      ~ Set the list name
      field[listname].text = field[thingname].text & " " & field[xIndex].value & " PP"

      ~ If we're not shown, just get out now
      doneif (tagis[Helper.ShowSpec] <> 1)
      ~ if we've been disabled, get out now
      doneif (tagis[Helper.SpcDisable] <> 0)

      ~ Set number of power points
      field[abValue].value += field[xCount].value
      field[livename].text = field[thingname].text & " (" & field[abValue].value & " PP)"

      ~ The following should only happen once on the first copy
      doneif (tagis[Helper.FirstCopy] = 0)
      ~ If not activated get out now!
      doneif (field[abilActive].value = 0)

      ~ Give temp customization points
      #value2[cPUAegHelp] += field[abValue].value]]></eval>
    <eval phase="PostAttr" priority="10000" index="2"><![CDATA[
      ~ If we're not shown, just get out now
      doneif (tagis[Helper.ShowSpec] <> 1)
      ~ if we've been disabled, get out now
      doneif (tagis[Helper.SpcDisable] <> 0)

      ~ Rounds of use equal to Int mod
      field[trkMax].value += #attrmod[aINT]]]></eval>
    </thing>
  <thing id="cPUMastCr" name="Master Craftsman" description="At 5th level, an aegis gains the Master Craftsman feat as a bonus feat. He must still meet the prerequisites of the feat in order to gain its benefits." compset="ClSpecial" summary="Gain the Master Craftsman feat as a bonus feat.">
    <tag group="Helper" tag="SpecUp"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <bootstrap thing="fMasCraft">
      <containerreq phase="First" priority="500"><![CDATA[count:Custom.AegisLvls >= 5 & !AbReplace.cPUMastCr]]></containerreq>
      </bootstrap>
    </thing>
  <thing id="cPUCanniSu" name="Cannibalize Suit" description="Starting at 12th level, an aegis learns to convert the psionic energy used to create his suit into healing power. Once per day as a standard action, he can dismiss his astral suit and heal a number of hit points equal to his customization pool. The aegis cannot reform his suit again for one minute after using this ability. Every two levels thereafter, the aegis can use this ability an additional time per day. Additional customization points gained from Augment Suit are not counted for this ability." compset="ClSpecial" summary="Dismiss astral suit to heal.">
    <tag group="Usage" tag="Day"/>
    <tag group="User" tag="Tracker"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <eval phase="PostLevel" priority="10000"><![CDATA[
      ~ Set the list name
      field[listname].text = field[thingname].text & " " & field[xIndex].value & "/day"

      ~ If we're not shown, just get out now
      doneif (tagis[Helper.ShowSpec] <> 1)
      ~ if we've been disabled, get out now
      doneif (tagis[Helper.SpcDisable] <> 0)

      ~ Uses per day
      field[trkMax].value += field[xCount].value

      ~ Healing amout is BASE point value
      field[livename].text = field[thingname].text & " (" & #value3[cPUAegHelp] & " healing)"]]></eval>
    </thing>
  <thing id="cPUPerfMer" name="Perfect Merger" description="An aegis of 20th level has learned to become one with his suit. His suit cannot be dispelled or removed against his will by any means, although his astral suit ability still does not function within areas where psionics do not work, such as a {i}null psionics field{/i}.\n\nIn addition, the aegis can spend two daily uses of his reconfigure ability, to alter all of the customizations on his astral suit.\n\nFinally, once per day, the aegis can boost his cannibalize suit ability, healing all of his hit point damage, although he cannot reform his suit for ten minutes after using this ability, rather than the standard one minute." compset="ClSpecial" summary="Cannibalize suit to heal all damage.">
    <fieldval field="trkMax" value="1"/>
    <tag group="Usage" tag="Day"/>
    <tag group="User" tag="Tracker"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <eval phase="PostLevel" priority="10000"><![CDATA[
      ~ If we're not shown, just get out now
      doneif (tagis[Helper.ShowSpec] <> 1)
      ~ if we've been disabled, get out now
      doneif (tagis[Helper.SpcDisable] <> 0)

      hero.childfound[cPUReconfi].field[DescAppend].text = "{b}" & field[thingname].text & ":{/b} Spend two daily uses of reconfigure ability, to alter all of the customizations on his astral suit."]]></eval>
    </thing>
  <thing id="rcPUaSkin" name="Astral Skin" description="When formed in this way, an astral suit resembles a {i}psychoactive skin{/i}. Forming an astral suit into this form takes a swift action. The aegis gains no armor bonus from his astral suit when worn in this fashion, but he gains the following free customizations: speed (2), nimble. At 2nd level, the aegis gains the evasion customization as a free customization when the astral suit is in astral skin form. At 12th level, the aegis gains the improved evasion customization as a free customization when the astral suit is in astral skin form. An astral suit in this form does not count as any type of armor, but does count as a {i}psychoactive skin{/i} and follows all the rules of a {i}psychoactive skin{/i}." compset="RaceCustom" summary="AC +0; Free customizations: speed (2), nimble.">
    <usesource source="pPsiUn"/>
    <tag group="AllowRCust" tag="cfgPUAstSu"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <bootstrap thing="rcPUaSpeed">
      <autotag group="CustTaken" tag="cfgPUAstSu"/>
      </bootstrap>
    <bootstrap thing="rcPUaSpeed">
      <autotag group="CustTaken" tag="cfgPUAstSu"/>
      </bootstrap>
    <bootstrap thing="rcPUaNimbl">
      <autotag group="CustTaken" tag="cfgPUAstSu"/>
      </bootstrap>
    <bootstrap thing="rcPUaEvade">
      <containerreq phase="First" priority="500"><![CDATA[count:Custom.AegisLvls >= 2]]></containerreq>
      <autotag group="CustTaken" tag="cfgPUAstSu"/>
      </bootstrap>
    <bootstrap thing="rcPUaIEvad">
      <containerreq phase="First" priority="500"><![CDATA[count:Custom.AegisLvls >= 12]]></containerreq>
      <autotag group="CustTaken" tag="cfgPUAstSu"/>
      </bootstrap>
    <eval phase="First"><![CDATA[
      ~ Set tags on hero &
      perform hero.assign[Custom.HasAstSkin]
      perform hero.assign[Custom.ASChosen]]]></eval>
    </thing>
  <thing id="rcPUaSpeed" name="Speed" description="The aegis&apos;s base land speed is increased by 5 feet. This customization can be selected up to five times.{br}{br}Its effects stack." compset="CustomSpec" summary="Increase speed by +5ft.">
    <usesource source="pPsiUn"/>
    <tag group="AllowRCust" tag="cfgPUAstSu"/>
    <tag group="Helper" tag="Secondary"/>
    <tag group="CustomCost" tag="1"/>
    <tag group="SpecType" tag="Movement"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <eval phase="PostLevel" priority="10000"><![CDATA[
      ~ Set Helper.FirstCopy &
      call X1SetFirst]]></eval>
    <eval phase="PostLevel" priority="10050" index="2"><![CDATA[
      ~ Set feet bonus into first value
      field[abValue].value += maximum(field[abValue5].value * 5, 5)
      field[abSumm].text = "Increase land speed by " & signed(field[abValue].value) & " ft while wearing astral suit."

      ~ If we are not the first copy, get out now! &
      doneif (tagis[Helper.FirstCopy] = 0)
      ~ If not wearing astral suit, get out now!
      doneif (hero.tagcount[Custom.WearAstS] = 0)

      ~ Bonus to Speed
      hero.child[Speed].field[tSpeed].value += field[abValue].value]]></eval>
    <prereq message="You may not have more than 5 copies of this ability.">
      <validate><![CDATA[
        if (@ispick <> 0) then
          validif (tagcount[HasAbility.rcPUaSpeed] <= 5)

        ~ otherwise, look for fewer, since we're adding this
        else
          validif (tagcount[HasAbility.rcPUaSpeed] < 5)
        endif]]></validate>
      </prereq>
    </thing>
  <thing id="rcPUaNimbl" name="Nimble" description="The aegis gains a +2 enhancement bonus to Dexterity while he is wearing his astral suit. This customization can be selected a second time beginning at 5th level, and a third time starting at 10th level. Each subsequent time it is taken, the enhancement bonus to Dexterity is increased by +2." compset="CustomSpec" summary="+2 enhancement bonus to Dexterity while wearing astral suit.">
    <usesource source="pPsiUn"/>
    <tag group="AllowRCust" tag="cfgPUAstSu"/>
    <tag group="Helper" tag="Secondary"/>
    <tag group="CustomCost" tag="2"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <eval phase="PostLevel" priority="10000"><![CDATA[
      ~ Set Helper.FirstCopy &
      call X1SetFirst

      ~ If we're not bootstrapped to something, get out now!
      doneif (isroot = 0)

      ~ Using OverCrit tags for getting this ability "free"
      perform hero.pushtags[OverCrit.?]]]></eval>
    <eval phase="PostLevel" priority="10050" index="2"><![CDATA[
      ~ If we are not the first copy, get out now!
      doneif (tagis[Helper.FirstCopy] = 0)

      ~ Bonus is 2 times the number of times this ability has
      ~ been taken.
      field[abValue].value += field[abValue5].value * 2
      field[livename].text = field[thingname].text & " (" & signed(field[abValue].value) & " Dex)"
      field[abSumm].text = signed(field[abValue].value) & " enhancement bonus to Dexterity while wearing astral suit."

      ~ If we're not wearing astral suit, get out now!
      doneif (hero.tagcount[Custom.WearAstS] = 0)

      ~ Increase Dex bonus
      #enhancementbonus[hero.child[aDEX], field[abValue].value]]]></eval>
    <prereq message="">
      <validate><![CDATA[
        var allowed as number
        var taken as number
        allowed = 1
        var classcheck as string
        var levels as number
        classcheck = "Aegis"
        call PUPreReqs
        ~ At level 5 can take this again
        If (levels >= 5) Then
          allowed += 1
        Endif
        ~ At level 10 can take this again
        If (levels >= 10) Then
          allowed += 1
        Endif

        ~ Count the number of times manually added
        taken = tagcount[HasAbility.rcPUaNimbl] - tagcount[OverCrit.rcPUaNimbl]

        ~ if we're a pick, then there must be 3 or fewer copies of
        ~ this ability
        If (@ispick <> 0) Then
          validif (taken <= allowed)

        ~ otherwise, look for fewer, since we're adding this
        Else
          validif (taken < allowed)
        Endif

        @message = "You may not have more than " & allowed & " copies of this ability."]]></validate>
      </prereq>
    </thing>
  <thing id="rcPUaEvade" name="Evasion" description="As long as the aegis is wearing the astral suit, if the aegis is subjected to an attack that normally allows a Reflex save for half damage, he takes no damage if he makes a successful saving throw. The aegis must be at least 2nd level before selecting this customization." compset="CustomSpec" summary="Gain evasion ability while wearing astral suit." uniqueness="useronce">
    <usesource source="pPsiUn"/>
    <tag group="AllowRCust" tag="cfgPUAstSu"/>
    <tag group="Helper" tag="Secondary"/>
    <tag group="CustomCost" tag="1"/>
    <tag group="SpecType" tag="Defense"/>
    <tag group="Helper" tag="SpecUp"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <bootstrap thing="raEvasion">
      <containerreq phase="First" priority="500">Custom.WearAstS</containerreq>
      </bootstrap>
    <prereq message="Aegis level 2+ required.">
      <validate><![CDATA[
        var classcheck as string
        var levels as number
        classcheck = "Aegis"
        call PUPreReqs
        validif (levels >= 2)]]></validate>
      </prereq>
    </thing>
  <thing id="rcPUaArmor" name="Astral Armor" description="When formed into astral armor, an astral suit resembles masterwork chainmail and is treated as such for all mechanical purposes. Should the aegis be wearing armor when forming his astral suit in this fashion, the astral suit encloses the armor and the aegis gains the benefits of only his astral suit and not that from his armor, even if his armor would confer better benefits. Forming an astral suit into this form takes a move action. The aegis gains the following free customizations: brawn, improved damage. At 2nd level, the aegis gains the flexible suit customization as a free customization when the astral suit is in astral armor form. At 8th level, the astral suit resembles and is treated as a masterwork breastplate for all mechanical purposes." compset="RaceCustom" summary="Chainmail/Breastplate; Free customizations: brawn, improved damage." uniqueness="useronce">
    <usesource source="pPsiUn"/>
    <tag group="AllowRCust" tag="cfgPUAstSu"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <bootstrap thing="rcPUaImDmg">
      <autotag group="CustTaken" tag="cfgPUAstSu"/>
      </bootstrap>
    <bootstrap thing="rcPUaBrawn">
      <autotag group="CustTaken" tag="cfgPUAstSu"/>
      </bootstrap>
    <bootstrap thing="rcPUaFlexS">
      <containerreq phase="First" priority="500"><![CDATA[count:Custom.AegisLvls >= 2]]></containerreq>
      <autotag group="CustTaken" tag="cfgPUAstSu"/>
      </bootstrap>
    <bootstrap thing="mPUAstArCh">
      <containerreq phase="First" priority="100"><![CDATA[count:Custom.AegisLvls < 8 & Custom.WearAstS]]></containerreq>
      </bootstrap>
    <bootstrap thing="mPUAstArBr">
      <containerreq phase="First" priority="100"><![CDATA[count:Custom.AegisLvls >= 8 & Custom.WearAstS]]></containerreq>
      </bootstrap>
    <eval phase="First"><![CDATA[
      ~ Set tags on hero &
      perform hero.assign[Custom.HasAstSkin]
      perform hero.assign[Custom.ASChosen]]]></eval>
    </thing>
  <thing id="mPUAstArCh" name="Astral Chainmail" description="When formed into astral armor, an astral suit resembles masterwork chainmail and is treated as such for all mechanical purposes. Should the aegis be wearing armor when forming his astral suit in this fashion, the astral suit encloses the armor and the aegis gains the benefits of only his astral suit and not that from his armor, even if his armor would confer better benefits. Forming an astral suit into this form takes a move action." compset="Armor">
    <fieldval field="gWeight" value="40"/>
    <usesource source="pPsiUn"/>
    <tag group="Custom" tag="AstArmor"/>
    <tag group="EquipType" tag="Metal"/>
    <tag group="ArmorCateg" tag="Gauntlets"/>
    <tag group="ArmorCateg" tag="Slows"/>
    <tag group="ArmorCheck" tag="5"/>
    <tag group="ArmorClass" tag="Medium"/>
    <tag group="ArmorMaxDx" tag="2"/>
    <tag group="ArmorAC" tag="6"/>
    <tag group="ArmorArcFl" tag="30"/>
    <tag group="Helper" tag="AlwaysMast"/>
    <tag group="Helper" tag="AutoEquip"/>
    <tag group="Helper" tag="Helper"/>
    <tag group="Helper" tag="Proficient"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <eval phase="PostLevel" priority="20000"><![CDATA[
      ~ Apply astral suit bonuses &
      call PUAstBonus]]></eval>
    </thing>
  <thing id="mPUAstArBr" name="Astral Breastplate" description="When formed into astral armor, an astral suit resembles masterwork breastplate and is treated as such for all mechanical purposes. Should the aegis be wearing armor when forming his astral suit in this fashion, the astral suit encloses the armor and the aegis gains the benefits of only his astral suit and not that from his armor, even if his armor would confer better benefits. Forming an astral suit into this form takes a move action." compset="Armor">
    <fieldval field="gWeight" value="30"/>
    <usesource source="pPsiUn"/>
    <tag group="Custom" tag="AstArmor"/>
    <tag group="EquipType" tag="Metal"/>
    <tag group="ArmorCateg" tag="Slows"/>
    <tag group="ArmorCheck" tag="4"/>
    <tag group="ArmorClass" tag="Medium"/>
    <tag group="ArmorMaxDx" tag="3"/>
    <tag group="ArmorAC" tag="6"/>
    <tag group="ArmorArcFl" tag="25"/>
    <tag group="Helper" tag="AutoEquip"/>
    <tag group="Helper" tag="AlwaysMast"/>
    <tag group="Helper" tag="MatCstSuit"/>
    <tag group="Helper" tag="PieceUpMat"/>
    <tag group="Helper" tag="Helper"/>
    <tag group="Helper" tag="Proficient"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <eval phase="PostLevel" priority="20000"><![CDATA[
      ~ Apply astral suit bonuses &
      call PUAstBonus]]></eval>
    </thing>
  <thing id="rcPUaImDmg" name="Improved Damage" description="The aegis&apos;s melee attacks deal additional damage. If wielding a two-handed weapon, the aegis deals 3 additional points of damage on a successful hit. If wielding a one-handed weapon, the aegis deals 2 additional points of damage on a successful hit. If wielding a light weapon, the aegis deals 1 additional point of damage on a successful hit. If dual-wielding, each weapon is affected separately." compset="CustomSpec" summary="Gain a dmg bonus based on weapon type." uniqueness="useronce">
    <usesource source="pPsiUn"/>
    <tag group="AllowRCust" tag="cfgPUAstSu"/>
    <tag group="Helper" tag="Secondary"/>
    <tag group="CustomCost" tag="2"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <eval phase="PostLevel" priority="10000"><![CDATA[
      ~ If we're not wearing the Astral Suit, get out now
      doneif (hero.tagcount[Custom.WearAstS] = 0)

      ~ Set focus to the Damage helper pick
      perform hero.childfound[Damage].setfocus
      doneif (state.isfocus = 0)

      ~ Give damage bonus based on weapon type
      focus.field[tDamLight].value += 1
      focus.field[tDamOne].value += 2
      focus.field[tDamTwo].value += 3]]></eval>
    </thing>
  <thing id="rcPUaBrawn" name="Brawn" description="The aegis gains a +2 enhancement bonus to Strength while he is wearing his astral suit. This customization can be selected a second time beginning at 5th level, and a third time starting at 10th level. Each subsequent time it is taken, the enhancement bonus to Strength is increased by +2." compset="CustomSpec" summary="+2 enhancement bonus to Strength while wearing astral suit.">
    <usesource source="pPsiUn"/>
    <tag group="AllowRCust" tag="cfgPUAstSu"/>
    <tag group="Helper" tag="Secondary"/>
    <tag group="CustomCost" tag="2"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <eval phase="PostLevel" priority="10000"><![CDATA[
      ~ Set Helper.FirstCopy &
      call X1SetFirst

      ~ If we're not bootstrapped to something, get out now!
      doneif (isroot = 0)

      ~ Using OverCrit tags for getting this ability "free"
      perform hero.pushtags[OverCrit.?]]]></eval>
    <eval phase="PostLevel" priority="10050" index="2"><![CDATA[
      ~ If we are not the first copy, get out now!
      doneif (tagis[Helper.FirstCopy] = 0)

      ~ Bonus is 2 times the number of times this ability has
      ~ been taken.
      field[abValue].value += field[abValue5].value * 2
      field[livename].text = field[thingname].text & " (" & signed(field[abValue].value) & " Str)"
      field[abSumm].text = signed(field[abValue].value) & " enhancement bonus to Strength while wearing astral suit."

      ~ If we're not wearing astral suit, get out now!
      doneif (hero.tagcount[Custom.WearAstS] = 0)

      ~ Increase Str bonus
      #enhancementbonus[hero.child[aSTR], field[abValue].value]]]></eval>
    <prereq message="">
      <validate><![CDATA[
        var allowed as number
        var taken as number
        allowed = 1
        var classcheck as string
        var levels as number
        classcheck = "Aegis"
        call PUPreReqs
        ~ At level 5 can take this again
        If (levels >= 5) Then
          allowed += 1
        Endif
        ~ At level 10 can take this again
        If (levels >= 10) Then
          allowed += 1
        Endif

        ~ Count the number of times manually added
        taken = tagcount[HasAbility.rcPUaBrawn] - tagcount[OverCrit.rcPUaBrawn]

        ~ if we're a pick, then there must be 3 or fewer copies of
        ~ this ability
        If (@ispick <> 0) Then
          validif (taken <= allowed)

        ~ otherwise, look for fewer, since we're adding this
        Else
          validif (taken < allowed)
        Endif

        @message = "You may not have more than " & allowed & " copies of this ability."]]></validate>
      </prereq>
    </thing>
  <thing id="rcPUaFlexS" name="Flexible Suit" description="The aegis&apos;s armor check penalty is reduced by 1 (to a minimum of 0). The aegis may also sleep in his astral suit without becoming fatigued, if he was not already able to do so (such as if in astral skin form)." compset="CustomSpec" summary="Astral suit armor check penalty is reduced by 1 (to a minimum of 0)." uniqueness="useronce">
    <comment>This ability is fully implemented. The procedure PUAstBonus handles the bonus logic.</comment>
    <usesource source="pPsiUn"/>
    <tag group="Helper" tag="Secondary"/>
    <tag group="CustomCost" tag="1"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <tag group="AllowRCust" tag="cfgPUAstSu"/>
    </thing>
  <thing id="rcPUaJugge" name="Astral Juggernaut" description="When formed into astral juggernaut, an astral suit resembles masterwork half-plate and is treated as such for all mechanical purposes. Should the aegis be wearing armor when forming his astral suit in this fashion, the astral suit encloses the armor and the aegis gains the benefits of only his astral suit and not that from his armor, even if his armor would confer better benefits. Forming an astral suit into this form takes a full-round action. The aegis gains the following free customizations: fortification, hardy. At 2nd level, the aegis gains the stalwart customization as a free customization when the astral suit is in astral juggernaut form. At 7th level, the astral suit resembles and is treated as masterwork full plate for all mechanical purposes." compset="RaceCustom" summary="Half-Plate/Full Plate; Free customizations: fortification, hardy." uniqueness="useronce">
    <usesource source="pPsiUn"/>
    <tag group="AllowRCust" tag="cfgPUAstSu"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <bootstrap thing="rcPUaForti">
      <autotag group="CustTaken" tag="cfgPUAstSu"/>
      </bootstrap>
    <bootstrap thing="rcPUaHardy">
      <autotag group="CustTaken" tag="cfgPUAstSu"/>
      </bootstrap>
    <bootstrap thing="rcPUaStalw">
      <containerreq phase="First" priority="500"><![CDATA[count:Custom.AegisLvls >= 2]]></containerreq>
      <autotag group="CustTaken" tag="cfgPUAstSu"/>
      </bootstrap>
    <bootstrap thing="mPUAstArFP">
      <containerreq phase="First" priority="100"><![CDATA[count:Custom.AegisLvls >= 7 & Custom.WearAstS]]></containerreq>
      </bootstrap>
    <bootstrap thing="mPUAstArHP">
      <containerreq phase="First" priority="100"><![CDATA[count:Custom.AegisLvls < 7 & Custom.WearAstS]]></containerreq>
      </bootstrap>
    <eval phase="First"><![CDATA[
      ~ Set tags on hero &
      perform hero.assign[Custom.HasAstSkin]
      perform hero.assign[Custom.ASChosen]]]></eval>
    </thing>
  <thing id="mPUAstArFP" name="Astral Full plate" description="When formed into astral juggernaut, an astral suit resembles masterwork full plate and is treated as such for all mechanical purposes. Should the aegis be wearing armor when forming his astral suit in this fashion, the astral suit encloses the armor and the aegis gains the benefits of only his astral suit and not that from his armor, even if his armor would confer better benefits. Forming an astral suit into this form takes a full-round action." compset="Armor">
    <fieldval field="gWeight" value="50"/>
    <usesource source="pPsiUn"/>
    <tag group="Custom" tag="AstArmor"/>
    <tag group="ArmorAC" tag="9"/>
    <tag group="ArmorCateg" tag="Gauntlets"/>
    <tag group="ArmorCateg" tag="Slows"/>
    <tag group="ArmorCheck" tag="6"/>
    <tag group="ArmorClass" tag="Heavy"/>
    <tag group="ArmorMaxDx" tag="1"/>
    <tag group="ArmorArcFl" tag="35"/>
    <tag group="EquipType" tag="Metal"/>
    <tag group="Helper" tag="AutoEquip"/>
    <tag group="Helper" tag="AlwaysMast"/>
    <tag group="Helper" tag="Helper"/>
    <tag group="Helper" tag="Proficient"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <eval phase="PostLevel" priority="20000"><![CDATA[
      ~ Apply astral suit bonuses &
      call PUAstBonus]]></eval>
    </thing>
  <thing id="mPUAstArHP" name="Astral Half-plate" description="When formed into astral juggernaut, an astral suit resembles masterwork half-plate and is treated as such for all mechanical purposes. Should the aegis be wearing armor when forming his astral suit in this fashion, the astral suit encloses the armor and the aegis gains the benefits of only his astral suit and not that from his armor, even if his armor would confer better benefits. Forming an astral suit into this form takes a full-round action." compset="Armor">
    <fieldval field="gWeight" value="50"/>
    <usesource source="pPsiUn"/>
    <tag group="Custom" tag="AstArmor"/>
    <tag group="ArmorAC" tag="8"/>
    <tag group="ArmorCateg" tag="Gauntlets"/>
    <tag group="ArmorCateg" tag="Slows"/>
    <tag group="ArmorCheck" tag="7"/>
    <tag group="ArmorClass" tag="Heavy"/>
    <tag group="ArmorMaxDx" tag="0"/>
    <tag group="ArmorArcFl" tag="40"/>
    <tag group="EquipType" tag="Metal"/>
    <tag group="Helper" tag="AlwaysMast"/>
    <tag group="Helper" tag="AutoEquip"/>
    <tag group="Helper" tag="Proficient"/>
    <tag group="Helper" tag="Helper"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <eval phase="PostLevel" priority="20000"><![CDATA[
      ~ Apply astral suit bonuses &
      call PUAstBonus]]></eval>
    </thing>
  <thing id="rcPUaForti" name="Fortification" description="The aegis gains 25% chance to negate critical hits or sneak attacks (so damage is rolled normally instead). This does not stack with armor with the same special ability. This ability can be selected again starting at 8th level and at 12th level, increasing the chance to negate critical hits or sneak attacks by an additional 25% for every additional time it is taken." compset="CustomSpec" summary="25% chance to negate critical hits or sneak attacks.">
    <usesource source="pPsiUn"/>
    <tag group="Helper" tag="Secondary"/>
    <tag group="CustomCost" tag="2"/>
    <tag group="AllowRCust" tag="cfgPUAstSu"/>
    <tag group="Helper" tag="SpecUp"/>
    <eval phase="PostLevel" priority="10000"><![CDATA[
      ~ Set Helper.FirstCopy &
      call X1SetFirst

      ~ If we're not bootstrapped to something, get out now!
      doneif (isroot = 0)

      ~ Using OverCrit tags for getting this ability "free"
      perform hero.pushtags[OverCrit.?]]]></eval>
    <eval phase="PostLevel" priority="10050" index="2"><![CDATA[
      ~ If we are not the first copy, get out now!
      doneif (tagis[Helper.FirstCopy] = 0)

      ~ Bonus is 2 times the number of times this ability has
      ~ been taken.
      field[abValue].value += field[abValue5].value * 25
      field[livename].text = field[thingname].text & " (" & field[abValue].value & " %)"
      field[abSumm].text = field[abValue].value & "% chance to negate critical hits or sneak attacks."

      ~ If we're not wearing astral suit, get out now!
      doneif (hero.tagcount[Custom.WearAstS] = 0)

      ~ Apply Fortification to hero
      #applyfort[field[abValue].value]]]></eval>
    <prereq message="">
      <validate><![CDATA[
        var allowed as number
        var taken as number
        allowed = 1
        var classcheck as string
        var levels as number
        classcheck = "Aegis"
        call PUPreReqs
        ~ At level 5 can take this again
        If (levels >= 8) Then
          allowed += 1
        Endif
        ~ At level 10 can take this again
        If (levels >= 12) Then
          allowed += 1
        Endif

        ~ Count the number of times manually added
        taken = tagcount[HasAbility.rcPUaForti] - tagcount[OverCrit.rcPUaForti]

        ~ if we're a pick, then there must be 3 or fewer copies of
        ~ this ability
        If (@ispick <> 0) Then
          validif (taken <= allowed)

        ~ otherwise, look for fewer, since we're adding this
        Else
          validif (taken < allowed)
        Endif

        @message = "You may not have more than " & allowed & " copies of this ability."]]></validate>
      </prereq>
    </thing>
  <thing id="rcPUaHardy" name="Hardy" description="The aegis gains a +2 enhancement bonus to Constitution while he is wearing his astral suit. This customization can be selected a second time beginning at 5th level, and a third time starting at 10th level. Each subsequent time it is taken, the enhancement bonus to Constitution is increased by +2." compset="CustomSpec" summary="+2 enhancement bonus to Constitution while wearing astral suit.">
    <usesource source="pPsiUn"/>
    <tag group="AllowRCust" tag="cfgPUAstSu"/>
    <tag group="Helper" tag="Secondary"/>
    <tag group="CustomCost" tag="2"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <eval phase="PostLevel" priority="10000"><![CDATA[
      ~ Set Helper.FirstCopy &
      call X1SetFirst

      ~ If we're not bootstrapped to something, get out now!
      doneif (isroot = 0)

      ~ Using OverCrit tags for getting this ability "free"
      perform hero.pushtags[OverCrit.?]]]></eval>
    <eval phase="PostLevel" priority="10050" index="2"><![CDATA[
      ~ If we are not the first copy, get out now!
      doneif (tagis[Helper.FirstCopy] = 0)

      ~ Bonus is 2 times the number of times this ability has
      ~ been taken.
      field[abValue].value += field[abValue5].value * 2
      field[livename].text = field[thingname].text & " (" & signed(field[abValue].value) & " Con)"
      field[abSumm].text = signed(field[abValue].value) & " enhancement bonus to Constitution while wearing astral suit."

      ~ If we're not wearing astral suit, get out now!
      doneif (hero.tagcount[Custom.WearAstS] = 0)

      ~ Increase Dex bonus
      #enhancementbonus[hero.child[aCON], field[abValue].value]]]></eval>
    <prereq message="">
      <validate><![CDATA[
        var allowed as number
        var taken as number
        allowed = 1
        var classcheck as string
        var levels as number
        classcheck = "Aegis"
        call PUPreReqs
        ~ At level 5 can take this again
        If (levels >= 5) Then
          allowed += 1
        Endif
        ~ At level 10 can take this again
        If (levels >= 10) Then
          allowed += 1
        Endif

        ~ Count the number of times manually added
        taken = tagcount[HasAbility.rcPUaHardy] - tagcount[OverCrit.rcPUaHardy]

        ~ if we're a pick, then there must be 3 or fewer copies of
        ~ this ability
        If (@ispick <> 0) Then
          validif (taken <= allowed)

        ~ otherwise, look for fewer, since we're adding this
        Else
          validif (taken < allowed)
        Endif

        @message = "You may not have more than " & allowed & " copies of this ability."]]></validate>
      </prereq>
    </thing>
  <thing id="rcPUaStalw" name="Stalwart" description="As long as the aegis is wearing the astral suit, if the aegis is subjected to an attack that normally allows a Fortitude or Will save for a reduced or partial effect, he ignores the effect if he makes a successful saving throw.{br}{br}The aegis must be at least 2nd level before selecting this customization." compset="CustomSpec" summary="Ignore partial effects when making a Fort/Will save." uniqueness="useronce">
    <fieldval field="abText5" value="If save allows for a reduced or partial effect, then ignore the effect if you successfully save."/>
    <usesource source="pPsiUn"/>
    <tag group="AllowRCust" tag="cfgPUAstSu"/>
    <tag group="Helper" tag="Secondary"/>
    <tag group="CustomCost" tag="1"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <eval phase="Final" priority="50000"><![CDATA[
      ~ If we're not wearing the Astral Suit, get out now
      doneif (hero.tagcount[Custom.WearAstS] = 0)

      ~ Add situational notes to Will/Fort saves &
      #situational[hero.childfound[svWill],field[abText5].text,field[name].text]
      #situational[hero.childfound[svFort],field[abText5].text,field[name].text]]]></eval>
    <prereq message="Aegis level 2+ required.">
      <validate><![CDATA[
        var classcheck as string
        var levels as number
        classcheck = "Aegis"
        call PUPreReqs
        validif (levels >= 2)]]></validate>
      </prereq>
    </thing>
  <thing id="rcPUaDarkv" name="Darkvision" description="The aegis gains darkvision out to a range of 60 feet." compset="CustomSpec" uniqueness="useronce">
    <usesource source="pPsiUn"/>
    <tag group="AllowRCust" tag="cfgPUAstSu"/>
    <tag group="Helper" tag="Secondary"/>
    <tag group="CustomCost" tag="1"/>
    <tag group="SpecType" tag="Sense"/>
    <tag group="Helper" tag="SpecUp"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <bootstrap thing="raDarkVis">
      <containerreq phase="First" priority="500">Custom.WearAstS</containerreq>
      <assignval field="abValue" value="60"/>
      </bootstrap>
    </thing>
  <thing id="rcPUaRngAt" name="Ranged Attack" description="The aegis gains the ability to propel a non-psionic crystal, formed from the astral suit, at a target as a ranged attack that deals 1d8 points of piercing damage and has a range increment of 30 ft. This attack can be used as part of a full attack, including using this attack for each attack in the full attack." compset="CustomSpec" uniqueness="useronce">
    <fieldval field="abValue" value="1"/>
    <fieldval field="abValue2" value="8"/>
    <usesource source="pPsiUn"/>
    <tag group="Helper" tag="Secondary"/>
    <tag group="CustomCost" tag="1"/>
    <tag group="Helper" tag="WeaponSpec"/>
    <tag group="wCategory" tag="RangeProj"/>
    <tag group="wType" tag="P"/>
    <tag group="wCritMin" tag="20"/>
    <tag group="wCritMult" tag="2"/>
    <tag group="AllowRCust" tag="cfgPUAstSu"/>
    <tag group="wRangeInc" tag="30"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <eval phase="Final" priority="500" name="Aegis Ranged Attack"><![CDATA[
      ~ Build fixed ranged damage dice with no bonus damage &
      If (field[abValue3].value = 0) Then
        field[wFixRanDam].text = field[abValue].value & "d" & field[abValue2].value

      ~ Include damage dice with bonus
      Else
        field[wFixRanDam].text = field[abValue].value & "d" & field[abValue2].value & signed(field[abValue3].value)
      Endif

      ~ Energy damage append info to weapon dmg
      If (tagis[PsiActEne.?] = 1) Then
        field[wFixRanDam].text &= " " & tagnames[PsiActEne.?]
      Endif]]></eval>
    </thing>
  <thing id="rcPUaEneBl" name="Energy Blast" description="The ranged attack gained from the ranged attack customization becomes imbued with psionic energy. The attack is now treated as a ranged touch attack and instead deals 1d6 points of damage of your active energy type, but requires a standard action to use and cannot be used as part of a full attack. This effect can be turned on or off as a move action. The aegis must be at least 4th level and have the ranged attack customization before selecting this customization." compset="CustomSpec" uniqueness="useronce">
    <fieldval field="actName" value="Move Action"/>
    <usesource source="pPsiUn"/>
    <tag group="CustomCost" tag="2"/>
    <tag group="AllowRCust" tag="cfgPUAstSu"/>
    <tag group="Helper" tag="Secondary"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <tag group="User" tag="Activation"/>
    <eval phase="Final" priority="450"><![CDATA[
      ~If not active get out now! &
      doneif (field[abilActive].value = 0)

      ~ Change dice to d6
      #value2[rcPUaRngAt] = 6

      ~ Set the "Active Energy Type" on to the ranged attack pick
      perform hero.pulltags[PsiActEne.?]
      perform hero.childfound[rcPUaRngAt].pushtags[PsiActEne.?]]]>
      <before name="Aegis Ranged Attack"/>
      </eval>
    <exprreq message="Ranged Attack customization required."><![CDATA[#hasability[rcPUaRngAt] <> 0]]></exprreq>
    <prereq message="Aegis level 4+ required.">
      <validate><![CDATA[
        var classcheck as string
        var levels as number
        classcheck = "Aegis"
        call PUPreReqs
        validif (levels >= 4)]]></validate>
      </prereq>
    </thing>
  <thing id="rcPUaEmBl" name="Empowered Blast" description="The aegis can spend power points to increase the damage of his energy blast attack. Once per round, before making an attack using the energy blast customization, the aegis can spend up to his class level in power points as a free action, to gain +1d6 damage for every 1 power point spent. An attack that misses is wasted. The aegis must be at least 4th level and have the energy blast and ranged attack customizations before selecting this customization." compset="CustomSpec" uniqueness="useronce">
    <fieldval field="actName" value="Power Points"/>
    <fieldval field="actUserMin" value="1"/>
    <fieldval field="actUserMax" value="20"/>
    <fieldval field="abValue2" value="6"/>
    <usesource source="pPsiUn"/>
    <tag group="User" tag="Activation"/>
    <tag group="AllowRCust" tag="cfgPUAstSu"/>
    <tag group="Helper" tag="UserAdjust"/>
    <tag group="Helper" tag="Secondary"/>
    <tag group="CustomCost" tag="1"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <eval phase="Final"><![CDATA[
      ~If not active get out now! &
      doneif (field[abilActive].value = 0)

      ~ Set the energy type on the ranged attack pick
      #extradamage[hero.childfound[rcPUaRngAt],signed(field[actUser].value) & "d" & field[abValue2].value,field[name].text]]]>
      <before name="Aegis Ranged Attack"/>
      </eval>
    <exprreq message="Energy Blast customization required."><![CDATA[#hasability[rcPUaEneBl] <> 0]]></exprreq>
    <exprreq message="Ranged Attack customization required."><![CDATA[#hasability[rcPUaRngAt] <> 0]]></exprreq>
    <prereq message="Power Points spent can not be over your class level.">
      <validate><![CDATA[
        ~ Only do this test if we are a pick
        validif (@ispick = 0)

        var classcheck as string
        var levels as number
        classcheck = "Aegis"
        call PUPreReqs
        validif (levels >= altpick.field[actUser].value)]]></validate>
      </prereq>
    <prereq message="Aegis level 4+ required.">
      <validate><![CDATA[
        var classcheck as string
        var levels as number
        classcheck = "Aegis"
        call PUPreReqs
        validif (levels >= 4)]]></validate>
      </prereq>
    </thing>
  <thing id="rcPUaEnerR" name="Energy Resistance" description="The aegis gains resist 5 against his active energy type. This resistance increases by 5 for every 5 levels the aegis possesses, to a maximum of 15 at 10th level. This customization can be selected multiple times. Each time beyond the first, the aegis selects an energy type (cold, electricity, fire, or sonic) to gain resistance to, in addition to his active energy type. If the aegis&apos;s active energy type is the same as one he has selected, the effects do not stack." compset="CustomSpec" uniqueness="useronce">
    <fieldval field="abValue" value="5"/>
    <usesource source="pPsiUn"/>
    <tag group="CustomCost" tag="1"/>
    <tag group="AllowRCust" tag="cfgPUAstSu"/>
    <tag group="Helper" tag="Secondary"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <tag group="Helper" tag="SpecUp"/>
    <eval phase="PostLevel" priority="20000"><![CDATA[
      ~ If we're not wearling the Astral Suit, get out now
      doneif (hero.tagcount[Custom.WearAstS] = 0)

      ~ Calcaulte the Resistance bonus
      field[abValue].value += round(linkage[table].field[cfgLevel].value/5,0,-1) * 5

      ~ Make sure oure maximum value is 15
      field[abValue].value = minimum(field[abValue].value, 15)

      ~ If value two is not zero then double by that amount
      If (field[abValue2].value <> 0) Then
        field[abValue].value *= field[abValue2].value
      Endif

      ~ Based on the Active Energy Type give energy resistance
      if (hero.tagis[PsiActEne.Cold] <> 0) then
        #applyresist[xDamRsCold, field[abValue].value]
      elseif (hero.tagis[PsiActEne.Elec] <> 0) then
        #applyresist[xDamRsElec, field[abValue].value]
      elseif (hero.tagis[PsiActEne.Fire] <> 0) then
        #applyresist[xDamRsFire, field[abValue].value]
      elseif (hero.tagis[PsiActEne.Sonic] <> 0) then
        #applyresist[xDamRsSoni, field[abValue].value]
      endif]]>
      <after name="Astral Suit Configurable"/>
      </eval>
    </thing>
  <thing id="cPUaEnerRe" name="Energy Resistance, Extra" description="The aegis gains resist 5 against his active energy type. This resistance increases by 5 for every 5 levels the aegis possesses, to a maximum of 15 at 10th level. This customization can be selected multiple times. Each time beyond the first, the aegis selects an energy type (cold, electricity, fire, or sonic) to gain resistance to, in addition to his active energy type. If the aegis&apos;s active energy type is the same as one he has selected, the effects do not stack." compset="CustomSpec" summary="Gain an additional energy type.">
    <fieldval field="usrCandid1" value="component.SelectHelp &amp; Psionics.PsiActEne"/>
    <usesource source="pPsiUn"/>
    <tag group="CustomCost" tag="1"/>
    <tag group="AllowRCust" tag="cfgPUAstSu"/>
    <tag group="Helper" tag="Secondary"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <eval phase="PostLevel" priority="25000"><![CDATA[
      ~ If we're not wearling the Astral Suit, get out now
      doneif (hero.tagcount[Custom.WearAstS] = 0)

      ~ Set amount of resistance
      field[abValue].value += #value[rcPUaEnerR]

      ~ If nothing's been selected, there's nothing we can do
      doneif (field[usrChosen1].ischosen = 0)

      ~ Set resistance amount
      #applybonus[abValue, field[usrChosen1].chosen, field[abValue].value]]]></eval>
    <exprreq message="Energy Resistance customization required."><![CDATA[#hasability[rcPUaEnerR] <> 0]]></exprreq>
    </thing>
  <thing id="rcPUaIEneR" name="Energy Resistance, Improved" description="The energy resistance gained from the Energy Resistance customization doubles. The aegis must have the Energy Resistance customization and be at least 6th level to select this customization." compset="CustomSpec" summary="2x your energy ristance." uniqueness="useronce">
    <fieldval field="abValue" value="2"/>
    <usesource source="pPsiUn"/>
    <tag group="Helper" tag="Secondary"/>
    <tag group="CustomCost" tag="2"/>
    <tag group="AllowRCust" tag="cfgPUAstSu"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <eval phase="PostLevel" priority="10000"><![CDATA[
      ~ Set the energy resistance amount to be doubled &
      #applybonus[abValue2, hero.childfound[rcPUaEnerR], field[abValue].value]]]></eval>
    <exprreq message="Energy Resistance customization required."><![CDATA[#hasability[rcPUaEnerR] <> 0]]></exprreq>
    <prereq message="Aegis level 6+ required.">
      <validate><![CDATA[
        var classcheck as string
        var levels as number
        classcheck = "Aegis"
        call PUPreReqs
        validif (levels >= 6)]]></validate>
      </prereq>
    </thing>
  <thing id="rcPUaEnerI" name="Energy Immunity" description="The aegis gains immunity to his active energy type as long as he is wearing his astral suit.{br}{br}The aegis must be at least 15th level before selecting this customization." compset="CustomSpec" summary="Gain immunity to your active energy type." uniqueness="useronce">
    <usesource source="pPsiUn"/>
    <tag group="Helper" tag="Secondary"/>
    <tag group="CustomCost" tag="4"/>
    <tag group="AllowRCust" tag="cfgPUAstSu"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <bootstrap thing="xImmCold">
      <containerreq phase="First" priority="4500"><![CDATA[PsiActEne.Cold & Custom.WearAstS]]></containerreq>
      </bootstrap>
    <bootstrap thing="xImmElec">
      <containerreq phase="First" priority="4500"><![CDATA[PsiActEne.Elec & Custom.WearAstS]]></containerreq>
      </bootstrap>
    <bootstrap thing="xImmFire">
      <containerreq phase="First" priority="4500"><![CDATA[PsiActEne.Fire & Custom.WearAstS]]></containerreq>
      </bootstrap>
    <bootstrap thing="xImmSoni">
      <containerreq phase="First" priority="4500"><![CDATA[PsiActEne.Sonic & Custom.WearAstS]]></containerreq>
      </bootstrap>
    <prereq message="Aegis level 15+ required.">
      <validate><![CDATA[
        var classcheck as string
        var levels as number
        classcheck = "Aegis"
        call PUPreReqs
        validif (levels >= 15)]]></validate>
      </prereq>
    </thing>
  <thing id="rcPUaExArL" name="Extra Arms, Lesser" description="The aegis&apos;s astral suit has an extra pair of arms with limited function. Each arm can hold, but not use, any one item that can normally be held in one hand. Items held in this way count toward the aegis&apos;s carrying capacity. The aegis can retrieve any item held by his extra arms as a swift action. The aegis does not gain any mechanical benefit from items held by these arms, such as a shield bonus to armor class." compset="CustomSpec" summary="Gain an extra pair of arms that can hold items." uniqueness="useronce">
    <usesource source="pPsiUn"/>
    <tag group="AllowRCust" tag="cfgPUAstSu"/>
    <tag group="CustomCost" tag="1"/>
    <tag group="Helper" tag="Secondary"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <eval phase="First" priority="200"><![CDATA[
      ~ If two hands not in use then add two tags to hero
      ~ and get out! &
      If (field[abilAct2].value = 1) Then
        perform hero.pushtags[Activated.?]
        perform hero.pushtags[Activated.?]

      ~ Only one hand free so push only one tag
      ElseIf (field[abilActive].value = 1) Then
        perform hero.pushtags[Activated.?]
      Endif]]></eval>
    <eval phase="PreLevel" priority="5000" index="2"><![CDATA[
      ~ If we don't have Lesser or Greater arms do not show activation
      ~ options because they don't yet do anything.
      doneif (hero.tagis[Ability.rcPUaExtAr] + hero.tagis[Ability.rcPUaExArG] = 0)
      ~ If we're not wearling the Astral Suit, get out now
      doneif (hero.tagcount[Custom.WearAstS] = 0)

      ~ Show choice of free hands
      perform assign[User.Activation]
      field[actName].text = "1 hand free"
      field[actName2].text = "2 hands free"]]></eval>
    <eval phase="PreLevel" priority="10000" index="3"><![CDATA[
      ~ If two hands not in use get out now! &
      doneif (field[abilAct2].value = 0)

      ~ If both hands in use prevent 1 hand in use from
      ~ being activated.
      perform assign[Helper.ChgDisab1]]]></eval>
    </thing>
  <thing id="rcPUaExtAr" name="Extra Arms" description="The extra arms on the aegis&apos;s astral suit gain improved functionality. The aegis gains a +2 circumstance bonus to Climb checks and CMD against grapple attempts for each extra arm that is not holding anything. In addition, one of the arms can wield and use a light or one-handed weapon, a shield, or any other item that can be used with one hand. Attacks made with this additional arm suffer a -2 penalty to attack rolls in addition to any penalties for using two weapons.{br}{br}These extra arms do not grant any additional attacks, only alternate arms with which to make the standard attacks. The aegis must be at least 5th level and have the Lesser Extra Arms customization before selecting this customization." compset="CustomSpec" summary="Bonus to Climb and CMD or -2H with weapons." uniqueness="useronce">
    <fieldval field="abValue2" value="2"/>
    <usesource source="pPsiUn"/>
    <tag group="CustomCost" tag="2"/>
    <tag group="AllowRCust" tag="cfgPUAstSu"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <tag group="Helper" tag="Secondary"/>
    <eval phase="PreLevel" priority="10000"><![CDATA[
      ~ If no hands free to use then get out now! &
      doneif (hero.tagis[Activated.rcPUaExArL] = 0)
      ~ If we're not wearling the Astral Suit, get out now
      doneif (hero.tagcount[Custom.WearAstS] = 0)

      ~ Calcaulte bonus to arms
      field[abValue].value += hero.tagcount[Activated.rcPUaExArL] * field[abValue2].value

      ~ Give bonus to Climb and Grapple CMD
      #skillbonus[skClimb] += field[abValue].value
      hero.child[manGrapple].field[cmdBonus].value += field[abValue].value]]></eval>
    <exprreq message="Extra Arms, Lesser customization required."><![CDATA[#hasability[rcPUaExArL] <> 0]]></exprreq>
    <prereq message="Aegis level 5+ required.">
      <validate><![CDATA[
        var classcheck as string
        var levels as number
        classcheck = "Aegis"
        call PUPreReqs
        validif (levels >= 5)]]></validate>
      </prereq>
    </thing>
  <thing id="rcPUaExArG" name="Extra Arms, Greater" description="The extra arms on the aegis&apos;s astral suit function at nearly the same capacity as his normal arms. Each arm can now wield or use a light or one-handed weapon, shield, or any other item that he could normally use. Alternatively, the aegis can use one or both arms when wielding a two-handed weapon, possibly allowing him to wield a pair of two-handed weapons. The circumstance bonus on Climb checks and CMD against grapple attempts increases to +3 per extra arm that is not holding anything. The aegis must be 8th level and have the Extra Arms and Lesser Extra Arms customizations before selecting this customization." compset="CustomSpec" summary="Extra arms now work like your normal arms." uniqueness="useronce">
    <usesource source="pPsiUn"/>
    <tag group="Helper" tag="Secondary"/>
    <tag group="CustomCost" tag="3"/>
    <tag group="AllowRCust" tag="cfgPUAstSu"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <eval phase="First" priority="300"><![CDATA[
      ~ Increase bonus to +3 per arm &
      #value2[rcPUaExtAr] += 1

      ~ If no hands free to use then get out now! &
      doneif (hero.tagis[Activated.rcPUaExArL] = 0)
      ~ If we're not wearling the Astral Suit, get out now
      doneif (hero.tagcount[Custom.WearAstS] = 0)

      ~ Give extra hands free
      herofield[tNumHands].value += hero.tagcount[Activated.rcPUaExArL]]]></eval>
    <exprreq message="Extra Arms, Lesser customization required."><![CDATA[#hasability[rcPUaExArL] <> 0]]></exprreq>
    <exprreq message="Extra Arms customization required."><![CDATA[#hasability[rcPUaExtAr] <> 0]]></exprreq>
    <prereq message="Aegis level 8+ required.">
      <validate><![CDATA[
        var classcheck as string
        var levels as number
        classcheck = "Aegis"
        call PUPreReqs
        validif (levels >= 8)]]></validate>
      </prereq>
    </thing>
  <thing id="rcPUaHardS" name="Hardened Strikes" description="The aegis is considered to be armed even when unarmed, does not provoke attacks of opportunity when making unarmed strikes, and his unarmed strikes deal lethal damage. In addition, the aegis&apos;s unarmed strikes can deal slashing or piercing damage, chosen at the time the customization is selected, instead of bludgeoning damage." compset="CustomSpec" summary="Unarmed strikes deal lethal damage &amp; an additional damage type." uniqueness="useronce">
    <fieldval field="usrCandid1" value="component.SelectHelp &amp; PackSelect.DamageType &amp; (wType.S | wType.P)"/>
    <usesource source="pPsiUn"/>
    <tag group="CustomCost" tag="2"/>
    <tag group="AllowRCust" tag="cfgPUAstSu"/>
    <tag group="Helper" tag="Secondary"/>
    <tag group="Helper" tag="SpecUp"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <eval phase="First" priority="1000"><![CDATA[
      ~ If we're not wearling the Astral Suit, get out now
      doneif (hero.tagcount[Custom.WearAstS] = 0)
      ~ If nothing chosen get out now!
      doneif (field[usrChosen1].ischosen = 0)

      ~ Get the chosen weapon damage type
      perform field[usrChosen1].chosen.pulltags[wType.?]

      ~ find all unarmed strikes
      foreach pick in hero from BaseWep where "IsWeapon.wUnarmed"
        ~ Add damage type
        perform eachpick.pushtags[wType.?]
        ~ Make lethal damage
        perform eachpick.delete[wSpecial.Nonlethal]
      nexteach]]></eval>
    </thing>
  <thing id="rcPUaPwrSR" name="Power Stone Repository" description="The aegis may absorb power stones into his astral suit, causing them to appear and disappear whenever the suit does. The aegis may choose to have the absorbed power stones visible (much like embedded gems), or may decide to keep any or all of them concealed. The aegis may store one power stone per class level in this fashion; adding or removing a power stone takes 1 minute per stone (any power stone that is completely flushed and powerless dissolves immediately and is not counted against the aegis&apos;s limit).{br}{br}The aegis may activate any power stone stored in his repository as if he were holding it in hand; this follows all of the standard rules for using power stones, except the aegis gets a bonus equal to the number of stored power stones to any Use Magic Device checks he makes for this purpose. If the aegis loses this customization for any reason, any power stones stored in the astral suit are inert but unharmed until removed or this customization is regained." compset="CustomSpec" summary="Absorb power stones into your astral suit.{BR}{BR}{B}Not Fully Implemented{/b}" uniqueness="useronce">
    <usesource source="pPsiUn"/>
    <tag group="Helper" tag="Secondary"/>
    <tag group="CustomCost" tag="1"/>
    <tag group="AllowRCust" tag="cfgPUAstSu"/>
    <tag group="ProductId" tag="HLCommunit"/>
    </thing>
  <thing id="rcPUaHarPS" name="Harness Power Stone" description="The aegis can manifest a single 1st-level power from a power stone stored in his power stone repository as if it were a known power, with an effective manifester level of 1. This effective manifester level does not make an aegis eligible for feats and prestige classes requiring a manifester level, nor does it allow him to activate other power stones without a Use Magic Device check. The aegis may manifest the chosen power as many times as his power point pool will allow, but changing to a different power (either within the same power stone, or within another power stone in the repository) requires a move action and flushes the old power from the power stone (so power stones with multiple powers lose one power, but the rest are unaffected; power stones with only a single power are flushed and dissolved). If this customization is lost or removed, any applicable attuned power is flushed from the power stone. The aegis must be at least 3rd level and have the Power Stone Repository customization to select this customization. This customization may be selected a second time beginning at 5th level; doing so allows the aegis to manifest a second 1st-level power from a power stone (either a second stone, or a second power in an already-selected stone). The aegis may freely alternate between these two powers (or any others gained via Harness Power Stone customizations) when manifesting, but trading out either power for a new power flushes out the sacrificed power as usual.{BR}{BR}{B}Not Fully Implemented{/b}" compset="CustomSpec">
    <usesource source="pPsiUn"/>
    <tag group="Helper" tag="Secondary"/>
    <tag group="CustomCost" tag="1"/>
    <tag group="AllowRCust" tag="cfgPUAstSu"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <exprreq message="Power Stone Repository customization required."><![CDATA[#hasability[rcPUaPwrSR] <> 0]]></exprreq>
    <prereq message="Aegis level 3+ required.">
      <validate><![CDATA[
        var classcheck as string
        var levels as number
        classcheck = "Aegis"
        call PUPreReqs
        validif (levels >= 3)]]></validate>
      </prereq>
    <prereq message="">
      <validate><![CDATA[
        var allowed as number
        var classcheck as string
        var levels as number
        classcheck = "Aegis"
        call PUPreReqs

        allowed = 1
        ~ 2nd copy allowed at level 5
        If (levels >= 5 ) then
          allowed += 1
        Endif

        ~ if we're a pick, then there must be complevel/5 or fewer copies of
        ~ this ability
        if (@ispick <> 0) then
          validif (tagcount[HasAbility.rcPUaHarPS] <= allowed)

        ~ otherwise, look for fewer, since we're adding this
        else
          validif (tagcount[HasAbility.rcPUaHarPS] < allowed)
        endif

        @message = "You may not have more than " & allowed & " copies of this ability."]]></validate>
      </prereq>
    </thing>
  <thing id="rcPUaHarSh" name="Harness Shard" description="The aegis is able to place a single {i}shard{/i} into the astral suit as a move action. By spending one power point as a standard action, he can gain one use of the {i}shard{/i} without the shard disintegrating. This customization may be selected multiple times. Each time, it allows the aegis to store an additional shard within the astral suit, although each shard must be activated separately.{BR}{BR}{B}Not Fully Implemented{/b}" compset="CustomSpec">
    <usesource source="pPsiUn"/>
    <tag group="Helper" tag="Secondary"/>
    <tag group="CustomCost" tag="1"/>
    <tag group="AllowRCust" tag="cfgPUAstSu"/>
    <tag group="User" tag="Activation"/>
    <tag group="ProductId" tag="HLCommunit"/>
    </thing>
  <thing id="rcPUaImpAr" name="Improved Armor" description="The astral suit thickens and strengthens, increasing the aegis&apos;s Armor bonus by +1. This customization can be taken once for every five levels the aegis possesses and stacks with any Armor bonus granted from the astral suit itself. The aegis must be at least 5th level before selecting this customization." compset="CustomSpec" summary="Astral Suit AC bonus increases by 1.">
    <comment>This ability is fully implemented. The procedure PUAstBonus handles the bonus logic.</comment>
    <usesource source="pPsiUn"/>
    <tag group="CustomCost" tag="1"/>
    <tag group="AllowRCust" tag="cfgPUAstSu"/>
    <tag group="Helper" tag="SpecUp"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <tag group="Helper" tag="Secondary"/>
    <prereq message="">
      <validate><![CDATA[
        var allowed as number
        var classcheck as string
        var levels as number
        classcheck = "Aegis"
        call PUPreReqs

        ~ Additional copy allowed every 5 levels
        allowed += round(levels/5,0,-1)

        ~ if we're a pick, then there must be complevel/5 or fewer copies of
        ~ this ability
        if (@ispick <> 0) then
          validif (tagcount[HasAbility.rcPUaImpAr] <= allowed)

        ~ otherwise, look for fewer, since we're adding this
        else
          validif (tagcount[HasAbility.rcPUaImpAr] < allowed)
        endif

        @message = "You may not have more than " & allowed & " copies of this ability."]]></validate>
      </prereq>
    <prereq message="Aegis level 5+ required.">
      <validate><![CDATA[
        var classcheck as string
        var levels as number
        classcheck = "Aegis"
        call PUPreReqs
        validif (levels >= 5)]]></validate>
      </prereq>
    </thing>
  <thing id="rcPUaPsiAt" name="Psionic Attacks" description="The aegis&apos;s astral suit encompasses his melee attacks. All of the aegis&apos;s melee attacks are treated as if they were magic for the purpose of overcoming damage reduction. In addition, any melee weapons wielded by the aegis are treated as masterwork if they are not already." compset="CustomSpec" summary="Melee weapons are treated as magic and MW." uniqueness="useronce">
    <usesource source="pPsiUn"/>
    <tag group="Helper" tag="Secondary"/>
    <tag group="CustomCost" tag="1"/>
    <tag group="AllowRCust" tag="cfgPUAstSu"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <eval phase="PostLevel" priority="20000"><![CDATA[
      ~ If we're not wearling the Astral Suit, get out now
      doneif (hero.tagcount[Custom.WearAstS] = 0)

      ~ find all non-masterwork melee weapons
      foreach pick in hero from BaseWep where "!EquipType.Masterwork & wCategory.Melee"
        ~ Make all non-MW weapons into masterwork weapons
        perform eachpick.assign[EquipType.Masterwork]
      nexteach]]></eval>
    </thing>
  <thing id="rcPUaPsiDa" name="Psionic Damage" description="The aegis&apos;s melee attacks deal an additional 1 point of damage. The aegis must have the psionic attacks customization and must be at least 5th level to select this customization." compset="CustomSpec" summary="Melee weapons deal +1 damage." uniqueness="useronce">
    <fieldval field="abValue" value="1"/>
    <usesource source="pPsiUn"/>
    <tag group="Helper" tag="Secondary"/>
    <tag group="CustomCost" tag="1"/>
    <tag group="AllowRCust" tag="cfgPUAstSu"/>
    <eval phase="PostLevel" priority="10000"><![CDATA[
      ~ If we're not enabled, get out now
      doneif (hero.tagcount[Custom.WearAstS] = 0)

      ~ Increase the damage of melee weapons by 1
      hero.child[Damage].field[dmmBonus].value += field[abValue].value]]></eval>
    <exprreq message="Psionic Attacks customization required."><![CDATA[#hasability[rcPUaPsiAt] <> 0]]></exprreq>
    <prereq message="Aegis level 5+ required.">
      <validate><![CDATA[
        var classcheck as string
        var levels as number
        classcheck = "Aegis"
        call PUPreReqs
        validif (levels >= 5)]]></validate>
      </prereq>
    </thing>
  <thing id="rcPUaPull" name="Pull" description="The aegis&apos;s astral suit envelopes his weapon and grants him the ability to pull creatures closer with a successful melee attack. Whenever the aegis makes a successful melee attack, he can attempt a free combat maneuver check. If successful, the target of the attack is pulled 5 feet closer to the aegis. This ability only works on creatures of a size equal to or smaller than the aegis.{br}{br}Creatures pulled in this way do not provoke attacks of opportunity. The aegis must have a reach of 10 feet or more to select this customization. If there is insufficient room for the target to move closer to the aegis, the attempt automatically fails." compset="CustomSpec" summary="Successful melee attacks allow a CMB check to pull the target." uniqueness="useronce">
    <usesource source="pPsiUn"/>
    <tag group="Helper" tag="Secondary"/>
    <tag group="CustomCost" tag="1"/>
    <tag group="AllowRCust" tag="cfgPUAstSu"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <exprreq message="10+ foot reach required."><![CDATA[herofield[tReach].value >= 10]]></exprreq>
    </thing>
  <thing id="rcPUaPush" name="Push" description="The aegis gains the ability to push creatures away with a successful attack. Whenever the aegis makes a successful melee attack, he can attempt a free combat maneuver check. If successful, the target of the attack is pushed 5 feet directly away from the aegis.{br}{br}This ability only works on creatures of a size equal to or smaller than the aegis. Creatures pushed in this way do not provoke attacks of opportunity. If there is insufficient room for the target to be pushed away, the attempt automatically fails." compset="CustomSpec" summary="Successful melee attacks allow a CMB check to push the target." uniqueness="useronce">
    <usesource source="pPsiUn"/>
    <tag group="Helper" tag="Secondary"/>
    <tag group="CustomCost" tag="1"/>
    <tag group="AllowRCust" tag="cfgPUAstSu"/>
    <tag group="ProductId" tag="HLCommunit"/>
    </thing>
  <thing id="rcPUaRetal" name="Retaliate" description="The aegis gains the ability as an immediate action and by expending psionic focus to make a melee attack against an enemy that has successfully hit him with a melee attack. This counts as an attack of opportunity and the aegis must be able to reach the enemy. An aegis must be at least 8th level before selecting this customization." compset="CustomSpec" summary="Immediate action expend focus to make an AoO vs attacker." uniqueness="useronce">
    <usesource source="pPsiUn"/>
    <tag group="Helper" tag="Secondary"/>
    <tag group="CustomCost" tag="1"/>
    <tag group="AllowRCust" tag="cfgPUAstSu"/>
    <tag group="abAction" tag="PUExpFocus"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <prereq message="Aegis level 8+ required.">
      <validate><![CDATA[
        var classcheck as string
        var levels as number
        classcheck = "Aegis"
        call PUPreReqs
        validif (levels >= 8)]]></validate>
      </prereq>
    </thing>
  </document>
