<?xml version="1.0" encoding="UTF-8"?>
<document signature="Hero Lab Data">
  <fileinfo>
    <info_history><![CDATA[June 12, 2013 - Jai Erwin
- Consolidated Things to fit into the correct FGG Core Package file.

3/20/2013 - Tim Shadow
-Removed the XXXXXXX class.
-Fixed the the fact that the Dalang PrC when you choose Non-Spellcaster didn't add the domain spells from the chosen domains.]]></info_history>
    </fileinfo>
  <thing id="arFGHdrAdp" name="Adept" compset="ClassVary" uniqueness="unique" isshowonly="yes">
    <comment><![CDATA[This is a helper object for the "Adept" class header.]]></comment>
    <tag group="ProductId" tag="FrogGod"/>
    <link linkage="varies" thing="cHelpAdp"/>
    </thing>
  <thing id="cMnkFGShaW" name="Shadow of the Water" description="At 12th level, a {i}Mai&apos;kal{/i} gains the ability to move so quickly from place to place that they appear five feet from their actual location as per {i}displacement{/i}. The {i}Mai&apos;kal{/i} may use this ability a number of rounds equal to their monk level per day. The rounds need not be consecutive. This ability replaces abundant step." compset="ClSpecial" summary="Gain {i}displacement{/i} as the spell.">
    <tag group="SpInfo" tag="spDisplac3"/>
    <tag group="Usage" tag="DayRound"/>
    <tag group="User" tag="Tracker"/>
    <tag group="ChargeCalc" tag="LevelFull"/>
    <tag group="ChargeCalc" tag="LevelX1"/>
    <tag group="AbilType" tag="Extra"/>
    <tag group="SpecType" tag="Defense"/>
    <tag group="ProductId" tag="FrogGod"/>
    </thing>
  <thing id="cMnkFGCraW" name="Crashing Wave" description="At 15th level, a {i}Mai&apos;kal{/i} gains the devastating ability to turn their foes&apos; violence back upon them. Once per round when a foe attacks the {i}Mai&apos;kal{/i} in melee and misses, as an immediate action the {i}Mai&apos;kal{/i} may roll with the attack and spend a ki point to cause the foe to become the target of their own attack. The {i}Mai&apos;kal{/i} might reverse the enemy&apos;s blade with a touch, cause them to fall upon their own axe, duck and send their spiked chain spiraling back at them, etc. The attacker rolls damage for the attack normally and takes this damage themselves." compset="ClSpecial" summary="1/round when a melee attack misses, as an immediate action spend a ki point to have the attack hit the attacker.">
    <tag group="SpecType" tag="Defense"/>
    <tag group="AbilType" tag="Extra"/>
    <tag group="ProductId" tag="FrogGod"/>
    </thing>
  <thing id="cMnkFGPelH" name="Pele&apos;s Heart" description="At 19th level, a {i}Mai&apos;kal{/i} gains the ability to transform their body to living magma for 1 round per monk level. In this form, they are immune to fire and their unarmed attacks inflict an additional 4d6 points of fire damage (8d6 to inanimate objects). In addition, they may melt any object they touch, even to the point of walking through walls (melting stone and burning wood away in their path if they deal sufficient fire damage to it). Anyone grappling a {i}Mai&apos;kal{/i} using Pele&apos;s Heart suffers 4d6 fire damage per round. This ability replaces empty body." compset="ClSpecial" summary="Transform into living magma and unarmed attacks do 4d6 fire or 8d6 to inanimate objects.">
    <fieldval field="actName" value="Magma Form"/>
    <tag group="User" tag="Tracker"/>
    <tag group="Usage" tag="DayRound"/>
    <tag group="ChargeCalc" tag="LevelFull"/>
    <tag group="ChargeCalc" tag="LevelX1"/>
    <tag group="User" tag="Activation"/>
    <tag group="AbilType" tag="Super"/>
    <tag group="ProductId" tag="FrogGod"/>
    <bootstrap thing="xImmFire">
      <containerreq phase="First" priority="500"><![CDATA[fieldval:abilActive <> 0]]></containerreq>
      </bootstrap>
    <eval phase="Final" priority="25000"><![CDATA[
~ If we're not shown, just get out now
doneif (tagis[Helper.ShowSpec] = 0)
~ If we've been Disabled, get out now
doneif (tagis[Helper.SpcDisable] <> 0)
~ If not active get out now!
doneif (field[abilActive].value <> 1) 

~ All unarmed strikes get bonus fire damage
foreach pick in hero from BaseWep where "thingid.wUnarmed"
   #extradamage[eachpick,"+4d6 fire",field[name].text]
nexteach]]></eval>
    </thing>
  <thing id="cHelpDaD" name="Dalang of Dajobas" compset="Class" uniqueness="unique">
    <fieldval field="cHDSides" value="8"/>
    <fieldval field="cAbbr" value="DaD"/>
    <fieldval field="cSkills" value="4"/>
    <fieldval field="cSpecSing" value="Domain"/>
    <fieldval field="cSecSplReq" value="1"/>
    <fieldval field="cSecSpName" value="domain spells"/>
    <arrayval field="cCastTot" index="1" value="4"/>
    <arrayval field="cCastTot" index="1" column="1" value="2"/>
    <arrayval field="cCastTot" index="2" value="4"/>
    <arrayval field="cCastTot" index="2" column="1" value="2"/>
    <arrayval field="cCastTot" index="2" column="2" value="1"/>
    <arrayval field="cCastTot" index="3" value="4"/>
    <arrayval field="cCastTot" index="3" column="1" value="3"/>
    <arrayval field="cCastTot" index="3" column="2" value="2"/>
    <arrayval field="cCastTot" index="4" value="4"/>
    <arrayval field="cCastTot" index="4" column="1" value="3"/>
    <arrayval field="cCastTot" index="4" column="2" value="2"/>
    <arrayval field="cCastTot" index="4" column="3" value="1"/>
    <arrayval field="cCastTot" index="0" value="3"/>
    <arrayval field="cCastTot" index="0" column="1" value="1"/>
    <usesource source="CampRazorC"/>
    <tag group="ClassSkill" tag="skBluff"/>
    <tag group="ClassSkill" tag="Craft"/>
    <tag group="sClass" tag="cHelpClr"/>
    <tag group="CastInfini" tag="0"/>
    <tag group="cAttack" tag="Medium"/>
    <tag group="ClassSkill" tag="skClimb"/>
    <tag group="ClassSkill" tag="skDisguise"/>
    <tag group="ClassSkill" tag="skHandleAn"/>
    <tag group="ClassSkill" tag="skIntim"/>
    <tag group="ClassSkill" tag="skKnowNat"/>
    <tag group="ClassSkill" tag="skPercep"/>
    <tag group="ClassSkill" tag="skSenseMot"/>
    <tag group="ClassSkill" tag="skStealth"/>
    <tag group="ClassSkill" tag="skSurvival"/>
    <tag group="ClassSkill" tag="skSwim"/>
    <tag group="cRef" tag="Poor"/>
    <tag group="cWill" tag="Good"/>
    <tag group="Classes" tag="RCDalang" name="Dalang of Dajobas"/>
    <tag group="ExtraLev1" tag="Divine"/>
    <tag group="cFort" tag="Good"/>
    <tag group="SecSplMech" tag="ReqClass"/>
    <tag group="AllowCust" tag="cHelpClr"/>
    <tag group="ProductId" tag="FrogGod"/>
    <bootstrap thing="cDaDFearNo">
      <autotag group="ClSpecWhen" tag="1"/>
      </bootstrap>
    <bootstrap thing="cDaDRazToM">
      <autotag group="ClSpecWhen" tag="1"/>
      </bootstrap>
    <bootstrap thing="cDaDDevour">
      <autotag group="ClSpecWhen" tag="2"/>
      </bootstrap>
    <bootstrap thing="cDaDSharkM">
      <autotag group="ClSpecWhen" tag="2"/>
      </bootstrap>
    <bootstrap thing="cDiDBloodF">
      <autotag group="ClSpecWhen" tag="2"/>
      </bootstrap>
    <bootstrap thing="cDaDRedKis">
      <autotag group="ClSpecWhen" tag="3"/>
      </bootstrap>
    <bootstrap thing="cDaDShaGod">
      <autotag group="ClSpecWhen" tag="4"/>
      </bootstrap>
    <bootstrap thing="cDaDEotW">
      <autotag group="ClSpecWhen" tag="5"/>
      </bootstrap>
    <bootstrap thing="cDaDConver">
      <autotag group="ClSpecWhen" tag="1"/>
      </bootstrap>
    <link linkage="spellattr" thing="aWIS"/>
    </thing>
  <thing id="cFGDalang" name="Dalang of Dajobas" description="{b}Special:{/b} Must have been reduced to below 0 hp by a shark attack.\n\nDajobas eats the faithful flock of others now, just as he once devoured the gods themselves. His chosen ones are most often devotees to an erstwhile deity of the ocean or a divine stormbringer, visited in fever dreams by Dajobas and imbued with his insatiable appetite for carnage. Thus, clerics are changed. On occasion, Dajobas chooses other servants - great reavers who prey on man as his own favorite children do, cannibal corsairs with a taste for human flesh and an appetite for destruction.\n\n{b}Role:{/b} A Dalang of Dajobas is a force of destruction, chosen by Dajobas to slaughter in his name. A Dalang of Dajobas is often found as the head of a cult dedicated to the worship of the Shark God, leading men and weresharks on bloody raids of civilized lands. The Dalang of Dajobas feels no loyalty to his followers, however." compset="ClassLevel" maxlimit="5">
    <usesource source="CampRazorC"/>
    <tag group="ClassType" tag="Prestige"/>
    <tag group="ProductId" tag="FrogGod"/>
    <bootstrap thing="cHelpDaD"></bootstrap>
    <link linkage="helper" thing="cHelpDaD"/>
    <exprreq message="Swim 4+ ranks required."><![CDATA[#skillranks[skSwim] >= 4]]></exprreq>
    <exprreq message="Chosen of the Shark God feat required."><![CDATA[#hasfeat[fFGChoShar] <> 0]]></exprreq>
    <exprreq message="Iron Will feat required."><![CDATA[#hasfeat[fIronWill] <> 0]]></exprreq>
    <exprreq message="Worship of Dajobas required."><![CDATA[#hasdeity[deiFGDajob] <> 0]]></exprreq>
    <exprreq message="Evil alignment required."><![CDATA[hero.tagis[Alignment.Evil] <> 0]]></exprreq>
    </thing>
  <thing id="cDaDConver" name="Conversion" description="Beginning at 1st level, a Dalang of Dajobas who was a divine spellcaster before submitting to the Shark God&apos;s hunger continues to advance in their divine spell casting ability as if they gained a new level in their original class; however they immediately lose access to whatever domains they had before and instead gain access to two of the following domains: Chaos, Destruction, Evil, Hunger, or Water. Spellcasters who were not granted domains from their original class (such as a ranger) as well as non spellcasters rise from water clouded with their own blood with access to two of these domains, plus divine spellcasting as a cleric whose level is equal to their Dalang level.\n\n{b}Note:{/b} Do to the complexity of this ability and shear number of classes in HL this ability allows a choice instead of trying to make the choice for you. Use the dropdown to select the type of conversion that is taking place.\n-{i}Divine with Domain{/I} means you have a class like cleric and you want to be able to increase its magic levels. You will also be required to remove invalid domains and add the correct ones.\n-{i}Divine without Domain{/i} means you have a class like oracle and you want to be able to choose your two domains and still increase your magic levels.\n-{i}Non-Spellcaster{/i} means you have no divine caster class and you will gain all your domains and spellcasting ability through this PrC." compset="ClSpecial">
    <fieldval field="usrCandid1" value="component.Simple &amp; RazorCoast.SelDomain"/>
    <tag group="AbilType" tag="Super"/>
    <tag group="ChooseSrc1" tag="Hero"/>
    <tag group="ProductId" tag="FrogGod"/>
    <eval phase="First"><![CDATA[
~ If we have not chosen then get out now
doneif (field[usrChosen1].ischosen <> 1)

~ If Divine with Domain process here
If (field[usrChosen1].chosen.tagis[thingid.zFGDivDoma] <> 0) Then
   ~ Setup extra magic levels
   root.field[cMagLevTot].arrayvalue[0] = 1
   root.field[cMagLevTot].arrayvalue[1] = 2
   root.field[cMagLevTot].arrayvalue[2] = 3
   root.field[cMagLevTot].arrayvalue[3] = 4
   root.field[cMagLevTot].arrayvalue[4] = 5
~..If Divine with NO domain process here
ElseIf (field[usrChosen1].chosen.tagis[thingid.zFGDivNoDo] <> 0) Then
   ~ Setup extra magic levels
   root.field[cMagLevTot].arrayvalue[0] = 1
   root.field[cMagLevTot].arrayvalue[1] = 2
   root.field[cMagLevTot].arrayvalue[2] = 3
   root.field[cMagLevTot].arrayvalue[3] = 4
   root.field[cMagLevTot].arrayvalue[4] = 5
   ~ Setup custom ability count to be 2 total
   root.field[cCustTot].arrayvalue[0] = 2
~..If non-spellcaster process here
ElseIf (field[usrChosen1].chosen.tagis[thingid.zFGNonCast] <> 0) Then
   ~ Setup custom ability count to be 2 total
   root.field[cCustTot].arrayvalue[0] = 2
   perform root.assign[CasterType.MemAll]
   perform root.assign[sClass.cHelpClr]
   perform root.assign[CasterSrc.Divine]
Endif]]></eval>
    <prereq message="Two of the following domains: Chaos, Destruction, Evil, Hunger, or Water are required.">
      <validate>~ We need to have two of the following domains: Chaos, Destruction,
~ Evil, Hunger, or Water.
If (#hasability[cdChaos] + #hasability[cdDestruct] + #hasability[cdEvil] +  #hasability[cdFGHunger] + #hasability[cdWater] = 2) Then
   @valid = 1
Else
   @valid = 0
Endif</validate>
      </prereq>
    </thing>
  <thing id="cDaDFearNo" name="Fear No Brine" description="A Dalang of Dajobas gains a swim speed equal to their highest natural mode of speed or 60 feet (whichever is higher), and gains a +8 racial bonus to Swim checks. They may also take 10 on Swim checks even when circumstances should otherwise prohibit this. The Dalang gains the ability to breathe and survive underwater as if they were an aquatic creature. Finally, they gain a +4 bonus on Fortitude saves made underwater." compset="ClSpecial">
    <tag group="AbilType" tag="Extra"/>
    <tag group="ProductId" tag="FrogGod"/>
    <eval phase="Final" priority="25000"><![CDATA[
~ If we're not shown, just get out now
doneif (tagis[Helper.ShowSpec] = 0)
~ If we've been Disabled, get out now
doneif (tagis[Helper.SpcDisable] <> 0)

~ +4 on fort saves when underwater
#situational[hero.child[svFort],"+4 when made underwater",field[name].text]]]></eval>
    <eval phase="PostAttr" priority="1000" index="2"><![CDATA[
~ If we're not shown, just get out now
doneif (tagis[Helper.ShowSpec] = 0)
~ If we've been Disabled, get out now
doneif (tagis[Helper.SpcDisable] <> 0)

~ Maximum value we can have is 60 or the base land speed
field[abValue].value += maximum(hero.child[Speed].field[tSpeed].value,60)
~ Set our swim speed
#value[xSwim] += field[abValue].value]]></eval>
    </thing>
  <thing id="cDaDRazToM" name="Razor Tooth Maw" description="At first level, the Dalang&apos;s change into a shark servitor of Dajobas begins. Henceforth, at will as a free action, their face may split wide, earto- ear and rows of razored teeth grow from their oversized mouth. This ability affords the Dalang a natural bite attack that inflicts 1d6 points of damage for a Medium Dalang." compset="ClSpecial">
    <tag group="AbilType" tag="Extra"/>
    <tag group="Helper" tag="SpecUp"/>
    <tag group="ProductId" tag="FrogGod"/>
    <bootstrap thing="wBite">
      <autotag group="wMain" tag="1d6_5"/>
      </bootstrap>
    </thing>
  <thing id="cDaDDevour" name="Devourer" description="A Dalang feeds on the flesh of fallen foes to gain great power. In one minute, a Dalang can completely devour a fallen foe of Medium or smaller size, bones and all, leaving nothing behind. For the first foe eaten, the Dalang gains a +2 enhancement bonus to attacks, saves, and caster level and 10 temporary hit points. Devouring additional foes does not grant additional enhancement bonuses, but it does gain 10 more temporary hit points for each foe ingested, to a maximum of 30 temporary hit points. Both the bonus and temporary hit points last for one hour.\n\n{B}Note:{/b} Use the counter to set the number of bodies eaten which will control the number of temporary hit points gained." compset="ClSpecial">
    <fieldval field="actName" value="Foe Eaten"/>
    <fieldval field="actUserMin" value="1"/>
    <fieldval field="actUserMax" value="3"/>
    <tag group="AbilType" tag="Super"/>
    <tag group="Helper" tag="UserAdjust"/>
    <tag group="User" tag="Activation"/>
    <tag group="ProductId" tag="FrogGod"/>
    <eval phase="PreLevel" priority="10000"><![CDATA[
~ If not active get out now
doneif (field[abilActive].value <> 1)

~ Set Bonus to attack, saves, and CL
field[abValue].value += 2

~ Give +2 bonus to attack
#applybonus[BonEnhance,hero.child[Attack],field[abValue].value]
#applybonus[BonEnhance,hero.child[svAll],field[abValue].value]
~ Loop through all classes 
foreach pick in hero from Class
   eachpick.field[cCasterLev].value += field[abValue].value
nexteach]]></eval>
    <eval phase="Final" priority="10000" index="2"><![CDATA[
~ If we're not shown, just get out now
doneif (tagis[Helper.ShowSpec] = 0)
~ If we've been Disabled, get out now
doneif (tagis[Helper.SpcDisable] <> 0)
~ If not active get out now
doneif (field[abilActive].value <> 1)

~ Give Temp HP based on 10x the number of people eaten
herofield[tCurrentHP].value += field[actUser].value * 10]]></eval>
    </thing>
  <thing id="cDaDSharkM" name="Shark Master" description="A Dalang can commune with sharks telepathically within 100 feet. Additionally he can rebuke or command sharks, alligators, crocodiles, weresharks and karikanti as if they were undead. The range of telepathic communication with those under his command is one mile, and the Dalang may perceive using the senses of a commanded creature in range at will by making a DC 20 concentration check." compset="ClSpecial">
    <tag group="AbilType" tag="Super"/>
    <tag group="ProductId" tag="FrogGod"/>
    </thing>
  <thing id="cDaDBloodF" name="Blood Frenzy" description="Once a Dalang of Dajobas tastes the blood of an enemy they may enter a blood frenzy. This ability is identical to a barbarian&apos;s rage in every way (though it stacks with rage), except the Dalang may not choose to end the effect prematurely and cannot break off from battle until the frenzy runs its course. A blood frenzy is invigorating to a Dalang, and does not leave them fatigued afterward." compset="ClSpecial">
    <comment>This thing is now obsolete based on the Apr 15, 2013 errata notes.</comment>
    <fieldval field="trkMax" value="4"/>
    <tag group="ChargeAttr" tag="aCON"/>
    <tag group="ChargeCalc" tag="LevelFull"/>
    <tag group="ChargeCalc" tag="LevelX2"/>
    <tag group="User" tag="Tracker"/>
    <tag group="User" tag="Activation"/>
    <tag group="SpecType" tag="Attack"/>
    <tag group="Usage" tag="DayRound"/>
    <tag group="ProductId" tag="FrogGod"/>
    <tag group="AbilType" tag="Extra"/>
    <eval phase="PostLevel" priority="10000"><![CDATA[
~ If we're not shown, just get out now
doneif (tagis[Helper.ShowSpec] = 0)
~ If we've been Disabled, get out now
doneif (tagis[Helper.SpcDisable] <> 0)

~ Push hero tag that we have Blood Frenzy ability as we have multiple
~ classes with this same named ability but work slightly different.
perform hero.assign[RazorCoast.BloodFrenz]

~ Str Bonus
field[abValue].value += 4
~ Will bonus
field[abValue2].value += 2
~ Set our Constitution bonus
field[abValue3].value += 4
~ Set penalty to AC
field[abValue4].value += 2

If (field[abilActive].value <> 0) then
   ~ Counter the increase to charges
   field[trkMax].value -= round(field[abValue3].value/2,0,-1)

   hero.child[aSTR].field[Bonus].value += field[abValue].value
   hero.child[aCON].field[Bonus].value += field[abValue3].value
   hero.child[svWill].field[Bonus].value += field[abValue2].value
   hero.child[ArmorClass].field[Penalty].value -= field[abValue4].value
Endif]]></eval>
    </thing>
  <thing id="cDaDRedKis" name="The Red Kiss" description="At 3rd level Dalangs gain the dread ability to turn those they bite into slavish servitors of their hungry god. Henceforth, anyone bitten by the Dalang may contract fel lycanthropy (Fortitude DC 10 + Dalang&apos;s class level plus Wisdom modifier), becoming a fel wereshark if they do not resist. Infected weresharks are subject to a Dalang&apos;s Shark Master ability and zealously devote themselves to the worship of Dajobas until they are cured - even after the Dalang who infected them is slain." compset="ClSpecial">
    <tag group="SpecType" tag="Attack"/>
    <tag group="AbilType" tag="Super"/>
    <tag group="StandardDC" tag="aWIS"/>
    <tag group="ProductId" tag="FrogGod"/>
    </thing>
  <thing id="cDaDShaGod" name="Shark God Made Flesh" description="At 4th level, a Dalang gains the power to turn into a living avatar of his ravenous god. The Dalang gains the ability to assume a form similar to the hybrid form of a wereshark (use the Large shark as the base creature). They gain low-light vision, scent, keen scent, and blindsense of a shark and a +2 to Wisdom in both forms. In hybrid form, they gain a +6 bonus to Strength, a +2 bonus to Dexterity, a +2 bonus to Constitution and damage reduction 10/silver. The Dalang can change forms at will as a move action." compset="ClSpecial">
    <fieldval field="actName" value="Hybrid Wereshark Form"/>
    <tag group="User" tag="Activation"/>
    <tag group="AbilType" tag="Super"/>
    <tag group="ProductId" tag="FrogGod"/>
    <bootstrap thing="raLowLight">
      <containerreq phase="First" priority="500"><![CDATA[fieldval:abilActive <> 0]]></containerreq>
      </bootstrap>
    <bootstrap thing="xScent">
      <containerreq phase="First" priority="500"><![CDATA[fieldval:abilActive <> 0]]></containerreq>
      </bootstrap>
    <bootstrap thing="raKeenScen">
      <containerreq phase="First" priority="500"><![CDATA[fieldval:abilActive <> 0]]></containerreq>
      </bootstrap>
    <bootstrap thing="rBlindsen">
      <containerreq phase="First" priority="500"><![CDATA[fieldval:abilActive <> 0]]></containerreq>
      <autotag group="Value" tag="30"/>
      </bootstrap>
    <eval phase="PostLevel" priority="10000"><![CDATA[
~ If we're not shown, just get out now
doneif (tagis[Helper.ShowSpec] = 0)
~ If we've been replaced, get out now
doneif (tagis[Helper.SpcDisable] <> 0)

~ Str Bonus
field[abValue].value += 6
~ Dex bonus
field[abValue2].value += 2
~ Constitution bonus
field[abValue3].value += 2
~ Wis Bonus
field[abValue4].value += 2
~ If active set values
If (field[abilActive].value <> 0) then
   hero.child[aSTR].field[Bonus].value += field[abValue].value
   hero.child[aDEX].field[Bonus].value += field[abValue2].value
   hero.child[aCON].field[Bonus].value += field[abValue3].value
   hero.child[aWIS].field[Bonus].value += field[abValue4].value
   #applydr[xDamRdSil,10]
Endif]]></eval>
    </thing>
  <thing id="cDaDEotW" name="Eater of the World" description="At 5th level a Dalang&apos;s devourer ability becomes far more potent. They may now completely devour a foe as a full round action, and in addition to the bonuses detailed above a Dalang also gains a +4 divine bonus to Strength (this bonus does not stack) for 1 hour, and the limit on their temporary hit points increases to 50." compset="ClSpecial">
    <tag group="AbilType" tag="Super"/>
    <tag group="ProductId" tag="FrogGod"/>
    <eval phase="PostLevel" priority="10000"><![CDATA[
~ If we're not shown, just get out now
doneif (tagis[Helper.ShowSpec] = 0)
~ If we've been Disabled, get out now
doneif (tagis[Helper.SpcDisable] <> 0)
~ If Devourer not active get out now
doneif (hero.tagis[Activated.cDaDDevour] <> 1)
~ Str Bonus
field[abValue].value += 4
~ Give +4 Divine bonus to Str
hero.child[aSTR].field[Bonus].value += field[abValue].value]]></eval>
    <eval phase="PostLevel" priority="500" index="2"><![CDATA[
~ If we're not shown, just get out now
doneif (tagis[Helper.ShowSpec] = 0)
~ If we've been Disabled, get out now
doneif (tagis[Helper.SpcDisable] <> 0)

~ Increase Devourer ability to a max of 50
If (hero.childlives[cDaDDevour] <> 0) Then
   hero.child[cDaDDevour].field[actUserMax].value += 2
Endif]]></eval>
    </thing>
  <thing id="arFGMaikal" name="Mai&apos;kal" description="The Tulitas&apos; monks are called {i}Mai&apos;kal{/i}, warriors who devote their entire existence to becoming one with the wind, sea, and volcanoes. They exceed all others in their practice of the Warrior&apos;s Way." compset="ClassVary" uniqueness="unique">
    <usesource source="CampRazorC"/>
    <tag group="WepProf" tag="wClub"/>
    <tag group="WepProf" tag="wDagger"/>
    <tag group="WepProf" tag="wHandaxe"/>
    <tag group="WepProf" tag="wJavelin"/>
    <tag group="WepProf" tag="wQtrstaff"/>
    <tag group="WepProf" tag="wSling"/>
    <tag group="WepProf" tag="wSpear"/>
    <tag group="fInclude" tag="fFGLokGras"/>
    <tag group="fInclude" tag="fFGTsuStri"/>
    <tag group="AbReplace" tag="cMnkAbund"/>
    <tag group="AbReplace" tag="cMnkQuiver"/>
    <tag group="AbReplace" tag="cMnkEmpty"/>
    <tag group="WepProf" tag="wFGBracCor"/>
    <tag group="WepProf" tag="wFGBracUrc"/>
    <tag group="WepProf" tag="wFGClubSha"/>
    <tag group="WepProf" tag="wFGGaunCon"/>
    <tag group="WepProf" tag="wFGWhiSpin"/>
    <tag group="WepProf" tag="wFGUrchThr"/>
    <tag group="ClVaryName" tag="AppParen"/>
    <tag group="ProductId" tag="FrogGod"/>
    <bootstrap thing="cMnkFGShaW">
      <autotag group="ClSpecWhen" tag="12"/>
      </bootstrap>
    <bootstrap thing="cMnkFGCraW">
      <autotag group="ClSpecWhen" tag="15"/>
      </bootstrap>
    <bootstrap thing="cMnkFGPelH">
      <autotag group="ClSpecWhen" tag="19"/>
      </bootstrap>
    <link linkage="varies" thing="cHelpMnk"/>
    <eval phase="PostLevel" priority="11000"><![CDATA[
~ If not linked to class get out now!
doneif (islinkage[varies] = 0)

~ Assign 6th level bonus feat options
~ Dolphin's Jab, Fists of Basalt
If (linkage[varies].field[cTotalLev].value >= 6) then
   perform linkage[varies].assign[fInclude.fFGDolJab]
   perform linkage[varies].assign[fInclude.fFGFisBasa]
Endif

~ Assign 10th level bonus feat options
~ Mountain Breaking Fists and Orca's Tail 
If (linkage[varies].field[cTotalLev].value >= 10) then
   perform linkage[varies].assign[fInclude.fFGMouBrea]
   perform linkage[varies].assign[fInclude.fFGOrcTail]
Endif]]></eval>
    </thing>
  <thing id="cHelpYhg" name="Yohunga" compset="Class" uniqueness="unique">
    <fieldval field="cHDSides" value="8"/>
    <fieldval field="cAbbr" value="Yhg"/>
    <fieldval field="cSkills" value="4"/>
    <fieldval field="cSplMaxLvl" value="6"/>
    <arrayval field="cCastTot" index="0" column="1" value="1"/>
    <arrayval field="cCastTot" index="1" value="99"/>
    <arrayval field="cCastTot" index="1" column="1" value="2"/>
    <arrayval field="cCastTot" index="2" value="99"/>
    <arrayval field="cCastTot" index="2" column="1" value="3"/>
    <arrayval field="cCastTot" index="3" value="99"/>
    <arrayval field="cCastTot" index="3" column="1" value="3"/>
    <arrayval field="cCastTot" index="3" column="2" value="1"/>
    <arrayval field="cCastTot" index="4" value="99"/>
    <arrayval field="cCastTot" index="4" column="1" value="4"/>
    <arrayval field="cCastTot" index="4" column="2" value="2"/>
    <arrayval field="cCastTot" index="5" value="99"/>
    <arrayval field="cCastTot" index="5" column="1" value="4"/>
    <arrayval field="cCastTot" index="5" column="2" value="3"/>
    <arrayval field="cCastTot" index="6" value="99"/>
    <arrayval field="cCastTot" index="6" column="1" value="4"/>
    <arrayval field="cCastTot" index="6" column="2" value="3"/>
    <arrayval field="cCastTot" index="6" column="3" value="1"/>
    <arrayval field="cCastTot" index="7" value="99"/>
    <arrayval field="cCastTot" index="7" column="1" value="4"/>
    <arrayval field="cCastTot" index="7" column="2" value="4"/>
    <arrayval field="cCastTot" index="7" column="3" value="2"/>
    <arrayval field="cCastTot" index="8" value="99"/>
    <arrayval field="cCastTot" index="8" column="1" value="5"/>
    <arrayval field="cCastTot" index="8" column="2" value="4"/>
    <arrayval field="cCastTot" index="8" column="3" value="3"/>
    <arrayval field="cCastTot" index="9" value="99"/>
    <arrayval field="cCastTot" index="9" column="1" value="5"/>
    <arrayval field="cCastTot" index="9" column="2" value="4"/>
    <arrayval field="cCastTot" index="9" column="3" value="3"/>
    <arrayval field="cCastTot" index="9" column="4" value="1"/>
    <arrayval field="cCastTot" index="10" value="99"/>
    <arrayval field="cCastTot" index="10" column="1" value="5"/>
    <arrayval field="cCastTot" index="10" column="2" value="4"/>
    <arrayval field="cCastTot" index="10" column="3" value="4"/>
    <arrayval field="cCastTot" index="10" column="4" value="2"/>
    <arrayval field="cCastTot" index="11" value="99"/>
    <arrayval field="cCastTot" index="11" column="1" value="5"/>
    <arrayval field="cCastTot" index="11" column="2" value="5"/>
    <arrayval field="cCastTot" index="11" column="3" value="4"/>
    <arrayval field="cCastTot" index="11" column="4" value="3"/>
    <arrayval field="cCastTot" index="12" value="99"/>
    <arrayval field="cCastTot" index="12" column="1" value="5"/>
    <arrayval field="cCastTot" index="12" column="2" value="5"/>
    <arrayval field="cCastTot" index="12" column="3" value="4"/>
    <arrayval field="cCastTot" index="12" column="4" value="3"/>
    <arrayval field="cCastTot" index="12" column="5" value="1"/>
    <arrayval field="cCastTot" index="13" value="99"/>
    <arrayval field="cCastTot" index="13" column="1" value="5"/>
    <arrayval field="cCastTot" index="13" column="2" value="5"/>
    <arrayval field="cCastTot" index="13" column="3" value="4"/>
    <arrayval field="cCastTot" index="13" column="4" value="4"/>
    <arrayval field="cCastTot" index="13" column="5" value="2"/>
    <arrayval field="cCastTot" index="14" value="99"/>
    <arrayval field="cCastTot" index="14" column="1" value="5"/>
    <arrayval field="cCastTot" index="14" column="2" value="5"/>
    <arrayval field="cCastTot" index="14" column="3" value="5"/>
    <arrayval field="cCastTot" index="14" column="4" value="4"/>
    <arrayval field="cCastTot" index="14" column="5" value="3"/>
    <arrayval field="cCastTot" index="15" value="99"/>
    <arrayval field="cCastTot" index="15" column="1" value="5"/>
    <arrayval field="cCastTot" index="15" column="2" value="5"/>
    <arrayval field="cCastTot" index="15" column="3" value="5"/>
    <arrayval field="cCastTot" index="15" column="4" value="4"/>
    <arrayval field="cCastTot" index="15" column="5" value="3"/>
    <arrayval field="cCastTot" index="15" column="6" value="1"/>
    <arrayval field="cCastTot" index="16" value="99"/>
    <arrayval field="cCastTot" index="16" column="1" value="5"/>
    <arrayval field="cCastTot" index="16" column="2" value="5"/>
    <arrayval field="cCastTot" index="16" column="3" value="5"/>
    <arrayval field="cCastTot" index="16" column="4" value="4"/>
    <arrayval field="cCastTot" index="16" column="5" value="4"/>
    <arrayval field="cCastTot" index="16" column="6" value="2"/>
    <arrayval field="cCastTot" index="17" value="99"/>
    <arrayval field="cCastTot" index="17" column="1" value="5"/>
    <arrayval field="cCastTot" index="17" column="2" value="5"/>
    <arrayval field="cCastTot" index="17" column="3" value="5"/>
    <arrayval field="cCastTot" index="17" column="4" value="5"/>
    <arrayval field="cCastTot" index="17" column="5" value="4"/>
    <arrayval field="cCastTot" index="17" column="6" value="3"/>
    <arrayval field="cCastTot" index="18" value="99"/>
    <arrayval field="cCastTot" index="18" column="1" value="5"/>
    <arrayval field="cCastTot" index="18" column="2" value="5"/>
    <arrayval field="cCastTot" index="18" column="3" value="5"/>
    <arrayval field="cCastTot" index="18" column="4" value="5"/>
    <arrayval field="cCastTot" index="18" column="5" value="5"/>
    <arrayval field="cCastTot" index="18" column="6" value="4"/>
    <arrayval field="cCastTot" index="19" value="99"/>
    <arrayval field="cCastTot" index="19" column="1" value="5"/>
    <arrayval field="cCastTot" index="19" column="2" value="5"/>
    <arrayval field="cCastTot" index="19" column="3" value="5"/>
    <arrayval field="cCastTot" index="19" column="4" value="5"/>
    <arrayval field="cCastTot" index="19" column="5" value="5"/>
    <arrayval field="cCastTot" index="19" column="6" value="5"/>
    <arrayval field="cKnowTot" index="0" value="4"/>
    <arrayval field="cKnowTot" index="0" column="1" value="2"/>
    <arrayval field="cKnowTot" index="1" value="5"/>
    <arrayval field="cKnowTot" index="1" column="1" value="3"/>
    <arrayval field="cKnowTot" index="2" value="6"/>
    <arrayval field="cKnowTot" index="2" column="1" value="4"/>
    <arrayval field="cKnowTot" index="3" value="6"/>
    <arrayval field="cKnowTot" index="3" column="1" value="4"/>
    <arrayval field="cKnowTot" index="3" column="2" value="2"/>
    <arrayval field="cKnowTot" index="4" value="6"/>
    <arrayval field="cKnowTot" index="4" column="1" value="4"/>
    <arrayval field="cKnowTot" index="4" column="2" value="3"/>
    <arrayval field="cKnowTot" index="5" value="6"/>
    <arrayval field="cKnowTot" index="5" column="1" value="4"/>
    <arrayval field="cKnowTot" index="5" column="2" value="4"/>
    <arrayval field="cKnowTot" index="6" value="6"/>
    <arrayval field="cKnowTot" index="6" column="1" value="5"/>
    <arrayval field="cKnowTot" index="6" column="2" value="4"/>
    <arrayval field="cKnowTot" index="6" column="3" value="2"/>
    <arrayval field="cKnowTot" index="7" value="6"/>
    <arrayval field="cKnowTot" index="7" column="1" value="5"/>
    <arrayval field="cKnowTot" index="7" column="2" value="4"/>
    <arrayval field="cKnowTot" index="7" column="3" value="3"/>
    <arrayval field="cKnowTot" index="8" value="6"/>
    <arrayval field="cKnowTot" index="8" column="1" value="5"/>
    <arrayval field="cKnowTot" index="8" column="2" value="4"/>
    <arrayval field="cKnowTot" index="8" column="3" value="4"/>
    <arrayval field="cKnowTot" index="9" value="6"/>
    <arrayval field="cKnowTot" index="9" column="1" value="5"/>
    <arrayval field="cKnowTot" index="9" column="2" value="5"/>
    <arrayval field="cKnowTot" index="9" column="3" value="4"/>
    <arrayval field="cKnowTot" index="9" column="4" value="2"/>
    <arrayval field="cKnowTot" index="10" value="6"/>
    <arrayval field="cKnowTot" index="10" column="1" value="6"/>
    <arrayval field="cKnowTot" index="10" column="2" value="5"/>
    <arrayval field="cKnowTot" index="10" column="3" value="4"/>
    <arrayval field="cKnowTot" index="10" column="4" value="3"/>
    <arrayval field="cKnowTot" index="11" value="6"/>
    <arrayval field="cKnowTot" index="11" column="1" value="6"/>
    <arrayval field="cKnowTot" index="11" column="2" value="5"/>
    <arrayval field="cKnowTot" index="11" column="3" value="4"/>
    <arrayval field="cKnowTot" index="11" column="4" value="4"/>
    <arrayval field="cKnowTot" index="12" value="6"/>
    <arrayval field="cKnowTot" index="12" column="1" value="6"/>
    <arrayval field="cKnowTot" index="12" column="2" value="5"/>
    <arrayval field="cKnowTot" index="12" column="3" value="5"/>
    <arrayval field="cKnowTot" index="12" column="4" value="4"/>
    <arrayval field="cKnowTot" index="12" column="5" value="2"/>
    <arrayval field="cKnowTot" index="13" value="6"/>
    <arrayval field="cKnowTot" index="13" column="1" value="6"/>
    <arrayval field="cKnowTot" index="13" column="2" value="6"/>
    <arrayval field="cKnowTot" index="13" column="3" value="5"/>
    <arrayval field="cKnowTot" index="13" column="4" value="4"/>
    <arrayval field="cKnowTot" index="13" column="5" value="3"/>
    <arrayval field="cKnowTot" index="14" value="6"/>
    <arrayval field="cKnowTot" index="14" column="1" value="6"/>
    <arrayval field="cKnowTot" index="14" column="2" value="6"/>
    <arrayval field="cKnowTot" index="14" column="3" value="5"/>
    <arrayval field="cKnowTot" index="14" column="4" value="4"/>
    <arrayval field="cKnowTot" index="14" column="5" value="4"/>
    <arrayval field="cKnowTot" index="15" value="6"/>
    <arrayval field="cKnowTot" index="15" column="1" value="6"/>
    <arrayval field="cKnowTot" index="15" column="2" value="6"/>
    <arrayval field="cKnowTot" index="15" column="3" value="5"/>
    <arrayval field="cKnowTot" index="15" column="4" value="5"/>
    <arrayval field="cKnowTot" index="15" column="5" value="4"/>
    <arrayval field="cKnowTot" index="15" column="6" value="2"/>
    <arrayval field="cKnowTot" index="16" value="6"/>
    <arrayval field="cKnowTot" index="16" column="1" value="6"/>
    <arrayval field="cKnowTot" index="16" column="2" value="6"/>
    <arrayval field="cKnowTot" index="16" column="3" value="6"/>
    <arrayval field="cKnowTot" index="16" column="4" value="5"/>
    <arrayval field="cKnowTot" index="16" column="5" value="4"/>
    <arrayval field="cKnowTot" index="16" column="6" value="3"/>
    <arrayval field="cKnowTot" index="17" value="6"/>
    <arrayval field="cKnowTot" index="17" column="1" value="6"/>
    <arrayval field="cKnowTot" index="17" column="2" value="6"/>
    <arrayval field="cKnowTot" index="17" column="3" value="6"/>
    <arrayval field="cKnowTot" index="17" column="4" value="5"/>
    <arrayval field="cKnowTot" index="17" column="5" value="4"/>
    <arrayval field="cKnowTot" index="17" column="6" value="4"/>
    <arrayval field="cKnowTot" index="18" value="6"/>
    <arrayval field="cKnowTot" index="18" column="1" value="6"/>
    <arrayval field="cKnowTot" index="18" column="2" value="6"/>
    <arrayval field="cKnowTot" index="18" column="3" value="6"/>
    <arrayval field="cKnowTot" index="18" column="4" value="5"/>
    <arrayval field="cKnowTot" index="18" column="5" value="5"/>
    <arrayval field="cKnowTot" index="18" column="6" value="4"/>
    <arrayval field="cKnowTot" index="19" value="6"/>
    <arrayval field="cKnowTot" index="19" column="1" value="6"/>
    <arrayval field="cKnowTot" index="19" column="2" value="6"/>
    <arrayval field="cKnowTot" index="19" column="3" value="6"/>
    <arrayval field="cKnowTot" index="19" column="4" value="5"/>
    <arrayval field="cKnowTot" index="19" column="5" value="5"/>
    <arrayval field="cKnowTot" index="19" column="6" value="5"/>
    <arrayval field="cCastTot" index="0" value="99"/>
    <usesource source="CampRazorC"/>
    <tag group="ClassSkill" tag="skFly"/>
    <tag group="ClassSkill" tag="skHandleAn"/>
    <tag group="ClassSkill" tag="skLinguist"/>
    <tag group="ClassSkill" tag="skPercep"/>
    <tag group="ClassSkill" tag="skRide"/>
    <tag group="ClassSkill" tag="skSpellcr"/>
    <tag group="cRef" tag="Poor"/>
    <tag group="ClassSkill" tag="skUseMagic"/>
    <tag group="ClassSkill" tag="Knowledge"/>
    <tag group="ClassSkill" tag="skSurvival"/>
    <tag group="CasterType" tag="SpontKnow"/>
    <tag group="CasterSrc" tag="Divine"/>
    <tag group="cWill" tag="Good"/>
    <tag group="Classes" tag="FGYohunga" name="Yohunga"/>
    <tag group="cAttack" tag="Medium"/>
    <tag group="cFort" tag="Poor"/>
    <tag group="ClassSkill" tag="Craft"/>
    <tag group="WepProf" tag="wFGClubSha"/>
    <tag group="WepProf" tag="wFGGaunCon"/>
    <tag group="WepProf" tag="wFGIeku"/>
    <tag group="WepProf" tag="wFGTewhate"/>
    <tag group="ClassSkill" tag="Profession"/>
    <tag group="CastInfini" tag="0"/>
    <tag group="ProductId" tag="FrogGod"/>
    <bootstrap thing="minFGTikim"></bootstrap>
    <bootstrap thing="fFGWepYhg"></bootstrap>
    <bootstrap thing="cYhgManaPo">
      <autotag group="ClSpecWhen" tag="1"/>
      </bootstrap>
    <bootstrap thing="cYhgTikima">
      <autotag group="ClSpecWhen" tag="1"/>
      </bootstrap>
    <bootstrap thing="cYhgTikima">
      <autotag group="ClSpecWhen" tag="5"/>
      </bootstrap>
    <bootstrap thing="cYhgTikima">
      <autotag group="ClSpecWhen" tag="10"/>
      </bootstrap>
    <bootstrap thing="cYhgTikima">
      <autotag group="ClSpecWhen" tag="15"/>
      </bootstrap>
    <bootstrap thing="cYhgTikima">
      <autotag group="ClSpecWhen" tag="20"/>
      </bootstrap>
    <bootstrap thing="fArmLight"></bootstrap>
    <bootstrap thing="cYhgTikiPo">
      <autotag group="ClSpecWhen" tag="1"/>
      </bootstrap>
    <bootstrap thing="cYhgTikiPo">
      <autotag group="ClSpecWhen" tag="2"/>
      </bootstrap>
    <bootstrap thing="cYhgTikiPo">
      <autotag group="ClSpecWhen" tag="3"/>
      </bootstrap>
    <bootstrap thing="cYhgTikiPo">
      <autotag group="ClSpecWhen" tag="4"/>
      </bootstrap>
    <bootstrap thing="cYhgTikiPo">
      <autotag group="ClSpecWhen" tag="5"/>
      </bootstrap>
    <bootstrap thing="cYhgTikiPo">
      <autotag group="ClSpecWhen" tag="6"/>
      </bootstrap>
    <bootstrap thing="cYhgTikiPo">
      <autotag group="ClSpecWhen" tag="7"/>
      </bootstrap>
    <bootstrap thing="cYhgTikiPo">
      <autotag group="ClSpecWhen" tag="8"/>
      </bootstrap>
    <bootstrap thing="cYhgTikiPo">
      <autotag group="ClSpecWhen" tag="9"/>
      </bootstrap>
    <bootstrap thing="cYhgTikiPo">
      <autotag group="ClSpecWhen" tag="10"/>
      </bootstrap>
    <bootstrap thing="cYhgTikiPo">
      <autotag group="ClSpecWhen" tag="11"/>
      </bootstrap>
    <bootstrap thing="cYhgTikiPo">
      <autotag group="ClSpecWhen" tag="12"/>
      </bootstrap>
    <bootstrap thing="cYhgTikiPo">
      <autotag group="ClSpecWhen" tag="13"/>
      </bootstrap>
    <bootstrap thing="cYhgTikiPo">
      <autotag group="ClSpecWhen" tag="14"/>
      </bootstrap>
    <bootstrap thing="cYhgTikiPo">
      <autotag group="ClSpecWhen" tag="15"/>
      </bootstrap>
    <bootstrap thing="cYhgTikiPo">
      <autotag group="ClSpecWhen" tag="16"/>
      </bootstrap>
    <bootstrap thing="cYhgTikiPo">
      <autotag group="ClSpecWhen" tag="17"/>
      </bootstrap>
    <bootstrap thing="cYhgTikiPo">
      <autotag group="ClSpecWhen" tag="18"/>
      </bootstrap>
    <bootstrap thing="cYhgTikiPo">
      <autotag group="ClSpecWhen" tag="19"/>
      </bootstrap>
    <bootstrap thing="cYhgTikiPo">
      <autotag group="ClSpecWhen" tag="20"/>
      </bootstrap>
    <bootstrap thing="cYhgManaIn">
      <autotag group="ClSpecWhen" tag="3"/>
      </bootstrap>
    <bootstrap thing="cYhgManaIn">
      <autotag group="ClSpecWhen" tag="5"/>
      </bootstrap>
    <bootstrap thing="cYhgManaIn">
      <autotag group="ClSpecWhen" tag="7"/>
      </bootstrap>
    <bootstrap thing="cYhgManaIn">
      <autotag group="ClSpecWhen" tag="9"/>
      </bootstrap>
    <bootstrap thing="cYhgManaIn">
      <autotag group="ClSpecWhen" tag="11"/>
      </bootstrap>
    <bootstrap thing="cYhgManaIn">
      <autotag group="ClSpecWhen" tag="13"/>
      </bootstrap>
    <bootstrap thing="cYhgManaIn">
      <autotag group="ClSpecWhen" tag="15"/>
      </bootstrap>
    <bootstrap thing="cYhgManaIn">
      <autotag group="ClSpecWhen" tag="17"/>
      </bootstrap>
    <bootstrap thing="cYhgManaIn">
      <autotag group="ClSpecWhen" tag="19"/>
      </bootstrap>
    <bootstrap thing="fArmShield"></bootstrap>
    <bootstrap thing="fSimple"></bootstrap>
    <bootstrap thing="cArcFNear">
      <autotag group="ClSpecWhen" tag="1"/>
      </bootstrap>
    <bootstrap thing="cArcFShare">
      <autotag group="ClSpecWhen" tag="1"/>
      </bootstrap>
    <bootstrap thing="cArcFEmpLn">
      <autotag group="ClSpecWhen" tag="1"/>
      </bootstrap>
    <bootstrap thing="cYhgSparkI">
      <autotag group="ClSpecWhen" tag="1"/>
      </bootstrap>
    <bootstrap thing="resTikiman"></bootstrap>
    <link linkage="spellattr" thing="aCHA"/>
    </thing>
  <thing id="cFGYohunga" name="Yohunga" description="The Tulita people uphold a spiritual connection to those invisible beings and forces that govern the world in which they dwell. Life remains a journey connected to the supernatural world, where the spirits of the land and sea, the child ancestors, and the dread gods whisper the secrets of existence to those mortals whose souls travel into the realms beyond time and reality. A yohunga is one born with an elder soul, born knowing the names of these spirits, for they are his very manan and his blood. They whisper in his dreams and he in turn empowers them by crafting for them a tikiman, a tiny wooden sculpture inside which they may manifest and manipulate. This allows these entities to gain semblance of mortality and a spark of life to the yohungas timanamen.\n\n{b}Role:{/b} The yohunga achieves his power through contacting the spirits and forces that exist in other realms and giving them a tikiman into which they can manifest. Each tikiman is a tiny construct fabricated of wood, bone, shells, hair, and other similar materials. Through the use of near forgotten rituals, a yohunga animates the tikiman and by sacrificing of his own mana, he seduces supernatural forces to empower it. Thus both the yohunga gains his powers by feeding these mysterious entities, while they gain the ability to experience mortality." compset="ClassLevel" maxlimit="20">
    <usesource source="CampRazorC"/>
    <tag group="ClassType" tag="Normal"/>
    <tag group="ProductId" tag="FrogGod"/>
    <bootstrap thing="cHelpYhg"></bootstrap>
    <link linkage="helper" thing="cHelpYhg"/>
    </thing>
  <thing id="cYhgManaPo" name="Mana Pool" description="A yohunga begins play with a pool of mana points, supernatural energy he can feed his tikiman to make it perform supernatural feats. The number of points in a yohunga&apos;s mana pool is equal to 1/2 his yohunga level + his Charisma modifier.{br}{br}The mana pool is replenished each morning after 8 hours of rest or meditation; these hours do not need to be consecutive. In order to focus his mana into his tikiman, the yohunga uses a specialy crafted fetish necklace carved to in the exact likeness of the tikiman&apos;s face. If a tikiman is destroyed, this necklace shatters violently dealing 1d6 points of damage per HD of the tikiman.{br}{br}At 3rd level, and every other level thereafter tikiman gains an additional +1 mana points." compset="ClSpecial" summary="A yohunga begins play with a pool of mana points, supernatural energy he can feed his tikiman to make it perform supernatural feats.">
    <tag group="ChargeCalc" tag="LevelHalf"/>
    <tag group="ChargeCalc" tag="LevelX1"/>
    <tag group="ChargeCalc" tag="AttrOnly"/>
    <tag group="ChargeAttr" tag="aCHA"/>
    <tag group="Usage" tag="Day"/>
    <tag group="User" tag="Tracker"/>
    <tag group="ProductId" tag="FrogGod"/>
    </thing>
  <thing id="cYhgTikima" name="Tikiman" description="A yohunga begins play with a tikiman, a small construct he creates. The tikiman is bonded to his creator, can understand and follow his instructions, and does so without question. To activate his tikiman, the yohunga imbues it with his own mana, mystic energies that collect in his blood that connect him to the spirit world. So long as he maintains at least 1 point of mana in his mana pool (see below) he can animate the tikiman, also granting it a spark of intelligence. The spark of intelligence grants the tikiman the ability to use skills and special tiki powers chosen by yohunga as the tiki progresses. If the yohunga&apos;s mana is ever completely depleted the tikiman becomes inanimate until he rests and replenishes his mana pool. At 5th level and every five levels thereafter, the yohunga can create an additional tikiman.\n\n{b}Note{/b} Tikiman are found on the {b}Other{/b} tab as while similiar to an Arcane Familiar they do not automaically gain hit dice like a familiar does.  At level 5 and higher you can add your additional Tikiman on the {b}Other{/b} tab." compset="ClSpecial">
    <tag group="ProductId" tag="FrogGod"/>
    <eval phase="PostLevel" priority="20000"><![CDATA[
~Set the list name
If (field[xIndex].value >= 5) Then
   field[listname].text = "Fifth " & field[name].text
ElseIf (field[xIndex].value = 4) Then
   field[listname].text = "Fourth " & field[name].text
ElseIf (field[xIndex].value = 3) Then
   field[listname].text = "Third " & field[name].text
ElseIf (field[xIndex].value = 2) Then
   field[listname].text = "Second " & field[name].text
ElseIf (field[xIndex].value = 1) Then
   field[listname].text = "First " & field[name].text
Endif
   
~ If we're not shown, just get out now
doneif (tagis[Helper.ShowSpec] = 0)
~ If we've been Disabled, get out now
doneif (tagis[Helper.SpcDisable] <> 0)

~ Set the number of Tikiman's allowed
field[abValue].value += field[xCount].value
~ Set the add a tikiman tag to the hero
perform hero.assign[RazorCoast.TikimanAdd]
~Set the live name
If (field[abValue].value >= 5) Then
   field[livename].text = "Fifth " & field[name].text
ElseIf (field[abValue].value = 4) Then
   field[livename].text = "Fourth " & field[name].text
ElseIf (field[abValue].value = 3) Then
   field[livename].text = "Third " & field[name].text
ElseIf (field[abValue].value = 2) Then
   field[livename].text = "Second " & field[name].text
ElseIf (field[abValue].value = 1) Then
   field[livename].text = "First " & field[name].text
Endif]]></eval>
    </thing>
  <thing id="cYhgSparkI" name="Spark of Intelligence" description="If a yohunga has at least 1 mana point in his mana pool, the tikiman becomes animate and gains a single point of intelligence. If the yohunga exhausts his mana pool, the tikiman loses his intelligence and becomes inanimate." compset="ClSpecial">
    <tag group="AbilType" tag="Super"/>
    <tag group="ProductId" tag="FrogGod"/>
    </thing>
  <thing id="cYhgTikiPo" name="Tiki Power" description="At 1st-level and every level thereafter, a yohunga use his spiritual connections and mana to imbue his tikiman with additional tiki powers. Some powers are permanent, though most require the yohunga to spend mana to activate them." compset="ClSpecial" summary="Your tikiman gains a new power.">
    <tag group="ProductId" tag="FrogGod"/>
    </thing>
  <thing id="cYhgManaIn" name="Mana Increase" description="At 3rd level, and every other level thereafter tikiman gains an additional +1 mana points." compset="ClSpecial" summary="+1 mana points.">
    <tag group="ProductId" tag="FrogGod"/>
    <eval phase="PostLevel" priority="20000"><![CDATA[
~ If we're not shown, just get out now
doneif (tagis[Helper.ShowSpec] = 0)
~ If we've been Disabled, get out now
doneif (tagis[Helper.SpcDisable] <> 0)

~ +1 mana point
#trkmax[cYhgManaPo] += 1]]></eval>
    </thing>
  <thing id="cHelpDiD" name="Disciple of Dajobas" compset="Class" uniqueness="unique">
    <fieldval field="cHDSides" value="8"/>
    <fieldval field="cAbbr" value="DiD"/>
    <fieldval field="cSkills" value="4"/>
    <fieldval field="cSplMaxLvl" value="6"/>
    <fieldval field="cSpecSing" value="Rage Power"/>
    <arrayval field="cKnowTot" index="0" column="1" value="2"/>
    <arrayval field="cKnowTot" index="1" value="5"/>
    <arrayval field="cKnowTot" index="1" column="1" value="3"/>
    <arrayval field="cKnowTot" index="2" value="6"/>
    <arrayval field="cKnowTot" index="2" column="1" value="4"/>
    <arrayval field="cKnowTot" index="3" value="6"/>
    <arrayval field="cKnowTot" index="3" column="1" value="4"/>
    <arrayval field="cKnowTot" index="3" column="2" value="2"/>
    <arrayval field="cKnowTot" index="4" value="6"/>
    <arrayval field="cKnowTot" index="4" column="1" value="4"/>
    <arrayval field="cKnowTot" index="4" column="2" value="3"/>
    <arrayval field="cKnowTot" index="5" value="6"/>
    <arrayval field="cKnowTot" index="5" column="1" value="4"/>
    <arrayval field="cKnowTot" index="5" column="2" value="4"/>
    <arrayval field="cKnowTot" index="6" value="6"/>
    <arrayval field="cKnowTot" index="6" column="1" value="5"/>
    <arrayval field="cKnowTot" index="6" column="2" value="4"/>
    <arrayval field="cKnowTot" index="6" column="3" value="2"/>
    <arrayval field="cKnowTot" index="7" value="6"/>
    <arrayval field="cKnowTot" index="7" column="1" value="5"/>
    <arrayval field="cKnowTot" index="7" column="2" value="4"/>
    <arrayval field="cKnowTot" index="7" column="3" value="3"/>
    <arrayval field="cKnowTot" index="8" value="6"/>
    <arrayval field="cKnowTot" index="8" column="1" value="5"/>
    <arrayval field="cKnowTot" index="8" column="2" value="4"/>
    <arrayval field="cKnowTot" index="8" column="3" value="4"/>
    <arrayval field="cKnowTot" index="9" value="6"/>
    <arrayval field="cKnowTot" index="9" column="1" value="5"/>
    <arrayval field="cKnowTot" index="9" column="2" value="5"/>
    <arrayval field="cKnowTot" index="9" column="3" value="4"/>
    <arrayval field="cKnowTot" index="9" column="4" value="2"/>
    <arrayval field="cKnowTot" index="10" value="6"/>
    <arrayval field="cKnowTot" index="10" column="1" value="6"/>
    <arrayval field="cKnowTot" index="10" column="2" value="5"/>
    <arrayval field="cKnowTot" index="10" column="3" value="4"/>
    <arrayval field="cKnowTot" index="10" column="4" value="3"/>
    <arrayval field="cKnowTot" index="11" value="6"/>
    <arrayval field="cKnowTot" index="11" column="1" value="6"/>
    <arrayval field="cKnowTot" index="11" column="2" value="5"/>
    <arrayval field="cKnowTot" index="11" column="3" value="4"/>
    <arrayval field="cKnowTot" index="11" column="4" value="4"/>
    <arrayval field="cKnowTot" index="12" value="6"/>
    <arrayval field="cKnowTot" index="12" column="1" value="6"/>
    <arrayval field="cKnowTot" index="12" column="2" value="5"/>
    <arrayval field="cKnowTot" index="12" column="3" value="5"/>
    <arrayval field="cKnowTot" index="12" column="4" value="4"/>
    <arrayval field="cKnowTot" index="12" column="5" value="2"/>
    <arrayval field="cKnowTot" index="13" value="6"/>
    <arrayval field="cKnowTot" index="13" column="1" value="6"/>
    <arrayval field="cKnowTot" index="13" column="2" value="6"/>
    <arrayval field="cKnowTot" index="13" column="3" value="5"/>
    <arrayval field="cKnowTot" index="13" column="4" value="4"/>
    <arrayval field="cKnowTot" index="13" column="5" value="3"/>
    <arrayval field="cKnowTot" index="14" value="6"/>
    <arrayval field="cKnowTot" index="14" column="1" value="6"/>
    <arrayval field="cKnowTot" index="14" column="2" value="6"/>
    <arrayval field="cKnowTot" index="14" column="3" value="5"/>
    <arrayval field="cKnowTot" index="14" column="4" value="4"/>
    <arrayval field="cKnowTot" index="14" column="5" value="4"/>
    <arrayval field="cKnowTot" index="15" value="6"/>
    <arrayval field="cKnowTot" index="15" column="1" value="6"/>
    <arrayval field="cKnowTot" index="15" column="2" value="6"/>
    <arrayval field="cKnowTot" index="15" column="3" value="5"/>
    <arrayval field="cKnowTot" index="15" column="4" value="5"/>
    <arrayval field="cKnowTot" index="15" column="5" value="4"/>
    <arrayval field="cKnowTot" index="15" column="6" value="2"/>
    <arrayval field="cKnowTot" index="16" value="6"/>
    <arrayval field="cKnowTot" index="16" column="1" value="6"/>
    <arrayval field="cKnowTot" index="16" column="2" value="6"/>
    <arrayval field="cKnowTot" index="16" column="3" value="6"/>
    <arrayval field="cKnowTot" index="16" column="4" value="5"/>
    <arrayval field="cKnowTot" index="16" column="5" value="4"/>
    <arrayval field="cKnowTot" index="16" column="6" value="3"/>
    <arrayval field="cKnowTot" index="17" value="6"/>
    <arrayval field="cKnowTot" index="17" column="1" value="6"/>
    <arrayval field="cKnowTot" index="17" column="2" value="6"/>
    <arrayval field="cKnowTot" index="17" column="3" value="6"/>
    <arrayval field="cKnowTot" index="17" column="4" value="5"/>
    <arrayval field="cKnowTot" index="17" column="5" value="4"/>
    <arrayval field="cKnowTot" index="17" column="6" value="4"/>
    <arrayval field="cKnowTot" index="18" value="6"/>
    <arrayval field="cKnowTot" index="18" column="1" value="6"/>
    <arrayval field="cKnowTot" index="18" column="2" value="6"/>
    <arrayval field="cKnowTot" index="18" column="3" value="6"/>
    <arrayval field="cKnowTot" index="18" column="4" value="5"/>
    <arrayval field="cKnowTot" index="18" column="5" value="5"/>
    <arrayval field="cKnowTot" index="18" column="6" value="4"/>
    <arrayval field="cKnowTot" index="19" value="6"/>
    <arrayval field="cKnowTot" index="19" column="1" value="6"/>
    <arrayval field="cKnowTot" index="19" column="2" value="6"/>
    <arrayval field="cKnowTot" index="19" column="3" value="6"/>
    <arrayval field="cKnowTot" index="19" column="4" value="6"/>
    <arrayval field="cKnowTot" index="19" column="5" value="5"/>
    <arrayval field="cKnowTot" index="19" column="6" value="5"/>
    <arrayval field="cCastTot" index="0" value="99"/>
    <arrayval field="cCastTot" index="0" column="1" value="1"/>
    <arrayval field="cCastTot" index="1" value="99"/>
    <arrayval field="cCastTot" index="1" column="1" value="2"/>
    <arrayval field="cCastTot" index="2" value="99"/>
    <arrayval field="cCastTot" index="2" column="1" value="3"/>
    <arrayval field="cCastTot" index="3" value="99"/>
    <arrayval field="cCastTot" index="3" column="1" value="3"/>
    <arrayval field="cCastTot" index="3" column="2" value="1"/>
    <arrayval field="cCastTot" index="4" value="99"/>
    <arrayval field="cCastTot" index="4" column="1" value="4"/>
    <arrayval field="cCastTot" index="4" column="2" value="2"/>
    <arrayval field="cCastTot" index="5" value="99"/>
    <arrayval field="cCastTot" index="5" column="1" value="4"/>
    <arrayval field="cCastTot" index="5" column="2" value="3"/>
    <arrayval field="cCastTot" index="6" value="99"/>
    <arrayval field="cCastTot" index="6" column="1" value="4"/>
    <arrayval field="cCastTot" index="6" column="2" value="3"/>
    <arrayval field="cCastTot" index="6" column="3" value="1"/>
    <arrayval field="cCastTot" index="7" value="99"/>
    <arrayval field="cCastTot" index="7" column="1" value="4"/>
    <arrayval field="cCastTot" index="7" column="2" value="4"/>
    <arrayval field="cCastTot" index="7" column="3" value="2"/>
    <arrayval field="cCastTot" index="8" value="99"/>
    <arrayval field="cCastTot" index="8" column="1" value="5"/>
    <arrayval field="cCastTot" index="8" column="2" value="4"/>
    <arrayval field="cCastTot" index="8" column="3" value="3"/>
    <arrayval field="cCastTot" index="9" value="99"/>
    <arrayval field="cCastTot" index="9" column="1" value="5"/>
    <arrayval field="cCastTot" index="9" column="2" value="4"/>
    <arrayval field="cCastTot" index="9" column="3" value="3"/>
    <arrayval field="cCastTot" index="9" column="4" value="1"/>
    <arrayval field="cCastTot" index="10" value="99"/>
    <arrayval field="cCastTot" index="10" column="1" value="5"/>
    <arrayval field="cCastTot" index="10" column="2" value="4"/>
    <arrayval field="cCastTot" index="10" column="3" value="4"/>
    <arrayval field="cCastTot" index="10" column="4" value="2"/>
    <arrayval field="cCastTot" index="11" value="99"/>
    <arrayval field="cCastTot" index="11" column="1" value="5"/>
    <arrayval field="cCastTot" index="11" column="2" value="5"/>
    <arrayval field="cCastTot" index="11" column="3" value="4"/>
    <arrayval field="cCastTot" index="11" column="4" value="3"/>
    <arrayval field="cCastTot" index="12" value="99"/>
    <arrayval field="cCastTot" index="12" column="1" value="5"/>
    <arrayval field="cCastTot" index="12" column="2" value="5"/>
    <arrayval field="cCastTot" index="12" column="3" value="4"/>
    <arrayval field="cCastTot" index="12" column="4" value="3"/>
    <arrayval field="cCastTot" index="12" column="5" value="1"/>
    <arrayval field="cCastTot" index="13" value="99"/>
    <arrayval field="cCastTot" index="13" column="1" value="5"/>
    <arrayval field="cCastTot" index="13" column="2" value="5"/>
    <arrayval field="cCastTot" index="13" column="3" value="5"/>
    <arrayval field="cCastTot" index="13" column="4" value="4"/>
    <arrayval field="cCastTot" index="13" column="5" value="2"/>
    <arrayval field="cCastTot" index="14" value="99"/>
    <arrayval field="cCastTot" index="14" column="1" value="5"/>
    <arrayval field="cCastTot" index="14" column="2" value="5"/>
    <arrayval field="cCastTot" index="14" column="3" value="5"/>
    <arrayval field="cCastTot" index="14" column="4" value="4"/>
    <arrayval field="cCastTot" index="14" column="5" value="3"/>
    <arrayval field="cCastTot" index="15" value="99"/>
    <arrayval field="cCastTot" index="15" column="1" value="5"/>
    <arrayval field="cCastTot" index="15" column="2" value="5"/>
    <arrayval field="cCastTot" index="15" column="3" value="5"/>
    <arrayval field="cCastTot" index="15" column="4" value="4"/>
    <arrayval field="cCastTot" index="15" column="5" value="3"/>
    <arrayval field="cCastTot" index="15" column="6" value="1"/>
    <arrayval field="cCastTot" index="16" value="99"/>
    <arrayval field="cCastTot" index="16" column="1" value="5"/>
    <arrayval field="cCastTot" index="16" column="2" value="5"/>
    <arrayval field="cCastTot" index="16" column="3" value="5"/>
    <arrayval field="cCastTot" index="16" column="4" value="4"/>
    <arrayval field="cCastTot" index="16" column="5" value="4"/>
    <arrayval field="cCastTot" index="16" column="6" value="2"/>
    <arrayval field="cCastTot" index="17" value="99"/>
    <arrayval field="cCastTot" index="17" column="1" value="5"/>
    <arrayval field="cCastTot" index="17" column="2" value="5"/>
    <arrayval field="cCastTot" index="17" column="3" value="5"/>
    <arrayval field="cCastTot" index="17" column="4" value="5"/>
    <arrayval field="cCastTot" index="17" column="5" value="4"/>
    <arrayval field="cCastTot" index="17" column="6" value="3"/>
    <arrayval field="cCastTot" index="18" value="99"/>
    <arrayval field="cCastTot" index="18" column="1" value="5"/>
    <arrayval field="cCastTot" index="18" column="2" value="5"/>
    <arrayval field="cCastTot" index="18" column="3" value="5"/>
    <arrayval field="cCastTot" index="18" column="4" value="5"/>
    <arrayval field="cCastTot" index="18" column="5" value="5"/>
    <arrayval field="cCastTot" index="18" column="6" value="4"/>
    <arrayval field="cCastTot" index="19" value="99"/>
    <arrayval field="cCastTot" index="19" column="1" value="5"/>
    <arrayval field="cCastTot" index="19" column="2" value="5"/>
    <arrayval field="cCastTot" index="19" column="3" value="5"/>
    <arrayval field="cCastTot" index="19" column="4" value="5"/>
    <arrayval field="cCastTot" index="19" column="5" value="5"/>
    <arrayval field="cCastTot" index="19" column="6" value="5"/>
    <arrayval field="cKnowTot" index="0" value="4"/>
    <arrayval field="cCustTot" index="3" value="1"/>
    <arrayval field="cCustTot" index="6" value="2"/>
    <arrayval field="cCustTot" index="9" value="3"/>
    <arrayval field="cCustTot" index="12" value="4"/>
    <arrayval field="cCustTot" index="15" value="5"/>
    <arrayval field="cCustTot" index="18" value="6"/>
    <usesource source="CampRazorC"/>
    <tag group="cRef" tag="Poor"/>
    <tag group="AlgnReq" tag="Evil"/>
    <tag group="ClassSkill" tag="skSurvival"/>
    <tag group="ClassSkill" tag="skSwim"/>
    <tag group="cWill" tag="Good"/>
    <tag group="cFort" tag="Good"/>
    <tag group="ClassSkill" tag="Craft"/>
    <tag group="ClassSkill" tag="Profession"/>
    <tag group="ClassSkill" tag="skBluff"/>
    <tag group="ClassSkill" tag="skDisguise"/>
    <tag group="ClassSkill" tag="skHandleAn"/>
    <tag group="ClassSkill" tag="skHeal"/>
    <tag group="ClassSkill" tag="skIntim"/>
    <tag group="ClassSkill" tag="skKnowNat"/>
    <tag group="ClassSkill" tag="skKnowRel"/>
    <tag group="ClassSkill" tag="skPercep"/>
    <tag group="ClassSkill" tag="skSenseMot"/>
    <tag group="cAttack" tag="Medium"/>
    <tag group="AllowCust" tag="cHelpBbn"/>
    <tag group="Classes" tag="FGDiscDaj" name="Disciple of Dajobas"/>
    <tag group="WepProf" tag="wFGClubSha"/>
    <tag group="WepProf" tag="wDaggerPun"/>
    <tag group="CasterType" tag="SpontKnow"/>
    <tag group="CasterSrc" tag="Divine"/>
    <tag group="CastInfini" tag="0"/>
    <tag group="ClsCountAs" tag="Barbarian"/>
    <tag group="ProductId" tag="FrogGod"/>
    <bootstrap thing="fFGWepDiD"></bootstrap>
    <bootstrap thing="fArmMedium"></bootstrap>
    <bootstrap thing="fArmShield"></bootstrap>
    <bootstrap thing="fSimple"></bootstrap>
    <bootstrap thing="wBite">
      <autotag group="wMain" tag="1d4_4"/>
      <autotag group="Helper" tag="NatSizeDmg"/>
      <autotag group="Ability" tag="cDiDRazToM"/>
      </bootstrap>
    <bootstrap thing="fArmLight"></bootstrap>
    <bootstrap thing="cDiDRazToM">
      <autotag group="ClSpecWhen" tag="1"/>
      </bootstrap>
    <bootstrap thing="cDiDSpeSha">
      <autotag group="ClSpecWhen" tag="1"/>
      </bootstrap>
    <bootstrap thing="cDiDHunDom">
      <autotag group="ClSpecWhen" tag="1"/>
      </bootstrap>
    <bootstrap thing="cFGTBlood">
      <autotag group="ClSpecWhen" tag="1"/>
      </bootstrap>
    <bootstrap thing="cDiDBloodF">
      <autotag group="ClSpecWhen" tag="1"/>
      </bootstrap>
    <bootstrap thing="cDiDExSwim">
      <autotag group="ClSpecWhen" tag="2"/>
      </bootstrap>
    <bootstrap thing="cDiDBlooWa">
      <autotag group="ClSpecWhen" tag="3"/>
      </bootstrap>
    <bootstrap thing="cDiDSpeCro">
      <autotag group="ClSpecWhen" tag="4"/>
      </bootstrap>
    <bootstrap thing="cDiDShaGod">
      <autotag group="ClSpecWhen" tag="5"/>
      </bootstrap>
    <bootstrap thing="cDiDRazToM">
      <autotag group="ClSpecWhen" tag="5"/>
      </bootstrap>
    <bootstrap thing="cDiDSwiFis">
      <autotag group="ClSpecWhen" tag="6"/>
      </bootstrap>
    <bootstrap thing="cDiDShaGod">
      <autotag group="ClSpecWhen" tag="8"/>
      </bootstrap>
    <bootstrap thing="cFGEyeShar">
      <autotag group="ClSpecWhen" tag="8"/>
      </bootstrap>
    <bootstrap thing="cDiDAmphib">
      <autotag group="ClSpecWhen" tag="9"/>
      </bootstrap>
    <bootstrap thing="cDiDRazToM">
      <autotag group="ClSpecWhen" tag="10"/>
      </bootstrap>
    <bootstrap thing="cDiDShaGod">
      <autotag group="ClSpecWhen" tag="11"/>
      </bootstrap>
    <bootstrap thing="cDiDRedBle">
      <autotag group="ClSpecWhen" tag="12"/>
      </bootstrap>
    <bootstrap thing="cDiDShaGod">
      <autotag group="ClSpecWhen" tag="14"/>
      </bootstrap>
    <bootstrap thing="cDiDRazToM">
      <autotag group="ClSpecWhen" tag="15"/>
      </bootstrap>
    <bootstrap thing="cDiDShaGod">
      <autotag group="ClSpecWhen" tag="17"/>
      </bootstrap>
    <bootstrap thing="cDiDRazToM">
      <autotag group="ClSpecWhen" tag="20"/>
      </bootstrap>
    <bootstrap thing="cDiDShaGod">
      <autotag group="ClSpecWhen" tag="20"/>
      </bootstrap>
    <link linkage="spellattr" thing="aWIS"/>
    <eval phase="Final" priority="25000"><![CDATA[
~ We need to trick the Rage Powers into thinking we have more
~ Barbarian levels then we really have. The downside is if Barbarian
~ is taken also then the rage powers on the Barbarian tab will see
~ this increase in levels. This currently can't be helped without 
~ changing the Pre-Req script on every single Rage Power. And of
~ course this does nothing about 3PP rage powers that wouldn't even
~ take this into account. bla!
var iX as number
var nLevels as number
~ Calc number of levels of Barbarian class tags to add we
~ want a minimum value of 0.
nLevels += maximum(field[cTotalLev].value - 3,0)

~ assign the correct number of Classes.Barbarian tags to hero
while (iX < nLevels)
  iX += 1 
  perform hero.assign[Classes.Barbarian]
loop]]></eval>
    </thing>
  <thing id="cFGDiscDaj" name="Disciple of Dajobas" description="Dajobas, the Devourer of Worlds, increases the ranks of his followers not through rousing speeches and lavish pageantry, but by infecting his chosen servants with vile dreams and cursed maws. Mortals rarely turn to Dajobas&apos; bloody kiss of their volition; however, some lost souls willingly embrace his insatiable hunger. What emerges from submitting to Dajobas&apos; will is a frightful nightmare, a twisted being racked by a raging fever of carnage and bloodlust that is set loose upon the world with a single purpose in mind - to devour every living creature in a futile effort to appease the voracious appetite of the Shark God.{br}{br}{b}Role{/b}: Disciples of Dajobas lead cabals of like-minded worshippers in evil plots to convert others to their faith by force. Disciples of Dajobas typically spearhead guerilla raids against coastal towns and villages and launch assaults against unsuspecting ships in a quest to swell their ranks and coffers. Disciples of Dajobas are inherently ambitious, making them ideal candidates to infiltrate other organizations and infect others with their bloody kiss while retaining their anonymity. However, the Disciple of Dajobas&apos; insatiable appetite for gore and living flesh make it difficult to remain hidden for too long. In the end, hunger has a will of its own." compset="ClassLevel" maxlimit="20">
    <usesource source="CampRazorC"/>
    <tag group="ClassType" tag="Normal"/>
    <tag group="ProductId" tag="FrogGod"/>
    <bootstrap thing="cHelpDiD"></bootstrap>
    <link linkage="helper" thing="cHelpDiD"/>
    </thing>
  <thing id="cDiDHunDom" name="Hunger Domain" description="A Disciple of Dajobas must select the Hunger domain. He does not gain the bonus spells listed for the domain, nor does he gain bonus spell slots. The Disciple of Dajobas uses his level as his effective cleric level when determining the power and effect of his domain powers. If he has cleric levels, one of his two domain selections must be the Hunger domain. Levels of cleric and Disciple of Dajobas stack for the purpose of determining domain powers and abilities, but not for bonus spells." compset="ClSpecial">
    <tag group="ProductId" tag="FrogGod"/>
    <prereq message="One of your cleric domains must be the Hunger domain.">
      <validate><![CDATA[
~ If no cleric levels just get out
validif (hero.tagcount[Classes.Cleric] = 0)
~ Valid if we have the RC Hunger domain
validif (#hasability[cdFGHunger] <> 0)]]></validate>
      </prereq>
    </thing>
  <thing id="cDiDBloodF" name="Blood Frenzy" description="The sight and smell of fresh blood fuels Dajobas&apos; insatiable hunger. Starting at 1st level, a Disciple of Dajobas can rage, as per the barbarian special ability, a number of rounds per day equal to 2 + his Constitution modifier. At each level after 1st, he can rage for 1 additional round. The Disciple of Dajobas can enter blood frenzy as a free action, but he can do so only after he sees or smells blood, including his own, spilled in combat. The Disciple of Dajobas can end the rage as a free action; however, the Disciple of Dajobas does not experience fatigue at the end of the rage. Other than the preceding exceptions, blood frenzy functions as rage. Spells and feats that affect rage also apply to blood frenzy. These rounds of rage stack with any rounds of rage that the Disciple of Dajobas might have from levels of barbarian." compset="ClSpecial">
    <comment><![CDATA[Applied errata notes from Apr 15, 2013

This should be added to the Freebooter's Guide and the Core Book "blood frenzy in the PG supersedes blood frenzy as found in Appendix 5 of the Razor Coast Core Book..."]]></comment>
    <fieldval field="actName" value="Blood Frenzy"/>
    <fieldval field="trkMax" value="2"/>
    <tag group="ChargeCalc" tag="LevelFull"/>
    <tag group="ChargeCalc" tag="LevelX1"/>
    <tag group="Usage" tag="DayRound"/>
    <tag group="SpecType" tag="Attack"/>
    <tag group="AbilType" tag="Extra"/>
    <tag group="User" tag="Tracker"/>
    <tag group="User" tag="Activation"/>
    <tag group="ProductId" tag="FrogGod"/>
    <tag group="ChargeAttr" tag="aCON"/>
    <eval phase="PostLevel" priority="9500" index="2"><![CDATA[
~ If we're not shown, just get out now
doneif (tagis[Helper.ShowSpec] = 0)
~ If we've been Disabled, get out now
doneif (tagis[Helper.SpcDisable] <> 0)

~ If no barbarian rage get out now!
doneif (hero.childlives[cBbnRage] <> 1)

~ Disable ourselves
perform delete[Helper.ShowSpec]
perform delete[User.Tracker]
perform delete[User.Activation]

~ Add our rounds to those of Rage
#trkmax[cBbnRage] += 2 + #attrmod[aCON] + field[xAllLev].value]]></eval>
    <eval phase="PostLevel" priority="10000"><![CDATA[
~ If we're not shown, just get out now
doneif (tagis[Helper.ShowSpec] = 0)
~ If we've been Disabled, get out now
doneif (tagis[Helper.SpcDisable] <> 0)

~ Push hero tag that we have Blood Frenzy ability as we have multiple
~ classes with this same named ability but work slightly different.
perform hero.assign[RazorCoast.BloodFrenz]
~ We need to tell feats and abilities we have the rage
~ ability so they don't throw errors.
perform hero.assign[HasAbility.cBbnRage]

~ If we have the extra rage feat then give ourself 6 extra rounds
If (#hasfeat[fExtraRage] <> 0) Then
   field[trkMax].value += 6
Endif

~ Str Bonus
field[abValue].value += 4
~ Will bonus
field[abValue2].value += 2
~ Set our Constitution bonus
field[abValue3].value += 4
~ Set penalty to AC
field[abValue4].value += 2

If (field[abilActive].value <> 0) then
   ~ Counter the increase to charges
   field[trkMax].value -= round(field[abValue3].value/2,0,-1)

   hero.child[aSTR].field[Bonus].value += field[abValue].value
   hero.child[aCON].field[Bonus].value += field[abValue3].value
   hero.child[svWill].field[Bonus].value += field[abValue2].value
   hero.child[ArmorClass].field[Penalty].value -= field[abValue4].value
Endif]]></eval>
    </thing>
  <thing id="cDiDRazToM" name="Razor-Toothed Maw" description="The Disciple of Dajobas can transform its mouth into a wide, gaping maw of razor sharp teeth that grants him a bite attack. The bite is a primary attack or a secondary attack if the Disciple of Dajobas wields manufactured weapons. The bite deals 1d4 points of damage (assuming the Disciple of Dajobas is Medium; 1d3 points of damage if Small; 1d6 points of damage if Large). The Disciple of Dajobas can change its mouth into a razor-toothed maw and back again as a move action. The bite damage increases to 1d6 points at 5th level, 1d8 points at 10th level, 1d10 points at 15th level and finally 1d12 points at 20th level (assuming the Disciple of Dajobas is Medium)." compset="ClSpecial">
    <tag group="AbilType" tag="Extra"/>
    <tag group="SpecType" tag="Attack"/>
    <tag group="ProductId" tag="FrogGod"/>
    <eval phase="PostLevel" priority="500"><![CDATA[
~Set the list name
If (field[xIndex].value >= 5) Then
   field[listname].text = field[name].text & " 1d12"
ElseIf (field[xIndex].value = 4) Then
   field[listname].text = field[name].text & " 1d10"
ElseIf (field[xIndex].value = 3) Then
   field[listname].text = field[name].text & " 1d8"
ElseIf (field[xIndex].value = 2) Then
   field[listname].text = field[name].text & " 1d6"
ElseIf (field[xIndex].value = 1) Then
   field[listname].text = field[name].text & " 1d4"
Endif
   
~ If we're not shown, just get out now
doneif (tagis[Helper.ShowSpec] = 0)
~ If we've been Disabled, get out now
doneif (tagis[Helper.SpcDisable] <> 0)

~Set the live name
If (field[xCount].value >= 5) Then
   field[livename].text = field[name].text & " 1d12"
ElseIf (field[xCount].value = 4) Then
   field[livename].text = field[name].text & " 1d10"
ElseIf (field[xCount].value = 3) Then
   field[livename].text = field[name].text & " 1d8"
ElseIf (field[xCount].value = 2) Then
   field[livename].text = field[name].text & " 1d6"
ElseIf (field[xCount].value = 1) Then
   field[livename].text = field[name].text & " 1d4"
Endif

~ Only run for the first copy only
doneif (tagis[Helper.FirstCopy] <> 1)

var iX as number
~ Set the number of damage up tags which should be one less than the count.
~ So when we have 2nd time we only want to increase damage by one not 2.
field[abValue].value += field[xCount].value - 1

~set our focus to our Bite attack
perform hero.findchild[BaseWep,"thingid.wBite & Ability.cDiDRazToM"].setfocus
~ Only process if we have found the right bite attack
If (state.isfocus <> 0) Then
   ~ assign the correct number of damage up tags
   while (iX < field[abValue].value)
     iX += 1 
     perform focus.assign[Helper.DamageUp]
   loop
Endif]]></eval>
    </thing>
  <thing id="cDiDSpeSha" name="Speak with Sharks" description="The Disciple of Dajobas gains the ability to speak with sharks as if he were under the effect of {i}speak with animals{/i}." compset="ClSpecial" summary="Speak with sharks as if he were under the effect of {i}speak with animals{/i}.">
    <tag group="SpecType" tag="Language"/>
    <tag group="AbilType" tag="Extra"/>
    <tag group="SpInfo" tag="spSpeaAni2"/>
    <tag group="ProductId" tag="FrogGod"/>
    </thing>
  <thing id="cDiDExSwim" name="Expert Swimmer" description="At 2nd level, the Disciple of Dajobas gains Skill Focus (swim) as a bonus feat. He can always take 10 while swimming." compset="ClSpecial" summary="You can always take 10 while swimming.">
    <tag group="AbilType" tag="Extra"/>
    <tag group="ProductId" tag="FrogGod"/>
    <bootstrap thing="fSkillFoc">
      <containerreq phase="First" priority="500"><![CDATA[count:Classes.FGDiscDaj >= 2]]></containerreq>
      <autotag group="Target" tag="skSwim"/>
      </bootstrap>
    </thing>
  <thing id="cDiDBlooWa" name="Blood in the Water" description="At 3rd level, the Disciple of Dajobas gains the scent extraordinary ability. This ability functions only underwater." compset="ClSpecial" summary="You gain the scent ability while underwater.">
    <tag group="AbilType" tag="Extra"/>
    <tag group="ProductId" tag="FrogGod"/>
    <bootstrap thing="xScent">
      <containerreq phase="First" priority="500"><![CDATA[count:Classes.FGDiscDaj >= 3]]></containerreq>
      <assignval field="livename" value="Scent Underwater"/>
      </bootstrap>
    </thing>
  <thing id="cDiDSpeCro" name="Speak with Gators" description="At 4th level, the Disciple of Dajobas gains the ability to speak with crocodiles (alligators) as if he were under the effect of {i}speak with animals{/i}." compset="ClSpecial" summary="Speak with crocdiles as if he were under the effect of {i}speak with animals{/i}.">
    <tag group="SpecType" tag="Language"/>
    <tag group="AbilType" tag="Extra"/>
    <tag group="SpInfo" tag="spSpeaAni2"/>
    <tag group="ProductId" tag="FrogGod"/>
    </thing>
  <thing id="cDiDShaGod" name="Shark God Made Flesh" description="At 5th level, a Disciple of Dajobas gains the ability to turn himself into any Small or Medium shark and back again once per day, as per the druid&apos;s wild shape special ability. Changing form (to animal or back) is a standard action and does not provoke an attack of opportunity. The Disciple of Dajobas can use this ability an additional time per day at 8th level and every three levels thereafter, for a total of six times at 20th level. At 8th level, the Disciple of Dajobas can change into a Large shark. At 11th level, the Disciple of Dajobas can change into a Huge shark. At 14th level, the Disciple of Dajobas can change into a dire shark. Spells and feats that affect wild shape also apply to shark god made flesh. Disciple of Dajobas levels do not stack with druid levels for wild shape abilities. Other than the preceding exceptions, shark god made flesh functions as wild shape." compset="ClSpecial">
    <tag group="AbilType" tag="Super"/>
    <tag group="User" tag="Tracker"/>
    <tag group="Usage" tag="Day"/>
    <tag group="ProductId" tag="FrogGod"/>
    <eval phase="PostLevel" priority="10000"><![CDATA[
~Set the list name
If (field[xIndex].value >= 4) Then
   field[listname].text = field[name].text & " (Dire Shark)"
ElseIf (field[xIndex].value = 3) Then
   field[listname].text = field[name].text & " (Huge Shark)"
ElseIf (field[xIndex].value = 2) Then
   field[listname].text = field[name].text & " (Large Shark)"
Else
   field[listname].text = field[name].text & " (Medium Shark)"
Endif

~ If we're not shown, just get out now
doneif (tagis[Helper.ShowSpec] = 0)
~ If we've been Disabled, get out now
doneif (tagis[Helper.SpcDisable] <> 0)

~ Set the number of extra uses per day
field[abValue].value += field[xCount].value
field[trkMax].value += field[abValue].value]]></eval>
    </thing>
  <thing id="cDiDSwiFis" name="Swim Like a Fish" description="At 6th level, the Disciple of Dajobas gains a swim speed equal to its base speed, and all the benefits of having a swim speed." compset="ClSpecial" summary="You gain a swim speed equal to your base speed.">
    <tag group="User" tag="Tracker"/>
    <tag group="Usage" tag="Day"/>
    <tag group="AbilType" tag="Extra"/>
    <tag group="SpecType" tag="Movement"/>
    <tag group="Helper" tag="SpecUp"/>
    <tag group="ProductId" tag="FrogGod"/>
    <eval phase="PostAttr" priority="8500"><![CDATA[
~ If we're not shown, just get out now
doneif (tagis[Helper.ShowSpec] = 0)
~ If we've been Disabled, get out now
doneif (tagis[Helper.SpcDisable] <> 0)

~ Set swim speed equal to our base land speed
#value[xSwim] += hero.child[Speed].field[tSpeed].value]]></eval>
    </thing>
  <thing id="cDiDAmphib" name="Amphibious" description=" At 9th level, the Disciple of Dajobas gains the aquatic subtype and the amphibious special quality." compset="ClSpecial" summary="You gain the aquatic subtype and the amphibious special quality.">
    <tag group="AbilType" tag="Extra"/>
    <tag group="ProductId" tag="FrogGod"/>
    <tag group="Helper" tag="SpecUp"/>
    <bootstrap thing="raAmphib">
      <containerreq phase="First" priority="500"><![CDATA[count:Classes.FGDiscDaj >= 9]]></containerreq>
      </bootstrap>
    <bootstrap thing="stAquatic">
      <containerreq phase="First" priority="500"><![CDATA[count:Classes.FGDiscDaj >= 9]]></containerreq>
      </bootstrap>
    </thing>
  <thing id="cDiDRedBle" name="Red Blessing" description="At 12th level, the Disciple of Dajobas&apos; bite attack in shark form or with his razor-tooth maw infects a humanoid target with lycanthropy (Fortitude DC 15 negates). The victim becomes a wereshark. If the victim&apos;s size is not within one size category of the lycanthrope, this ability has no effect." compset="ClSpecial" summary="Your bite attack infects humanoid targets with lycanthropy.">
    <tag group="SpecType" tag="Attack"/>
    <tag group="AbilType" tag="Super"/>
    <tag group="ProductId" tag="FrogGod"/>
    <eval phase="PostLevel" priority="10000"><![CDATA[
~ If we're not shown, just get out now
doneif (tagis[Helper.ShowSpec] = 0)
~ If we've been Disabled, get out now
doneif (tagis[Helper.SpcDisable] <> 0)

~ Set our DC to 15
field[abDC].value += 15]]></eval>
    </thing>
  <thing id="arFGSurSca" name="Surf Scavenger" description="Surf Scavengers live along the coast, fearlessly embracing the pounding waves and the beasts that plague the Razor&apos;s waters.\n\n{b}Rage Powers:{/b} The following rage powers complement the surf scavenger archetype: bestial swimmer, guarded stance, increased damage reduction, quick reflexes, raging swimmer, and swift foot.\n\n{i}Shark Surf Scavenger (Optional){/i} \nSome surf scavengers favor the dark side of the native&apos;s traditions and look to the power of the shark. These barbarians look to a more bloodthirsty, vicious aspect of the water.\n\n{b}Rage Powers:{/b} The following rage powers help distinguish a shark surf scavenger from a regular surf scavenger: animal fury, primal scent, and scent." compset="ClassVary" uniqueness="unique">
    <usesource source="CampRazorC"/>
    <tag group="ClVaryName" tag="AppParen"/>
    <tag group="AbReplace" tag="cBbnFast"/>
    <tag group="AbReplace" tag="cTrapSense"/>
    <tag group="ProductId" tag="FrogGod"/>
    <bootstrap thing="cFGWatBorn">
      <autotag group="ClSpecWhen" tag="5"/>
      </bootstrap>
    <bootstrap thing="cFGWatBorn">
      <autotag group="ClSpecWhen" tag="10"/>
      </bootstrap>
    <bootstrap thing="cFGWatBorn">
      <autotag group="ClSpecWhen" tag="15"/>
      </bootstrap>
    <bootstrap thing="cFGWatBorn">
      <autotag group="ClSpecWhen" tag="20"/>
      </bootstrap>
    <bootstrap thing="cFGSurfRid">
      <autotag group="ClSpecWhen" tag="3"/>
      </bootstrap>
    <bootstrap thing="cFGSurfRid">
      <autotag group="ClSpecWhen" tag="6"/>
      </bootstrap>
    <bootstrap thing="cFGSurfRid">
      <autotag group="ClSpecWhen" tag="9"/>
      </bootstrap>
    <bootstrap thing="cFGSurfRid">
      <autotag group="ClSpecWhen" tag="12"/>
      </bootstrap>
    <bootstrap thing="cFGSurfRid">
      <autotag group="ClSpecWhen" tag="15"/>
      </bootstrap>
    <bootstrap thing="cFGSurfRid">
      <autotag group="ClSpecWhen" tag="18"/>
      </bootstrap>
    <bootstrap thing="cFGWatBorn">
      <autotag group="ClSpecWhen" tag="1"/>
      </bootstrap>
    <link linkage="varies" thing="cHelpBbn"/>
    </thing>
  <thing id="cFGWatBorn" name="Water Born" description="A surf scavenger has a favored terrain of water (both above and below the surface, including aboard a ship or along shorelines), representing their innate love of the waves. This ability functions as the ranger class feature and the surf scavenger&apos;s bonuses in the water improve by +2 at 5th level and every five levels thereafter. However, he does not gain any additional favored terrains.\n\nThis ability replaces fast movement.\n\n{b}Note:{/b} To have favored terrain bonuses affect your character go to the &quot;Adjust&quot; tab under &quot;Conferred Ability Adjustments&quot; and add the &quot;Ranger: Favored Terrain&quot; adjustment." compset="ClSpecial" summary="Favored terrain (water)  both above and below the surface, including aboard a ship or along shorelines.">
    <tag group="AbilType" tag="Extra"/>
    <tag group="ProductId" tag="FrogGod"/>
    <eval phase="PostLevel" priority="10000"><![CDATA[
var bonus as number
bonus += field[xIndex].value * 2
~Set the list name
field[listname].text = field[thingname].text & " " & signed(bonus)

~ If we're not shown, just get out now
doneif (tagis[Helper.ShowSpec] = 0)
~ If we've been Disabled, get out now
doneif (tagis[Helper.SpcDisable] <> 0)

field[abValue].value += field[xCount].value * 2
field[livename].text = field[thingname].text & " " & signed(field[abValue].value)]]></eval>
    </thing>
  <thing id="cFGSurfRid" name="Surf Rider" description="At 3rd level, a surf scavenger gains a +1 bonus on Acrobatics, Knowledge (nature), and Swim checks made in aquatic terrain, including aboard a ship or along shorelines. These bonuses improve by +1 every three levels after 3rd. \n\nThis ability replaces trap sense." compset="ClSpecial" summary="Bonus on Acrobatics, Knowledge (nature), and Swim checks made in aquatic terrain.">
    <fieldval field="actName" value="Aquatic Terrain"/>
    <tag group="SpecType" tag="Skill"/>
    <tag group="User" tag="Activation"/>
    <tag group="ProductId" tag="FrogGod"/>
    <eval phase="PostLevel" priority="10000"><![CDATA[
~Set the list name
field[listname].text = field[thingname].text & " " & signed(field[xIndex].value)

~ If we're not shown, just get out now
doneif (tagis[Helper.ShowSpec] = 0)
~ If we've been Disabled, get out now
doneif (tagis[Helper.SpcDisable] <> 0)

field[abValue].value += field[xCount].value
field[livename].text = field[thingname].text & " " & signed(field[abValue].value)

~ If not active we are done
doneif (field[abilActive].value <> 1)
~ Give bonus to Acrobatics, Knowledge (nature), and Swim checks
#skillbonus[skAcrobat] += field[abValue].value
#skillbonus[skKnowNat] += field[abValue].value
#skillbonus[skSwim] += field[abValue].value]]></eval>
    </thing>
  <thing id="arFGCanKin" name="Cannibal King" description="While many tribes live in relative peace with their surroundings, some view their neighbors as little more than food." compset="ClassVary" uniqueness="unique">
    <usesource source="CampRazorC"/>
    <tag group="ClVaryName" tag="AppParen"/>
    <tag group="AbReplace" tag="cTrapSense"/>
    <tag group="ProductId" tag="FrogGod"/>
    <bootstrap thing="cFGStrFles">
      <autotag group="ClSpecWhen" tag="3"/>
      </bootstrap>
    <link linkage="varies" thing="cHelpBbn"/>
    </thing>
  <thing id="cFGStrFles" name="Strength of the Flesh" description="At 3rd level, the cannibal king can recover lost strength by devouring the flesh of his opponents. Devouring a slain opponent reduces the number of rounds the barbarian needs to recover from his fatigue by 1 for every 3HD of the opponent to a minimum recovery time of 1 round. A cannibal can only devour the flesh of a single opponent per rage. Furthermore, he can only gain the benefits of cannibalism by feasting upon the flesh of creatures of his same monster type (for example, humanoid). This ability replaces trap sense." compset="ClSpecial" summary="Reduce the number of rounds to recover from his fatigue by 1 for every 3HD of the opponent eaten.">
    <tag group="AbilType" tag="Super"/>
    <tag group="ProductId" tag="FrogGod"/>
    </thing>
  <thing id="arFGVoice3" name="Voice of the Three" description="The voice of the Three is the cultural guardian of Tulita tradition and history, and the magical defender of the Tulita people. He keeps the spirits of Whale, Turtle, and Dolphin alive in the hearts and minds of his people while protecting them against the evil forces that threaten the natural balance and bring harm to the Tulita." compset="ClassVary" uniqueness="unique">
    <usesource source="CampRazorC"/>
    <tag group="ClVaryName" tag="AppParen"/>
    <tag group="AbReplace" tag="cBrdKnow"/>
    <tag group="AbReplace" tag="cBrdPInsC"/>
    <tag group="AbReplace" tag="cBrdPInsM"/>
    <tag group="AbReplace" tag="cBrdPDoom"/>
    <tag group="AbReplace" tag="cBrdVersed"/>
    <tag group="ProductId" tag="FrogGod"/>
    <bootstrap thing="cFGFortTur">
      <autotag group="ClSpecWhen" tag="11"/>
      </bootstrap>
    <bootstrap thing="cFGFortTur">
      <autotag group="ClSpecWhen" tag="17"/>
      </bootstrap>
    <bootstrap thing="cFGKeepTra">
      <autotag group="ClSpecWhen" tag="1"/>
      </bootstrap>
    <bootstrap thing="cFGFortTur">
      <autotag group="ClSpecWhen" tag="1"/>
      </bootstrap>
    <bootstrap thing="cFGPSpeWha">
      <autotag group="ClSpecWhen" tag="3"/>
      </bootstrap>
    <bootstrap thing="cFGPSpeWha">
      <autotag group="ClSpecWhen" tag="7"/>
      </bootstrap>
    <bootstrap thing="cFGPSpeWha">
      <autotag group="ClSpecWhen" tag="11"/>
      </bootstrap>
    <bootstrap thing="cFGPSpeWha">
      <autotag group="ClSpecWhen" tag="15"/>
      </bootstrap>
    <bootstrap thing="cFGPSpeWha">
      <autotag group="ClSpecWhen" tag="19"/>
      </bootstrap>
    <bootstrap thing="cFGPSpiDol">
      <autotag group="ClSpecWhen" tag="8"/>
      </bootstrap>
    <bootstrap thing="cFGFalsSha">
      <autotag group="ClSpecWhen" tag="2"/>
      </bootstrap>
    <bootstrap thing="cFGFortTur">
      <autotag group="ClSpecWhen" tag="5"/>
      </bootstrap>
    <link linkage="varies" thing="cHelpBrd"/>
    </thing>
  <thing id="cFGKeepTra" name="Keeper of Tradition" description="Voices of the Three gain Lingering Performance as a bonus feat at 1st level. The feat&apos;s benefits are doubled for Tulitas affected by his bardic performances. \n\nThis ability replaces bardic knowledge." compset="ClSpecial">
    <tag group="AbilType" tag="Extra"/>
    <tag group="ProductId" tag="FrogGod"/>
    <bootstrap thing="fFGLingPer">
      <autotag group="thing" tag="skipprereq"/>
      </bootstrap>
    </thing>
  <thing id="cFGFortTur" name="Bardic Performance: Fortune of Turtle" description="At 1st level, a voice of the Three can use performance to bestow good luck to allies. The bard and all allies within 30 feet gain a +1 luck bonus on attack rolls, skill checks, and saving throws. These bonuses increase by +1 at 5th level and every six levels thereafter. The targets must be able to hear the bard throughout the performance. This ability is language-dependent and requires audible components. \n\nThis performance replaces inspire courage." compset="ClSpecial" summary="Luck bonus on attack rolls, skill checks, and saving throws.">
    <tag group="AbilType" tag="Super"/>
    <tag group="ProductId" tag="FrogGod"/>
    <eval phase="PostLevel" priority="10000"><![CDATA[
~Set the list name
field[listname].text = field[thingname].text & " " & signed(field[xIndex].value)

~ If we're not shown, just get out now
doneif (tagis[Helper.ShowSpec] = 0)
~ If we've been Disabled, get out now
doneif (tagis[Helper.SpcDisable] <> 0)

field[abValue].value += field[xCount].value
field[livename].text = field[thingname].text & " " & signed(field[abValue].value)]]></eval>
    </thing>
  <thing id="cFGPSpeWha" name="Bardic Performance: Speed of Whale" description="At 3rd level, a voice of the Three can imbue allies with additional speed and agility. The bard and all allies within 30 feet gain a +5 foot enhancement bonus to their base speed and a +1 dodge bonus to AC. This enhancement bonus to speed increases by +5 feet for every four levels the bard has attained beyond 3rd (+10 feet at 7th, +15 feet at 11th, +20 feet at 15th and +25 feet at 19th). This ability has no effect on other modes of movement, such as burrow, climb, fly, or swim.\n\nThis ability replaces inspire competence." compset="ClSpecial" summary="Enhancement bonus to speed and a dodge bonus to AC.">
    <tag group="AbilType" tag="Super"/>
    <tag group="ProductId" tag="FrogGod"/>
    <eval phase="PostLevel" priority="10000"><![CDATA[
var nFeet as number
nFeet += field[xIndex].value * 5

~Set the list name
field[listname].text = field[thingname].text & " " & signed(nFeet) & "ft, " & signed(field[xIndex].value) & "AC"

~ If we're not shown, just get out now
doneif (tagis[Helper.ShowSpec] = 0)
~ If we've been Disabled, get out now
doneif (tagis[Helper.SpcDisable] <> 0)


~ Set Feet bonus
field[abValue].value += field[xCount].value * 5
~ Set AC bonus
field[abValue2].value += field[xCount].value
~ Set livename
field[livename].text = field[thingname].text & " " & signed(field[abValue].value) & "ft, " & signed(field[abValue2].value) & "AC"]]></eval>
    </thing>
  <thing id="cFGPSpiDol" name="Bardic Performance: Spirit of Dolphin" description="At 8th level, a voice of the Three can embolden allies with increased self-determination. Each round, the bard makes a Perform (oratory, percussion, wind, or sing) skill check. Any creature within 30 feet of the bard (including the bard himself) that is affected by magic that usually impedes movement, such as paralysis, {i}solid fog, slow{/i}, and {i}web{/i} may use the bard&apos;s Perform check result in place of its saving throw if, after the saving throw is rolled, the Perform check result proves to be higher. This ability does not work on effects that don&apos;t allow saves. The subject may also use the Perform check result in place of its CMD to resist all combat maneuver checks made to grapple the target or in place of its CMB on any combat maneuver checks and Escape Artist checks made to escape a grapple or a pin. Spirit of dolphin relies on audible components.\n\nThis ability replaces dirge of doom." compset="ClSpecial" summary="Use Perform check in place of saves or CMB/CMD vs movment impeding effects.">
    <tag group="AbilType" tag="Super"/>
    <tag group="ProductId" tag="FrogGod"/>
    </thing>
  <thing id="cFGFalsSha" name="Falsehood of Shark" description="At 2nd level, a voice of the Three can see through lies and uncover the truth. The bard gains a +4 bonus on saving throws made against illusions, and a +4 bonus on Sense Motive checks made to avoid being bluffed. \n\nThis ability replaces well-versed." compset="ClSpecial" summary="+4 bonus vs illusions and Sense Motive checks vs being bluffed.">
    <tag group="AbilType" tag="Super"/>
    <tag group="ProductId" tag="FrogGod"/>
    <eval phase="Final" priority="25000"><![CDATA[
~ If we're not shown, just get out now
doneif (tagis[Helper.ShowSpec] = 0)
~ If we've been Disabled, get out now
doneif (tagis[Helper.SpcDisable] <> 0)

~ +4 bonus on saving throws made against illusions 
#situational[hero.child[svWill],"+4 vs illusions",field[name].text]
~ +4 bonus on Sense Motive checks made to avoid
~ being bluffed
#situational[hero.child[skSenseMot],"+4 vs being bluffed",field[name].text]]]></eval>
    </thing>
  <thing id="arFGLegCha" name="Legend Chaser" description="Stories of lost civilizations, blasphemous temples, and haunted ruins echo through the ages. The average person is content to recount these frightening tales around the safety of a warm hearth, but the legend chaser defies danger and seeks these mystical locales and their treasures. The legend chaser depends upon his intellect, guile and a bit of luck to uncover secrets hidden in a forbidden jungle, a monster&apos;s den, or a dusty library on his quest for knowledge and fortune." compset="ClassVary" uniqueness="unique">
    <usesource source="CampRazorC"/>
    <tag group="AbReplace" tag="cBrdKnow"/>
    <tag group="ClVaryName" tag="AppParen"/>
    <tag group="AbReplace" tag="cBrdPCount"/>
    <tag group="AbReplace" tag="cBrdPSugg"/>
    <tag group="AbReplace" tag="cBrdPDoom"/>
    <tag group="Helper" tag="RemovePrim"/>
    <tag group="AbReplace" tag="cBrdVersed"/>
    <tag group="AbReplace" tag="cBrdLore"/>
    <tag group="ProductId" tag="FrogGod"/>
    <bootstrap thing="cFGBitsPie">
      <autotag group="ClSpecWhen" tag="1"/>
      </bootstrap>
    <bootstrap thing="cFGPNickTi">
      <autotag group="ClSpecWhen" tag="1"/>
      </bootstrap>
    <bootstrap thing="cFGPHelpHa">
      <autotag group="ClSpecWhen" tag="6"/>
      </bootstrap>
    <bootstrap thing="cFGPAgaOdd">
      <autotag group="ClSpecWhen" tag="8"/>
      </bootstrap>
    <bootstrap thing="cRogTrapfn">
      <autotag group="ClSpecWhen" tag="2"/>
      </bootstrap>
    <bootstrap thing="cUncanny">
      <autotag group="ClSpecWhen" tag="2"/>
      </bootstrap>
    <bootstrap thing="cFGStufLeg">
      <autotag group="ClSpecWhen" tag="5"/>
      </bootstrap>
    <bootstrap thing="cFGStufLeg">
      <autotag group="ClSpecWhen" tag="10"/>
      </bootstrap>
    <bootstrap thing="cFGStufLeg">
      <autotag group="ClSpecWhen" tag="15"/>
      </bootstrap>
    <bootstrap thing="cFGStufLeg">
      <autotag group="ClSpecWhen" tag="20"/>
      </bootstrap>
    <link linkage="varies" thing="cHelpBrd"/>
    </thing>
  <thing id="cFGBitsPie" name="Bits and Pieces" description="A legend chaser adds half his class level on Appraise, Knowledge (geography), Knowledge (history) Knowledge (local) and Perception checks, Diplomacy checks made to gather information and Spellcraft checks to identify the properties of a magic item (minimum 1). \n\nThis ability replaces bardic knowledge." compset="ClSpecial" summary="Bonus on Appraise, Knowledge (geography), Knowledge (history) Knowledge (local) and Perception checks.">
    <tag group="AbilType" tag="Extra"/>
    <tag group="ProductId" tag="FrogGod"/>
    <eval phase="PostLevel" priority="10000"><![CDATA[
~ If we're not shown, just get out now
doneif (tagis[Helper.ShowSpec] = 0)
~ If we've been Disabled, get out now
doneif (tagis[Helper.SpcDisable] <> 0)
~ Only do it for the first copy.
doneif (tagis[Helper.FirstCopy] = 0)
~ our bonus is level /2, min 1
field[abValue].value += maximum(round(field[xAllLev].value / 2,0,-1),1)
~ set our live name with the bonus
field[livename].text = field[thingname].text & " " & signed(field[abValue].value)
~ Give skill bonuses      
#skillbonus[skAppraise] += field[abValue].value
#skillbonus[skKnowGeog] += field[abValue].value
#skillbonus[skKnowHist] += field[abValue].value
#skillbonus[skKnowLoc] += field[abValue].value
#skillbonus[skPercep] += field[abValue].value
~ Set the stituational text
#situational[hero.child[skDiplo],signed(field[abValue].value) & " to gather information",field[thingname].text]
#situational[hero.child[skSpellcr],signed(field[abValue].value) & " to identify the properties of a magic item",field[thingname].text]]]></eval>
    </thing>
  <thing id="cFGPNickTi" name="Bardic Performance: Nick of Time" description="At 1st level, a legend chaser can use performance to spot hidden dangers. Each round he makes a Perception check. Any ally (including the bard) within 30 feet may use this check in place of his own saving throw against traps and magical attacks made by enemies that benefit from concealment, but not total concealment. Nick of time does not work on effects that do not allow saves. This is a mind-affecting ability that uses audible components. \n\nThis performance replaces countersong." compset="ClSpecial" summary="Use your Perception check as allies saving throw against traps and magical attacks made by enemies that benefit from concealment.">
    <tag group="AbilType" tag="Super"/>
    <tag group="ProductId" tag="FrogGod"/>
    </thing>
  <thing id="cFGPHelpHa" name="Bardic Performance: Helping Hand" description="At 6th level, a legend chaser can grant temporary hit points to another creature within 30 feet. This effect functions as a {i}false life{/i} spell that lasts as long as the target can hear the legend chaser&apos;s performance; however, unwilling creatures can be affected if they fail a Will save (DC 10 + ½ the bard&apos;s level + the bard&apos;s Cha modifier). Creatures that are targets of this ability are immune to this ability for 24 hours. The bard cannot target himself with this ability. This effect requires audible components. \n\nThis performance replaces suggestion." compset="ClSpecial" summary="Grant temporary hit points to another creature within 30 feet as {i}false life{/i}.">
    <tag group="AbilType" tag="Super"/>
    <tag group="StandardDC" tag="aCHA"/>
    <tag group="SpInfo" tag="spFalsLif2"/>
    <tag group="ProductId" tag="FrogGod"/>
    </thing>
  <thing id="cFGPAgaOdd" name="Bardic Performance: Against The Odds" description="At 8th level, a legend chaser can grant another creature within 30 feet the rogue&apos;s improved uncanny dodge and evasion abilities. The effect lasts as long as the target can hear the legend chaser&apos;s performance. The bard cannot target himself with this ability. If the target already has improved uncanny dodge, the bard&apos;s levels stack with the target&apos;s to determine the minimum rogue level required to flank the target. If the target already has evasion, it gains the improved evasion ability. This mind-affecting effect requires audible components. \n\nThis ability replaces dirge of doom." compset="ClSpecial" summary="Gain the rogue&apos;s improved uncanny dodge and evasion abilities.">
    <tag group="AbilType" tag="Super"/>
    <tag group="ProductId" tag="FrogGod"/>
    </thing>
  <thing id="cFGStufLeg" name="Stuff of Legends" description="At 5th level, once per day, a legend chaser can choose to roll two dice instead of one for any Reflex save, keeping the best result. He can use this ability one additional time per day for every five levels he possesses beyond 5th, to a maximum of four times per day at 20th level. This ability replaces lore master." compset="ClSpecial" summary="Roll two dice instead of one for any Reflex save, keeping the best result.">
    <tag group="AbilType" tag="Extra"/>
    <tag group="User" tag="Tracker"/>
    <tag group="Usage" tag="Day"/>
    <tag group="ProductId" tag="FrogGod"/>
    <eval phase="PostLevel" priority="10000"><![CDATA[
~Set the list name
field[listname].text = field[thingname].text & " " & field[xIndex].value & "/day"

~ If we're not shown, just get out now
doneif (tagis[Helper.ShowSpec] = 0)
~ If we've been Disabled, get out now
doneif (tagis[Helper.SpcDisable] <> 0)

~ Set uses per day
field[abValue].value += field[xCount].value
field[trkMax].value += field[abValue].value]]></eval>
    </thing>
  <thing id="arFGVolcCh" name="Volcano Child" description="Clouds of ash, smoldering magma, and intense heat conjure images of eternal damnation and torment, but the volcano child calls the mountains of flame and lava home. Pele is the benefactor of many among their ranks, but she is not alone in their patronage. Some indigenous monsters worship gods borne from fire, and the invaders brought their fiery deities with them as well. Irrespective of their chosen deity, the volcano child&apos;s mastery of fire makes him a formidable champion of his faith." compset="ClassVary" uniqueness="unique">
    <arrayval field="cvCustTot" index="0" value="-1"/>
    <usesource source="CampRazorC"/>
    <tag group="ClVaryName" tag="AppParen"/>
    <tag group="ProductId" tag="FrogGod"/>
    <tag group="Helper" tag="DiminSpell"/>
    <bootstrap thing="cFGDimiSp1">
      <autotag group="ClSpecWhen" tag="1"/>
      </bootstrap>
    <bootstrap thing="cFGSpaMagm">
      <autotag group="ClSpecWhen" tag="1"/>
      </bootstrap>
    <bootstrap thing="fFGElemFoc">
      <autotag group="Target" tag="selEnFire"/>
      </bootstrap>
    <bootstrap thing="cFGAposFla">
      <autotag group="ClSpecWhen" tag="3"/>
      </bootstrap>
    <bootstrap thing="cFGLavaWal">
      <autotag group="ClSpecWhen" tag="1"/>
      </bootstrap>
    <bootstrap thing="cFGKeeFlam">
      <autotag group="ClSpecWhen" tag="1"/>
      </bootstrap>
    <link linkage="varies" thing="cHelpClr"/>
    <eval phase="Final" priority="99999999"><![CDATA[
~ Change the list of Domains to only allow the Fire Domain as a valid
~ choice.
linkage[varies].field[cCstSpExpr].text = "thingid.cdFire"]]></eval>
    </thing>
  <thing id="cFGSpaMagm" name="Spawn of Magma" description="A volcano child must choose the Fire domain. He does not gain a second domain. If the cleric worships a deity, that deity must be one that grants the Fire domain. All level-dependent effects of the granted powers from the volcano child&apos;s domain function as if he were two cleric levels higher than his actual cleric level. This does not allow him to gain domain-granted powers earlier than normal. In all other respects, this works like and replaces the standard cleric&apos;s domain ability." compset="ClSpecial" summary="You must choose the Fire domain and its powers function at +2 cleric levels.">
    <tag group="Helper" tag="SpecUp"/>
    <tag group="ProductId" tag="FrogGod"/>
    <eval phase="First" priority="500"><![CDATA[
~ If we've been Disabled, get out now
doneif (tagis[Helper.SpcDisable] <> 0)
~ Only proceed if Fire Domain is alive
doneif (hero.childlives[cdFire] <> 1)

~ Increase the level of the domain abilities by 2
hero.child[cdFire].field[xExtraLev].value += 2]]></eval>
    </thing>
  <thing id="cFGDimiSp1" name="Diminished Spellcasting" description="A volcano child&apos;s number of non-domain spells per day for each spell level is one less than normal (for example, a 4th-level volcano child has three cantrips, two 1st-level spells, one 1st-level domain spell, one 2nd-level spell, and one 2nd-level domain spell). If this reduces the number of spells per day for that level to 0, he gains only the bonus spells he would be entitled to based on his Wisdom score for that level, plus his domain spell for that level." compset="ClSpecial" summary="Your non-domain spells per day for each spell level is one less than normal.">
    <tag group="Helper" tag="SpecUp"/>
    <tag group="ProductId" tag="FrogGod"/>
    </thing>
  <thing id="cFGLavaWal" name="Lava Walker" description="A volcano child suffers no harm from being in a hot environment. This effect functions as an {i}endure elements{/i} spell, except that it does not protect the cleric from cold environments." compset="ClSpecial" summary="You are treated as if you had {i}endure elements (heat){/i} spell active at all times.">
    <tag group="AbilType" tag="Super"/>
    <tag group="SpInfo" tag="spEnduEle1"/>
    <tag group="ProductId" tag="FrogGod"/>
    </thing>
  <thing id="cFGKeeFlam" name="Keeper of the Flame" description="As a swift action, a volcano child can imbue one melee weapon with the flaming weapon special ability. The weapon retains the flaming special ability for a number of rounds per day equal to 3 + the volcano child&apos;s Wisdom modifier. The effect&apos;s duration need not be consecutive rounds. Alternatively, the volcano child can imbue the weapon with the flaming burst special ability; however, the costs are doubled, i.e. one round of usage counts as two rounds." compset="ClSpecial">
    <tag group="AbilType" tag="Super"/>
    <tag group="ChargeAttr" tag="aWIS"/>
    <tag group="ChargeCalc" tag="AttrUses3"/>
    <tag group="User" tag="Tracker"/>
    <tag group="ProductId" tag="FrogGod"/>
    </thing>
  <thing id="cFGAposFla" name="Apostle of the Flame" description="At 3rd level, a volcano child can choose to convert positive energy or negative energy from his channel energy class feature into fire energy, dealing fire damage to all creatures in the affected area. When channeling energy in this manner, the fire damage is calculated as if the volcano child were two cleric levels lower than he actually is. Creatures may make a Will save, as normal, to halve the fire damage. This ability is affected by feats that affect the cleric&apos;s channel energy ability." compset="ClSpecial" summary="Channel fire as a cleric two levels lower channels positive/negative energy.">
    <tag group="AbilType" tag="Super"/>
    <tag group="ProductId" tag="FrogGod"/>
    <eval phase="PostLevel" priority="10000"><![CDATA[
~ If we're not shown, just get out now
doneif (tagis[Helper.ShowSpec] = 0)
~ If we've been Disabled, get out now
doneif (tagis[Helper.SpcDisable] <> 0)

~ Set our level to be our current level - 2 
field[abValue].value += field[xAllLev].value - 2

~we do 1d6 per 2 effective levels + 1
field[abValue2].value += round(field[abValue].value / 2,0,1)

~append the damage to the name
field[livename].text = field[thingname].text & " " & field[abValue2].value & "d6"

~ And any bonuses to the damage, if we have any
doneif (field[abValue3].value = 0)

field[livename].text = field[name].text & signed(field[abValue3].value)]]></eval>
    </thing>
  <thing id="arFGCallSt" name="Caller of Storms" description="Since the dawn of time, weather has altered the course of history. Violent cyclones have smashed mighty armadas into driftwood and transformed coastal cities into mounds of shattered stone. Fierce winds fell the mightiest cannons, while driving rains turn battlefields into slick quagmires of mud and water. Weather can be used to evoke awe or wreak devastation, yet the caller of storms does not view nature in such absolutes. For these clerics, they are the instrument that makes nature serve their chosen religion." compset="ClassVary" uniqueness="unique">
    <arrayval field="cvCustTot" index="0" value="-1"/>
    <usesource source="CampRazorC"/>
    <tag group="ClVaryName" tag="AppParen"/>
    <tag group="AbReplace" tag="cClrChan"/>
    <tag group="ProductId" tag="FrogGod"/>
    <bootstrap thing="cFGStormCh">
      <autotag group="ClSpecWhen" tag="1"/>
      </bootstrap>
    <bootstrap thing="cFGStormVi">
      <autotag group="ClSpecWhen" tag="1"/>
      </bootstrap>
    <bootstrap thing="cFGMastSto">
      <autotag group="ClSpecWhen" tag="3"/>
      </bootstrap>
    <bootstrap thing="cFGStorWal">
      <autotag group="ClSpecWhen" tag="5"/>
      </bootstrap>
    <link linkage="varies" thing="cHelpClr"/>
    <eval phase="Final" priority="99999999"><![CDATA[
~ Change the list of Domains to only allow the Weather Domain
~ as a valid choice.
linkage[varies].field[cCstSpExpr].text = "thingid.cdWeather"]]></eval>
    </thing>
  <thing id="cFGStormCh" name="Storm Chaser" description="A caller of storms must choose the Weather domain. He does not gain a second domain. If the cleric worships a deity, that deity must be one that grants the Weather domain. All level-dependent effects of the granted powers from the caller of storm&apos;s domain function as if he were two cleric levels higher than his actual cleric level. This does not allow him to gain domain-granted powers earlier than normal. In all other respects, this works like and replaces the standard cleric&apos;s domain ability." compset="ClSpecial" summary="You must choose the Weather domain and its powers function at +2 cleric levels.">
    <tag group="Helper" tag="SpecUp"/>
    <tag group="ProductId" tag="FrogGod"/>
    <eval phase="First" priority="500"><![CDATA[
~ If we've been Disabled, get out now
doneif (tagis[Helper.SpcDisable] <> 0)
~ Only proceed if Fire Domain is alive
doneif (hero.childlives[cdFire] <> 1)

~ Increase the level of the domain abilities by 2
hero.child[cdWeather].field[xExtraLev].value += 2]]></eval>
    </thing>
  <thing id="cFGStormVi" name="Storm Vision" description="A caller of storms ignores any penalties weather applies on Perception checks. When a caller of storms misses an enemy because of concealment provided by fog, rain, sleet, mist, wind or other weather effects, he may reroll his miss chance percentile roll as if he had the Blind- Fight feat. If the caller of storms already has the Blind-Fight feat, this ability functions as the Improved Blind-Fight feat." compset="ClSpecial" summary="Ignores any penalties weather applies on Perception checks. Reroll miss chance from weather.">
    <tag group="AbilType" tag="Extra"/>
    <tag group="SpecType" tag="Sense"/>
    <tag group="ProductId" tag="FrogGod"/>
    </thing>
  <thing id="cFGMastSto" name="Master of Storms" description="Beginning at 3rd level, a caller of storms may recall his domain spells that he had prepared and then cast that day. The spell is then prepared again, just as if it had not been cast. The caller of storms may recall each domain spell that is at least one level lower than the highest level cleric spell that he can cast (for example, a 5th-level caller of storms may recall his 1stlevel and 2nd-level domain spells once per day). The caller of storms can recall each domain spell only once per day, even if he has a feat or owns a magic item that allows him to recall spells, such as a {i}pearl of power{/i}. This ability replaces channel energy." compset="ClSpecial" summary="Recall each domain spell that is lower than your highest lvl spell.">
    <tag group="ProductId" tag="FrogGod"/>
    </thing>
  <thing id="cFGStorWal" name="Storm Walker" description="At 5th level, weather effects do not impede the caller of storm&apos;s movement. He takes no penalties when moving across icy, snowy or muddy surfaces whether natural or magical. He is at no risk of falling and is not denied his Dexterity bonus to AC when moving across such areas, and he does not treat them as difficult terrain. He is treated as if he were one size category larger than he actually is in windy conditions." compset="ClSpecial" summary="Weather effects do not impede your movement including ice, snow or mudd whether natural or magical.">
    <tag group="AbilType" tag="Extra"/>
    <tag group="ProductId" tag="FrogGod"/>
    </thing>
  <thing id="arFGBuccan" name="Buccaneer" description="The swashbuckling hero of the waves, the buccaneer&apos;s daring and athleticism make him the undisputed master of ship-to-ship combat. Part warrior, part sailor, and all courage, the buccaneer&apos;s exploits are the stuff of legend on the decks of every ocean goingvessel and in the salty taverns of every seaport." compset="ClassVary" uniqueness="unique">
    <usesource source="CampRazorC"/>
    <tag group="ClVaryName" tag="AppParen"/>
    <tag group="ClassSkill" tag="skAcrobat"/>
    <tag group="ClassSkill" tag="skEscape"/>
    <tag group="NotClassSk" tag="skHandleAn"/>
    <tag group="NotClassSk" tag="skKnowDun"/>
    <tag group="fDisable" tag="fArmHeavy"/>
    <tag group="fDisable" tag="fArmMedium"/>
    <tag group="fDisable" tag="fArmTower"/>
    <tag group="AbReplace" tag="cFtrBrave"/>
    <tag group="AbReplace" tag="cFtrArmor"/>
    <tag group="Helper" tag="RemovePrim"/>
    <tag group="AbReplace" tag="cFtrArmMas"/>
    <tag group="ProductId" tag="FrogGod"/>
    <bootstrap thing="cFGBuccane">
      <autotag group="ClSpecWhen" tag="1"/>
      </bootstrap>
    <bootstrap thing="cFGSeaLegs">
      <autotag group="ClSpecWhen" tag="2"/>
      </bootstrap>
    <bootstrap thing="cFGSeaLegs">
      <autotag group="ClSpecWhen" tag="6"/>
      </bootstrap>
    <bootstrap thing="cFGSeaLegs">
      <autotag group="ClSpecWhen" tag="10"/>
      </bootstrap>
    <bootstrap thing="cFGSeaLegs">
      <autotag group="ClSpecWhen" tag="14"/>
      </bootstrap>
    <bootstrap thing="cFGSeaLegs">
      <autotag group="ClSpecWhen" tag="18"/>
      </bootstrap>
    <bootstrap thing="cFGRopeExp">
      <autotag group="ClSpecWhen" tag="3"/>
      </bootstrap>
    <bootstrap thing="cFGRopeExp">
      <autotag group="ClSpecWhen" tag="7"/>
      </bootstrap>
    <bootstrap thing="cFGRopeExp">
      <autotag group="ClSpecWhen" tag="11"/>
      </bootstrap>
    <bootstrap thing="cFGRopeExp">
      <autotag group="ClSpecWhen" tag="15"/>
      </bootstrap>
    <bootstrap thing="cFGRopeExp">
      <autotag group="ClSpecWhen" tag="19"/>
      </bootstrap>
    <bootstrap thing="cFGDerriDo">
      <autotag group="ClSpecWhen" tag="5"/>
      </bootstrap>
    <bootstrap thing="cFGDerriDo">
      <autotag group="ClSpecWhen" tag="9"/>
      </bootstrap>
    <bootstrap thing="cFGDerriDo">
      <autotag group="ClSpecWhen" tag="13"/>
      </bootstrap>
    <bootstrap thing="cFGDerriDo">
      <autotag group="ClSpecWhen" tag="17"/>
      </bootstrap>
    <bootstrap thing="cFGRideSai">
      <autotag group="ClSpecWhen" tag="7"/>
      </bootstrap>
    <bootstrap thing="cFGBlooPir">
      <autotag group="ClSpecWhen" tag="11"/>
      </bootstrap>
    <bootstrap thing="cFGGodsSea">
      <autotag group="ClSpecWhen" tag="15"/>
      </bootstrap>
    <bootstrap thing="cFGHitTheD">
      <autotag group="ClSpecWhen" tag="19"/>
      </bootstrap>
    <link linkage="varies" thing="cHelpFtr"/>
    </thing>
  <thing id="cFGBuccane" name="Buccaneer" description="At 1st level, a buccaneer adds Acrobatics and Escape Artist to his list of class skills and removes Handle Animal and Knowledge (dungeoneering) from his list of class skills." compset="ClSpecial" summary="Add Acrobatics, Escape Artist and remove Handle Animal, Knowledge (dungeoneering).">
    <tag group="Helper" tag="SpecUp"/>
    <tag group="ProductId" tag="FrogGod"/>
    </thing>
  <thing id="cFGSeaLegs" name="Sea Legs" description="At 2nd level, a buccaneer gains a +1 bonus to his CMD to resist trip and bull rush attempts while standing in a moving vehicle or on watery terrain, such as a beach or swamp. This bonus increases by +1 for every four levels above 2nd. The buccaneer can also charge in these environments, ignoring any obstacles or difficult terrain.\n\nThis ability replaces bravery." compset="ClSpecial" summary="Bonus to CMD on Trip &amp; bull rush on watery terrain. You may charge in these environments.">
    <tag group="AbilType" tag="Extra"/>
    <tag group="ProductId" tag="FrogGod"/>
    <eval phase="Final" priority="25000"><![CDATA[
~Set the list name
field[listname].text = field[thingname].text & " " & signed(field[xIndex].value)

~ If we're not shown, just get out now
doneif (tagis[Helper.ShowSpec] = 0)
~ If we've been Disabled, get out now
doneif (tagis[Helper.SpcDisable] <> 0)

~ Set Bonus
field[abValue].value += field[xCount].value

~Set the live name
field[livename].text = field[thingname].text & " " & signed(field[abValue].value)
#situational[hero.child[Maneuver],signed(field[abValue].value) & " CMD bonus vs Trip & Bull Rush when near water",field[thingname].text]]]></eval>
    </thing>
  <thing id="cFGRopeExp" name="Rope Expert" description="At 3rd level, a buccaneer gains a +3 bonus to Acrobatics, Climb and Escape Artist checks employing the usage of a rope. This includes climbing a rigging, walking a tightrope, swinging from a rope or untying bonds. When performing a skill with a rope, he can take 10 on Acrobatics checks even while distracted or threatened and take 10 on his Climb checks even when in immediate danger or distracted. This bonus increases by +1 for every four levels above 3rd. \n\nThis ability replaces armor training 1." compset="ClSpecial" summary="Bonus to Acrobatics, Climb and Escape Artist with rope. Take 10 even while distracted or threatened.">
    <tag group="AbilType" tag="Extra"/>
    <tag group="ProductId" tag="FrogGod"/>
    <eval phase="Final" priority="25000"><![CDATA[
var nList as number
~ Bonus value is 2 + count
nList += 2 + field[xIndex].value
~Set the list name
field[listname].text = field[thingname].text & " " & signed(nList)

~ If we're not shown, just get out now
doneif (tagis[Helper.ShowSpec] = 0)
~ If we've been Disabled, get out now
doneif (tagis[Helper.SpcDisable] <> 0)

~ Set Bonus
field[abValue].value += field[xCount].value + 2

~ Set the live name
field[livename].text = field[thingname].text & " " & signed(field[abValue].value)
~ Set situational skill text
#situational[hero.child[skAcrobat],signed(field[abValue].value) & " employing the usage of a rope",field[thingname].text]
#situational[hero.child[skClimb],signed(field[abValue].value) & " employing the usage of a rope",field[thingname].text]
#situational[hero.child[skEscape],signed(field[abValue].value) & " employing the usage of a rope",field[thingname].text]]]></eval>
    </thing>
  <thing id="cFGDerriDo" name="Derring-Do" description="At 5th level, a buccaneer deals extra damage until the end of his turn whenever his movement through an enemy&apos;s threatened area would provoke an attack of opportunity. This extra damage is 1d8 points + 1 point for each opponent that can make an attack of opportunity against the buccaneer. At 9th level, this extra damage increases to 2d8 points + 2 points per opponent. At 13th level, this extra damage increases to 3d8 points + 3 points per opponent. At 17th level this damage increases to 4d8 + 4 points. The buccaneer also deals an additional 1d8 points of damage whenever he moves through an opponent&apos;s square during the same turn. The buccaneer must successfully complete his move through the threatened area to gain this benefit. The extra damage is not multiplied on a critical hit, but is added to the total. \n\nThis ability replaces weapon training 1, 2, 3 and 4." compset="ClSpecial" summary="Deal extra damage whenever your movement through an enemy&apos;s threatened area would provoke an AoO.">
    <tag group="AbilType" tag="Extra"/>
    <tag group="ProductId" tag="FrogGod"/>
    <eval phase="Final" priority="25000"><![CDATA[
~Set the list name
field[listname].text = field[thingname].text & " " & field[xIndex].value & "d8 " & signed(field[xIndex].value)

~ If we're not shown, just get out now
doneif (tagis[Helper.ShowSpec] = 0)
~ If we've been Disabled, get out now
doneif (tagis[Helper.SpcDisable] <> 0)

~ Set Dice
field[abValue].value += field[xCount].value
~ Set Bonus
field[abValue2].value += field[xCount].value

~ Set the live name
field[livename].text = field[thingname].text & " " & field[abValue].value & "d8 " & signed(field[abValue2].value) & " per opponent"]]></eval>
    </thing>
  <thing id="cFGRideSai" name="Ride the Sails" description="At 7th level, a buccaneer may charge an enemy by leaping down from a height of at least 10 feet and landing in a square adjacent to that enemy. A buccaneer who uses this ability and lands on his feet also denies that opponent&apos;s Dexterity bonus to AC until the end of the buccaneer&apos;s turn. \n\nThis ability replaces armor training 2." compset="ClSpecial" summary="Charge by leaping down from at least 10ft and landing adjacent to that enemy.">
    <tag group="AbilType" tag="Extra"/>
    <tag group="ProductId" tag="FrogGod"/>
    </thing>
  <thing id="cFGBlooPir" name="Blood Pirate" description="At 11th level, a buccaneer who scores a critical hit with his derring-do or ride the sails ability may make an Intimidate check to demoralize all enemies within 30 feet as a free action. Enemies that cannot see both the buccaneer and the enemy he hit are unaffected. The buccaneer cannot use this ability while prone. \n\nThis ability replaces armor training 3." compset="ClSpecial" summary="Critical hit with derring-do or ride the sails you may make an Intimidate check to demoralize all enemies within 30 feet as a free action.">
    <tag group="AbilType" tag="Extra"/>
    <tag group="ProductId" tag="FrogGod"/>
    </thing>
  <thing id="cFGGodsSea" name="Gods of the Sea" description="Upon reaching 15th level, once per day a buccaneer can reroll an attack roll or saving throw. The buccaneer must take the result of the second roll even if it is worse. \n\nThis ability replaces armor training 4." compset="ClSpecial" summary="Reroll an attack roll or saving throw.">
    <fieldval field="trkMax" value="1"/>
    <tag group="AbilType" tag="Extra"/>
    <tag group="Usage" tag="Day"/>
    <tag group="User" tag="Tracker"/>
    <tag group="ProductId" tag="FrogGod"/>
    </thing>
  <thing id="cFGHitTheD" name="Hit the Deck" description="At 19th level, a buccaneer gains evasion when he is on a vehicle or watery terrain, such as a beach or swamp. Evasion can only be used if the buccaneer is wearing light armor or no armor. \n\nThis ability replaces armor mastery." compset="ClSpecial" summary="Gain evasion when on a vehicle or watery terrain and wearing light armor or no armor.">
    <tag group="AbilType" tag="Extra"/>
    <tag group="ProductId" tag="FrogGod"/>
    </thing>
  <thing id="arFGHarpoo" name="Harpoonist" description="A mainstay on all whalers, the harpoonist wields his trusty weapon with deadly accuracy and lethal force against man and beast alike. The thought of falling prey to the harpoon&apos;s wicked barb is the stuff of nightmares for every mariner and the sea creatures they hunt.\n\n{b}Note:{/b} If you don&apos;t have Ultimate Combat, Ultimate Equipment, or Pirates of the Inner Sea turning on the &quot;Skull and Shackles&quot; AP will allow access to a harpoon weapon." compset="ClassVary" uniqueness="unique">
    <arrayval field="cvBonFtMod" index="0" value="-1"/>
    <arrayval field="cvCustTot" index="4" value="-1"/>
    <arrayval field="cvCustTot" index="5" value="-1"/>
    <arrayval field="cvCustTot" index="6" value="-1"/>
    <arrayval field="cvCustTot" index="7" value="-2"/>
    <arrayval field="cvCustTot" index="8" value="-2"/>
    <arrayval field="cvCustTot" index="9" value="-2"/>
    <arrayval field="cvCustTot" index="10" value="-2"/>
    <arrayval field="cvCustTot" index="11" value="-2"/>
    <arrayval field="cvCustTot" index="12" value="-2"/>
    <arrayval field="cvCustTot" index="13" value="-2"/>
    <arrayval field="cvCustTot" index="14" value="-2"/>
    <arrayval field="cvCustTot" index="15" value="-3"/>
    <arrayval field="cvCustTot" index="16" value="-3"/>
    <arrayval field="cvCustTot" index="17" value="-3"/>
    <arrayval field="cvCustTot" index="18" value="-3"/>
    <arrayval field="cvCustTot" index="19" value="-3"/>
    <usesource source="CampRazorC"/>
    <tag group="AbReplace" tag="cFtrArmor"/>
    <tag group="AbReplace" tag="cFtrArmMas"/>
    <tag group="ClVaryName" tag="AppParen"/>
    <tag group="AbReplace" tag="cFtrBrave"/>
    <tag group="ProductId" tag="FrogGod"/>
    <bootstrap thing="cFGWahler">
      <autotag group="ClSpecWhen" tag="1"/>
      </bootstrap>
    <bootstrap thing="cFGReelEmI">
      <autotag group="ClSpecWhen" tag="2"/>
      </bootstrap>
    <bootstrap thing="cRapidRetr">
      <autotag group="ClSpecWhen" tag="3"/>
      </bootstrap>
    <bootstrap thing="cFGReelEmI">
      <autotag group="ClSpecWhen" tag="6"/>
      </bootstrap>
    <bootstrap thing="cFGReelEmI">
      <autotag group="ClSpecWhen" tag="10"/>
      </bootstrap>
    <bootstrap thing="cFGReelEmI">
      <autotag group="ClSpecWhen" tag="14"/>
      </bootstrap>
    <bootstrap thing="cFGReelEmI">
      <autotag group="ClSpecWhen" tag="18"/>
      </bootstrap>
    <bootstrap thing="cFGHarpMas">
      <autotag group="ClSpecWhen" tag="5"/>
      </bootstrap>
    <bootstrap thing="cFGHarpMas">
      <autotag group="ClSpecWhen" tag="9"/>
      </bootstrap>
    <bootstrap thing="cFGHarpMas">
      <autotag group="ClSpecWhen" tag="13"/>
      </bootstrap>
    <bootstrap thing="cFGHarpMas">
      <autotag group="ClSpecWhen" tag="17"/>
      </bootstrap>
    <bootstrap thing="cFGLongHau">
      <autotag group="ClSpecWhen" tag="7"/>
      </bootstrap>
    <bootstrap thing="cFGLongHau">
      <autotag group="ClSpecWhen" tag="11"/>
      </bootstrap>
    <bootstrap thing="cFGLongHau">
      <autotag group="ClSpecWhen" tag="15"/>
      </bootstrap>
    <bootstrap thing="cFGSinkBar">
      <autotag group="ClSpecWhen" tag="9"/>
      </bootstrap>
    <bootstrap thing="cFGSkewer">
      <autotag group="ClSpecWhen" tag="19"/>
      </bootstrap>
    <link linkage="varies" thing="cHelpFtr"/>
    <eval phase="First" priority="10000">~ Make Weapon Mastery select the Harpoon
perform hero.child[cFtrWepMas].assign[Target.wHarpoon]</eval>
    </thing>
  <thing id="cFGWahler" name="Whaler" description="At 1st level, a harpoonist gains both the Quick Draw and the Two-Handed Thrower feats as bonus feats.\n\nThis ability replaces the 1st-level fighter bonus combat feat." compset="ClSpecial" summary="Gains both the Quick Draw and the Two-Handed Thrower feats.">
    <tag group="Helper" tag="SpecUp"/>
    <tag group="ProductId" tag="FrogGod"/>
    <bootstrap thing="fFG2HandTh">
      <autotag group="thing" tag="skipprereq"/>
      </bootstrap>
    <bootstrap thing="fQuickDraw">
      <autotag group="thing" tag="skipprereq"/>
      </bootstrap>
    </thing>
  <thing id="arFGDeepTr" name="Deep Sea Tracker" description="The rangers of the seas must forego the traditional tracking and survival methods of their terrestrial cousins and uniquely adapt to their aquatic environment. Over time, these adept explorers of the watery depths acquire the skills and abilities of other aquatic denizens." compset="ClassVary" uniqueness="unique">
    <fieldval field="cvAnimStar" value="4"/>
    <arrayval field="cvFav2Tot" index="17" value="-4"/>
    <arrayval field="cvFav2Tot" index="7" value="-2"/>
    <arrayval field="cvFav2Tot" index="12" value="-3"/>
    <usesource source="CampRazorC"/>
    <tag group="ClVaryName" tag="AppParen"/>
    <tag group="Helper" tag="RemFavEnem"/>
    <tag group="AbReplace" tag="cWildEmp"/>
    <tag group="ProductId" tag="FrogGod"/>
    <tag group="Helper" tag="RemovePrim"/>
    <bootstrap thing="cFGFishOut">
      <autotag group="ClSpecWhen" tag="15"/>
      </bootstrap>
    <bootstrap thing="cFGFishOut">
      <autotag group="ClSpecWhen" tag="20"/>
      </bootstrap>
    <bootstrap thing="cFGScanSea">
      <autotag group="ClSpecWhen" tag="1"/>
      </bootstrap>
    <bootstrap thing="cFGOceaGoe">
      <autotag group="ClSpecWhen" tag="3"/>
      </bootstrap>
    <bootstrap thing="cAnimClass"></bootstrap>
    <bootstrap thing="cFGFishOut">
      <autotag group="ClSpecWhen" tag="1"/>
      </bootstrap>
    <bootstrap thing="cFGFishOut">
      <autotag group="ClSpecWhen" tag="5"/>
      </bootstrap>
    <bootstrap thing="cFGFishOut">
      <autotag group="ClSpecWhen" tag="10"/>
      </bootstrap>
    <bootstrap thing="cFGHunBon1">
      <autotag group="ClSpecWhen" tag="4"/>
      </bootstrap>
    <bootstrap thing="cFGAmphib1">
      <autotag group="ClSpecWhen" tag="8"/>
      </bootstrap>
    <bootstrap thing="cFGScent">
      <autotag group="ClSpecWhen" tag="13"/>
      </bootstrap>
    <bootstrap thing="cFGEcholoc">
      <autotag group="ClSpecWhen" tag="18"/>
      </bootstrap>
    <link linkage="varies" thing="cHelpRgr"/>
    </thing>
  <thing id="cFGScanSea" name="Scan the Seas" description="A deep sea tracker adds half his level (minimum 1) to Perception skill checks made to detect sound underwater. He can also notice subtle disturbances to the surface of any body of water, allowing him to follow and identify the source of the disturbance. The Survival DC to follow and identify the disturbance&apos;s source in stagnant water, such as a pond or lake, is 25, and the Survival DC modifier is +1 for every ten minutes since the trail was made. The DC increases to 30 for water with a current, such as a river or ocean, and the Survival DC modifier is +1 for every minute since the trail was made. He cannot follow or identify tracks made underwater. \n\nThis ability replaces wild empathy." compset="ClSpecial" summary="Bonus on Perception to detect, follow and identify sounds underwater.">
    <tag group="AbilType" tag="Extra"/>
    <tag group="ProductId" tag="FrogGod"/>
    <eval phase="PostLevel" priority="10000"><![CDATA[
~ If we're not shown, just get out now
doneif (tagis[Helper.ShowSpec] = 0)
~ If we've been Disabled, get out now
doneif (tagis[Helper.SpcDisable] <> 0)

~ Set Bonus
field[abValue].value += maximum(1,round(field[xAllLev].value/2,0,-1))

~ Set the situational text
#situational[hero.child[skPercep],signed(field[abValue].value) & " to detect, follow and identify sounds underwater",field[name].text]

~ Set the live name
field[livename].text = field[thingname].text & " " & signed(field[abValue].value)]]></eval>
    </thing>
  <thing id="cFGStyleNT" name="Combat Style (Net and Trident)" description="Allows the ranger to pick from a variety of net and trident-related combat style bonus feats: Exotic Weapon Proficiency (net), Net Adept, Net and Trident, Two- Weapon Fighting, Weapon Focus (net) and Weapon Focus (trident). At 6th level he adds Net Maneuvering and Net Trickery to the list. At 10th level he adds Greater Two- Weapon Fighting to the list." compset="CustomSpec" uniqueness="unique">
    <fieldval field="shortname" value="Net and Trident"/>
    <usesource source="CampRazorC"/>
    <tag group="AbilType" tag="Extra" name="Extraordinary Ability" abbrev=" (Ex)"/>
    <tag group="SpecSource" tag="arFGDeepTr"/>
    <tag group="Helper" tag="Secondary" name="Secondary" abbrev="Secondary"/>
    <tag group="Helper" tag="SpecUp" name="SpecUp" abbrev="SpecUp"/>
    <tag group="ProductId" tag="FrogGod"/>
    <tag group="fInclude" tag="fNetAdep"/>
    <tag group="fInclude" tag="fNetTrid"/>
    <tag group="fInclude" tag="fTwoWep"/>
    <tag group="fInclude" tag="fFGEWnet"/>
    <tag group="fInclude" tag="fFGWFnet"/>
    <tag group="fInclude" tag="fFGWFtride"/>
    <eval phase="First" priority="1000"><![CDATA[
~at level 6, we add more bonus feats available (we add them to ourself, and then at First/1500,
~ all fInclude tags are forwarded to the class)
If (hero.tagcount[Classes.Ranger] >= 6) Then
   ~ The feats Net Maneuvering and Net Trickery are from Ultimate Combat
   ~ to get to load in CORE license mode only we are assigning a string
   ~ and only when the UC source is active.
   If (hero.tagis[source.UltCombat] <> 0) Then
      perform assignstr["fInclude.fNetMane"]
      perform assignstr["fInclude.fNetTric"]
   Endif
Endif

~at level 10, we add more bonus feats available (we add them to ourself, and then at First/1500, all fInclude tags are forwarded to the class)
If (hero.tagcount[Classes.Ranger] >= 10) then
   perform assign[fInclude.fGrtTwoWep]
Endif]]></eval>
    </thing>
  <thing id="cFGOceaGoe" name="Ocean Goer" description="At 3rd level, the deep sea tracker must select Water as his favored terrain. He gains a swim speed equal to half his land speed, and all the benefits of having a swim speed. He can also endure cold climate effects as if using {i}endure elements{/i}. \n\nThis ability replaces 1st favored terrain." compset="ClSpecial" summary="Gain swim speed and endure cold climate effects.">
    <tag group="AbilType" tag="Super"/>
    <tag group="ProductId" tag="FrogGod"/>
    <tag group="SpInfo" tag="spEnduEle1"/>
    <eval phase="PostLevel" priority="1000"><![CDATA[
~ if we're not the first copy, just get out now
doneif (tagis[Helper.FirstCopy] <> 1)
~ If we're not shown, just get out now
doneif (tagis[Helper.ShowSpec] = 0)
~ If we've been Disabled, get out now
doneif (tagis[Helper.SpcDisable] <> 0)

~ Calc swim speed equal to half base speed rounded down
field[abValue].value += round(hero.child[Speed].field[tSpeed].value/2,0,-1)
~ set swim speed to be the the greater of our calculated speed or
~ its current swim speed.
#value[xSwim] = maximum(#value[xSwim],field[abValue].value)]]></eval>
    <evalrule phase="Validation" priority="10000" message="Favored Terrain (Water) required to be chosen." summary="Favored Terrain (Water) required to be chosen."><![CDATA[
~ If we are not level 3 yet then we are valid
validif (field[xAllLev].value < 3)
~ If we are 3+ level we have to have picked Water Favored Terrain
validif (hero.childlives[ftWater] <> 0)]]></evalrule>
    </thing>
  <thing id="cFGFishOut" name="Fish Out of Water" description="When a deep sea tracker fights an enemy without a swim speed in water terrain, he gains a +1 bonus to attack and damage rolls against that enemy. At 5th level and every five levels thereafter, the bonus increases by +1. This ability replaces favored enemy." compset="ClSpecial" summary="Gain attack and damage bonus vs. enemy without swim speed in water terrain.">
    <fieldval field="actName" value="Attacking Enemy without swim speed"/>
    <tag group="ProductId" tag="FrogGod"/>
    <tag group="User" tag="Activation"/>
    <tag group="AbilType" tag="Extra"/>
    <eval phase="PostLevel" priority="1000"><![CDATA[
~Set the list name
field[listname].text = field[thingname].text & " " & signed(field[xIndex].value)

~ if we're not the first copy, just get out now
doneif (tagis[Helper.FirstCopy] <> 1)
~ If we're not shown, just get out now
doneif (tagis[Helper.ShowSpec] = 0)
~ If we've been Disabled, get out now
doneif (tagis[Helper.SpcDisable] <> 0)

field[abValue].value += field[xCount].value
field[livename].text = "Fish Out of Water +" & field[abValue].value
#situational[hero.child[Attack],signed(field[abValue].value) & " on attack and damage vs. enemy without swim speed in water terrain",field[name].text]
~ Set the live name
field[livename].text = field[thingname].text & " " & signed(field[abValue].value)]]></eval>
    <eval phase="PostLevel" priority="1500" index="2"><![CDATA[
~ if we're not the first copy, just get out now
doneif (tagis[Helper.FirstCopy] <> 1)
~ If we're not shown, just get out now
doneif (tagis[Helper.ShowSpec] = 0)
~ If we've been Disabled, get out now
doneif (tagis[Helper.SpcDisable] <> 0)
~ If not actived then get out now
doneif (field[abilActive].value <> 1)

hero.child[Attack].field[Bonus].value += field[abValue].value
hero.child[Damage].field[tDamBonus].value += field[abValue].value]]></eval>
    </thing>
  <thing id="cFGReelEmI" name="Reel &apos;Em In" description="At 2nd level, a harpoonist gains a +1 bonus to CMB and CMD on grapple checks with a harpoon. This bonus increases by +1 for every four levels after 2nd. \n\nThis ability replaces bravery." compset="ClSpecial" summary="Bonus to CMB/CMD on grapple checks with a harpoon.">
    <tag group="ProductId" tag="FrogGod"/>
    <eval phase="Final" priority="25000"><![CDATA[
~Set the list name
field[listname].text = field[thingname].text & " " & signed(field[xIndex].value)

~ If we're not shown, just get out now
doneif (tagis[Helper.ShowSpec] = 0)
~ If we've been Disabled, get out now
doneif (tagis[Helper.SpcDisable] <> 0)

~ Set Bonus
field[abValue].value += field[xCount].value

~ Set the live name
field[livename].text = field[thingname].text & " " & signed(field[abValue].value)
~ Set situational skill text
#situational[hero.child[Maneuver],signed(field[abValue].value) & " on grapple checks with a harpoon",field[thingname].text]]]></eval>
    </thing>
  <thing id="cRapidRetr" name="Rapid Retrieval" description="At 3rd level, a harpoonist can retrieve a harpoon attached to 50 feet of rope or less as a move action unless the harpoon is imbedded in a creature or object. Whenever a harpoonist moves a target with his grapple check, he can move both himself and his target up to his full speed rather than half his speed. \n\nThis ability replaces armor training 1." compset="ClSpecial" summary="Retrieve a harpoon attached as a move action. Move both yourself and target up your full speed.">
    <tag group="ProductId" tag="FrogGod"/>
    </thing>
  <thing id="cFGHarpMas" name="Harpoon Master" description="At 5th level, a harpoonist gains a +1 bonus on attack and damage rolls with harpoons. This bonus increases by +1 per four levels after 5th. \n\nThis ability replaces weapon training 1." compset="ClSpecial" summary="Bonus on attack and damage rolls with harpoons.">
    <tag group="AbilType" tag="Extra"/>
    <tag group="ProductId" tag="FrogGod"/>
    <eval phase="PostLevel" priority="10000"><![CDATA[
~Set the list name
field[listname].text = field[thingname].text & " " & signed(field[xIndex].value)

~ If we're not shown, just get out now
doneif (tagis[Helper.ShowSpec] = 0)
~ If we've been Disabled, get out now
doneif (tagis[Helper.SpcDisable] <> 0)

~ Set Bonus
field[abValue].value += field[xCount].value

~ Set the live name
field[livename].text = field[thingname].text & " " & signed(field[abValue].value)
~ Give a Bonus H/D with all harpoon weapons
foreach pick in hero from BaseWep where "thingid.wHarpoon?"
   eachpick.field[Bonus].value += field[abValue].value
nexteach]]></eval>
    </thing>
  <thing id="cFGLongHau" name="Long Haul" description="At 7th level, a harpoonist gains the Far Shot feat as a bonus feat, even if he does not meet its prerequisites. At 11th level, the range increment for his harpoon increases by 5 feet. At 15th level, the range increment for his harpoon increases by 5 additional feet.{br}{br}This ability replaces armor training 2, 3 and 4." compset="ClSpecial" summary="Far Shot as a bonus feat and the range increment for your harpoon increases.">
    <tag group="AbilType" tag="Extra"/>
    <tag group="ProductId" tag="FrogGod"/>
    <bootstrap thing="fFarShot">
      <containerreq phase="First" priority="500"><![CDATA[count:Classes.Fighter >= 7]]></containerreq>
      <autotag group="thing" tag="skipprereq"/>
      </bootstrap>
    <eval phase="PostAttr" priority="10000"><![CDATA[
~ If we're not shown, just get out now
doneif (tagis[Helper.ShowSpec] = 0)
~ If we've been Disabled, get out now
doneif (tagis[Helper.SpcDisable] <> 0)

~ Set Bonus
field[abValue].value += (field[xCount].value -1) * 5

~ Increase the Range Increment all harpoon weapons
foreach pick in hero from BaseWep where "thingid.wHarpoon?"
   eachpick.field[wRangeInc].value += field[abValue].value
nexteach]]></eval>
    </thing>
  <thing id="cFGSinkBar" name="Sink the Barb" description="At 9th level, when a harpoonist attacks with a harpoon as a readied action, the attack inflicts damage normally, and the target is subject to a grapple maneuver as a free action. At 17th level, the harpoonist may perform this ability as a standard action. If the attack hits, he may use the attack roll as the combat maneuver check.\n\nThis ability replaces weapon training 2 and 4." compset="ClSpecial" summary="Harpoon readied actions do normal dmg and can start a grapple as a free action.">
    <tag group="AbilType" tag="Extra"/>
    <tag group="ProductId" tag="FrogGod"/>
    </thing>
  <thing id="cFGSkewer" name="Skewer" description="At 19th level, when a harpoonist confirms a critical hit with a harpoon, the harpoon rips through the target and can imbed itself into an adjacent stationary object in line behind it. The harpoonist must be able to trace a line starting at his space and passing through the target and object to accomplish this feat. If the damage dealt by the harpoon exceeds the object&apos;s hardness, the harpoon imbeds itself into the object, which pins the target. The Difficulty Class to escape is the harpoonist&apos;s CMB while grappling with a harpoon. \n\nThis ability replaces armor mastery." compset="ClSpecial" summary="Critical hit with a harpoon has a chance to pin its target.">
    <tag group="AbilType" tag="Extra"/>
    <tag group="ProductId" tag="FrogGod"/>
    </thing>
  <thing id="cFGHunBon1" name="Hunter’s Bond" description="Starting at 4th level, when a deep sea tracker gains the hunter&apos;s bond ability, he must choose an animal companion. The deep sea ranger must select an animal with the aquatic subtype." compset="ClSpecial" summary="Gain a aquatic animal companion.">
    <tag group="AbilType" tag="Extra"/>
    <tag group="Helper" tag="SpecUp"/>
    <tag group="ProductId" tag="FrogGod"/>
    <evalrule phase="Validation" priority="10000" message="Aquatic animal companion required." summary="Aquatic animal companion required."><![CDATA[
~ If not 4th level we are valid
validif (field[xAllLev].value < 4)
~ If no animal companion chosen then we are valid
validif (hero.childlives[cAnimComp] <> 1)
~ If a aquatic subtype minion taken we are valid
validif (hero.child[cAnimComp].minion.tagis[Subtype.stAquatic] <> 0)]]></evalrule>
    </thing>
  <thing id="cFGAmphib1" name="Amphibious" description="At 8th level, a deep sea tracker gains the aquatic subtype, the amphibious trait and a swim speed equal to his land speed. He never takes pressure damage from deep water. \n\nThis ability replaces 2nd favored terrain." compset="ClSpecial" summary="You gain the aquatic subtype and the amphibious special quality.">
    <tag group="AbilType" tag="Extra"/>
    <tag group="ProductId" tag="FrogGod"/>
    <tag group="Helper" tag="SpecUp"/>
    <bootstrap thing="raAmphib">
      <containerreq phase="First" priority="500"><![CDATA[count:Classes.Ranger >= 8]]></containerreq>
      </bootstrap>
    <bootstrap thing="stAquatic">
      <containerreq phase="First" priority="500"><![CDATA[count:Classes.Ranger >= 8]]></containerreq>
      </bootstrap>
    </thing>
  <thing id="cFGScent" name="Scent" description="At 13th level, a deep sea tracker gains the scent ability. He can use this ability to follow or identify scents underwater. \n\nThis ability replaces 3rd favored terrain." compset="ClSpecial" summary="You gain the ability to follow or identify scents underwater.">
    <tag group="AbilType" tag="Extra"/>
    <tag group="ProductId" tag="FrogGod"/>
    <tag group="Helper" tag="SpecUp"/>
    <bootstrap thing="xScent">
      <containerreq phase="First" priority="500"><![CDATA[count:Classes.Ranger >= 13]]></containerreq>
      </bootstrap>
    <eval phase="Final" priority="25000"><![CDATA[
~ If we're not shown, just get out now
doneif (tagis[Helper.ShowSpec] = 0)
~ If we've been Disabled, get out now
doneif (tagis[Helper.SpcDisable] <> 0)

~ Add helpful text to Scent Thing
#appenddesc[xScent,"{b}Addition from Deep Sea Tracker{/b}: You gain the ability to follow or identify scents underwater."]]]></eval>
    </thing>
  <thing id="cFGEcholoc" name="Echolocation" description="At 18th level, a deep sea gains the ability to use {i}echolocation{/i} at will. The deep sea tracker treats his ranger level -3 as his caster level. {i}Echolocation{/i} functions only underwater. \n\nThis ability replaces 4th favored terrain." compset="ClSpecial" summary="Use {i}echolocation{/i} at will with a CL of ranger level -3.">
    <tag group="AbilType" tag="SpellLike"/>
    <tag group="ProductId" tag="FrogGod"/>
    <tag group="Helper" tag="SpecUp"/>
    <tag group="SpInfo" tag="spFGEchol5"/>
    <bootstrap thing="spFGEchol5">
      <containerreq phase="First" priority="500"><![CDATA[count:Classes.Ranger >= 18]]></containerreq>
      <autotag group="Helper" tag="SpellLike"/>
      <autotag group="Usage" tag="AtWill"/>
      </bootstrap>
    </thing>
  <thing id="arFGHeadhu" name="Headhunter" description="The macabre headhunter is feared and reviled throughout the civilized world for severing his foes&apos; heads and shrinking them into grisly trophies. However, the practice serves more than a ceremonial purpose. The headhunter extracts mystical energy from his victims and uses it to bolster his own body and mind." compset="ClassVary" uniqueness="unique">
    <usesource source="CampRazorC"/>
    <tag group="ClVaryName" tag="AppParen"/>
    <tag group="ProductId" tag="FrogGod"/>
    <tag group="Helper" tag="RemovePrim"/>
    <bootstrap thing="cFGShruHea">
      <autotag group="ClSpecWhen" tag="1"/>
      </bootstrap>
    <bootstrap thing="cFGYourNex">
      <autotag group="ClSpecWhen" tag="4"/>
      </bootstrap>
    <link linkage="varies" thing="cHelpRgr"/>
    </thing>
  <thing id="cFGShruHea" name="Shrunken Heads" description="At 1st level, headhunters master the craft of magically absorbing the spiritual energy of their slain foes, which shrinks the heads to a fraction of their former size. Headhunters refer to the ritual as {i}zanza{/i}. The ritual binds the shrunken head&apos;s energy to his creator. To use a head for this rite, the headhunter must deal damage to the victim in combat, and the enemy cannot be defenseless or helpless. {i}Zanza{/i} allows the headhunter to absorb one of the victim&apos;s four spiritual essences, which are Battle, Knowledge, Magic and Vitality. The headhunter can only possess one head for each essence at any one time; therefore the headhunter cannot have two heads with the Spirit of Battle at once. All of the shrunken head&apos;s abilities are based upon the victim&apos;s Hit Dice and are fixed at the time of its creation. The headhunter can have any combination of shrunken heads in existence at any one time; however the victims&apos; combined Hit Dice cannot exceed his headhunter level + his Wisdom modifier. {i}Zanza{/i} automatically fails, if the headhunter attempts to add shrunken heads beyond this limit; however, the headhunter can discard shrunken heads and replace them with new ones. Discarded shrunken heads permanently lose their magical properties, and the headhunter loses the benefits gained from the discarded head. {i}Zanza{/i} cannot be performed on creatures immune to critical hits, constructs, and creatures lacking a discernible head. {i}Zanza{/i} takes 24 hours to perform, and it consumes 25 gp of material per Hit Die of the victim. Presented below are the benefits derived from each of the spirits.\n\n{i}Spirit of Battle:{/i} The headhunter gains one of the victim&apos;s combat feats, (his choice), subject to the following limitations. He cannot gain a feat that is not innate to the victim, i.e. a feat granted by a magic item, or a feat requiring class features or character levels from a class other than ranger. Otherwise, he gains the combat feat even if he does not meet its prerequisites.\n\n{i}Spirit of Knowledge:{/i} The headhunter gains the ability to speak and understand a number of languages that the victim spoke. He can speak and understand one language plus an additional language for every two Hit Dice above 1st. The headhunter chooses the languages he wishes to speak and understand from the victim&apos;s languages.\n\n{i}Spirit of Magic{/i}: The headhunter gains the ability to recall a spell he previously cast if the victim could cast the spell as a spell-like ability. He can recall one spell per day. The spell is then prepared again, just as if it had not been cast. The headhunter must be of sufficient level to cast the spell, otherwise the spell fails.\n\n{i}Spirit of Vitality:{/i} Everyday at dawn, the shrunken head grants the headhunter temporary hit points equal to double the victim&apos;s Hit Dice + the victim&apos;s Constitution modifier.\n\n{B}Note:{/b} The Shrunken Head&apos;s are avaible as magic items that can be added to your character." compset="ClSpecial" summary="Perform a ritual that can give you powers.">
    <tag group="AbilType" tag="Super"/>
    <tag group="ProductId" tag="FrogGod"/>
    <eval phase="Final" priority="25000"><![CDATA[
~ If we're not shown, just get out now
doneif (tagis[Helper.ShowSpec] = 0)
~ If we've been Disabled, get out now
doneif (tagis[Helper.SpcDisable] <> 0)

~ Calc total amount of HD = Level + Wis Mod
field[abValue].value += field[xAllLev].value + #attrmod[aWIS]
~ Set our live name with the HD total 
field[livename].text = field[name].text & " " & field[abValue].value & "HD"]]></eval>
    <evalrule phase="Validation" priority="10000" message="The total hit dice of your heads exceeds your maximum." summary="The total hit dice of your heads exceeds your maximum."><![CDATA[
~ If our heads total less than our max HD then we are valid
validif (field[abValue2].value <= field[abValue].value)

@message = "The total hit dice of your heads is " & field[abValue2].value & " but your maximum hit dice allowed is " & field[abValue].value & "."]]></evalrule>
    </thing>
  <thing id="cFGYourNex" name="You&apos;re Next" description="At 4th level, the headhunter can use a shrunken head to terrify his enemies. As a standard action, the headhunter visibly displays one of his shrunken heads. All living creatures within 30 feet of the shrunken head and within line of sight to the shrunken head must make a Will save or be shaken for 1 round per Hit Die of the victim. A creature belonging to the same creature type as the shrunken head is frightened for 1 round per Hit Die of the victim. The DC of his save is equal to 10 + ½ the shrunken head&apos;s Hit Dice + the headhunter&apos;s Wisdom modifier. A creature that successfully saves is not subject to the same head&apos;s effect for 24 hours. The headhunter can use the shrunken head in this manner once plus one additional usage at 3 Hit Dice and every three Hit Dice thereafter before the shrunken head becomes nonmagical. This ability is a mind-affecting fear effect. \n\nIt replaces Hunter&apos;s Bond." compset="ClSpecial" summary="As a standard action use a shrunken head to terrify your enemies as a mind-affecting fear effect.">
    <tag group="AbilType" tag="Super"/>
    <tag group="ProductId" tag="FrogGod"/>
    </thing>
  <thing id="cfgFGSpiBa" name="Spirit of Battle" compset="Configure" uniqueness="unique">
    <fieldval field="cfgMaxF1" value="1"/>
    <tag group="fCategory" tag="Combat"/>
    </thing>
  <thing id="arFGBloRun" name="Blockade Runner" description="The blockade runner relies upon subterfuge, a quick tongue and a few parlor tricks to sneak his nefarious goods onto the city&apos;s black market or past unsuspecting customs inspectors. Although he frequently deals with contraband, the blockade runner&apos;s ability to conceal his wares allows him to move freely about most cities, mingling with wealthy merchants and shady fences with equal familiarity and comfort.\n\n{b}Rogue Talents:{/b} The following rogue talents complement the blockade runner archetype: black market connections, camouflage, fast stealth, major magic, minor magic, and quick disguise.\n\n{b}Advanced Talents:{/b} The following advanced rogue talents complement the blockade runner archetype: hide in plain sight, master of disguise, and rumormonger." compset="ClassVary" uniqueness="unique">
    <usesource source="CampRazorC"/>
    <tag group="ProductId" tag="FrogGod"/>
    <tag group="AbReplace" tag="cRogTrapfn"/>
    <tag group="AbReplace" tag="cTrapSense"/>
    <tag group="AbReplace" tag="cUncanny"/>
    <tag group="ClVaryName" tag="AppParen"/>
    <bootstrap thing="cFGRehears">
      <autotag group="ClSpecWhen" tag="1"/>
      </bootstrap>
    <bootstrap thing="cFGTighSqu">
      <autotag group="ClSpecWhen" tag="3"/>
      </bootstrap>
    <bootstrap thing="cFGNoYoSeH">
      <autotag group="ClSpecWhen" tag="4"/>
      </bootstrap>
    <bootstrap thing="cFGSlewFoo">
      <autotag group="ClSpecWhen" tag="8"/>
      </bootstrap>
    <link linkage="varies" thing="cHelpRog"/>
    </thing>
  <thing id="cFGRehears" name="Rehearsed" description="A blockade runner adds ½ her level to Bluff skill checks made to fool someone or convey a secret message and to all Disguise skill checks. Blockade runners can create a disguise in 1d3 x 5 minutes of work rather than the normal 1d3 x 10 minutes of work. \n\nThis ability replaces trapfinding." compset="ClSpecial" summary="Bonus on Bluff to fool someone or convey a secret message &amp; to Disguise.">
    <tag group="AbilType" tag="Extra"/>
    <tag group="ProductId" tag="FrogGod"/>
    <eval phase="PostLevel" priority="10000"><![CDATA[
~ If we're not shown, just get out now
doneif (tagis[Helper.ShowSpec] = 0)
~ If we've been Disabled, get out now
doneif (tagis[Helper.SpcDisable] <> 0)
~ Only do it for the first copy
doneif (tagis[Helper.FirstCopy] = 0)

~ our bonus is 1/2, min 1
field[abValue].value += maximum(round(field[xAllLev].value / 2,0,-1),1)

field[livename].text = field[thingname].text & " " & signed(field[abValue].value)
      
#skillbonus[skDisguise] += field[abValue].value
#situational[hero.child[skBluff],signed(field[abValue].value) & " to fool someone or convey a secret message",field[thingname].text]]]></eval>
    </thing>
  <thing id="cFGTighSqu" name="Tight Squeeze" description="When an unobserved blockade runner attempts to hide, he may make an Escape Artist skill check and a Stealth skill check and use the better result. If he has sufficient time to take 20 on either check, he may instead roll an Escape Artist skill check and a Stealth skill check and combine the results. The combined result is treated as if it were a Stealth skill check opposed by the observer&apos;s Perception skill check. The blockade runner must decide to use this option before rolling the combined check, and he must abide by its results. \n\nThis ability replaces trap sense." compset="ClSpecial" summary="When hiding make an Escape Artist &amp; Stealth and use the better result.">
    <tag group="ProductId" tag="FrogGod"/>
    <tag group="AbilType" tag="Extra"/>
    </thing>
  <thing id="cFGNoYoSeH" name="Now You See Him" description="Whenever a blockade runner selects the minor magic or major magic rogue talent, he can use his Charisma score in place of his Intelligence score when casting an illusion spell. This applies to determining the level of spell he can cast as well as the saving throw&apos;s DC. In addition, the blockade runner can cast any illusion spell one additional time per day. \n\nThis ability replaces uncanny dodge." compset="ClSpecial" summary="Use Cha instead of Int when using Magic rogue talents.">
    <tag group="AbilType" tag="SpellLike"/>
    <tag group="ProductId" tag="FrogGod"/>
    <eval phase="PostLevel" priority="20000"><![CDATA[
~ If we're not shown, just get out now
doneif (tagis[Helper.ShowSpec] = 0)
~ If we've been Disabled, get out now
doneif (tagis[Helper.SpcDisable] <> 0)
var sSearch  as string
var Illusion as number

~ If we have minor Magic check it to see if its an illusion spell
If (hero.childlives[cRogMinMag] <> 0) Then
    ~ get all the spell info tags
    sSearch = hero.child[cRogMinMag].tagids[SpInfo.?,"|"]
    ~ Set this is an illusion to false
    Illusion = 0
    ~ loop through all the spells to see if it is a illusion spell
    foreach thing in BaseSpell where sSearch
      If (eachthing.tagis[sSchool.Illusion] <> 0) Then
         Illusion = 1
      Endif
    nexteach
    ~ If we are an illusion spell then we get +1 use per day
    If (Illusion <> 0) Then
      hero.child[cRogMinMag].field[trkMax].value += 1
    Endif
Endif

~ If we have Major Magic check it to see if its an illusion spell
If (hero.childlives[cRogMajMag] <> 0) Then
    ~ get all the spell info tags
    sSearch = hero.child[cRogMajMag].tagids[SpInfo.?,"|"]
    ~ Set this is an illusion to false
    Illusion = 0
    ~ loop through all the spells to see if it is a illusion spell
    foreach thing in BaseSpell where sSearch
      If (eachthing.tagis[sSchool.Illusion] <> 0) Then
         Illusion = 1
      Endif
    nexteach
    ~ If we are an illusion spell then we get +1 use per day
    If (Illusion <> 0) Then
      hero.child[cRogMajMag].field[trkMax].value += 1
    Endif
Endif]]></eval>
    </thing>
  <thing id="cFGSlewFoo" name="Slew Foot" description="The blockade runner can make an Escape Artist check in place of a combat maneuver check when attempting to trip an opponent. \n\nThis ability replaces improved uncanny dodge." compset="ClSpecial" summary="Use Escape Artist instead of CMB when attempting to trip an opponent.">
    <tag group="ProductId" tag="FrogGod"/>
    <tag group="AbilType" tag="Extra"/>
    </thing>
  <thing id="arFGScriFe" name="Scrimshaw Fetishist" description="The scrimshaw fetishist&apos;s mind and body are literally one. His mind deciphers the arcane code of magic, while his body serves as its actual receptacle. Unlike all other wizards, the scrimshaw fetishist has no need for a spellbook, because literally, he is the spellbook. He records his spells on his skin using a scrimshaw fetish containing a powerful magical spirit. Because of the unique relationship between the physical and mystical world, the scrimshaw fetishist can empower his magic by spilling his own blood." compset="ClassVary" uniqueness="unique">
    <fieldval field="cvSpec3rdS" value="Scrimshaw Fetish"/>
    <arrayval field="cvCustTTot" index="4" value="2"/>
    <arrayval field="cvCustTTot" index="9" value="3"/>
    <arrayval field="cvCustTTot" index="14" value="4"/>
    <arrayval field="cvCustTTot" index="19" value="5"/>
    <arrayval field="cvBonFtMod" index="4" value="-1"/>
    <arrayval field="cvBonFtMod" index="9" value="-2"/>
    <arrayval field="cvBonFtMod" index="14" value="-3"/>
    <arrayval field="cvBonFtMod" index="19" value="-4"/>
    <usesource source="CampRazorC"/>
    <tag group="ClVaryName" tag="AppParen"/>
    <tag group="ProductId" tag="FrogGod"/>
    <bootstrap thing="cFGScrimFe">
      <autotag group="ClSpecWhen" tag="1"/>
      </bootstrap>
    <link linkage="varies" thing="cHelpWiz"/>
    <eval phase="Final" priority="99999999"><![CDATA[
~ Change the list of Arcane Bond to only allow fetish choices
linkage[varies].field[cCstS3Expr].text = "thingid.cWizFGBoBo|thingid.cWizFGBoMi|thingid.cWizFGBoSp"

~ If we are 5th level or higher we need to add two more choices 
If (linkage[varies].field[cTotalLev].value >= 5) Then
   ~ Allow Empower Fetish or Bonus Feat as options
   linkage[varies].field[cCstS3Expr].text &= "|thingid.cWizFGEmFe|thingid.cWizFGBoFe"
Endif]]></eval>
    </thing>
  <thing id="cWizFGBoBo" name="Boost Body" description="The scrimshaw fetishist can use the fetish to boost his physical abilities to the detriment of his mental abilities. To do so, the fetish burrows into the skin dealing 2 points of Intelligence damage to the wizard, while granting a +2 enhancement bonus to his Strength, Dexterity and Constitution. The enhancement bonus lasts for a number of minutes equal to his scrimshaw fetishist level. Alternatively, the scrimshaw fetishist may double the Intelligence damage and the enhancement bonus; however, doing so costs an extra usage. He cannot increase the Intelligence damage or enhancement bonus any further.\n\n{B}Note:{/b} The Intelligence damage should be applied by going to the &quot;Adjust&quot; tab and adding a &quot;Ability Score Damage&quot; adjustment." compset="CustomSpec" uniqueness="unique">
    <fieldval field="actUserMin" value="1"/>
    <fieldval field="actUserMax" value="2"/>
    <fieldval field="actName" value="Boost Body"/>
    <usesource source="CampRazorC"/>
    <tag group="User" tag="Activation"/>
    <tag group="Helper" tag="UserAdjust"/>
    <tag group="ProductId" tag="FrogGod"/>
    <tag group="Helper" tag="Tertiary"/>
    <tag group="User" tag="Tracker"/>
    <tag group="ChargeCalc" tag="LevelFull"/>
    <tag group="ChargeCalc" tag="LevelX1"/>
    <tag group="Usage" tag="DayMinute"/>
    <tag group="SpecSource" tag="arFGScriFe"/>
    <tag group="RazorCoast" tag="Fetishist" name="Fetishist Selected"/>
    <eval phase="First" index="2">~ Push all RazorCoast tags to the hero
perform hero.pushtags[RazorCoast.?]</eval>
    <eval phase="PostLevel" priority="25000"><![CDATA[
~ if not activated get out now
doneif (field[abilActive].value <> 1)

~ Calc bonus/penalty value
field[abValue].value += field[actUser].value * 2
~ Bonus to Str, Dex, and Con
#applybonus[BonEnhance,hero.child[aSTR],field[abValue].value]
#applybonus[BonEnhance,hero.child[aDEX],field[abValue].value]
#applybonus[BonEnhance,hero.child[aCON],field[abValue].value]]]></eval>
    <exprreq message="Only a single Fetishist can be taken.">@ispick - hero.tagcount[RazorCoast.Fetishist] = 0</exprreq>
    </thing>
  <thing id="cWizFGBoMi" name="Boost Mind" description="The scrimshaw fetishist can use the fetish to increase his acumen by weakening his body. To do so, the fetish burrows into the skin dealing 2 points of Strength damage, while granting a +4 enhancement bonus to his Intelligence. The enhancement bonus lasts for a number of minutes equal to his scrimshaw fetishist level.\n\n{B}Note:{/b} The Strength damage should be applied by going to the &quot;Adjust&quot; tab and adding a &quot;Ability Score Damage&quot; adjustment." compset="CustomSpec" uniqueness="unique">
    <fieldval field="actName" value="Boost Mind"/>
    <usesource source="CampRazorC"/>
    <tag group="ProductId" tag="FrogGod"/>
    <tag group="Helper" tag="Tertiary"/>
    <tag group="ChargeCalc" tag="LevelFull"/>
    <tag group="ChargeCalc" tag="LevelX1"/>
    <tag group="Usage" tag="DayMinute"/>
    <tag group="User" tag="Activation"/>
    <tag group="SpecSource" tag="arFGScriFe"/>
    <tag group="User" tag="Tracker"/>
    <tag group="RazorCoast" tag="Fetishist" name="Fetishist Selected"/>
    <eval phase="PostLevel" priority="25000"><![CDATA[
~ if not activated get out now
doneif (field[abilActive].value <> 1)

~ Calc bonus/penalty value
field[abValue].value += 4
~ Bonus to Intelligence
#applybonus[BonEnhance,hero.child[aINT],field[abValue].value]]]></eval>
    <eval phase="First" index="2">~ Push all RazorCoast tags to the hero
perform hero.pushtags[RazorCoast.?]</eval>
    <exprreq message="Only a single Fetishist can be taken.">@ispick - hero.tagcount[RazorCoast.Fetishist] = 0</exprreq>
    </thing>
  <thing id="cWizFGBoSp" name="Boost Spells" description="The scrimshaw fetishist can use the fetish to apply metamagic feats that he already knows to his spells without using up a higher level spell slot. To use this ability, the fetish burrows into the skin dealing 2 points of Constitution damage. The fetish then allows the wizard to apply a metamagic feat that takes up a spell slot one level higher than the actual spell to any spell that he has prepared for the day. He must cast that spell within the next hour; otherwise, the designated spell loses the benefit bestowed by the metamagic feat. Alternatively, the scrimshaw fetishist may double the Constitution damage and apply a metamagic feat that takes up a spell slot two levels higher than the actual spell. Doing so costs an extra usage.\n\n{B}Note:{/b} The Constitution damage should be applied by going to the &quot;Adjust&quot; tab and adding a &quot;Ability Score Damage&quot; adjustment." compset="CustomSpec" uniqueness="unique">
    <usesource source="CampRazorC"/>
    <tag group="SpecSource" tag="arFGScriFe"/>
    <tag group="ProductId" tag="FrogGod"/>
    <tag group="Helper" tag="Tertiary"/>
    <tag group="RazorCoast" tag="Fetishist" name="Fetishist Selected"/>
    <eval phase="First">~ Push all RazorCoast tags to the hero
perform hero.pushtags[RazorCoast.?]</eval>
    <exprreq message="Only a single Fetishist can be taken.">@ispick - hero.tagcount[RazorCoast.Fetishist] = 0</exprreq>
    </thing>
  <thing id="cFGScrimFe" name="Scrimshaw Fetish" description="At 1st level, a scrimshaw fetishist establishes a magical bond with a scrimshaw fetish containing a powerful magical spirit. The fetish must be an object that pierces the skin, such as a nose ring, an earring or a similar item, and it must pierce the skin to have any effect. If the scrimshaw fetish is damaged, it is restored to full hit points the next time the scrimshaw fetishist prepares his spells. If it is destroyed, it can be replaced in the same manner as a wizard replacing a bonded object. At the time of its creation, the scrimshaw fetishist must imbue the fetish with one of the following three powers - boost body, boost mind or boost spells. Once created, the fetish&apos;s power cannot be changed, and its abilities can be used once per day (unless the Empower Fetish ability is employed to increase the number of usages - see below for details). The scrimshaw fetishist can have only one fetish in existence at any time. He cannot use a fetish created by another wizard. \n\nThis ability replaces arcane bond." compset="ClSpecial">
    <fieldval field="trkMax" value="1"/>
    <tag group="AbilType" tag="Super"/>
    <tag group="Usage" tag="Day"/>
    <tag group="ProductId" tag="FrogGod"/>
    <tag group="User" tag="Tracker"/>
    </thing>
  <thing id="cWizFGEmFe" name="Empower Fetish" description="The scrimshaw fetishist can gain an additional daily usage of the fetish&apos;s boost body, boost mind or boost spells power. An additional daily usage replaces the wizard&apos;s bonus feat at 5th, 10th, 15th or 20th levels." compset="CustomSpec" maxlimit="4">
    <usesource source="CampRazorC"/>
    <tag group="SpecSource" tag="arFGScriFe"/>
    <tag group="ProductId" tag="FrogGod"/>
    <tag group="Helper" tag="Tertiary"/>
    <eval phase="PostLevel" priority="10000">~ Increase usage of Fetish by +1/day
#trkmax[cFGScrimFe] += 1</eval>
    </thing>
  <thing id="cWizFGBoFe" name="Wizard Bonus Feat" description="Select this to be able to pick a wizard bonus feat instead of Empowering your Fetish." compset="CustomSpec" maxlimit="4">
    <usesource source="CampRazorC"/>
    <tag group="SpecSource" tag="arFGScriFe"/>
    <tag group="ProductId" tag="FrogGod"/>
    <tag group="Helper" tag="Tertiary"/>
    <eval phase="PostLevel" priority="10000">~ Give a bonus feat
linkage[table].field[cBonFtMax].value += 1</eval>
    </thing>
  <thing id="cHelpOlS" name="Old Salt" compset="Class" uniqueness="unique">
    <fieldval field="cHDSides" value="8"/>
    <fieldval field="cAbbr" value="OlS"/>
    <fieldval field="cSkills" value="4"/>
    <usesource source="CampRazorC"/>
    <tag group="Classes" tag="FGOldSalt" name="Old Salt"/>
    <tag group="cAttack" tag="Medium"/>
    <tag group="ClassSkill" tag="skAcrobat"/>
    <tag group="ClassSkill" tag="Craft"/>
    <tag group="ClassSkill" tag="skClimb"/>
    <tag group="ClassSkill" tag="skHeal"/>
    <tag group="ClassSkill" tag="skIntim"/>
    <tag group="ClassSkill" tag="skKnowGeog"/>
    <tag group="ClassSkill" tag="skKnowNat"/>
    <tag group="ClassSkill" tag="skPercep"/>
    <tag group="ClassSkill" tag="skSurvival"/>
    <tag group="ClassSkill" tag="skSwim"/>
    <tag group="cFort" tag="Good"/>
    <tag group="ProductId" tag="FrogGod"/>
    <tag group="cRef" tag="Good"/>
    <tag group="cWill" tag="Poor"/>
    <bootstrap thing="cOLSExtSai">
      <autotag group="ClSpecWhen" tag="5"/>
      </bootstrap>
    <bootstrap thing="cOLSMatBoo">
      <autotag group="ClSpecWhen" tag="3"/>
      </bootstrap>
    <bootstrap thing="cOLSPidgin">
      <autotag group="ClSpecWhen" tag="2"/>
      </bootstrap>
    <bootstrap thing="cOLSRepBo">
      <autotag group="ClSpecWhen" tag="4"/>
      </bootstrap>
    <bootstrap thing="cOLSSaiExp">
      <autotag group="ClSpecWhen" tag="1"/>
      </bootstrap>
    <bootstrap thing="cOLSMatBoo">
      <autotag group="ClSpecWhen" tag="5"/>
      </bootstrap>
    </thing>
  <thing id="cFGOldSalt" name="Old Salt" description="A sailor&apos;s life is the sea, and his ship is his home. Anybody can be a sailor-at least, anybody with a stomach to avoid motion sickness. But only the most experienced, the most crusty, become an old salt. An old salt has likely spent a lifetime at sea, and any time not spent at sea was spent in port towns up and down the coast drinking and carousing-but always thinking of the waves.\n\n{b}Role:{/b} An old salt spends his life at sea. While any class - including NPC classes - can easily enter, it&apos;s most valuable to non-caster classes.\n\n{b}Alignment:{/b} While sailors tend towards neutral alignments on at least one axis, old salts are not limited to any alignment. Throughout the world, old salts of every alignment are sailing the high seas at any given time.\n\n{b}Note:{/b} Both the grand captain of the high seas and the old salt prestige classes use concepts from the {b}Frog God Games{/b} book {b}{i}Fire as She Bears{/b}{/i}. If you&apos;re using that book to resolve sailing actions - and really, you should be - everything here makes sense. If, for whatever reason, you&apos;ve opted not to use that product, you can easily ignore the class features of these two prestige classes; there should still be enough other material in each class to make the class worthwhile for your PC if that&apos;s a niche you wish to explore." compset="ClassLevel" maxlimit="5">
    <usesource source="CampRazorC"/>
    <tag group="ProductId" tag="FrogGod"/>
    <tag group="ClassType" tag="Prestige"/>
    <tag group="Helper" tag="NoPathSoc"/>
    <bootstrap thing="cHelpOlS"></bootstrap>
    <link linkage="helper" thing="cHelpOlS"/>
    <exprreq message="Climb 5 ranks required."><![CDATA[#skillranks[skClimb] >= 5]]></exprreq>
    <exprreq message="Swim 3 ranks required."><![CDATA[#skillranks[skSwim] >= 3]]></exprreq>
    <exprreq message="Profession (sailor) 5 ranks required."><![CDATA[#skillranks[skProfSail] >= 5]]></exprreq>
    <exprreq message="Seaworthy feat required."><![CDATA[#hasfeat[fFGSeawort] <> 0]]></exprreq>
    <exprreq message="A Life at Sea feat required"><![CDATA[#hasfeat[fFGLifeSea] <> 0]]></exprreq>
    <exprreq message="Skill Focus (Profession [sailor]) required."><![CDATA[hero.childfound[skProfSail].tagis[Helper.SkillFocus] <> 0]]></exprreq>
    </thing>
  <thing id="cOLSSaiExp" name="Sailing Expertise" description="An old salt has a steady hand and a clear mind aboard a ship, and knows exactly how to accomplish his job-he knows the right knot to hold the mainsail in place until better repairs are made, he perfectly stacks cargo in the ship&apos;s hold, and so forth. He adds his class level as a circumstance bonus to any Profession (sailor) checks made while aboard a ship." compset="ClSpecial" summary="Your level as a circumstance bonus to Profession (sailor) checks made while aboard a ship.">
    <fieldval field="actName" value="Aboard a ship"/>
    <tag group="AbilType" tag="Extra"/>
    <tag group="ProductId" tag="FrogGod"/>
    <tag group="User" tag="Activation"/>
    <eval phase="PostLevel" priority="10000"><![CDATA[
~ If we're not shown, just get out now
doneif (tagis[Helper.ShowSpec] = 0)
~ If we've been Disabled, get out now
doneif (tagis[Helper.SpcDisable] <> 0)

~ Bonus is equal to our level
field[abValue].value += field[xAllLev].value

~ if not activated get out now
doneif (field[abilActive].value <> 1)
~ give bonus to Profession Sailor
#applybonus[ModCirc,hero.childfound[skProfSail],field[abValue].value]]]></eval>
    </thing>
  <thing id="cOLSPidgin" name="Pidgin" description="An old salt has spent a lot of time in myriad port towns. Strangers quickly need to learn to adapt or go hungry and thirsty. By the time he achieves 2nd level, the old salt has been to enough places and met enough people to pick up a smattering of most common languages. He couples this miniscule knowledge with a broad smile and hand gestures to effectively communicate even when he doesn&apos;t speak the language. He makes a special Intelligence check, adding his class level in addition to his Intelligence modifier. Alternately, if he has ranks in Linguistics, he may use that skill while still adding his class level. Common languages (as determined by the GM, but likely including those of the core races found in the Pathfinder Roleplaying Game) have a DC of 10; uncommon languages (again, determined by the GM but likely including common monster races such as giants and goblinoids) have a DC of 13. Rare languages (those used by monsters and races not commonly seen, such as aboleths) have a DC of 20. The old salt can only communicate the most basic of needs-where to find food or supplies, for example. He cannot carry out a long conversation, and even this brief exchange is made in broken language and incorrect grammar-just enough to get the point across." compset="ClSpecial">
    <tag group="AbilType" tag="Extra"/>
    <tag group="ProductId" tag="FrogGod"/>
    </thing>
  <thing id="cOLSMatBoo" name="Mate&apos;s Boon" description="An old salt is worth his weight in gold to a Mate aboard a ship when trouble breaks out. If a Mate has an old salt among the crew he commands, he gains a +2 bonus to checks appropriate to the task. For example, a Gunnery Sergeant Mate would gain a +2 to his ranged attack roll while a Navigator would gain the bonus to Knowledge (geography) and Profession (sailor) checks made to navigate the ship. An individual Mate can only receive one such bonus, even if he commands more than one old salt. At 5th level, the bonus increases to +4." compset="ClSpecial">
    <tag group="AbilType" tag="Extra"/>
    <tag group="ProductId" tag="FrogGod"/>
    <eval phase="PostLevel" priority="10000"><![CDATA[
var bonus as number
bonus += field[xIndex].value * 2
~Set the list name
field[listname].text = field[thingname].text & " " & signed(bonus)

~ If we're not shown, just get out now
doneif (tagis[Helper.ShowSpec] = 0)
~ If we've been Disabled, get out now
doneif (tagis[Helper.SpcDisable] <> 0)

~ Set level bonus
field[abValue].value += field[xCount].value * 2
~ Set the live name
field[livename].text = field[thingname].text & " " & signed(field[abValue].value)]]></eval>
    </thing>
  <thing id="cOLSRepBo" name="Repel Boarders" description="An old salt is an expert at ship-based combat. When fighting while in the rigging, he doesn&apos;t lose his Dexterity bonus to AC, even while climbing to gain a better position. In addition, if his foe has lost his Dexterity bonus due to climbing, the old salt is considered to have higher ground, even if he is physically lower in the rigging. He can take 10 on Climb checks, even while in combat or otherwise threatened. Finally, he adds his class level to Climb checks made to navigate ship&apos;s rigging, to Acrobatics checks to swing through the rigging, and other skill checks as deemed appropriate by the GM." compset="ClSpecial" summary="Take 10 on Climb, Don&apos;t lose Dex in climbs.">
    <tag group="AbilType" tag="Extra"/>
    <tag group="ProductId" tag="FrogGod"/>
    <eval phase="Final" priority="25000"><![CDATA[
~ If we're not shown, just get out now
doneif (tagis[Helper.ShowSpec] = 0)
~ If we've been Disabled, get out now
doneif (tagis[Helper.SpcDisable] <> 0)

~ Set level bonus
field[abValue].value += field[xAllLev].value
~ Set the live name
field[livename].text = field[thingname].text & " " & signed(field[abValue].value)
~ Set Situational Text
#situational[hero.childfound[skClimb],signed(field[abValue].value) & " bonus made to navigate ship's rigging",field[name].text]
#situational[hero.childfound[skAcrobat],signed(field[abValue].value) & " bonus made to navigate ship's rigging",field[name].text]]]></eval>
    </thing>
  <thing id="cOLSExtSai" name="Extraordinary Sailor" description="The old salt is a master of the sea, and it seemingly bends to his will. He takes only half the standard penalty from high winds (see {b}{i}Fire as She Bears{/b} {/i}by {b}Frog God Games{/b}); if he has the Storm-Tossed Gunnery feat from {b}{i}Fire as She Bears{/b},{/i} the penalties are instead reduced to one-quarter normal (rounded down). He may always take 10 on Profession (sailor) checks, even when threatened or under pressure." compset="ClSpecial">
    <tag group="AbilType" tag="Extra"/>
    <tag group="ProductId" tag="FrogGod"/>
    </thing>
  <thing id="cHelpShS" name="Shaw Sherriff" compset="Class" uniqueness="unique">
    <fieldval field="cHDSides" value="8"/>
    <fieldval field="cAbbr" value="ShS"/>
    <fieldval field="cSkills" value="6"/>
    <fieldval field="cSpecSing" value="Trick Shot"/>
    <fieldval field="cSpecName" value="Trick Shots"/>
    <arrayval field="cCustTot" index="5" value="3"/>
    <arrayval field="cCustTot" index="7" value="4"/>
    <arrayval field="cCustTot" index="9" value="5"/>
    <arrayval field="cCustTot" index="1" value="1"/>
    <arrayval field="cCustTot" index="3" value="2"/>
    <usesource source="CampRazorC"/>
    <tag group="ClassSkill" tag="skSleight"/>
    <tag group="ClassSkill" tag="skStealth"/>
    <tag group="ClassSkill" tag="skSurvival"/>
    <tag group="ClassSkill" tag="skSwim"/>
    <tag group="ProductId" tag="FrogGod"/>
    <tag group="ClassSkill" tag="Craft"/>
    <tag group="ClassSkill" tag="Profession"/>
    <tag group="cRef" tag="Good"/>
    <tag group="cWill" tag="Poor"/>
    <tag group="Classes" tag="FGShaSher" name="Shaw Sherrif"/>
    <tag group="cAttack" tag="Good"/>
    <tag group="cFort" tag="Poor"/>
    <tag group="ClassSkill" tag="skEscape"/>
    <tag group="ClassSkill" tag="skIntim"/>
    <tag group="ClassSkill" tag="skBluff"/>
    <tag group="ClassSkill" tag="skClimb"/>
    <tag group="ClassSkill" tag="skDiplo"/>
    <tag group="ClassSkill" tag="skKnowLoc"/>
    <tag group="ClassSkill" tag="skPercep"/>
    <tag group="ClassSkill" tag="skSenseMot"/>
    <bootstrap thing="cSHSInform">
      <autotag group="ClSpecWhen" tag="3"/>
      </bootstrap>
    <bootstrap thing="cSHSRespec">
      <autotag group="ClSpecWhen" tag="2"/>
      </bootstrap>
    <bootstrap thing="cSneakAtt">
      <autotag group="ClSpecWhen" tag="1"/>
      </bootstrap>
    <bootstrap thing="cSneakAtt">
      <autotag group="ClSpecWhen" tag="3"/>
      </bootstrap>
    <bootstrap thing="cSneakAtt">
      <autotag group="ClSpecWhen" tag="5"/>
      </bootstrap>
    <bootstrap thing="cSneakAtt">
      <autotag group="ClSpecWhen" tag="7"/>
      </bootstrap>
    <bootstrap thing="cSneakAtt">
      <autotag group="ClSpecWhen" tag="9"/>
      </bootstrap>
    <bootstrap thing="cSHSDeputi">
      <autotag group="ClSpecWhen" tag="7"/>
      </bootstrap>
    <bootstrap thing="cSHSEnmit">
      <autotag group="ClSpecWhen" tag="1"/>
      </bootstrap>
    <bootstrap thing="cSHSTheLaw">
      <autotag group="ClSpecWhen" tag="10"/>
      </bootstrap>
    </thing>
  <thing id="cFGShaSher" name="Shaw Sherrif" description="Most people go about their day, not really worrying who enforces the laws. Maybe they don&apos;t care, or maybe they just assume they can&apos;t change things when corruption rules the roost. They keep their heads down and stay out of trouble, and hope some feigned slight doesn&apos;t lead them to trouble. If their neighbor or friend has trouble, well, then they should&apos;ve kept their head lower.\n\nA few people, though, cannot stand by while corrupt law enforcement-or worse, no law enforcement-runs roughshod over their community. History, of course, tells tales of many such freedom fighters-brave men and women who organize rebellions and overthrow the corrupt stain upon their land.\n\nAnd then there are those who simply declare themselves the law and dare others to ignore their self-claimed authority. They have different methods, but all have the same goal-stabilizing their community to make it better for everybody.\n\n{b}Role:{/b} The Shaw sheriff could, theoretically, come from any class. Primary spellcasters are the least likely to enter, as the class will not advance their spellcasting. Fighters and rogues are best suited for the class, though others such as rangers and paladins could certainly find themselves in such a role. The Shaw sheriff is a master of blade and pistol, and learns to use the two weapons in concert.\n\n{b}Alignment:{/b} While a character willing to take on the role of Shaw sheriff is likely to be non-evil, a character of any alignment could enter this class and benefit from the abilities.\n\n{b}Special:{/b} The character must publicly declare himself to be the sheriff of Port Shaw." compset="ClassLevel" maxlimit="10">
    <usesource source="CampRazorC"/>
    <tag group="ProductId" tag="FrogGod"/>
    <tag group="ClassType" tag="Prestige"/>
    <bootstrap thing="cHelpShS"></bootstrap>
    <link linkage="helper" thing="cHelpShS"/>
    <exprreq message="Knowledge(local) 3 ranks required."><![CDATA[#skillranks[skKnowLoc] >= 3]]></exprreq>
    <exprreq message="Perception 4 ranks required."><![CDATA[#skillranks[skPercep] >= 4]]></exprreq>
    <exprreq message="Sense Motive 5 ranks required."><![CDATA[#skillranks[skSenseMot] >= 5]]></exprreq>
    <exprreq message="Alertness feat required."><![CDATA[#hasfeat[fAlertness] <> 0]]></exprreq>
    <exprreq message="Quick Draw feat required."><![CDATA[#hasfeat[fQuickDraw] <> 0]]></exprreq>
    <exprreq message="Two-Weapon Fighting feat required."><![CDATA[#hasfeat[fTwoWep] <> 0]]></exprreq>
    <exprreq message="Exotic Weapon Proficiency (Firearms) required."><![CDATA[#hasfeat[fExoticGun] <> 0]]></exprreq>
    <prereq message="Martial Weapon Proficiency (rapier) or Martial Weapon Proficiency (longsword) required">
      <validate><![CDATA[
validif (hero.tagis[WepProf.wRapier] <> 0)
validif (hero.tagis[WepProf.wLongsword] <> 0)]]></validate>
      </prereq>
    <prereq message="Diplomacy 5 ranks or Bluff 5 ranks required.">
      <validate><![CDATA[
validif (#skillranks[skBluff] >= 5)
validif (#skillranks[skDiplo] >= 5)]]></validate>
      </prereq>
    </thing>
  <thing id="cSHSEnmit" name="Enmity" description="The character earns the enmity of the Municipal Dragoons, who place a price on her head. Any who captures or kills the Shaw sheriff can collect a reward equal to the character&apos;s total level x 200 gp. In addition, Dragoons receive a morale bonus to attack rolls made against the Shaw sheriff equal to her class level." compset="ClSpecial" summary="Municipal Dragoons have a bounty on your head.">
    <tag group="AbilType" tag="Extra"/>
    <tag group="ProductId" tag="FrogGod"/>
    <eval phase="PostLevel" priority="10000"><![CDATA[
~ If we're not shown, just get out now
doneif (tagis[Helper.ShowSpec] = 0)
~ If we've been Disabled, get out now
doneif (tagis[Helper.SpcDisable] <> 0)

~ Calc gp cost of bounty
field[abValue].value += #totallevelcount[] * 200
~ Calc bonus to attack
field[abValue2].value += field[xAllLev].value

~ set live name
field[livename].text = field[thingname].text & " " & field[abValue].value & "gp, " & signed(field[abValue2].value)]]></eval>
    </thing>
  <thing id="cSHSRespec" name="Respect" description="By the time the character earns her 2nd level, the populace of Port Shaw grudgingly respects the job she does, even while the Dragoons continue to hunt her and maintain a price on her head. Starting at 2nd level, any non-Dragoon must make a Will saving throw (DC 10 + class level + Shaw sheriff&apos;s Charisma modifier) before taking actions to capture or kill the Shaw sheriff. If the citizen fails the saving throw, he will take no actions directly towards capturing or killing the Shaw sheriff for 24 hours. If the citizen makes the save, he or she is free to attempt to collect the reward on the character&apos;s head. Note that just because a citizen of Port Shaw makes the save does not mean he or she will attempt to capture or kill the PC to collect the reward-only that the citizen could if he or she so desired.\n\nStarting at 5th level, the saving throw DC increases by +4 and citizens of Port Shaw actively seek to aid the Shaw sheriff in avoiding Dragoon capture. A citizen who fails the Will save will, if asked by the Shaw sheriff, takes minor actions to aid her escape from the Dragoons such as fibbing about knowing her whereabouts, allowing her to run through her home to escape out the backdoor, and so forth.\n\nAt 8th level, the Shaw sheriff has gained near hero status in Port Shaw. The citizenry can sense the overthrow of the Dragoons is near and actively aid the sheriff. The saving throw DC to potentially claim the reward on her head increases by another +4 (for a total DC of 10 + class level + Charisma modifier + 8) and citizens of Port Shaw actively and openly support the sheriff. For example, they will clearly lie and say they haven&apos;t seen her even if presented proof of conversing with the sheriff not 5 minutes ago." compset="ClSpecial">
    <tag group="ProductId" tag="FrogGod"/>
    <tag group="AbilType" tag="Extra"/>
    <eval phase="PostAttr" priority="1000"><![CDATA[
~ If we're not shown, just get out now
doneif (tagis[Helper.ShowSpec] = 0)
~ If we've been Disabled, get out now
doneif (tagis[Helper.SpcDisable] <> 0)

~ Calc DC as 10 + class + Cha
field[abDC].value += 10 + #attrmod[aCHA] + field[xAllLev].value
~ @ level 5 give +4 bonus to DC
If (field[xAllLev].value >= 5) Then
   field[abDC].value += 4
Endif
~ @ level 8 give +4 bonus to DC
If (field[xAllLev].value >= 8) Then
   field[abDC].value += 4
Endif]]></eval>
    </thing>
  <thing id="cSHSInform" name="Informants" description="The Shaw sheriff&apos;s good will earned with the people of Port Shaw has earned him important information at crucial points. The Shaw sheriff develops relationships with a number of minor NPCs equal to his Charisma modifier (minimum 1). These informants provide him vital information about the goings on within Port Shaw, especially in regard to the activities of the Dragoons. Once per day, the Shaw sheriff can make a Diplomacy check to gather information as a free action. If she&apos;s successful on this check, it indicates one of her sources has provided her the information she desires. If the check fails, the Shaw sheriff and her allies can still attempt a standard gather information check." compset="ClSpecial">
    <fieldval field="trkMax" value="1"/>
    <tag group="User" tag="Tracker"/>
    <tag group="AbilType" tag="Extra"/>
    <tag group="ProductId" tag="FrogGod"/>
    <tag group="Usage" tag="Day"/>
    <eval phase="PostAttr" priority="1000"><![CDATA[
~ If we're not shown, just get out now
doneif (tagis[Helper.ShowSpec] = 0)
~ If we've been Disabled, get out now
doneif (tagis[Helper.SpcDisable] <> 0)

~ Charisma modifier (minimum 1)
field[abValue].value += #attrbonus1[aCHA]

~ set live name
field[livename].text = field[thingname].text & " " & field[abValue].value
field[abSumm].text = "You have a total of " & field[abValue].value & " informants."]]></eval>
    </thing>
  <thing id="cSHSDeputi" name="Deputies" description="The citizens of Port Shaw actively seek to aid the Shaw sheriff. Her number of informants doubles, and she can make the special gather information check three times per day now." compset="ClSpecial">
    <tag group="AbilType" tag="Extra"/>
    <tag group="ProductId" tag="FrogGod"/>
    <eval phase="PostAttr" priority="950"><![CDATA[
~ If we're not shown, just get out now
doneif (tagis[Helper.ShowSpec] = 0)
~ If we've been Disabled, get out now
doneif (tagis[Helper.SpcDisable] <> 0)

~ Double the Charisma modifier
#value[cSHSInform] += #attrbonus1[aCHA]
~ increase the uses per day
#trkmax[cSHSInform] += 2]]></eval>
    </thing>
  <thing id="cSHSTheLaw" name="I Am the Law" description="The non-Dragoon citizens of Port Shaw rally around the Shaw sheriff, viewing her and her allies as legitimate authority figures within the city. If pressed into a situation where a citizen was forced to pick between a Dragoon and the Shaw sheriff, the citizen will choose the Shaw sheriff&apos;s side. The Shaw sheriff now has four times her Charisma modifier in informants, and she can make use of those informants via gather information once an hour as a free action. In addition, due to constant whispers and notes, the Shaw sheriff knows exactly where all Dragoon patrols and commanders are within the city limits at all times." compset="ClSpecial">
    <tag group="ProductId" tag="FrogGod"/>
    <tag group="AbilType" tag="Extra"/>
    <eval phase="PostAttr" priority="950"><![CDATA[
~ If we're not shown, just get out now
doneif (tagis[Helper.ShowSpec] = 0)
~ If we've been Disabled, get out now
doneif (tagis[Helper.SpcDisable] <> 0)

~ Double the Charisma modifier
#value[cSHSInform] += #attrbonus1[aCHA] * 2]]></eval>
    <eval phase="PostAttr" priority="1050" index="2"><![CDATA[
~ If we're not shown, just get out now
doneif (tagis[Helper.ShowSpec] = 0)
~ If we've been Disabled, get out now
doneif (tagis[Helper.SpcDisable] <> 0)

~ Set amount to 1/hr
#trkmax[cSHSInform] = 1
perform hero.child[cSHSInform].delete[Usage.?]
perform hero.child[cSHSInform].assign[Usage.Hour]]]></eval>
    </thing>
  <thing id="cShsFGBlSl" name="Blast and Slice" description="You simultaneously fire your pistol and swing your blade at your foe, forcing him to decide which attack to defend against. Your foe may apply his Dexterity bonus to his AC against only one of your two attacks. This is a special standard action; resolve each weapon attack separately." compset="CustomSpec" uniqueness="useronce">
    <usesource source="CampRazorC"/>
    <tag group="ProductId" tag="FrogGod"/>
    <tag group="SpecSource" tag="cHelpShS"/>
    <tag group="AbilType" tag="Extra"/>
    </thing>
  <thing id="cShsFGBlCh" name="Blasting Charge" description="The Shaw sheriff learns to defend herself and make devastating attacks, in the name of defending herself from Dragoons or to enforce the law in Port Shaw. Whenever she makes a charge attack against a foe, she can also fire a single round from her highway pistol at the target during the movement phase of the charge. Both the ranged attack and the charge attack must be against the same target, and she suffers the standard Two-Weapon Fighting penalties while making the attack. The firearm attack does not provoke attacks of opportunity from her intended target, but does provoke normally from any other creature who threatens her." compset="CustomSpec" uniqueness="useronce">
    <usesource source="CampRazorC"/>
    <tag group="SpecSource" tag="cHelpShS"/>
    <tag group="ProductId" tag="FrogGod"/>
    </thing>
  <thing id="cShsFGCoSh" name="Concussive Shot" description="When wielding a blade and pistol and using both to attack your foe, you can cause the thunderous clap from your pistol to daze your target. You fire your pistol as your first attack in a full-attack sequence at a target within reach of your melee weapon. If your attack succeeds, your target must make a Fortitude save (DC 10 + your class level + your Dex modifier) or become dazed until the start of your next turn. The Shaw sheriff must be 8th level to pick this trick shot. This trick can be used as part of a full-attack." compset="CustomSpec" uniqueness="useronce">
    <usesource source="CampRazorC"/>
    <tag group="ProductId" tag="FrogGod"/>
    <tag group="AbilType" tag="Extra"/>
    <tag group="SpecSource" tag="cHelpShS"/>
    <eval phase="PostAttr" priority="1000">~ Calc DC as 10 + class + Dex
field[abDC].value += 10 + #attrmod[aDEX] + field[xTotalLev].value</eval>
    <exprreq message="Shaw Sheriff level 8 required."><![CDATA[#levelcount[FGShaSher] >= 8]]></exprreq>
    </thing>
  <thing id="cShsFGDfBl" name="Deafening Blast" description="The roar of your firearm potentially deafens your foe. You place your highwayman pistol close to the ear of any target within 5&apos; of you and pull the trigger. Rather than attacking for damage, you position your weapon in such a way as to focus the blast on the auditory senses of your foe. The target must make a Fortitude saving throw (DC 10 + your class level + your Dex modifier) or become deafened for 1d3+1 rounds. The Shaw sheriff must be 8th level to select this trick shot. This trick can be used as part of a full-attack." compset="CustomSpec" uniqueness="useronce">
    <usesource source="CampRazorC"/>
    <tag group="StandardDC" tag="aDEX"/>
    <tag group="ProductId" tag="FrogGod"/>
    <tag group="SpecSource" tag="cHelpShS"/>
    <tag group="AbilType" tag="Extra"/>
    <eval phase="PostAttr" priority="1000">~ Calc DC as 10 + class + Dex
field[abDC].value += 10 + #attrmod[aDEX] + field[xTotalLev].value</eval>
    <exprreq message="Shaw Sheriff level 8 required."><![CDATA[#levelcount[FGShaSher] >= 8]]></exprreq>
    </thing>
  <thing id="cShsFGDeAu" name="Deflective Aura" description="When wielding a bladed weapon in one hand and a highwayman pistol in the other, the Shaw sheriff receives a shield bonus to her AC equal to one-half her class level plus 1. She loses this bonus if she&apos;s flat-footed or otherwise denied her Dexterity bonus to AC." compset="CustomSpec" uniqueness="useronce">
    <usesource source="CampRazorC"/>
    <tag group="ProductId" tag="FrogGod"/>
    <tag group="SpecSource" tag="cHelpShS"/>
    <tag group="AbilType" tag="Extra"/>
    <tag group="User" tag="Activation"/>
    <eval phase="PostLevel" priority="10000"><![CDATA[
~ Calc shield bonus one-half her class level plus 1
field[abValue].value += round(field[xTotalLev].value/2,0,-1) + 1
~ set live name
field[livename].text = field[thingname].text & " " & signed(field[abValue].value)

~ if not activated get out now
doneif (field[abilActive].value <> 1)
#applybonus[tACShield,hero.child[ArmorClass],field[abValue].value]]]></eval>
    </thing>
  <thing id="cShsFGDiBl" name="Distracting Blade" description="The Shaw sheriff can weave her sword in a distracting pattern. She makes a Bluff check, opposed by the target&apos;s Sense Motive. If the target fails, the Shaw sheriff adds her class level to the attack roll, which must be made with her pistol. This is a standard action." compset="CustomSpec" uniqueness="useronce">
    <usesource source="CampRazorC"/>
    <tag group="SpecSource" tag="cHelpShS"/>
    <tag group="ProductId" tag="FrogGod"/>
    </thing>
  <thing id="cShsFGDeBl" name="Deflective Blast" description="Whenever the Shaw sheriff is successfully attacked by a melee weapon while wielding a highwayman pistol in one hand and a blade in the other, she may attempt to use her firearm to deflect the blow. After being successfully attacked, the Shaw sheriff may shoot her highwayman pistol at the hand of her attacker. This attack is made against the target&apos;s full AC rather than the touch AC (if that optional rule is in play). If the shot is successful, the Shaw sheriff&apos;s foe must make a Fortitude save with a DC equal to 10 plus the damage dealt; if the save fails, the damage incurred by the Shaw sheriff is reduced by the amount of damage inflicted on the foe.\n\nFor example, if the Shaw sheriff is struck by a greatsword for 17 points of damage, and her shot with her highwayman pistol inflicted 14 points of damage on her foe, the foe must attempt a DC 24 Fortitude save; if the saving throw fails, the Shaw sheriff only suffers 3 points of damage.\n\nThis attack counts as an attack of opportunity in the round." compset="CustomSpec" uniqueness="useronce">
    <usesource source="CampRazorC"/>
    <tag group="ProductId" tag="FrogGod"/>
    <tag group="SpecSource" tag="cHelpShS"/>
    <tag group="AbilType" tag="Extra"/>
    </thing>
  <thing id="cShsFGFeSh" name="Feigned Shot" description="As a special feint action, you cause your foe to believe you&apos;re about to fire your pistol and instead skewer him with your blade. Add your class level to your Bluff check to feint; in addition, if your pistol has any enhancement bonus, you may also add that to your Bluff check." compset="CustomSpec" uniqueness="useronce">
    <usesource source="CampRazorC"/>
    <tag group="ProductId" tag="FrogGod"/>
    <tag group="SpecSource" tag="cHelpShS"/>
    <tag group="AbilType" tag="Extra"/>
    </thing>
  <thing id="cShsFGRico" name="Ricochet" description="You can fire your highwayman pistol at a target that has full cover. You must be able to bank your shot off another object-such as a wall, ceiling, pillar, table, and so forth-to make this attack. Doing so requires a standard action, and precision-based damage (such as from sneak attack) cannot apply. Your target receives a +8 cover bonus to AC and your attack targets his full AC rather than his touch AC. To use ricochet, your target must be within the first two range increments of your gun." compset="CustomSpec" uniqueness="useronce">
    <usesource source="CampRazorC"/>
    <tag group="ProductId" tag="FrogGod"/>
    <tag group="SpecSource" tag="cHelpShS"/>
    <tag group="AbilType" tag="Extra"/>
    </thing>
  <thing id="cShsFGPiSw" name="Pistol and Sword" description="When wielding a one-handed blade (longsword, rapier, etc.) in one hand and one-handed firearm in the other (such as a highwayman pistol), you may treat the firearm as a light weapon for purposes of calculating Two-Weapon Fighting penalties." compset="CustomSpec" uniqueness="useronce">
    <usesource source="CampRazorC"/>
    <tag group="ProductId" tag="FrogGod"/>
    <tag group="SpecSource" tag="cHelpShS"/>
    <tag group="AbilType" tag="Extra"/>
    </thing>
  <thing id="cShsFGSnSh" name="Sneaking Shot" description="If you have successfully hidden your pistol from your target&apos;s view by making a Sleight of Hand check opposed by his Perception, you may fire the weapon as your first attack in a full-attack action. Your target suffers a -4 penalty to his AC against this initial attack and may not take an attack of opportunity against you for firing a ranged weapon in melee combat; if your attack succeeds, you deal damage normally and your target is flat-footed against the rest of your attacks until the end of your turn." compset="CustomSpec" uniqueness="useronce">
    <usesource source="CampRazorC"/>
    <tag group="ProductId" tag="FrogGod"/>
    <tag group="SpecSource" tag="cHelpShS"/>
    <tag group="AbilType" tag="Extra"/>
    </thing>
  <thing id="cHelpPeL" name="Pele Liberator" compset="Class" uniqueness="unique">
    <fieldval field="cHDSides" value="8"/>
    <fieldval field="cAbbr" value="PeL"/>
    <fieldval field="cSkills" value="2"/>
    <arrayval field="cMagLevTot" index="1" value="1"/>
    <arrayval field="cMagLevTot" index="2" value="2"/>
    <arrayval field="cMagLevTot" index="3" value="3"/>
    <arrayval field="cMagLevTot" index="4" value="4"/>
    <usesource source="CampRazorC"/>
    <tag group="ClassSkill" tag="skHeal"/>
    <tag group="ClassSkill" tag="skKnowArca"/>
    <tag group="ClassSkill" tag="skKnowNat"/>
    <tag group="ClassSkill" tag="skKnowRel"/>
    <tag group="ClassSkill" tag="skSenseMot"/>
    <tag group="ClassSkill" tag="skSpellcr"/>
    <tag group="ClassSkill" tag="skSurvival"/>
    <tag group="ProductId" tag="FrogGod"/>
    <tag group="cFort" tag="Poor"/>
    <tag group="cRef" tag="Poor"/>
    <tag group="cWill" tag="Good"/>
    <tag group="ClassSkill" tag="Craft"/>
    <tag group="ClassSkill" tag="skDiplo"/>
    <tag group="Classes" tag="FGPeleLib" name="Pele Liberator"/>
    <tag group="cAttack" tag="Medium"/>
    <tag group="ExtraLev1" tag="Divine"/>
    <bootstrap thing="cPELCleFla">
      <autotag group="ClSpecWhen" tag="2"/>
      </bootstrap>
    <bootstrap thing="cPELDomain">
      <autotag group="ClSpecWhen" tag="5"/>
      </bootstrap>
    <bootstrap thing="cPELImpLib">
      <autotag group="ClSpecWhen" tag="4"/>
      </bootstrap>
    <bootstrap thing="cPELLavBur">
      <autotag group="ClSpecWhen" tag="5"/>
      </bootstrap>
    <bootstrap thing="cPELPelBle">
      <autotag group="ClSpecWhen" tag="1"/>
      </bootstrap>
    <bootstrap thing="cPELSmiInv">
      <autotag group="ClSpecWhen" tag="3"/>
      </bootstrap>
    </thing>
  <thing id="cFGPeleLib" name="Pele Liberator" description="For centuries, Pele and her children lived in harmony with the land of the Razor Coast. Pele provided them the very land they lived upon, bubbling up her lava to form the land and, especially, the islands. She graced the region with warmth, so that plants and trees bearing fruit would be abundant and animals plentiful. She regulated the sea temperature to ensure coral would grow and fish would thrive. While many people viewed volcanic eruptions as the wrath of the gods, the Tulita knew better; volcanic eruptions were a sign that Pele loved them and deemed them worthy of new lands to live upon.\n\nThen the usurpers arrived. Elves intent on dominating the jungle; humans intent on enslaving her people. Like any mother protecting her children, Pele aids her believers. She grants special abilities and protections to her most devout followers, so they may lead her people to victory over the usurpers and restore her land as she intended it - free.\n\n{b}Role:{/b} A PC, especially a Tulita cleric or druid, looking to take on the role of liberator will find this class suitable for the task. A human or other race who worships Pele could be called to this class as well, as long as such a worshipper was sympathetic to the cause of the Tulita. Non-divine spell casters cannot enter this class.{br}{br}{b}Alignment:{/b} The Pele liberator is only available to clerics of Pele, so any character selecting this class must be able to meet the requirements of gaining spells from Pele." compset="ClassLevel" maxlimit="5">
    <usesource source="CampRazorC"/>
    <tag group="ProductId" tag="FrogGod"/>
    <tag group="ClassType" tag="Prestige"/>
    <bootstrap thing="cHelpPeL"></bootstrap>
    <link linkage="helper" thing="cHelpPeL"/>
    <exprreq message="Worship of Pele required."><![CDATA[#hasdeity[deiFGPele] <> 0]]></exprreq>
    <exprreq message="Spellcraft 5 ranks required."><![CDATA[#skillranks[skSpellcr] >= 5]]></exprreq>
    <exprreq message="Ability to cast divine spells required."><![CDATA[tagcount[Hero.Divine] >= 1]]></exprreq>
    <exprreq message="Ability to cast 3rd-level spells required."><![CDATA[herofield[tMaxSpLev].value >= 3]]></exprreq>
    <exprreq message="Liberation domain required."><![CDATA[#hasability[cdLiberat] <> 0]]></exprreq>
    <prereq message="Skill Focus (Knowledge [religion]) or Skill Focus (Knowledge [nature]) required.">
      <validate><![CDATA[
validif (childfound[skKnowNat].tagis[Helper.SkillFocus] <> 0)
validif (childfound[skKnowRel].tagis[Helper.SkillFocus] <> 0)]]></validate>
      </prereq>
    <prereq message="Knowledge (religion) 5 ranks or Knowledge (nature) 5 ranks required.">
      <validate><![CDATA[
validif (#skillranks[skKnowRel] >= 5)
validif (#skillranks[skKnowNat] >= 5)]]></validate>
      </prereq>
    </thing>
  <thing id="cPELPelBle" name="Pele&apos;s Blessing" description="Pele grants the Pele liberator special blessings to aid him in his fight. He gains resistance to fire and acid 5 at first level; this increases to 10 at 2nd level and 15 at 3rd level. If the Pele liberator already has fire or acid resistance from the fire or earth domains, respectively, this bonus stacks with the bonus from the domain. In addition, the Pele liberator adds his class level to his cleric or druid level to determine the effects of his Liberation domain abilities. For example, a cleric 5/ Pele liberator 3 is treated as an 8th level cleric for purposes of determining the effects of his Liberator domain powers." compset="ClSpecial" summary="You gains resistance to fire and acid.">
    <tag group="AbilType" tag="Extra"/>
    <tag group="ProductId" tag="FrogGod"/>
    <eval phase="PostLevel" priority="10100"><![CDATA[
~ if we're not the first copy, just get out now
doneif (tagis[Helper.FirstCopy] <> 1)
~ If we're not shown, just get out now
doneif (tagis[Helper.ShowSpec] = 0)
~ If we've been Disabled, get out now
doneif (tagis[Helper.SpcDisable] <> 0)
~ Calc resistance amount
field[abValue].value += minimum(field[xAllLev].value*5,15)
~ Set summary text
field[abSumm].text = "You gain resistance to fire and acid " & field[abValue].value

~ If we have the Fire Domain add to our fire resistance
If (hero.childlives[dFirRes6] <> 0) Then
  ~ If Fire resistance is active then add to our resistance
  If (hero.childfound[dFirRes6].tagis[Helper.ShowSpec] <> 0) Then
    #value[xDamRsFire] += field[abValue].value
    ~ Set summary text
    field[abSumm].text = "Fire domain resistance improved by " & field[abValue].value
  ~..If no acid resistance not active then apply acid resistance
  Else
    #applyresist[xDamRsFire,field[abValue].value]
  Endif
~..If no fire domain then apply fire resistance
Else
   #applyresist[xDamRsFire,field[abValue].value]
Endif
~ If we have the Earth Domain add to our acid resistance
If (hero.childlives[dEarRes6] <> 0) Then
  ~ If Acid resistance is active then add to our resistance
  If (hero.childfound[dEarRes6].tagis[Helper.ShowSpec] <> 0) Then
    #value[xDamRsAcid] += field[abValue].value
    ~ Set summary text
    field[abSumm].text = "Earth domain resistance improved by " & field[abValue].value
  ~..If no acid resistance not active then apply acid resistance
  Else
    #applyresist[xDamRsAcid,field[abValue].value]
  Endif
~..If no Earth domain then apply acid resistance
Else
   #applyresist[xDamRsAcid,field[abValue].value]
Endif]]></eval>
    <eval phase="First" priority="500" index="2"><![CDATA[
~ If we've been Disabled, get out now
doneif (tagis[Helper.SpcDisable] <> 0)

~ Give level bonus to Liberation domain
hero.childfound[dLibLiber].field[xExtraLev].value += #levelcount[FGPeleLib]
hero.childfound[dLibFree].field[xExtraLev].value += #levelcount[FGPeleLib]]]></eval>
    </thing>
  <thing id="cPELCleFla" name="Cleansing Flames" description="A number of times per day equal to his Wisdom modifier, the Pele liberator can call forth flames that aid his allies and lay low his enemies. He picks a location within 100 feet of his current position and in line of sight, and calls forth a 20&apos; radius blast of fire at that location. Allies in the area of effect are healed for 1d8 points of damage for every 2 caster levels possessed by the Pele liberator, to a maximum of 10d8 at 20th caster level, while enemies suffer the same amount of fire damage. \n\nAt 4th level, the range increases to 200 feet and the radius of the effect increases to 30 feet; in addition, allies in the area of effect are cured of the following conditions: entangled, sickened, paralyzed, petrified, or nauseated. Enemies in the area are nauseated for a number of rounds equal to the Pele liberator&apos;s caster level. A successful Fortitude save (DC 10 + the character&apos;s Pele liberator level + the character&apos;s Wisdom modifier) instead leaves the victim sickened for half the normal duration.\n\n{b}Note:{/b} Use the drop down selection to pick the divine class that is to be used to calculate the caster level for this ability." compset="ClSpecial" summary="Flames heal allies and damage enemies.">
    <fieldval field="usrCandid1" value="component.Class &amp; CasterSrc.Divine"/>
    <tag group="ProductId" tag="FrogGod"/>
    <tag group="User" tag="Tracker"/>
    <tag group="ChargeCalc" tag="AttrOnly"/>
    <tag group="ChargeAttr" tag="aWIS"/>
    <tag group="Usage" tag="Day"/>
    <tag group="StandardDC" tag="aWIS"/>
    <tag group="ChooseSrc1" tag="Hero"/>
    <tag group="AbilType" tag="Super"/>
    <eval phase="PostLevel" priority="10000"><![CDATA[
~ If we're not shown, just get out now
doneif (tagis[Helper.ShowSpec] = 0)
~ If we've been Disabled, get out now
doneif (tagis[Helper.SpcDisable] <> 0)
~ If nothing chosen get out now!
doneif (field[usrChosen1].ischosen <> 1)

~damage equals 1/2 level + d10 max 10d8
field[abValue].value += minimum(round(field[usrChosen1].chosen.field[cCasterLev].value/2,0,-1),10)
~ set live name
field[livename].text = field[thingname].text & " " & field[abValue].value & "d8"]]></eval>
    </thing>
  <thing id="cPELSmiInv" name="Smite Invader" description="Beginning at 3rd level, a Pele liberator can smite invaders of Pele&apos;s lands. A number of times per day equal to her character level, he can call out to Pele to aid him in a battle against those who would do harm to the Tulita. As a swift action, the Pele liberator chooses a target within sight. He adds his Charisma bonus (if any) to attack rolls and his class level to damage rolls made against that target. In addition, while smite invader is in effect, the Pele liberator gains a deflection bonus to AC equal to his Charisma bonus against attacks made by the target of his smite.\n\nThe smite invader remains in effect until the target is dead or the next time the Pele liberator rests and regains his uses of this ability. \n\nAt 5th level, the Pele liberator also adds his Wisdom modifier to attack rolls, and gains her character level to damage rolls instead of just his class level." compset="ClSpecial">
    <tag group="AbilType" tag="Super"/>
    <tag group="ProductId" tag="FrogGod"/>
    <tag group="ChargeCalc" tag="LevelFull"/>
    <tag group="Usage" tag="Day"/>
    <tag group="User" tag="Tracker"/>
    <tag group="Custom" tag="Smite"/>
    <tag group="User" tag="Activation"/>
    <eval phase="PostAttr" priority="1000"><![CDATA[
~ If we're not shown, just get out now
doneif (tagis[Helper.ShowSpec] = 0)
~ If we've been Disabled, get out now
doneif (tagis[Helper.SpcDisable] <> 0)

~ Generate our to-hit
field[abValue2].value += #attrbonus[aCHA]
~ Generate our AC bonuses
field[abValue3].value += #attrbonus[aCHA]

~ If level 5+ damage is character level and adds Wis to dmg
If (field[xAllLev].value >= 5) Then
  field[abValue].value += #totallevelcount[]
  field[abValue2].value += #attrbonus[aWIS]
~..Level 4 or less damage is only from the PrC levels
else
  field[abValue].value += field[xAllLev].value
endif
~ Set the summary text
field[abSumm].text = signed(field[abValue2].value) & " to hit, " & signed(field[abValue].value) & " to damage, " & signed(field[abValue3].value) & " deflection bonus to AC when used."

~ If active then give bonuses
If (field[abilActive].value + field[abilAct2].value <> 0) then
  hero.child[Damage].field[tDamBonus].value += field[abValue].value
  hero.child[Attack].field[Bonus].value += field[abValue2].value
  #applybonus[tACDeflect, hero.child[ArmorClass],  field[abValue3].value]
Endif]]></eval>
    </thing>
  <thing id="cPELImpLib" name="Improved Liberation" description="At 4th level, the Pele liberator&apos;s powers from the Liberation domain improve. He adds his Wisdom bonus to the number of uses of liberation and the range of his freedom&apos;s call ability doubles." compset="ClSpecial" summary="Add Wis to the uses of liberation and 2x range of freedom&apos;s call.">
    <tag group="AbilType" tag="Super"/>
    <tag group="ProductId" tag="FrogGod"/>
    <eval phase="PostAttr" priority="1000">~ If we&apos;re not shown, just get out now
doneif (tagis[Helper.ShowSpec] = 0)
~ If we&apos;ve been Disabled, get out now
doneif (tagis[Helper.SpcDisable] &lt;&gt; 0)
~ Calc bonus to Liberation duration
field[abValue].value += #attrbonus[aWIS]
~ Increase liberation uses
#trkmax[dLibLiber] += field[abValue].value
~ Give note to freedom about doubling the size
#appenddesc[dLibFree,&quot;{b}&quot; &amp; field[name].text &amp; &quot;{/b} The range of your freedom’s call ability doubles.&quot;]</eval>
    </thing>
  <thing id="cPELDomain" name="Domain" description="At 5th level Pele grants special blessings to the Pele liberator. He may select another domain from those available to clerics and druids of Pele.\n\n{b}Note:{/b} Use the drop down selection to pick the divine class that is to gain the extra domain." compset="ClSpecial">
    <tag group="AbilType" tag="Extra"/>
    <tag group="ProductId" tag="FrogGod"/>
    <tag group="fShowWhat" tag="Classes"/>
    <tag group="ChooseSrc1" tag="Hero"/>
    <eval phase="PostLevel" priority="10000"><![CDATA[
~ If we're not shown, just get out now
doneif (tagis[Helper.ShowSpec] = 0)
~ If we've been Disabled, get out now
doneif (tagis[Helper.SpcDisable] <> 0)
~ If nothing chosen get out now!
doneif (field[usrChosen1].ischosen <> 1)
~ Increase Custom Ability count by 1
field[usrChosen1].chosen.field[cGiveSpec].value += 1]]></eval>
    </thing>
  <thing id="cPELLavBur" name="Lava Burst" description="A number of times per day equal to his Wisdom bonus, the Pele liberator can call forth a fiery burst of lava from the ground beneath his enemies. As a standard action that does not provoke an attack of opportunity, he may target any creature within 20 feet per caster level to whom he has line of sight. If the creature fails a Reflex saving throw (DC 10 plus 1/2 character level plus Wisdom modifier), it is caught in the jet of lava and suffers 1d10 damage per caster level on the first round, half that amount on the 2nd round, and half again on the 3rd round. If the initial saving throw is failed, the target receives no save in the 2nd and 3rd rounds. If the initial saving throw was successful, the target takes half damage in the first round, half again in the second round, and no damage in the 3rd round.\n\n{b}Note:{/b} Use the drop down selection to pick the divine class that is to be used to calculate the caster level for this ability." compset="ClSpecial" summary="Reflex save or target takes fire damage.">
    <fieldval field="usrCandid1" value="component.Class &amp; CasterSrc.Divine"/>
    <tag group="AbilType" tag="Super"/>
    <tag group="StandardDC" tag="aWIS"/>
    <tag group="User" tag="Tracker"/>
    <tag group="ChargeCalc" tag="AttrOnly"/>
    <tag group="ChargeAttr" tag="aWIS"/>
    <tag group="Usage" tag="Day"/>
    <tag group="ProductId" tag="FrogGod"/>
    <tag group="ChooseSrc1" tag="Hero"/>
    <eval phase="PostLevel" priority="10000"><![CDATA[
~ If we're not shown, just get out now
doneif (tagis[Helper.ShowSpec] = 0)
~ If we've been Disabled, get out now
doneif (tagis[Helper.SpcDisable] <> 0)
~ If nothing chosen get out now!
doneif (field[usrChosen1].ischosen <> 1)

~ 20 feet per caster level
field[abValue].value += field[usrChosen1].chosen.field[cCasterLev].value*20
~ damage equals 1d10 per caster level
field[abValue2].value += field[usrChosen1].chosen.field[cCasterLev].value

~ set live name
field[livename].text = field[thingname].text & " " & field[abValue].value & "ft, " & field[abValue2].value & "d10"]]></eval>
    </thing>
  <thing id="cHelpPak" name="Pakeha" compset="Class" uniqueness="unique">
    <fieldval field="cHDSides" value="10"/>
    <fieldval field="cAbbr" value="Pak"/>
    <fieldval field="cSkills" value="4"/>
    <usesource source="CampRazorC"/>
    <tag group="Classes" tag="FGPakeha" name="Pakeha"/>
    <tag group="cAttack" tag="Medium"/>
    <tag group="cFort" tag="Good"/>
    <tag group="ClassSkill" tag="skAcrobat"/>
    <tag group="ClassSkill" tag="skClimb"/>
    <tag group="ClassSkill" tag="skEscape"/>
    <tag group="ClassSkill" tag="skHeal"/>
    <tag group="ClassSkill" tag="skKnowNat"/>
    <tag group="ClassSkill" tag="skPercep"/>
    <tag group="ClassSkill" tag="skPerfOrat"/>
    <tag group="ClassSkill" tag="skSurvival"/>
    <tag group="ClassSkill" tag="skSwim"/>
    <tag group="ProductId" tag="FrogGod"/>
    <tag group="cRef" tag="Poor"/>
    <tag group="cWill" tag="Good"/>
    <bootstrap thing="cPAKBleDol">
      <autotag group="ClSpecWhen" tag="5"/>
      </bootstrap>
    <bootstrap thing="cPAKBleTur">
      <autotag group="ClSpecWhen" tag="1"/>
      </bootstrap>
    <bootstrap thing="cPAKBleWha">
      <autotag group="ClSpecWhen" tag="3"/>
      </bootstrap>
    <bootstrap thing="cPAKBonLa">
      <autotag group="ClSpecWhen" tag="1"/>
      </bootstrap>
    <bootstrap thing="cPAKChiTal">
      <autotag group="ClSpecWhen" tag="2"/>
      </bootstrap>
    <bootstrap thing="cPAKHeaTul">
      <autotag group="ClSpecWhen" tag="4"/>
      </bootstrap>
    <bootstrap thing="cPAKImpMov">
      <autotag group="ClSpecWhen" tag="3"/>
      </bootstrap>
    <bootstrap thing="cBbnRage">
      <autotag group="ClSpecWhen" tag="4"/>
      </bootstrap>
    </thing>
  <thing id="cFGPakeha" name="Pakeha" description="Pakeha is a Tulita word used to represent those of foreign ancestry who, for whatever reason, abandon the ways of their former culture to live among the Tulita. Many runaway seamen and escaped convicts - not to mention members of the Cartographers and Explorers Guild - settle among Tulita communities by choice. While not a requirement, most pakeha acquire a moko or facial tattoo to prove their devotion to their adopted people.\n\n{b}Role:{/b} While any character could opt to enter this class, it provides the most benefit to a character with at least a few levels of barbarian. Fighters and rangers also gain useful abilities. Spellcasters gain the least from this class, since it does not progress their spellcasting abilities.\n\n{b}Alignment:{/b} While a pakeha can be of any alignment, most are going to favor good or neutral alignments, simply because of the teachings of the Tulita. In addition, such a character is less likely to be of lawful alignment, with an equal chance of chaotic and neutral alignments along the Law-Chaos axis.\n\n{b}Special:{/b} Must undergo special rites from a Tulita shaman to become adopted by a tribe." compset="ClassLevel" maxlimit="5">
    <usesource source="CampRazorC"/>
    <tag group="ClassType" tag="Prestige"/>
    <tag group="ProductId" tag="FrogGod"/>
    <bootstrap thing="cHelpPak"></bootstrap>
    <link linkage="helper" thing="cHelpPak"/>
    <exprreq message="Survival  5+ ranks required."><![CDATA[#skillranks[skSurvival] >= 5]]></exprreq>
    <exprreq message="Endurance feat required."><![CDATA[#hasfeat[fEndure] <> 0]]></exprreq>
    <exprreq message="Great Fortitude feat required"><![CDATA[#hasfeat[fGreatFort] <> 0]]></exprreq>
    <exprreq message="Non-Tulita required.">hero.tagcount[HasAbility.rcFGTul?] = 0</exprreq>
    </thing>
  <thing id="cPAKBleTur" name="Blessing of Turtle" description="Turtle teaches his followers to be true to one&apos;s tribe, above all else. When performing the aid another action, the pakeha grants his partner a +4 bonus, rather than the normal +2 bonus. In addition, when he flanks a target with a Tulita or another member of this class, each gains a +3 to attack rolls rather than the normal +2." compset="ClSpecial" summary="+4 to aid another and +3 to hit when flanking.">
    <tag group="AbilType" tag="Super"/>
    <tag group="ProductId" tag="FrogGod"/>
    </thing>
  <thing id="cPAKBonLa" name="Bonus Language" description="The pakeha learns to speak-but not read or write-the Tulita language. His proficiency in the language is weak, and he has a difficult time expressing complex thoughts. To do so requires a DC 15 Intelligence check. As he advances in the class, the DC reduces by 2 each level until the check is removed upon gaining 5th level." compset="ClSpecial" summary="You learn to speak - but not read or write - the Tulita language.">
    <tag group="AbilType" tag="Extra"/>
    <tag group="ProductId" tag="FrogGod"/>
    <bootstrap thing="lFGTulita"></bootstrap>
    </thing>
  <thing id="cPAKChiTal" name="Chieftain&apos;s Tales" description="His ongoing time spent with the natives of the Razor Coast has taught the pakeha the power of the spoken word. Beginning at 2nd level, he can recite Tulita tales that inspire and encourage the natives of the Razor Coast. All Tulita and pakehas within 60 feet who can hear the pakeha (including the pakeha himself) gain a +2 morale bonus on attack and damage rolls. The bonus lasts for as long as the paheka speaks plus 1 round. Reciting an inspirational story in this manner requires a standard action to initiate and a move action each round to maintain the ability." compset="ClSpecial" summary="+2 morale bonus to hit and dmg for Tulita and pakehas within 60ft.">
    <tag group="AbilType" tag="Super"/>
    <tag group="ProductId" tag="FrogGod"/>
    </thing>
  <thing id="cPAKBleWha" name="Blessing of Whale" description="Whale teaches his followers to be true to the world around them. Beginning at 3rd level, the pakeha gains a circumstance bonus on Perception and Sense Motive checks equal to his class level. In addition, he can move through any sort of undergrowth (such as natural thorns, briars, overgrown areas, and similar terrain) at his normal speed without taking damage or suffering any other impairment. Thorns, briars, and overgrown areas that have been magically manipulated to impede motion, however, still affect him." compset="ClSpecial" summary="Move through any sort of undergrowth at normal speed without taking dmg.">
    <tag group="AbilType" tag="Super"/>
    <tag group="ProductId" tag="FrogGod"/>
    <eval phase="PostLevel" priority="10000"><![CDATA[
~ If we're not shown, just get out now
doneif (tagis[Helper.ShowSpec] <> 1)
~ if we've been disabled, get out now
doneif (tagis[Helper.SpcDisable] <> 0)

field[abValue].value += field[xAllLev].value
~ Give bonus to skills
#skillbonus[skPercep] += field[abValue].value
#skillbonus[skSenseMot] += field[abValue].value]]></eval>
    </thing>
  <thing id="cPAKImpMov" name="Increased Movement" description="Beginning at 3rd level, the pakeha learns to move faster than normal for a member of his race. His base speed increases by 10 feet, as long as he does wear heavy armor or carry a heavy load. This bonus stacks with other bonuses to the character&apos;s speed, such as a barbarian&apos;s fast movement ability." compset="ClSpecial" summary="Your base speed increases by 10 feet if do not have a heavy load.">
    <tag group="AbilType" tag="Extra"/>
    <tag group="ProductId" tag="FrogGod"/>
    <eval phase="Final"><![CDATA[
~ If we're not shown, just get out now
doneif (tagis[Helper.ShowSpec] = 0)
~ If we're disabled, do nothing
doneif (tagis[Helper.SpcDisable] <> 0)

~ We need to assign our FastMove tag, because the Fleet of Foot 
~ class ability needs to check for it soon after
perform hero.assign[Hero.FastMove]

field[abValue].value += 10

field[livename].text = field[thingname].text & " +" & field[abValue].value
field[abSumm].text = "+" & field[abValue].value & " feet to speed, unless heavily loaded."

~ Check for a Heavy load if so disable us and get out now!
If (hero.tagis[Encumbered.Heavy] <> 0) then
  perform assign[Helper.SpcDisable]
  done
Endif

~ We passed, so add to our base speed.
hero.child[Speed].field[tSpeed].value += field[abValue].value]]></eval>
    </thing>
  <thing id="cPAKHeaTul" name="Heart of a Tulita" description="Civilization slips further from the grasp of the pakeha. Beginning at 4th level, he gains the rage ability, as a barbarian. He may rage for a number of rounds per day equal to his Constitution modifier plus his class level. This class feature otherwise functions exactly like the barbarian&apos;s class feature. He does not gain any rage powers or other benefits of the barbarian class. If the character already had rage from another source (such as levels of barbarian), instead add his class level to the number of rounds per day he can use his rage." compset="ClSpecial">
    <tag group="AbilType" tag="Extra"/>
    <tag group="ProductId" tag="FrogGod"/>
    <eval phase="PostLevel" priority="10000"><![CDATA[
~ If don't have the barbarian class get out now
doneif (hero.tagis[Classes.Barbarian] <> 1)

~ Give penalty to Wis based skills
foreach pick in hero from BaseClSpec where "thingid.cBbnRage"
  ~ if we are the rage from teh Pakeha class disable it
  If (eachpick.tagis[SpecSource.cHelpPak] <> 0) then
     perform eachpick.assign[Helper.SpcDisable]
  ~..Else we need to increase rounds per day by class level
  ElseIf (tagis[Helper.SpcDisable] + tagis[Helper.ShowSpec] = 0) then
     eachpick.field[trkMax].value += field[xAllLev].value
  Endif
nexteach]]></eval>
    </thing>
  <thing id="cPAKBleDol" name="Blessing of Dolphin" description="Dolphin teaches his followers to be true to oneself, that without being true to your values you cannot be true to your tribe or to the world around you. The pakeha gains a +4 bonus to saving throws against mind affecting effects. Should he ever fail a saving throw against a mind affecting effect, he can attempt a second save at the start of his next turn, even if the spell of effect normally would not allow such an attempt. In addition, he gains immunity to all natural poisons." compset="ClSpecial" summary="2nd save at the start of your next turn against a failed mind affecting effect.">
    <tag group="AbilType" tag="Super"/>
    <tag group="ProductId" tag="FrogGod"/>
    <bootstrap thing="xImmPois">
      <containerreq phase="First" priority="500"><![CDATA[count:Classes.FGPakeha >= 5]]></containerreq>
      </bootstrap>
    <eval phase="PostLevel" priority="10000"><![CDATA[
~ If we're not shown, just get out now
doneif (tagis[Helper.ShowSpec] = 0)
~ If we've been Disabled, get out now
doneif (tagis[Helper.SpcDisable] <> 0)

#situational[hero.child[svAll],"+4 bonus against mind affecting effects",field[name].text]]]></eval>
    </thing>
  <thing id="cHelpGCH" name="Grand Captain of the High Seas" compset="Class" uniqueness="unique">
    <fieldval field="cHDSides" value="8"/>
    <fieldval field="cAbbr" value="GCH"/>
    <fieldval field="cSkills" value="4"/>
    <fieldval field="cSpecSing" value="Commanding Aura"/>
    <fieldval field="shortname" value="Grand Captain"/>
    <arrayval field="cCustTot" index="2" value="3"/>
    <arrayval field="cCustTot" index="3" value="4"/>
    <arrayval field="cCustTot" index="4" value="5"/>
    <arrayval field="cCustTot" index="0" value="1"/>
    <arrayval field="cCustTot" index="1" value="2"/>
    <usesource source="CampRazorC"/>
    <tag group="ClassSkill" tag="Craft"/>
    <tag group="ClassSkill" tag="Profession"/>
    <tag group="ClassSkill" tag="skBluff"/>
    <tag group="ClassSkill" tag="skClimb"/>
    <tag group="ClassSkill" tag="skDiplo"/>
    <tag group="ClassSkill" tag="skIntim"/>
    <tag group="ClassSkill" tag="skKnowEng"/>
    <tag group="ClassSkill" tag="skKnowGeog"/>
    <tag group="ClassSkill" tag="skPercep"/>
    <tag group="ClassSkill" tag="skSenseMot"/>
    <tag group="ClassSkill" tag="skSurvival"/>
    <tag group="ClassSkill" tag="skSwim"/>
    <tag group="cRef" tag="Poor"/>
    <tag group="cWill" tag="Good"/>
    <tag group="Classes" tag="FGGranCHS" name="Grand Captain of the High Seas"/>
    <tag group="cAttack" tag="Medium"/>
    <tag group="ProductId" tag="FrogGod"/>
    <tag group="cFort" tag="Poor"/>
    <tag group="ClassSkill" tag="skAcrobat"/>
    <bootstrap thing="cGCHOldSal">
      <autotag group="ClSpecWhen" tag="1"/>
      </bootstrap>
    <bootstrap thing="cGCHRenLea">
      <autotag group="ClSpecWhen" tag="2"/>
      </bootstrap>
    <bootstrap thing="cGCHTruMat">
      <autotag group="ClSpecWhen" tag="1"/>
      </bootstrap>
    <bootstrap thing="cGCHGetMo">
      <autotag group="ClSpecWhen" tag="4"/>
      </bootstrap>
    <bootstrap thing="cGCHComAur">
      <autotag group="ClSpecWhen" tag="1"/>
      </bootstrap>
    <bootstrap thing="cGCHComAur">
      <autotag group="ClSpecWhen" tag="3"/>
      </bootstrap>
    <bootstrap thing="cGCHComAur">
      <autotag group="ClSpecWhen" tag="5"/>
      </bootstrap>
    <bootstrap thing="cGCHLoyCre">
      <autotag group="ClSpecWhen" tag="2"/>
      </bootstrap>
    </thing>
  <thing id="cFGGranCHS" name="Grand Captain of the High Seas" description="Many have procured the title of captain and set off on the high seas. Those who do so take great risks in the name of adventure. Some never return to port, lost at sea forever - raging storms, brutal sea monsters, and ruthless pirates have all claimed more than their fair share of ships over the centuries. Of those who survive, even thrive, on the high seas, only the best of the best garner the title of Grand Captain of the High Seas.\n\n{b}Role:{/b} A grand captain of the high seas is a born leader who opts to ply her skill aboard a ship on the roiling waves of the oceans. Any character interested in such a leadership role can become a grand captain. Those entering the class tend to be rogues and bards more than other classes, due to the synergy with Charisma abilities and an abundance of skill points. The least likely to enter are primary casters such as clerics, druids, and wizards due to the lack of spell casting progression.\n\n{b}Alignment:{/b} The grand captain of the high seas is open to characters of any alignment, though most tend to stay away from chaotic alignments simply due to the nature of command structure aboard a ship.\n\n{b}Note:{/b} Both the grand captain of the high seas and the old salt prestige classes use concepts from the {b}Frog God Games{/b} book {b}{i}Fire as She Bears{/b}{/i}. If you&apos;re using that book to resolve sailing actions - and really, you should be - everything here makes sense. If, for whatever reason, you&apos;ve opted not to use that product, you can easily ignore the class features of these two prestige classes; there should still be enough other material in each class to make the class worthwhile for your PC if that&apos;s a niche you wish to explore." compset="ClassLevel" maxlimit="5">
    <usesource source="CampRazorC"/>
    <tag group="ProductId" tag="FrogGod"/>
    <tag group="ClassType" tag="Prestige"/>
    <bootstrap thing="cHelpGCH"></bootstrap>
    <link linkage="helper" thing="cHelpGCH"/>
    <exprreq message="Climb 4 ranks required."><![CDATA[#skillranks[skClimb] >= 4]]></exprreq>
    <exprreq message="Knowledge (geography) 4 ranks required."><![CDATA[#skillranks[skKnowGeog] >= 4]]></exprreq>
    <exprreq message="Profession (sailor) 7 ranks required."><![CDATA[#skillranks[skProfSail] >= 7]]></exprreq>
    <exprreq message="Swim 5 ranks required."><![CDATA[#skillranks[skSwim] >= 5]]></exprreq>
    <exprreq message="Leadership feat required."><![CDATA[#hasfeat[fLeader] <> 0]]></exprreq>
    <exprreq message="Seaworthy feat required."><![CDATA[#hasfeat[fFGSeawort] <> 0]]></exprreq>
    <exprreq message="Skill Focus (Profession [sailor]) feat required."><![CDATA[hero.childfound[skProfSail].tagis[Helper.SkillFocus] <> 0]]></exprreq>
    </thing>
  <thing id="cFGMasArti" name="Master of Artillery" description="The captain grants her bonus as a morale bonus on all ranged attacks made with siege weapons and artillery, such as cannons, ballistae, and so forth." compset="CustomSpec" uniqueness="useronce">
    <usesource source="CampRazorC"/>
    <tag group="AbilType" tag="Super"/>
    <tag group="ProductId" tag="FrogGod"/>
    <tag group="SpecSource" tag="cHelpGCH"/>
    </thing>
  <thing id="cFGMasBow" name="Master of the Bow" description="The captain&apos;s bonus applies as a morale bonus to all ranged attacks made by individual ranged weapons such as longbows, slings, and crossbows." compset="CustomSpec" uniqueness="useronce">
    <usesource source="CampRazorC"/>
    <tag group="AbilType" tag="Super"/>
    <tag group="ProductId" tag="FrogGod"/>
    <tag group="SpecSource" tag="cHelpGCH"/>
    </thing>
  <thing id="cFGMastDef" name="Master of Defense" description="The captain&apos;s bonus applies to all crewmembers&apos; armor class as a dodge bonus." compset="CustomSpec" uniqueness="useronce">
    <usesource source="CampRazorC"/>
    <tag group="AbilType" tag="Super"/>
    <tag group="ProductId" tag="FrogGod"/>
    <tag group="SpecSource" tag="cHelpGCH"/>
    </thing>
  <thing id="cFGMastEva" name="Master of Evading" description="The captain&apos;s bonus applies to all crewmembers&apos; armor class as a dodge bonus." compset="CustomSpec" uniqueness="useronce">
    <usesource source="CampRazorC"/>
    <tag group="AbilType" tag="Super"/>
    <tag group="ProductId" tag="FrogGod"/>
    <tag group="SpecSource" tag="cHelpGCH"/>
    </thing>
  <thing id="cFGMastPre" name="Master of Preparedness" description="The captain&apos;s bonus applies to all crewmembers&apos; armor class as a dodge bonus." compset="CustomSpec" uniqueness="useronce">
    <usesource source="CampRazorC"/>
    <tag group="AbilType" tag="Super"/>
    <tag group="ProductId" tag="FrogGod"/>
    <tag group="SpecSource" tag="cHelpGCH"/>
    </thing>
  <thing id="cFGMastSai" name="Master of Sail" description="The captain&apos;s bonus applies to all crewmembers&apos; armor class as a dodge bonus." compset="CustomSpec" uniqueness="useronce">
    <usesource source="CampRazorC"/>
    <tag group="AbilType" tag="Super"/>
    <tag group="ProductId" tag="FrogGod"/>
    <tag group="SpecSource" tag="cHelpGCH"/>
    </thing>
  <thing id="cFGMastSpe" name="Master of Spells" description="The captain&apos;s bonus applies to all Knowledge (arcana), Spellcraft, and Use Magic Device checks; in addition, the bonus applies to all caster level checks such as those made to overcome spell resistance." compset="CustomSpec" uniqueness="useronce">
    <usesource source="CampRazorC"/>
    <tag group="AbilType" tag="Super"/>
    <tag group="ProductId" tag="FrogGod"/>
    <tag group="SpecSource" tag="cHelpGCH"/>
    </thing>
  <thing id="cFGMastStr" name="Master of the Strong Mind" description="While this aura is active, all crewmembers may make two saving throw checks against all mind affecting spells, and take the better of the two checks." compset="CustomSpec" uniqueness="useronce">
    <usesource source="CampRazorC"/>
    <tag group="AbilType" tag="Super"/>
    <tag group="ProductId" tag="FrogGod"/>
    <tag group="SpecSource" tag="cHelpGCH"/>
    </thing>
  <thing id="cFGMasSwor" name="Master of the Sword" description="The grand captain of the high seas grants her commanding aura bonus as a morale bonus to all melee attacks made by crewmembers. This bonus applies regardless of the type of melee weapon wielded by the crewmember." compset="CustomSpec" uniqueness="useronce">
    <usesource source="CampRazorC"/>
    <tag group="AbilType" tag="Super"/>
    <tag group="ProductId" tag="FrogGod"/>
    <tag group="SpecSource" tag="cHelpGCH"/>
    </thing>
  <thing id="cFGMasWatc" name="Master of Watch" description="All crewmembers gain a bonus to Perception and Sense Motive equal to the captain&apos;s commanding aura bonus.." compset="CustomSpec" uniqueness="useronce">
    <usesource source="CampRazorC"/>
    <tag group="AbilType" tag="Super"/>
    <tag group="ProductId" tag="FrogGod"/>
    <tag group="SpecSource" tag="cHelpGCH"/>
    </thing>
  <thing id="cGCHOldSal" name="Old Salt" description="The grand captain of the high seas is a master of her ship. As long as she is onboard her own ship, she gains a circumstance bonus to all Profession (sailor) checks equal to her class level." compset="ClSpecial" summary="Onboard your ship gain a circumstance bonus to all Profession (sailor) checks.">
    <fieldval field="actName" value="Onboard your ship"/>
    <tag group="ProductId" tag="FrogGod"/>
    <tag group="User" tag="Activation"/>
    <tag group="AbilType" tag="Extra"/>
    <eval phase="PostLevel" priority="10000"><![CDATA[
~ If we're not shown, just get out now
doneif (tagis[Helper.ShowSpec] <> 1)
~ if we've been disabled, get out now
doneif (tagis[Helper.SpcDisable] <> 0)

field[abValue].value += field[xAllLev].value

~ If not activated get out now
doneif (field[abilActive].value <> 1)
~ Give a bonus to Profession sailor
#skillbonus[skProfSail] += field[abValue].value]]></eval>
    </thing>
  <thing id="cGCHTruMat" name="Trustworthy Mate" description="If the grand captain&apos;s cohort serves as her First Mate, the cohort&apos;s level can be as high as one level less than the captain&apos;s level, rather than the normal two levels. If the mate ever gains enough XP to gain a level such that his level would be equal to the captain&apos;s, he remains at his current level, one XP away from gaining his next level." compset="ClSpecial" summary="Your cohort&apos;s level can be 1 level less rather than the normal 2 levels.">
    <tag group="AbilType" tag="Extra"/>
    <tag group="ProductId" tag="FrogGod"/>
    <eval phase="PostLevel" priority="10000"><![CDATA[
~ If we're not shown, just get out now
doneif (tagis[Helper.ShowSpec] <> 1)
~if we've been disabled, get out now
doneif (tagis[Helper.SpcDisable] <> 0)
~ If no leadership get out now
doneif (hero.childlives[fLeader] <> 1)

#appenddesc[fLeader,"{B}Trustworthy Mate:{/b} If the grand captain's cohort serves as her First Mate, the cohort's level can be as high as one level less than the captain's level, rather than the normal two levels."]]]></eval>
    </thing>
  <thing id="cGCHRenLea" name="Renowned Leader" description="The grand captain of the high seas gains a bonus to her Leadership score equal to her class level." compset="ClSpecial" summary="Gains a bonus to your Leadership score equal to your class level.">
    <tag group="AbilType" tag="Extra"/>
    <tag group="ProductId" tag="FrogGod"/>
    <eval phase="PostLevel" priority="10000"><![CDATA[
~ If we're not shown, just get out now
doneif (tagis[Helper.ShowSpec] <> 1)
~ if we've been disabled, get out now
doneif (tagis[Helper.SpcDisable] <> 0)

field[abValue].value += field[xAllLev].value
~ Give a bonus to Leadership score
#value[fLeader] += field[abValue].value]]></eval>
    </thing>
  <thing id="cGCHLoyCre" name="Loyal Crew" description="Serving under the grand captain of the high seas is viewed as a privilege among sailors. Starting at 2nd level, she adds double her Charisma bonus to the ship&apos;s Loyalty score rather than simply adding her Charisma bonus." compset="ClSpecial" summary="Add double your Charisma bonus to the ship&apos;s Loyalty score.">
    <tag group="AbilType" tag="Extra"/>
    <tag group="ProductId" tag="FrogGod"/>
    </thing>
  <thing id="cGCHGetMo" name="Getting the Most" description="A grand captain of the high seas is an expert at getting the most out of her ship. Starting at 4th level, her ship gains several benefits. Its carrying capacity as calculated as though its Strength were 4 points higher; this bonus has no effect on the ship&apos;s actual Strength score, but rather the captain is adroit at arranging cargo and supplies in such a way as to take best advantage of the ship&apos;s existing construction. Second, the ship gains a +2 bonus to speed as long as it maintains some means of propulsion: active sails, running engine, oar crew, and so forth. Finally, the ship&apos;s maneuverability rating is improved by one step.\n\nTo gain these benefits, the captain must be aboard the ship the majority of the time. If her ship is ever sunk or lost, she may acquire a new ship. She must spend a minimum of 20 hours per day aboard this new ship for one month before gaining these benefits again." compset="ClSpecial" summary="Your ship gains +4 Str to carry and +2 bonus to speed.">
    <tag group="AbilType" tag="Extra"/>
    <tag group="ProductId" tag="FrogGod"/>
    </thing>
  <thing id="cGCHComAur" name="Commanding Aura" description="At first level, a grand captain of the high seas gains a commanding aura that she can project to affect all her crew. She selects one of the options listed below. At each additional class level, she may select a new aura; however, she can only project one commanding aura at a time. At first level the bonus granted by the aura to her crew is +1; the bonus increases to +2 at 3rd level and +3 at 5th level. Activating her aura requires a move action, and if she chooses she can deactivate it as a swift action. All her crewmembers aboard her own ship are affected by her aura. At 3rd level, her aura also affects her crewmembers who are off her ship but within 60 feet of it. At 5th level, her aura extends to all her crewmembers within 120 feet of her ship." compset="ClSpecial" summary="Project an aura that affects your crew.">
    <tag group="AbilType" tag="Super"/>
    <tag group="ProductId" tag="FrogGod"/>
    <eval phase="PostLevel" priority="10000"><![CDATA[
~Set the list name
field[listname].text = field[thingname].text & " +" & field[xIndex].value

~ If we're not shown, just get out now
doneif (tagis[Helper.ShowSpec] <> 1)
~if we've been disabled, get out now
doneif (tagis[Helper.SpcDisable] <> 0)

field[abValue].value += field[xCount].value
field[livename].text = field[thingname].text & " " & signed(field[abValue].value)]]></eval>
    </thing>
  <thing id="fcFGDajBrG" name="Dajobasu Barbarian" description="Add +1/2 round to the duration of the intimidating glare rage power or add +1/3 to the DC to resist the terrifying howl rage power. The player makes this choice during character creation. Thereafter, the class option cannot be changed." compset="FavClass" summary="+1/2 round to the duration of the intimidating glare rage power">
    <fieldval field="fcName" value="+½ duration intim. glare"/>
    <usesource source="CampRazorC"/>
    <tag group="FavClass" tag="cBarbarian" name="Barbarian" abbrev="Barbarian"/>
    <tag group="IsRace" tag="rFGDajobas"/>
    <tag group="ProductId" tag="FrogGod"/>
    <eval phase="PostAttr" priority="10000"><![CDATA[
          field[abValue].value += round(field[fcCount].value/2,0,-1)
    
    if (field[abValue].value > 1) then
      hero.childfound[cBbnIntGla].field[livename].text = "Intimidating Glare (+" & field[abValue].value & " rounds)"
    elseif (field[abValue].value = 1) then
      hero.childfound[cBbnIntGla].field[livename].text = "Intimidating Glare (+" & field[abValue].value & " round)"
    endif]]></eval>
    </thing>
  <thing id="fcFGDajBrH" name="Dajobasu Barbarian" description="Add +1/2 round to the duration of the intimidating glare rage power or add +1/3 to the DC to resist the terrifying howl rage power. The player makes this choice during character creation. Thereafter, the class option cannot be changed." compset="FavClass" summary="+1/3  to the DC to resist the terrifying howl rage power">
    <fieldval field="fcName" value="+1/3 DC to terrifying howl"/>
    <usesource source="CampRazorC"/>
    <tag group="FavClass" tag="cBarbarian" name="Barbarian" abbrev="Barbarian"/>
    <tag group="IsRace" tag="rFGDajobas"/>
    <tag group="ProductId" tag="FrogGod"/>
    <eval phase="PostAttr" priority="10000">field[abValue].value += round(field[fcCount].value/3,0,-1)
    
    hero.childfound[cBbnTerrHo].field[abDC].value += field[abValue].value</eval>
    </thing>
  <thing id="fcFGDajRng" name="Dajobasu Ranger" description="Add a +1/2 bonus on wild empathy checks to influence animals and magical beasts that live in marshy terrain or belong to the aquatic subtype." compset="FavClass">
    <fieldval field="fcName" value="+½ Wild Empathy vs. Swamp or Aquatic"/>
    <usesource source="CampRazorC"/>
    <tag group="Helper" tag="ShowSpec"/>
    <tag group="FavClass" tag="cRanger"/>
    <tag group="IsRace" tag="rFGDajobas"/>
    <tag group="ProductId" tag="FrogGod"/>
    <eval phase="PostAttr" priority="10000"><![CDATA[
          field[abValue].value += round(field[fcCount].value/2,0,-1)
          
          ~don't show us until our bonus is positive
          if (field[abValue].value = 0) then
            perform assign[Helper.SpecUp]
            endif
          
          field[livename].text = "+" & field[abValue].value & " Wild Empathy vs. creatures that live in marshy terrain or belong to the aquatic subtype."]]></eval>
    </thing>
  <thing id="fcFGDajWit" name="Dajobasu Witch" description="Add a +1/2 bonus on Stealth checks and Swim checks made by the witch&apos;s familiar." compset="FavClass">
    <fieldval field="fcName" value="+½ Stealth &amp; Swim for familiar"/>
    <usesource source="CampRazorC"/>
    <tag group="IsRace" tag="rFGDajobas"/>
    <tag group="FavClass" tag="cWitch"/>
    <tag group="ProductId" tag="FrogGod"/>
    <eval phase="PostAttr" priority="10000"><![CDATA[field[abValue].value += round(field[fcCount].value/2,0,-1)
          
     doneif (field[abValue].value = 0)
          
    ~ If there's no familiar, there's nothing we can do
    doneif (hero.hasminion[ArcFamil] = 0)
          
    hero.minion[ArcFamil].child[skStealth].field[Bonus].value += field[abValue].value
    hero.minion[ArcFamil].child[skSwim].field[Bonus].value += field[abValue].value]]></eval>
    </thing>
  <thing id="fcFGMehBrd" name="Menehune Bard" description="Add +1 per every six class levels to the number of people the bard can affect with the {i}fascinate{/i} bardic performance." compset="FavClass">
    <fieldval field="fcName" value="+1/6 affected by fascinate"/>
    <usesource source="CampRazorC"/>
    <tag group="FavClass" tag="cBard"/>
    <tag group="IsRace" tag="rFGMenehun"/>
    <tag group="Helper" tag="ShowSpec"/>
    <tag group="ProductId" tag="FrogGod"/>
    <eval phase="First" priority="10000">field[abValue].value += round(field[fcCount].value/6,0,-1)
    
    hero.childfound[cBrdPFas].field[abValue].value += field[abValue].value</eval>
    </thing>
  <thing id="fcFGMehDrA" name="Menehune Druid" description="The druid gains energy resistance 1 against acid, cold, electricity, or fire. Each time the druid selects this reward, increase her resistance to one of these energy types by +1 (maximum 10 for any one type)." compset="FavClass" uniqueness="unique">
    <fieldval field="fcName" value="+1 Acid Resistance"/>
    <usesource source="CampRazorC"/>
    <tag group="IsRace" tag="rFGMenehun"/>
    <tag group="FavClass" tag="cDruid" name="Druid" abbrev="Druid"/>
    <tag group="ProductId" tag="FrogGod"/>
    <bootstrap thing="xDamRsAcid"></bootstrap>
    <evalrule phase="PostAttr" priority="10000" message="This option may only be selected 10 times for each energy type." summary="This option may only be selected 10 times for each energy type."><![CDATA[
          field[abValue].value += field[fcCount].value
          
          if (field[fcCount].value <= 10) then
            @valid = 1
            endif
          
          #applydr[xDamRsAcid, field[abValue].value]]]></evalrule>
    </thing>
  <thing id="fcFGMehDrE" name="Menehune Druid" description="The druid gains energy resistance 1 against acid, cold, electricity, or fire. Each time the druid selects this reward, increase her resistance to one of these energy types by +1 (maximum 10 for any one type)." compset="FavClass" uniqueness="unique">
    <fieldval field="fcName" value="+1 Elecrticity Resistance"/>
    <usesource source="CampRazorC"/>
    <tag group="IsRace" tag="rFGMenehun"/>
    <tag group="FavClass" tag="cDruid" name="Druid" abbrev="Druid"/>
    <tag group="ProductId" tag="FrogGod"/>
    <bootstrap thing="xDamRsElec"></bootstrap>
    <evalrule phase="PostAttr" priority="10000" message="This option may only be selected 10 times for each energy type." summary="This option may only be selected 10 times for each energy type."><![CDATA[
          field[abValue].value += field[fcCount].value
          
          if (field[fcCount].value <= 10) then
            @valid = 1
            endif
          
          #applydr[xDamRsElec, field[abValue].value]]]></evalrule>
    </thing>
  <thing id="fcFGMehDrF" name="Menehune Druid" description="The druid gains energy resistance 1 against acid, cold, electricity, or fire. Each time the druid selects this reward, increase her resistance to one of these energy types by +1 (maximum 10 for any one type)." compset="FavClass" uniqueness="unique">
    <fieldval field="fcName" value="+1 Fire Resistance"/>
    <usesource source="CampRazorC"/>
    <tag group="IsRace" tag="rFGMenehun"/>
    <tag group="FavClass" tag="cDruid" name="Druid" abbrev="Druid"/>
    <tag group="ProductId" tag="FrogGod"/>
    <bootstrap thing="xDamRsFire"></bootstrap>
    <evalrule phase="PostAttr" priority="10000" message="This option may only be selected 10 times for each energy type." summary="This option may only be selected 10 times for each energy type."><![CDATA[
          field[abValue].value += field[fcCount].value
          
          if (field[fcCount].value <= 10) then
            @valid = 1
            endif
          
          #applydr[xDamRsFire, field[abValue].value]]]></evalrule>
    </thing>
  <thing id="fcFGMehOra" name="Menehune Oracle" description="Add one spell known from the oracle spell list. This spell must be at least one level below the highest spell level the oracle can cast.\n\n{b}Note{/b}: A new copy of this ability should be added for each different spell level you wish to add spells known." compset="FavClass">
    <usesource source="CampRazorC"/>
    <tag group="fShowWhat" tag="SpellLev09" name="Spell levels 0-9" abbrev="Spell levels 0-9"/>
    <tag group="IsRace" tag="rFGMenehun"/>
    <tag group="FavClass" tag="cOracle" name="Oracle" abbrev="Oracle"/>
    <tag group="ProductId" tag="FrogGod"/>
    <eval phase="Final" priority="10000">perform hero.childfound[cHelpOra].setfocus
    
          call FavSpellBn</eval>
    <evalrule phase="Final" priority="15000" message="You have chosen to add a spell level that is above one less than the maximum level of spells you can cast." summary="Selected spell level too high.">perform hero.childfound[cHelpOra].setfocus
    
          call FavSpellCk</evalrule>
    </thing>
  <thing id="cFGTBlood" name="Touch of Blood" description="As a melee touch attack, you leave a smear of blood upon your target that cannot be washed off unless first dispelled. Any follower of Dajobas or shark attacking an individual bearing this blood smear gains a +1 profane bonus on attack rolls. In addition, any creature with the scent or keen scent ability or blood sense can unerringly track this individual while they are in the same body of water, regardless of distance. The blood smear wears off after 1 hour per caster level. You can use this ability a number of times per day equal to 3 + your Wisdom modifier." compset="ClSpecial">
    <tag group="User" tag="Tracker"/>
    <tag group="ChargeCalc" tag="AttrUses3"/>
    <tag group="Usage" tag="Day"/>
    <tag group="SpecType" tag="SpellLike"/>
    <tag group="ChargeAttr" tag="aWIS"/>
    <tag group="ProductId" tag="FrogGod"/>
    </thing>
  <thing id="cFGEyeShar" name="Eyes of the Shark" description="At 8th level, your eyes become dead black orbs like those of a shark. This grants you blindsense 30 ft. or extends your blindsense by an additional 30 feet if you already have that ability. In addition, the eyes grant a +10 bonus to all Intimidate checks. You can use this ability for a number of rounds per day equal to 1/2 your cleric level. These rounds do not need to be consecutive." compset="ClSpecial">
    <fieldval field="actName" value="Eyes of the Shark"/>
    <tag group="ChargeCalc" tag="LevelHalf"/>
    <tag group="User" tag="Tracker"/>
    <tag group="SpecType" tag="Sense"/>
    <tag group="Usage" tag="DayRound"/>
    <tag group="User" tag="Activation"/>
    <tag group="AbilType" tag="Super"/>
    <tag group="ProductId" tag="FrogGod"/>
    <bootstrap thing="rBlindsen">
      <containerreq phase="First" priority="500"><![CDATA[fieldval:abilActive <> 0]]></containerreq>
      </bootstrap>
    <eval phase="PostLevel" priority="10000"><![CDATA[   
    ~ If we're not shown, just get out now
    doneif (tagis[Helper.ShowSpec] <> 1)
    ~ if we've been replaced, get out now
    doneif (tagis[Helper.SpcReplace] <> 0)
    ~ If not active get out now!
    doneif (field[abilActive].value <> 1)
    
    ~ Blindsense +30ft
    #value[rBlindsen] += 30
    ~ +10 bonus on intimdate
    #skillbonus[skIntim] += 10]]></eval>
    </thing>
  <thing id="cFGTouMake" name="Touch of the Maker" description="You can cast {i}mending{/i} at will using your cleric level as the caster level. When you do so, damage to the object is not only repaired, but the object gains the masterwork quality for 1 round per caster level. You can use this ability a number of times per day equal to 3 + your Wisdom modifier." compset="ClSpecial" summary="Object gains the masterwork quality for 1 round per caster level.">
    <tag group="AbilType" tag="SpellLike"/>
    <tag group="ProductId" tag="FrogGod"/>
    <tag group="SpInfo" tag="spMending0"/>
    <tag group="User" tag="Tracker"/>
    <tag group="ChargeCalc" tag="AttrUses3"/>
    <tag group="ChargeAttr" tag="aWIS"/>
    <tag group="Usage" tag="Day"/>
    <bootstrap thing="spMending0">
      <autotag group="Helper" tag="SpellLike"/>
      <autotag group="Usage" tag="AtWill"/>
      </bootstrap>
    </thing>
  <thing id="cFGPeneDmg" name="Penetrating Damage" description="At 8th level, you can imbue a weapon with a single material or alignment to allow it to penetrate damage reduction. It will not change the weapon type, however (bludgeoning, piercing, or slashing). This can include a special ability such as holy or axiomatic, for example, or the actual composition of the weapon such as cold iron or adamantine. Multiple changes can not be made with a single use of this ability, though multiple uses (even by different individuals) can be used to stack qualities on a single weapon. The changes created by this ability last for a number of rounds per day equal to 1/2 you cleric level. The rounds do not need to be consecutive." compset="ClSpecial" summary="Imbue a weapon with a single material or alignment to allow it to penetrate DR.">
    <tag group="AbilType" tag="Super"/>
    <tag group="ProductId" tag="FrogGod"/>
    <tag group="User" tag="Tracker"/>
    <tag group="ChargeCalc" tag="LevelHalf"/>
    <tag group="ChargeCalc" tag="LevelX1"/>
    <tag group="Usage" tag="DayRound"/>
    </thing>
  </document>
