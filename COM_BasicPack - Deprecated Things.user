<?xml version="1.0" encoding="UTF-8"?>
<document signature="Hero Lab Data">
  <loadonce key="COM_BasicPack - Deprecated Things"/>
  <fileinfo>
    <info_author>
      Author:  Tim Shadow
      Email: shadowchemosh@yahoo.com</info_author>
    <info_history><![CDATA[
      March 28, 2015 Tim Shadow
      -Created new to hold Drepcated Things using the "Hidden" feature of HL.]]></info_history>
    </fileinfo>
  <thing id="fS2VitStr" name="Deprecated - Vital Strike" description="Please note the official feat from Lone Wolf now allows an activation. So I have deprecated this feat. Please remove and re-add the normal Vital Strike feat.\n\nYou make a single attack that deals significantly more damage than normal.\n\n{b}Prerequisites{/b}: Base attack bonus +6.\n\n{b}Benefit{/b}: When you use the attack action, you can make one attack at your highest base attack bonus that deals additional damage. Roll the weapon&apos;s damage dice for the attack twice and add the results together before adding bonuses from Strength, weapon abilities (such as flaming), precision-based damage, and other damage bonuses. These extra weapon damage dice are not multiplied on a critical hit, but are added to the total.\n\n{B}Note:{/b} This version of the feat allows you to &quot;activate&quot; it on the In-Play tab." compset="Feat" summary="Standard action: x2 weapon damage dice." uniqueness="useronce">
    <comment>Make Vital Strike Actually Work. abValue = Number of additional dice. abValue2 = Plus Bonus to increase</comment>
    <usesource source="srcS2Feat"/>
    <tag group="fCategory"  tag="Combat"/>
    <tag group="User"       tag="Activation"/>
    <tag group="Helper"     tag="ShowSpec"/>
    <tag group="HasFeat"    tag="fVitStr"/>
    <tag group="Helper"     tag="CoreCampOK"/>
    <tag group="Helper"     tag="Obsolete"/>
    <eval phase="Final" priority="9999999999"><![CDATA[
      ~ If not active get out now!
      doneif (field[abilActive].value <> 1)

      ~ Set amount to increase dice by 2
      field[abValue].value += 2
      ~ If we have improved vital strike increase dice by additional 1
      If (#hasfeat[fImpVitStr] <> 0) Then
         field[abValue].value += 1
      Endif
      ~ If we have Greater vital strike increase dice by additional 1
      If (#hasfeat[fGrtVitStr] <> 0) Then
         field[abValue].value += 1
      Endif
      ~ Default the amount the Plus Damage should be increased by
      field[abValue2].value += 1
      ~ If we have Mythic Vital Strike double plus damage. Here we use a string value
      ~ instead of hard-coded Tag because we don't know if where this script runs
      ~ will have the Mythic Adventure addon.
      If (hero.tagcountstr["HasFeat.fPTVitStri"] + hero.tagcountstr["HasFeat.fMyVitStri"] <> 0) Then
         field[abValue2].value = field[abValue].value
      Endif

      var sDice as String
      var nDice as number
      var nDieSize as number
      var nPlus as number
      var iX    as number
      iX = 1

      ~ Loop through all weapons on the hero except Touch Attacks
      ~ and any Ammunition.
      foreach pick in hero from BaseWep where "!(thingid.wRay|wCategory.Ammunition|thingid.wTouch|wCategory.AmmoCart)"
        ~ Assume one handed damage
        iX = 0
        ~ If two handed weapon set to two-handed damage
        If (eachpick.tagis[wClass.TwoHanded] <> 0) Then
          iX = 1
        ~ If one handed and used in two hands then damage is two-handed
        ElseIf (eachpick.tagis[wClass.OneHanded] + eachpick.tagis[Hero.MainHand] + eachpick.tagis[Hero.OffHand] = 3) Then
          iX = 1
        ~ If used in off-hand
        ElseIf (eachpick.tagis[Hero.OffHand] - eachpick.tagis[Hero.MainHand] = 1) Then
          iX = 4
        Endif

        ~ We have a Melee damage table and a Ranged damage table to deal with now.
        ~ So if we are ranged process HERE
        ~ ------------------------------------------------------------------------
        if (eachpick.tagis[wCategory.RangeProj] = 1) then
          ~ Pull out the number of dice
          nDice = mid(eachpick.field[wRanDamTbl].arraytext[iX],0,1)
          ~ Pull out damage bonus after the plus sign if the plus sign exists
          If (pos(eachpick.field[wRanDamTbl].arraytext[iX],"+") <> -1) Then
            nPlus = mid(eachpick.field[wRanDamTbl].arraytext[iX],pos(eachpick.field[wRanDamTbl].arraytext[iX],"+")+1,2)
          Endif
          ~ Pull out the die size
          nDieSize = mid(eachpick.field[wRanDamTbl].arraytext[iX],2,2)

        ~..We ar a melee weapon so process HERE
        ~ -------------------------------------
        else
          ~ Pull out the number of dice
          nDice = mid(eachpick.field[wDamageTbl].arraytext[iX],0,1)
          ~ Pull out damage bonus after the plus sign if the plus sign exists
          If (pos(eachpick.field[wDamageTbl].arraytext[iX],"+") <> -1) Then
            nPlus = mid(eachpick.field[wDamageTbl].arraytext[iX],pos(eachpick.field[wDamageTbl].arraytext[iX],"+")+1,2)
          Endif
          ~ Pull out the die size
          nDieSize = mid(eachpick.field[wDamageTbl].arraytext[iX],2,2)
        endif

        ~ Double the number of dice
        nDice *= field[abValue].value

        ~ If we have devastating strike then increase plus damage
        If (hero.tagcountstr["HasFeat.fDevasStri"] <> 0) Then
          ~ Based on how many extra dice we get extra plus damage
          If (field[abValue].value = 2) Then
            nPlus += 2
          ElseIf (field[abValue].value = 3) Then
            nPlus += 4
          ElseIf (field[abValue].value >= 4) Then
            nPlus += 6
          Endif
        Endif    

        ~ Increase the plus damage if mythic
        nPlus *= field[abValue2].value 

        ~ If we have no "dice" then do NOT display 0d0+0 for the weapon.
        if (nDice <> 0) then
          ~ Set new custom damage dice onto the weapon 
          eachpick.field[wFixDamage].text = nDice & "d" & nDieSize
          ~ If we have a bonus value other than zero then append it otherwise leave off +0
          If (nPlus <> 0) Then
            eachpick.field[wFixDamage].text &= signed(nPlus)
          Endif
          ~ Set new custom damage dice onto the weapon 
          eachpick.field[wFixRanDam].text = eachpick.field[wFixDamage].text
        endif
        
        ~ Force each weapon to only have a single attack now that Vital strike is active
        perform eachpick.assign[Helper.SingleAtt]
        ~ Remove any "Extra High" tags as we need only a single attack
        perform eachpick.delete[Helper.ExtraHigh]
      nexteach]]></eval>
    <exprreq message="Base attack bonus +6 required." iserror="no"><![CDATA[#BAB[] >= 6]]></exprreq>
    </thing>
  <thing id="pS2ClsAbV1" name="Deprecated" description="{B}{I}This adjustment has been deprecated for a new better version. Please remove this adjustment and add &quot;Class Ability: Values&quot;.{/I}{/b}\n\nSelect this adjustment to be able to adjust the value one, which can represent many things (ie dice, damage bonus, etc...) of any of your class abilities.\n\n{b}Example:{/b} This adjustment could be used to select a rogues Sneak Attack and increase/decrease the number of d6 dice the ability gives." compset="InPlay">
    <usesource source="srcS2Adjus"/>
    <tag group="Helper" tag="CoreCampOK"/>
    <tag group="Adjustment" tag="ClassAbil"/>
    <eval phase="First" priority="20000" index="2"><![CDATA[
      ~ If we're not enabled, get out now
      doneif (field[pIsOn].value = 0)
      ~ If nothing chosen, get out now
      doneif (field[pChosen].ischosen <> 1)

      ~ Adjust the Value 1 field up or down
      field[pChosen].chosen.field[abValue].value += field[pAdjust].value]]></eval>
    <eval phase="PreLevel" priority="11000" index="3"><![CDATA[
      ~NOTE: This custom menu is needed as the built in "Class Abilities"
      ~      option does not allow for selecting class abilities like 
      ~      Channel Energy (thingid.xChannel). The below does allow this 
      ~      to be selected and adjusted.

      ~ Picks on Hero
      field[pUsePicks].value = 1
      ~ Set search expression for Ability Picks
      field[pCandExpr].text = "component.Ability & SpecSource.cHelp? & !component.BaseFeat & Helper.ShowSpec"]]></eval>
    </thing>
  <thing id="pS2ClsAbV2" name="Deprecated" description="{B}{I}This adjustment has been deprecated for a new better version. Please remove this adjustment and add &quot;Class Ability: Values&quot;.{/I}{/b}\n\nSelect this adjustment to be able to adjust the value two, which can represent many things (ie dice, damage bonus, etc...) of any of your class abilities.\n\n{b}Example:{/b} This adjustment could be used to select a barbarins Rage ability and increase/decrease the penalty to Will bonus when raging." compset="InPlay">
    <usesource source="srcS2Adjus"/>
    <tag group="Helper" tag="CoreCampOK"/>
    <tag group="Adjustment" tag="ClassAbil"/>
    <eval phase="First" priority="20000" index="2"><![CDATA[
      ~ If we're not enabled, get out now
      doneif (field[pIsOn].value = 0)
      ~ If nothing chosen, get out now
      doneif (field[pChosen].ischosen <> 1)

      ~ Adjust the Value 2 field up or down
      field[pChosen].chosen.field[abValue2].value += field[pAdjust].value]]></eval>
    <eval phase="PreLevel" priority="11000" index="3"><![CDATA[
      ~NOTE: This custom menu is needed as the built in "Class Abilities"
      ~      option does not allow for selecting class abilities like 
      ~      Channel Energy (thingid.xChannel). The below does allow this 
      ~      to be selected and adjusted.

      ~ Picks on Hero
      field[pUsePicks].value = 1
      ~ Set search expression for Ability Picks
      field[pCandExpr].text = "component.Ability & SpecSource.cHelp? & !component.BaseFeat & Helper.ShowSpec"]]></eval>
    </thing>
  <thing id="pS2ClsAbV3" name="Deprecated" description="{B}{I}This adjustment has been deprecated for a new better version. Please remove this adjustment and add &quot;Class Ability: Values&quot;.{/I}{/b}\n\nSelect this adjustment to be able to adjust the value three, which can represent many things (ie dice, damage bonus, etc...) of any of your class abilities.\n\n{b}Example:{/b} This adjustment could be used to select a barbarains Rage ability and increase/decrease the bonus to Con when raging." compset="InPlay">
    <usesource source="srcS2Adjus"/>
    <tag group="Helper" tag="CoreCampOK"/>
    <tag group="Adjustment" tag="ClassAbil"/>
    <eval phase="First" priority="20000" index="2"><![CDATA[
      ~ If we're not enabled, get out now
      doneif (field[pIsOn].value = 0)
      ~ If nothing chosen, get out now
      doneif (field[pChosen].ischosen <> 1)

      ~ Adjust the Value 3 field up or down
      field[pChosen].chosen.field[abValue3].value += field[pAdjust].value]]></eval>
    <eval phase="PreLevel" priority="11000" index="3"><![CDATA[
      ~NOTE: This custom menu is needed as the built in "Class Abilities"
      ~      option does not allow for selecting class abilities like 
      ~      Channel Energy (thingid.xChannel). The below does allow this 
      ~      to be selected and adjusted.

      ~ Picks on Hero
      field[pUsePicks].value = 1
      ~ Set search expression for Ability Picks
      field[pCandExpr].text = "component.Ability & SpecSource.cHelp? & !component.BaseFeat & Helper.ShowSpec"]]></eval>
    </thing>
  <thing id="pS2ClsAbV4" name="Deprecated" description="{B}{I}This adjustment has been deprecated for a new better version. Please remove this adjustment and add &quot;Class Ability: Values&quot;.{/I}{/b}\n\nSelect this adjustment to be able to adjust the value four, which can represent many things (ie dice, damage bonus, etc...) of any of your class abilities.\n\n{b}Example:{/b} This adjustment could be used to select a barbarains Rage ability and increase/decrease the bonus to Con when raging." compset="InPlay">
    <usesource source="srcS2Adjus"/>
    <tag group="Helper" tag="CoreCampOK"/>
    <tag group="Adjustment" tag="ClassAbil"/>
    <eval phase="First" priority="20000" index="2"><![CDATA[
      ~ If we're not enabled, get out now
      doneif (field[pIsOn].value = 0)
      ~ If nothing chosen, get out now
      doneif (field[pChosen].ischosen <> 1)

      ~ Adjust the Value 4 field up or down
      field[pChosen].chosen.field[abValue4].value += field[pAdjust].value]]></eval>
    <eval phase="PreLevel" priority="11000" index="3"><![CDATA[
      ~NOTE: This custom menu is needed as the built in "Class Abilities"
      ~      option does not allow for selecting class abilities like 
      ~      Channel Energy (thingid.xChannel). The below does allow this 
      ~      to be selected and adjusted.

      ~ Picks on Hero
      field[pUsePicks].value = 1
      ~ Set search expression for Ability Picks
      field[pCandExpr].text = "component.Ability & SpecSource.cHelp? & !component.BaseFeat & Helper.ShowSpec"]]></eval>
    </thing>
  <thing id="pS2DRadama" name="Deprecated" description="{B}{I}This adjustment has been deprecated as it was officially added to Hero Lab. Please remove this and add &quot;Damage Reduction&quot; or &quot;Damage Reduction, Set&quot;.  The Set version allows you to exactly set the value of DR where the non-set version lets you adjust the value up/down{/I}{/b}\n\nSelect this adjustment to set the amount of DR/Adamantine on a character. Note this will override what ever value is also already set for this DR on a character." compset="InPlay" isprivate="yes">
    <fieldval field="pMinimum" value="0"/>
    <usesource source="srcS2Adjus"/>
    <tag group="Helper" tag="CoreCampOK"/>
    <bootstrap thing="xDamRdAdam"></bootstrap>
    <eval phase="Final" priority="9000"><![CDATA[~ If we're not enabled, get out now
doneif (field[pIsOn].value = 0)

~ Remove all hardcoded Value. tags
perform hero.child[xDamRdAdam].delete[Value.?]

~ Increase/Decrease DR
hero.child[xDamRdAdam].field[abValue].value = field[pAdjust].value]]></eval>
    </thing>
  <thing id="pS2DRall" name="Deprecated" description="{B}{I}This adjustment has been deprecated as it was officially added to Hero Lab. Please remove this and add &quot;Damage Reduction&quot; or &quot;Damage Reduction, Set&quot;.  The Set version allows you to exactly set the value of DR where the non-set version lets you adjust the value up/down{/I}{/b}\n\nSelect this adjustment to set the amount of DR/- on a character. Note this will override what ever value is also already set for this DR on a character." compset="InPlay" isprivate="yes">
    <fieldval field="pMinimum" value="0"/>
    <usesource source="srcS2Adjus"/>
    <tag group="Helper" tag="CoreCampOK"/>
    <bootstrap thing="xDamRd"></bootstrap>
    <eval phase="Final" priority="9000"><![CDATA[~ If we're not enabled, get out now
doneif (field[pIsOn].value = 0)

~ Remove all hardcoded Value. tags
perform hero.child[xDamRd].delete[Value.?]

~ Increase/Decrease DR
hero.child[xDamRd].field[abValue].value = field[pAdjust].value]]></eval>
    </thing>
  <thing id="pS2SaveRes" name="Deprecated" description="{B}{I}This adjustment has been deprecated. Please use the more advanced &quot;Saving Throw, Type&quot; adjustment instead that allows for a larger selection of options.{/I}{/b}\n\nSelect this adjustment to give a {i}Resistance{/i} bonus to your Reflex, Fortitude or Will save." compset="InPlay" isprivate="yes">
    <usesource source="srcS2Adjus"/>
    <tag group="Helper" tag="CoreCampOK"/>
    <tag group="Adjustment" tag="Save" name="Saving Throws" abbrev="Saving Throws"/>
    <eval phase="PreAttr" priority="10000"><![CDATA[
~ If we're not enabled, get out now
doneif (field[pIsOn].value = 0)

~ Add Resistance Bonus to our chosen saving throw
#applybonus[svResist,field[pChosen].chosen,field[pAdjust].value]]]></eval>
    </thing>
  <thing id="pS2SaveAlc" name="Deprecated" description="{B}{I}This adjustment has been deprecated. Please use the more advanced &quot;Saving Throw, Type&quot; adjustment instead that allows for a larger selection of options.{/I}{/b}\n\nSelect this adjustment to give a {i}Alchemical{/i} bonus to your Reflex, Fortitude or Will save." compset="InPlay" isprivate="yes">
    <usesource source="srcS2Adjus"/>
    <tag group="Helper" tag="CoreCampOK"/>
    <tag group="Adjustment" tag="Save" name="Saving Throws" abbrev="Saving Throws"/>
    <eval phase="PreAttr" priority="10000"><![CDATA[
~ If we're not enabled, get out now
doneif (field[pIsOn].value = 0)

~ Add Alchemical Bonus to our chosen saving throw
#applybonus[BonAlch,field[pChosen].chosen,field[pAdjust].value]]]></eval>
    </thing>
  <thing id="pS2SaveCir" name="Deprecated" description="{B}{I}This adjustment has been deprecated. Please use the more advanced &quot;Saving Throw, Type&quot; adjustment instead that allows for a larger selection of options.{/I}{/b}\n\nSelect this adjustment to give a {i}Circumstance{/i} bonus to your Reflex, Fortitude or Will save." compset="InPlay">
    <usesource source="srcS2Adjus"/>
    <tag group="Helper" tag="CoreCampOK"/>
    <tag group="Adjustment" tag="Save" name="Saving Throws" abbrev="Saving Throws"/>
    <eval phase="PreAttr" priority="10000"><![CDATA[
~ If we're not enabled, get out now
doneif (field[pIsOn].value = 0)

~ Add Alchemical Bonus to our chosen saving throw
#applybonus[BonComp,field[pChosen].chosen,field[pAdjust].value]]]></eval>
    </thing>
  <thing id="pS2SaveEnh" name="Deprecated" description="{B}{I}This adjustment has been deprecated. Please use the more advanced &quot;Saving Throw, Type&quot; adjustment instead that allows for a larger selection of options.{/I}{/b}\n\nSelect this adjustment to give a {i}Enhancement{/i} bonus to your Reflex, Fortitude or Will save." compset="InPlay" isprivate="yes">
    <usesource source="srcS2Adjus"/>
    <tag group="Helper" tag="CoreCampOK"/>
    <tag group="Adjustment" tag="Save" name="Saving Throws" abbrev="Saving Throws"/>
    <eval phase="PreAttr" priority="10000"><![CDATA[
~ If we're not enabled, get out now
doneif (field[pIsOn].value = 0)

~ Add Enhancement Bonus to our chosen saving throw
#applybonus[BonEnhance,field[pChosen].chosen,field[pAdjust].value]]]></eval>
    </thing>
  <thing id="pS2SaveIns" name="Deprecated" description="{B}{I}This adjustment has been deprecated. Please use the more advanced &quot;Saving Throw, Type&quot; adjustment instead that allows for a larger selection of options.{/I}{/b}\n\nSelect this adjustment to give a {i}Insight{/i} bonus to your Reflex, Fortitude or Will save." compset="InPlay" isprivate="yes">
    <usesource source="srcS2Adjus"/>
    <tag group="Helper" tag="CoreCampOK"/>
    <tag group="Adjustment" tag="Save" name="Saving Throws" abbrev="Saving Throws"/>
    <eval phase="PreAttr" priority="10000"><![CDATA[
~ If we're not enabled, get out now
doneif (field[pIsOn].value = 0)

~ Add Insight Bonus to our chosen saving throw
#applybonus[BonInsight,field[pChosen].chosen,field[pAdjust].value]]]></eval>
    </thing>
  <thing id="pS2SaveLuc" name="Deprecated" description="{B}{I}This adjustment has been deprecated. Please use the more advanced &quot;Saving Throw, Type&quot; adjustment instead that allows for a larger selection of options.{/I}{/b}\n\nSelect this adjustment to give a {i}Luck{/i} bonus to your Reflex, Fortitude or Will save." compset="InPlay" isprivate="yes">
    <usesource source="srcS2Adjus"/>
    <tag group="Helper" tag="CoreCampOK"/>
    <tag group="Adjustment" tag="Save" name="Saving Throws" abbrev="Saving Throws"/>
    <eval phase="PreAttr" priority="10000"><![CDATA[
~ If we're not enabled, get out now
doneif (field[pIsOn].value = 0)

~ Add Luck Bonus to our chosen saving throw
#applybonus[BonLuck,field[pChosen].chosen,field[pAdjust].value]]]></eval>
    </thing>
  <thing id="pS2SaveMor" name="Deprecated" description="{B}{I}This adjustment has been deprecated. Please use the more advanced &quot;Saving Throw, Type&quot; adjustment instead that allows for a larger selection of options.{/I}{/b}\n\nSelect this adjustment to give a {i}Morale{/i} bonus to your Reflex, Fortitude or Will save." compset="InPlay" isprivate="yes">
    <usesource source="srcS2Adjus"/>
    <tag group="Helper" tag="CoreCampOK"/>
    <tag group="Adjustment" tag="Save" name="Saving Throws" abbrev="Saving Throws"/>
    <eval phase="PreAttr" priority="10000"><![CDATA[
~ If we're not enabled, get out now
doneif (field[pIsOn].value = 0)

~ Add Luck Morale to our chosen saving throw
#applybonus[BonMorale,field[pChosen].chosen,field[pAdjust].value]]]></eval>
    </thing>
  <thing id="pS2SavePro" name="Deprecated" description="{B}{I}This adjustment has been deprecated. Please use the more advanced &quot;Saving Throw, Type&quot; adjustment instead that allows for a larger selection of options.{/I}{/b}\n\nSelect this adjustment to give a {i}Profane{/i} bonus to your Reflex, Fortitude or Will save." compset="InPlay" isprivate="yes">
    <usesource source="srcS2Adjus"/>
    <tag group="Helper" tag="CoreCampOK"/>
    <tag group="Adjustment" tag="Save" name="Saving Throws" abbrev="Saving Throws"/>
    <eval phase="PreAttr" priority="10000"><![CDATA[
~ If we're not enabled, get out now
doneif (field[pIsOn].value = 0)

~ Add Luck Profane to our chosen saving throw
#applybonus[BonProfane,field[pChosen].chosen,field[pAdjust].value]]]></eval>
    </thing>
  <thing id="pS2SaveSac" name="Deprecated" description="{B}{I}This adjustment has been deprecated. Please use the more advanced &quot;Saving Throw, Type&quot; adjustment instead that allows for a larger selection of options.{/I}{/b}\n\nSelect this adjustment to give a {i}Sacred{/i} bonus to your Reflex, Fortitude or Will save." compset="InPlay" isprivate="yes">
    <usesource source="srcS2Adjus"/>
    <tag group="Helper" tag="CoreCampOK"/>
    <tag group="Adjustment" tag="Save" name="Saving Throws" abbrev="Saving Throws"/>
    <eval phase="PreAttr" priority="10000"><![CDATA[
~ If we're not enabled, get out now
doneif (field[pIsOn].value = 0)

~ Add Luck Sacred to our chosen saving throw
#applybonus[BonSacred,field[pChosen].chosen,field[pAdjust].value]]]></eval>
    </thing>
  <thing id="pS2SaveTra" name="Deprecated" description="{B}{I}This adjustment has been deprecated. Please use the more advanced &quot;Saving Throw, Type&quot; adjustment instead that allows for a larger selection of options.{/I}{/b}\n\nSelect this adjustment to give a {i}Trait{/i} bonus to your Reflex, Fortitude or Will save." compset="InPlay" isprivate="yes">
    <usesource source="srcS2Adjus"/>
    <tag group="Helper" tag="CoreCampOK"/>
    <tag group="Adjustment" tag="Save" name="Saving Throws" abbrev="Saving Throws"/>
    <eval phase="PreAttr" priority="10000"><![CDATA[
~ If we're not enabled, get out now
doneif (field[pIsOn].value = 0)

~ Add Luck Trait to our chosen saving throw
#applybonus[BonTrait,field[pChosen].chosen,field[pAdjust].value]]]></eval>
    </thing>
  <thing id="pS2CL" name="Deprecated" description="{B}{I}This adjustment has been deprecated as it was officially added to Hero Lab. Please remove this and add &quot;Caster Level&quot;.{/I}{/b}\n\nSelect this adjustment to increase or decrease the Caster Level of the selected class." compset="InPlay" isprivate="yes">
    <usesource source="srcS2Adjus"/>
    <tag group="Helper" tag="CoreCampOK"/>
    <tag group="Adjustment" tag="Class"/>
    <eval phase="PreLevel" priority="20000"><![CDATA[
~ If we're not enabled, get out now
doneif (field[pIsOn].value = 0)
~ increase/decrease caster level
field[pChosen].chosen.field[cCasterLev].value += field[pAdjust].value]]></eval>
    </thing>
  <thing id="pS2svAlAlc" name="Deprecated" description="{B}{I}This adjustment has been deprecated. Please use the more advanced &quot;Saving Throw, Type&quot; adjustment instead that allows for a larger selection of options.{/I}{/b}\n\nSelect this adjustment to give a {i}Alchemical{/i} bonus to your Reflex, Fortitude and Will save." compset="InPlay" isprivate="yes">
    <usesource source="srcS2Adjus"/>
    <tag group="Helper" tag="CoreCampOK"/>
    <eval phase="PreAttr" priority="10000"><![CDATA[
~ If we're not enabled, get out now
doneif (field[pIsOn].value = 0)

~ Add Alchemical Bonus to all our saving throws
#applybonus[BonAlch,hero.child[svAll],field[pAdjust].value]]]></eval>
    </thing>
  <thing id="pS2svAlCir" name="Deprecated" description="{B}{I}This adjustment has been deprecated. Please use the more advanced &quot;Saving Throw, Type&quot; adjustment instead that allows for a larger selection of options.{/I}{/b}\n\nSelect this adjustment to give a {i}Circumstance{/i} bonus to your Reflex, Fortitude and Will save." compset="InPlay" isprivate="yes">
    <usesource source="srcS2Adjus"/>
    <tag group="Helper" tag="CoreCampOK"/>
    <eval phase="PreAttr" priority="10000"><![CDATA[
~ If we're not enabled, get out now
doneif (field[pIsOn].value = 0)

~ Add Alchemical Bonus to all our saving throws
#applybonus[BonComp,hero.child[svAll],field[pAdjust].value]]]></eval>
    </thing>
  <thing id="pS2svAlEnh" name="Deprecated" description="{B}{I}This adjustment has been deprecated. Please use the more advanced &quot;Saving Throw, Type&quot; adjustment instead that allows for a larger selection of options.{/I}{/b}\n\nSelect this adjustment to give a {i}Enhancement{/i} bonus to your Reflex, Fortitude and Will save." compset="InPlay" isprivate="yes">
    <usesource source="srcS2Adjus"/>
    <tag group="Helper" tag="CoreCampOK"/>
    <eval phase="PreAttr" priority="10000"><![CDATA[
~ If we're not enabled, get out now
doneif (field[pIsOn].value = 0)

~ Add Enhancement Bonus to our chosen saving throw
#applybonus[BonEnhance,hero.child[svAll],field[pAdjust].value]]]></eval>
    </thing>
  <thing id="pS2svAlIns" name="Deprecated" description="{B}{I}This adjustment has been deprecated. Please use the more advanced &quot;Saving Throw, Type&quot; adjustment instead that allows for a larger selection of options.{/I}{/b}\n\nSelect this adjustment to give a {i}Insight{/i} bonus to your Reflex, Fortitude and Will save." compset="InPlay" isprivate="yes">
    <usesource source="srcS2Adjus"/>
    <tag group="Helper" tag="CoreCampOK"/>
    <eval phase="PreAttr" priority="10000"><![CDATA[
~ If we're not enabled, get out now
doneif (field[pIsOn].value = 0)

~ Add Insight Bonus to our chosen saving throw
#applybonus[BonInsight,hero.child[svAll],field[pAdjust].value]]]></eval>
    </thing>
  <thing id="pS2svAlLuc" name="Deprecated" description="{B}{I}This adjustment has been deprecated. Please use the more advanced &quot;Saving Throw, Type&quot; adjustment instead that allows for a larger selection of options.{/I}{/b}\n\nSelect this adjustment to give a {i}Luck{/i} bonus to your Reflex, Fortitude and Will save." compset="InPlay" isprivate="yes">
    <usesource source="srcS2Adjus"/>
    <tag group="Helper" tag="CoreCampOK"/>
    <tag group="Adjustment" tag="Save" name="Saving Throws" abbrev="Saving Throws"/>
    <eval phase="PreAttr" priority="10000"><![CDATA[
~ If we're not enabled, get out now
doneif (field[pIsOn].value = 0)

~ Add Luck Bonus to our chosen saving throw
#applybonus[BonLuck,hero.child[svAll],field[pAdjust].value]]]></eval>
    </thing>
  <thing id="pS2svAlMor" name="Deprecated" description="{B}{I}This adjustment has been deprecated. Please use the more advanced &quot;Saving Throw, Type&quot; adjustment instead that allows for a larger selection of options.{/I}{/b}\n\nSelect this adjustment to give a {i}Morale{/i} bonus to your Reflex, Fortitude and Will save." compset="InPlay" isprivate="yes">
    <usesource source="srcS2Adjus"/>
    <tag group="Helper" tag="CoreCampOK"/>
    <tag group="Adjustment" tag="Save" name="Saving Throws" abbrev="Saving Throws"/>
    <eval phase="PreAttr" priority="10000"><![CDATA[
~ If we're not enabled, get out now
doneif (field[pIsOn].value = 0)

~ Add Luck Morale to our chosen saving throw
#applybonus[BonMorale,hero.child[svAll],field[pAdjust].value]]]></eval>
    </thing>
  <thing id="pS2svAlPro" name="Deprecated" description="{B}{I}This adjustment has been deprecated. Please use the more advanced &quot;Saving Throw, Type&quot; adjustment instead that allows for a larger selection of options.{/I}{/b}\n\nSelect this adjustment to give a {i}Profane{/i} bonus to your Reflex, Fortitude and Will save." compset="InPlay" isprivate="yes">
    <usesource source="srcS2Adjus"/>
    <tag group="Helper" tag="CoreCampOK"/>
    <tag group="Adjustment" tag="Save" name="Saving Throws" abbrev="Saving Throws"/>
    <eval phase="PreAttr" priority="10000"><![CDATA[
~ If we're not enabled, get out now
doneif (field[pIsOn].value = 0)

~ Add Luck Profane to our chosen saving throw
#applybonus[BonProfane,hero.child[svAll],field[pAdjust].value]]]></eval>
    </thing>
  <thing id="pS2svAlRes" name="Deprecated" description="{B}{I}This adjustment has been deprecated. Please use the more advanced &quot;Saving Throw, Type&quot; adjustment instead that allows for a larger selection of options.{/I}{/b}\n\nSelect this adjustment to give a {i}Resistance{/i} bonus to your Reflex, Fortitude and Will save." compset="InPlay" isprivate="yes">
    <usesource source="srcS2Adjus"/>
    <tag group="Helper" tag="CoreCampOK"/>
    <tag group="Adjustment" tag="Save" name="Saving Throws" abbrev="Saving Throws"/>
    <eval phase="PreAttr" priority="10000"><![CDATA[
~ If we're not enabled, get out now
doneif (field[pIsOn].value = 0)

~ Add Resistance Bonus to our chosen saving throw
#applybonus[svResist,hero.child[svAll],field[pAdjust].value]]]></eval>
    </thing>
  <thing id="pS2svAlSac" name="Deprecated" description="{B}{I}This adjustment has been deprecated. Please use the more advanced &quot;Saving Throw, Type&quot; adjustment instead that allows for a larger selection of options.{/I}{/b}\n\nSelect this adjustment to give a {i}Sacred{/i} bonus to your Reflex, Fortitude and Will save." compset="InPlay" isprivate="yes">
    <usesource source="srcS2Adjus"/>
    <tag group="Helper" tag="CoreCampOK"/>
    <tag group="Adjustment" tag="Save" name="Saving Throws" abbrev="Saving Throws"/>
    <eval phase="PreAttr" priority="10000"><![CDATA[
~ If we're not enabled, get out now
doneif (field[pIsOn].value = 0)

~ Add Luck Sacred to our chosen saving throw
#applybonus[BonSacred,hero.child[svAll],field[pAdjust].value]]]></eval>
    </thing>
  <thing id="pS2svAlTra" name="Deprecated" description="{B}{I}This adjustment has been deprecated. Please use the more advanced &quot;Saving Throw, Type&quot; adjustment instead that allows for a larger selection of options.{/I}{/b}\n\nSelect this adjustment to give a {i}Trait{/i} bonus to your Reflex, Fortitude and Will save." compset="InPlay" isprivate="yes">
    <usesource source="srcS2Adjus"/>
    <tag group="Helper" tag="CoreCampOK"/>
    <tag group="Adjustment" tag="Save" name="Saving Throws" abbrev="Saving Throws"/>
    <eval phase="PreAttr" priority="10000"><![CDATA[
~ If we're not enabled, get out now
doneif (field[pIsOn].value = 0)

~ Add Luck Trait to our chosen saving throw
#applybonus[BonTrait,hero.child[svAll],field[pAdjust].value]]]></eval>
    </thing>
  <thing id="pS2wViciou" name="Deprecated" description="This is the old &quot;Weapon: Vicious Dmg&quot; adjustment that has been deprecated with the new changes done in Pathfinder v7.0.  You should remove from your character as this adjustment will be removed in a future update." compset="InPlay" isprivate="yes">
    <usesource source="srcS2Adjus"/>
    <tag group="Helper" tag="CoreCampOK"/>
    <tag group="Helper" tag="AdjInfo"/>
    <tag group="Adjustment" tag="YourWep"/>
    <tag group="Helper" tag="NoIncr"/>
    <eval phase="Final" priority="20500"><![CDATA[~ If we're not enabled, get out now
doneif (field[pIsOn].value = 0)
~if nothing's been chosen, get out now
doneif (field[pChosen].ischosen = 0)

field[pChosen].chosen.field[livename].text = field[pChosen].chosen.field[name].text & " +2d6 target, 1d6 wielder"]]></eval>
    </thing>
  <thing id="pS2SkGrCHA" name="Deprecated" description="{B}{I}This adjustment has been deprecated as it was officially added to Hero Lab. Please remove this and add &quot;Skill BOnus, All [Ability Score] Skills&quot;.{/I}{/b}\n\nSelect this adjustment to add or subtract a bonus from all skills associated to Charisma." compset="InPlay" isprivate="yes">
    <usesource source="srcS2Adjus"/>
    <tag group="Helper" tag="CoreCampOK"/>
    <eval phase="PostLevel" priority="20000"><![CDATA[
~ If we're not enabled, get out now
doneif (field[pIsOn].value = 0)

var nValid as number

~ Give penalty to Cha based skills
foreach pick in hero from BaseSkill
  nValid = 0
  ~ If we have a skill override then process here
  if (eachpick.tagcount[SkillOver.?] <> 0) then
     ~ Check Skill Overrides
     if (eachpick.tagis[SkillOver.aCHA] <> 0) then
        nValid += 1
     endif
  ~ if we don't have a skill override then process here
  else
     ~ Check normal skill attributes
     if (eachpick.islinkage[skillattr] <> 0) then
        if (eachpick.linkage[skillattr].tagis[thingid.aCHA] <> 0) then
           nValid += 1
        endif
     endif
  endif

  ~ If nValid skill then apply the penalty
  if (nValid <> 0) then
     eachpick.field[Bonus].value += field[pAdjust].value
  endif
nexteach]]></eval>
    </thing>
  <thing id="pS2SkGrSTR" name="Deprecated" description="{B}{I}This adjustment has been deprecated as it was officially added to Hero Lab. Please remove this and add &quot;Skill BOnus, All [Ability Score] Skills&quot;.{/I}{/b}\n\nSelect this adjustment to add or subtract a bonus from all skills associated to Strength." compset="InPlay" isprivate="yes">
    <usesource source="srcS2Adjus"/>
    <tag group="Helper" tag="CoreCampOK"/>
    <eval phase="PostLevel" priority="20000"><![CDATA[
~ If we're not enabled, get out now
doneif (field[pIsOn].value = 0)

var nValid as number

~ Give penalty to Str based skills
foreach pick in hero from BaseSkill
  nValid = 0
  ~ If we have a skill override then process here
  if (eachpick.tagcount[SkillOver.?] <> 0) then
     ~ Check Skill Overrides
     if (eachpick.tagis[SkillOver.aSTR] <> 0) then
        nValid += 1
     endif
  ~ if we don't have a skill override then process here
  else
     ~ Check normal skill attributes
     if (eachpick.islinkage[skillattr] <> 0) then
        if (eachpick.linkage[skillattr].tagis[thingid.aSTR] <> 0) then
           nValid += 1
        endif
     endif
  endif

  ~ If nValid skill then apply the penalty
  if (nValid <> 0) then
     eachpick.field[Bonus].value += field[pAdjust].value
  endif
nexteach]]></eval>
    </thing>
  <thing id="pS2SkGrDEX" name="Deprecated" description="{B}{I}This adjustment has been deprecated as it was officially added to Hero Lab. Please remove this and add &quot;Skill BOnus, All [Ability Score] Skills&quot;.{/I}{/b}\n\nSelect this adjustment to add or subtract a bonus from all skills associated to Dexterity." compset="InPlay" isprivate="yes">
    <usesource source="srcS2Adjus"/>
    <tag group="Helper" tag="CoreCampOK"/>
    <eval phase="PostLevel" priority="20000"><![CDATA[
~ If we're not enabled, get out now
doneif (field[pIsOn].value = 0)

var nValid as number

~ Give penalty to Dex based skills
foreach pick in hero from BaseSkill
  nValid = 0
  ~ If we have a skill override then process here
  if (eachpick.tagcount[SkillOver.?] <> 0) then
     ~ Check Skill Overrides
     if (eachpick.tagis[SkillOver.aDEX] <> 0) then
        nValid += 1
     endif
  ~ if we don't have a skill override then process here
  else
     ~ Check normal skill attributes
     if (eachpick.islinkage[skillattr] <> 0) then
        if (eachpick.linkage[skillattr].tagis[thingid.aDEX] <> 0) then
           nValid += 1
        endif
     endif
  endif

  ~ If nValid skill then apply the penalty
  if (nValid <> 0) then
     eachpick.field[Bonus].value += field[pAdjust].value
  endif
nexteach]]></eval>
    </thing>
  <thing id="pS2SkGrCON" name="Deprecated" description="{B}{I}This adjustment has been deprecated as it was officially added to Hero Lab. Please remove this and add &quot;Skill Bonus, All [Ability Score] Skills&quot;.{/I}{/b}\n\nSelect this adjustment to add or subtract a bonus from all skills associated to Constitution." compset="InPlay" isprivate="yes">
    <usesource source="srcS2Adjus"/>
    <tag group="Helper" tag="CoreCampOK"/>
    <eval phase="PostLevel" priority="20000"><![CDATA[
~ If we're not enabled, get out now
doneif (field[pIsOn].value = 0)

var nValid as number

~ Give penalty to Con based skills
foreach pick in hero from BaseSkill
  nValid = 0
  ~ If we have a skill override then process here
  if (eachpick.tagcount[SkillOver.?] <> 0) then
     ~ Check Skill Overrides
     if (eachpick.tagis[SkillOver.aCON] <> 0) then
        nValid += 1
     endif
  ~ if we don't have a skill override then process here
  else
     ~ Check normal skill attributes
     if (eachpick.islinkage[skillattr] <> 0) then
        if (eachpick.linkage[skillattr].tagis[thingid.aCON] <> 0) then
           nValid += 1
        endif
     endif
  endif

  ~ If nValid skill then apply the penalty
  if (nValid <> 0) then
     eachpick.field[Bonus].value += field[pAdjust].value
  endif
nexteach]]></eval>
    </thing>
  <thing id="pS2SkGrINT" name="Deprecated" description="{B}{I}This adjustment has been deprecated as it was officially added to Hero Lab. Please remove this and add &quot;Skill BOnus, All [Ability Score] Skills&quot;.{/I}{/b}\n\nSelect this adjustment to add or subtract a bonus from all skills associated to Intelligence." compset="InPlay" isprivate="yes">
    <usesource source="srcS2Adjus"/>
    <tag group="Helper" tag="CoreCampOK"/>
    <eval phase="PostLevel" priority="20000"><![CDATA[
~ If we're not enabled, get out now
doneif (field[pIsOn].value = 0)

var nValid as number

~ Give penalty to Int based skills
foreach pick in hero from BaseSkill
  nValid = 0
  ~ If we have a skill override then process here
  if (eachpick.tagcount[SkillOver.?] <> 0) then
     ~ Check Skill Overrides
     if (eachpick.tagis[SkillOver.aINT] <> 0) then
        nValid += 1
     endif
  ~ if we don't have a skill override then process here
  else
     ~ Check normal skill attributes
     if (eachpick.islinkage[skillattr] <> 0) then
        if (eachpick.linkage[skillattr].tagis[thingid.aINT] <> 0) then
           nValid += 1
        endif
     endif
  endif

  ~ If nValid skill then apply the penalty
  if (nValid <> 0) then
     eachpick.field[Bonus].value += field[pAdjust].value
  endif
nexteach]]></eval>
    </thing>
  <thing id="pS2SkGrWIS" name="Deprecated" description="{B}{I}This adjustment has been deprecated as it was officially added to Hero Lab. Please remove this and add &quot;Skill BOnus, All [Ability Score] Skills&quot;.{/I}{/b}\n\nSelect this adjustment to add or subtract a bonus from all skills associated to Wisdom." compset="InPlay" isprivate="yes">
    <usesource source="srcS2Adjus"/>
    <tag group="Helper" tag="CoreCampOK"/>
    <eval phase="PostLevel" priority="20000"><![CDATA[
~ If we're not enabled, get out now
doneif (field[pIsOn].value = 0)

var nValid as number

~ Give penalty to Wis based skills
foreach pick in hero from BaseSkill
  nValid = 0
  ~ If we have a skill override then process here
  if (eachpick.tagcount[SkillOver.?] <> 0) then
     ~ Check Skill Overrides
     if (eachpick.tagis[SkillOver.aWIS] <> 0) then
        nValid += 1
     endif
  ~ if we don't have a skill override then process here
  else
     ~ Check normal skill attributes
     if (eachpick.islinkage[skillattr] <> 0) then
        if (eachpick.linkage[skillattr].tagis[thingid.aWIS] <> 0) then
           nValid += 1
        endif
     endif
  endif

  ~ If nValid skill then apply the penalty
  if (nValid <> 0) then
     eachpick.field[Bonus].value += field[pAdjust].value
  endif
nexteach]]></eval>
    </thing>
  <thing id="pS2AttrDra" name="Deprecated" description="{B}{I}This adjustment has been deprecated as it was officially added to Hero Lab. Please remove this and add &quot;Ability Score Drain&quot;.{/I}{/b}\n\nUse this adjustment when your character has received &quot;Drain&quot; damage to one of your ability scores (Strength, Dexterity, Constitution, Intelligence, Wisdom or Charisma).\n\n{B}Ability Drain{/b} Ability drain actually reduces the relevant ability score. Modify all skills and statistics related to that ability. This might cause you to lose skill points, hit points, and other bonuses. Ability drain can be healed through the use of spells such as restoration." compset="InPlay" isprivate="yes">
    <fieldval field="pMinimum" value="0"/>
    <usesource source="srcS2Adjus"/>
    <tag group="Helper" tag="CoreCampOK"/>
    <tag group="Adjustment" tag="Attribute" name="Attributes" abbrev="Attributes"/>
    <tag group="Helper" tag="AdjNoPlus"/>
    <eval phase="PreAttr" priority="10000"><![CDATA[
~ If we're not enabled, get out now
doneif (field[pIsOn].value = 0)

~ Add to our chosen attribute
field[pChosen].chosen.field[Penalty].value -= field[pAdjust].value]]></eval>
    </thing>
  <thing id="pS2ClsAbDC" name="Deprecated" description="{B}{I}This adjustment has been deprecated as it was officially added to Hero Lab. Please remove this and add &quot;Ability: DC&quot;.{/I}{/b}\n\nSelect this adjustment to be able to adjust the DC value of any of your class abilities." compset="InPlay" isprivate="yes">
    <usesource source="srcS2Adjus"/>
    <tag group="Helper" tag="CoreCampOK"/>
    <tag group="Adjustment" tag="ClassAbil"/>
    <eval phase="First" priority="20000" index="2"><![CDATA[
~ If we're not enabled, get out now
doneif (field[pIsOn].value = 0)
~ If nothing chosen, get out now
doneif (field[pChosen].ischosen <> 1)

~ Adjust the DC up or down
field[pChosen].chosen.field[abDC].value += field[pAdjust].value]]></eval>
    <eval phase="PreLevel" priority="11000" index="3"><![CDATA[~NOTE: This custom menu is needed as the built in "Class Abilities"
~      option does not allow for selecting class abilities like 
~      Channel Energy (thingid.xChannel). The below does allow this 
~      to be selected and adjusted.

~ Picks on Hero
field[pUsePicks].value = 1
~ Set search expression for Ability Picks
field[pCandExpr].text = "component.Ability & SpecSource.cHelp? & !component.BaseFeat & Helper.ShowSpec"]]></eval>
    </thing>
  <thing id="pS2ClsAbTr" name="Deprecated" description="{B}{I}This adjustment has been deprecated as it was officially added to Hero Lab. Please remove this and add &quot;Ability: Uses&quot;.{/I}{/b}\n\nSelect this adjustment to be able to adjust the number of uses of any of your class abilities." compset="InPlay" isprivate="yes">
    <usesource source="srcS2Adjus"/>
    <tag group="Helper" tag="CoreCampOK"/>
    <tag group="Adjustment" tag="ClassAbil"/>
    <eval phase="First" priority="20000" index="2"><![CDATA[
~ If we're not enabled, get out now
doneif (field[pIsOn].value = 0)
~ If nothing chosen, get out now
doneif (field[pChosen].ischosen <> 1)

~ Adjust the tracker Max Value up or down
field[pChosen].chosen.field[trkMax].value += field[pAdjust].value]]></eval>
    <eval phase="PreLevel" priority="11000" index="3"><![CDATA[~NOTE: This custom menu is needed as the built in "Class Abilities"
~      option does not allow for selecting class abilities like 
~      Channel Energy (thingid.xChannel). The below does allow this 
~      to be selected and adjusted.

~ Picks on Hero
field[pUsePicks].value = 1
~ Set search expression for Ability Picks
field[pCandExpr].text = "component.Ability & SpecSource.cHelp? & !component.BaseFeat & Helper.ShowSpec"]]></eval>
    </thing>
  <thing id="pS2SKGrALL" name="Deprecated" description="{B}{I}This adjustment has been deprecated as it was officially added to Hero Lab. Please remove this and add &quot;Skill Bonus, All Skills&quot;.{/I}{/b}\n\nSelect this adjustment to add or subtract a bonus from all your skills." compset="InPlay" isprivate="yes">
    <usesource source="srcS2Adjus"/>
    <tag group="Helper" tag="CoreCampOK"/>
    <eval phase="PostLevel" priority="20000"><![CDATA[
~ If we're not enabled, get out now
doneif (field[pIsOn].value = 0)

~ Give a bonus/penalty to ALL skills
hero.child[AllSkills].field[Bonus].value += field[pAdjust].value]]></eval>
    </thing>
  <thing id="pS2Hero000" name="Hero, Ability Score Increase" description="Use this adjustment to give a add or remove the number of Ability Score Increases your character has. In example lets say you want to get two ability score increases at level 4 instead of one. In such a case at level 4 you would select +1 then you will be able to add two &quot;Ability Score Increases&quot; instead of just one." compset="InPlay" isprivate="yes">
    <usesource source="srcS2Adjus"/>
    <tag group="Helper" tag="CoreCampOK"/>
    <tag group="OthAdjCat" tag="Misc"/>
    <eval phase="Level"><![CDATA[
~ If we're not enabled, get out now
doneif (field[pIsOn].value = 0)

~ Give an additional Ability Score Increase
herofield[tAttrEvol].value += field[pAdjust].value]]></eval>
    </thing>
  <thing id="yACarmor" name="Deprecated" description="{B}{I}This adjustment has been deprecated. Please use the more advanced &quot;Armor Class, Type&quot; adjustment instead that allows for a larger selection of options.{/I}{/b}\n\nSelect this adjustment to adjust your {b}Armor{/b} Bonus to armor class.\n\n{b}Note{/b}: Only the highest armor bonus applies." compset="InPlay" isprivate="yes">
    <usesource source="srcS2Adjus"/>
    <tag group="Helper" tag="CoreCampOK"/>
    <eval phase="PreLevel" priority="10000"><![CDATA[
~ If we're not enabled, get out now
doneif (field[pIsOn].value = 0)

~ Add to our armor class
hero.child[ArmorClass].field[tACArmor].value = maximum(field[pAdjust].value,hero.child[ArmorClass].field[tACArmor].value)]]></eval>
    </thing>
  <thing id="yACShield" name="Deprecated" description="{B}{I}This adjustment has been deprecated. Please use the more advanced &quot;Armor Class, Type&quot; adjustment instead that allows for a larger selection of options.{/I}{/b}\n\nSelect this adjustment to adjust your {b}Shield{/b} bonus to armor class.\n\n{b}Note{/b}: Only the highest shield bonus applies." compset="InPlay" isprivate="yes">
    <usesource source="srcS2Adjus"/>
    <tag group="Helper" tag="CoreCampOK"/>
    <eval phase="PreLevel" priority="10000"><![CDATA[
~ If we're not enabled, get out now
doneif (field[pIsOn].value = 0)

~ Add to our shield armor class
hero.child[ArmorClass].field[tACShield].value = maximum(field[pAdjust].value,hero.child[ArmorClass].field[tACShield].value)]]></eval>
    </thing>
  <thing id="yACNatural" name="Deprecated" description="{B}{I}This adjustment has been deprecated. Please use the more advanced &quot;Armor Class, Type&quot; adjustment instead that allows for a larger selection of options.{/I}{/b}\n\nSelect this adjustment to adjust your {b}Natural{/b} bonus to armor class.\n\n{b}Note{/b}: Natural Armor stacks with itself." compset="InPlay" isprivate="yes">
    <usesource source="srcS2Adjus"/>
    <tag group="Helper" tag="CoreCampOK"/>
    <eval phase="PreLevel" priority="10000"><![CDATA[
~ If we're not enabled, get out now
doneif (field[pIsOn].value = 0)

~ Add to our armor class
hero.child[ArmorClass].field[tACNatural].value += field[pAdjust].value]]></eval>
    </thing>
  <thing id="yACdodge" name="Deprecated" description="{B}{I}This adjustment has been deprecated. Please use the more advanced &quot;Armor Class, Type&quot; adjustment instead that allows for a larger selection of options.{/I}{/b}\n\nSelect this adjustment to adjust your {b}Dodge{/b} bonus to armor class.\n\n{b}Note{/b}: Like most modifiers to Armor Class, this modifier is also applied to your Combat Maneuver Defense.  A separate CMD adjustment can be used to cancel this out." compset="InPlay" isprivate="yes">
    <usesource source="srcS2Adjus"/>
    <tag group="Helper" tag="CoreCampOK"/>
    <eval phase="PreLevel" priority="10000"><![CDATA[
~ If we're not enabled, get out now
doneif (field[pIsOn].value = 0)

~ Add to our armor class
hero.child[ArmorClass].field[tACDodge].value += field[pAdjust].value]]></eval>
    </thing>
  <thing id="yACdeflect" name="Deprecated" description="{B}{I}This adjustment has been deprecated. Please use the more advanced &quot;Armor Class, Type&quot; adjustment instead that allows for a larger selection of options.{/I}{/b}\n\nSelect this adjustment to adjust your {b}Deflection{/b} bonus to armor class.\n\n{b}Note{/b}: Only the highest deflection bonus applies." compset="InPlay" isprivate="yes">
    <usesource source="srcS2Adjus"/>
    <tag group="Helper" tag="CoreCampOK"/>
    <eval phase="PreLevel" priority="10000"><![CDATA[~Pre-Levels 10,000
      ~ If we're not enabled, get out now
      doneif (field[pIsOn].value = 0)

      ~ Add to our armor class
      hero.child[ArmorClass].field[tACDeflect].value = maximum(field[pAdjust].value,hero.child[ArmorClass].field[tACDeflect].value)]]></eval>
    </thing>
  <thing id="pS2DRevil" name="Deprecated" description="{B}{I}This adjustment has been deprecated as it was officially added to Hero Lab. Please remove this and add &quot;Damage Reduction&quot; or &quot;Damage Reduction, Set&quot;.  The Set version allows you to exactly set the value of DR where the non-set version lets you adjust the value up/down{/I}{/b}\n\nSelect this adjustment to set the amount of DR/evil on a character. Note this will override what ever value is also already set for this DR on a character." compset="InPlay" isprivate="yes">
    <fieldval field="pMinimum" value="0"/>
    <usesource source="srcS2Adjus"/>
    <tag group="Helper" tag="CoreCampOK"/>
    <bootstrap thing="xDamRdEvil"></bootstrap>
    <eval phase="Final" priority="9000"><![CDATA[~ If we're not enabled, get out now
doneif (field[pIsOn].value = 0)

~ Remove all hardcoded Value. tags
perform hero.child[xDamRdEvil].delete[Value.?]

~ Set DR value
hero.child[xDamRdEvil].field[abValue].value = field[pAdjust].value]]></eval>
    </thing>
  <thing id="yACtouch" name="Deprecated" description="{B}{I}This adjustment has been deprecated. Please use the more advanced &quot;Armor Class, Type&quot; adjustment instead that allows for a larger selection of options.{/I}{/b}\n\nSelect this adjustment to adjust your {b}Touch{/b} armor class.\n\n{b}Note{/b}: This is not a specific type so it always stacks." compset="InPlay" isprivate="yes">
    <usesource source="srcS2Adjus"/>
    <tag group="Helper" tag="CoreCampOK"/>
    <eval phase="PreLevel" priority="10000"><![CDATA[
~ If we're not enabled, get out now
doneif (field[pIsOn].value = 0)

~ Add to our TOUCH armor class only
hero.child[ArmorClass].field[tACTouch].value += field[pAdjust].value]]></eval>
    </thing>
  <thing id="pS2DRgood" name="Deprecated" description="{B}{I}This adjustment has been deprecated as it was officially added to Hero Lab. Please remove this and add &quot;Damage Reduction&quot; or &quot;Damage Reduction, Set&quot;.  The Set version allows you to exactly set the value of DR where the non-set version lets you adjust the value up/down{/I}{/b}\n\nSelect this adjustment to set the amount of DR/good on a character. Note this will override what ever value is also already set for this DR on a character." compset="InPlay" isprivate="yes">
    <fieldval field="pMinimum" value="0"/>
    <usesource source="srcS2Adjus"/>
    <tag group="Helper" tag="CoreCampOK"/>
    <bootstrap thing="xDamRdGood"></bootstrap>
    <eval phase="Final" priority="9000"><![CDATA[~ If we're not enabled, get out now
doneif (field[pIsOn].value = 0)

~ Remove all hardcoded Value. tags
perform hero.child[xDamRdGood].delete[Value.?]

~ Set DR value
hero.child[xDamRdGood].field[abValue].value = field[pAdjust].value]]></eval>
    </thing>
  <thing id="pS2DRmagic" name="Deprecated" description="{B}{I}This adjustment has been deprecated as it was officially added to Hero Lab. Please remove this and add &quot;Damage Reduction&quot; or &quot;Damage Reduction, Set&quot;.  The Set version allows you to exactly set the value of DR where the non-set version lets you adjust the value up/down{/I}{/b}\n\nSelect this adjustment to change the amount of DR/magic on a character. Note this will override what ever value is also already set for this DR on a character." compset="InPlay" isprivate="yes">
    <fieldval field="pMinimum" value="0"/>
    <usesource source="srcS2Adjus"/>
    <tag group="Helper" tag="CoreCampOK"/>
    <bootstrap thing="xDamRdMag"></bootstrap>
    <eval phase="Final" priority="9000"><![CDATA[~ If we're not enabled, get out now
doneif (field[pIsOn].value = 0)

~ Remove all hardcoded Value. tags
perform hero.child[xDamRdMag].delete[Value.?]

~ Set DR value
hero.child[xDamRdMag].field[abValue].value = field[pAdjust].value]]></eval>
    </thing>
  <thing id="pS2DRpierc" name="Deprecated" description="{B}{I}This adjustment has been deprecated as it was officially added to Hero Lab. Please remove this and add &quot;Damage Reduction&quot; or &quot;Damage Reduction, Set&quot;.  The Set version allows you to exactly set the value of DR where the non-set version lets you adjust the value up/down{/I}{/b}\n\nSelect this adjustment to change the amount of DR/piercing  on a character. Note this will override what ever value is also already set for this DR on a character." compset="InPlay" isprivate="yes">
    <fieldval field="pMinimum" value="0"/>
    <usesource source="srcS2Adjus"/>
    <tag group="Helper" tag="CoreCampOK"/>
    <bootstrap thing="xDamRdP"></bootstrap>
    <eval phase="Final" priority="9000"><![CDATA[~ If we're not enabled, get out now
doneif (field[pIsOn].value = 0)

~ Remove all hardcoded Value. tags
perform hero.child[xDamRdP].delete[Value.?]

~ Set DR value
hero.child[xDamRdP].field[abValue].value = field[pAdjust].value]]></eval>
    </thing>
  <thing id="pS2DRsilve" name="Deprecated" description="{B}{I}This adjustment has been deprecated as it was officially added to Hero Lab. Please remove this and add &quot;Damage Reduction&quot; or &quot;Damage Reduction, Set&quot;.  The Set version allows you to exactly set the value of DR where the non-set version lets you adjust the value up/down{/I}{/b}\n\nSelect this adjustment to change the amount of DR/silver  on a character. Note this will override what ever value is also already set for this DR on a character." compset="InPlay" isprivate="yes">
    <fieldval field="pMinimum" value="0"/>
    <usesource source="srcS2Adjus"/>
    <tag group="Helper" tag="CoreCampOK"/>
    <bootstrap thing="xDamRdSil"></bootstrap>
    <eval phase="Final" priority="9000"><![CDATA[~ If we're not enabled, get out now
doneif (field[pIsOn].value = 0)

~ Remove all hardcoded Value. tags
perform hero.child[xDamRdSil].delete[Value.?]

~ Set DR value
hero.child[xDamRdSil].field[abValue].value = field[pAdjust].value]]></eval>
    </thing>
  <thing id="pS2DRslash" name="Deprecated" description="{B}{I}This adjustment has been deprecated as it was officially added to Hero Lab. Please remove this and add &quot;Damage Reduction&quot; or &quot;Damage Reduction, Set&quot;.  The Set version allows you to exactly set the value of DR where the non-set version lets you adjust the value up/down{/I}{/b}\n\nSelect this adjustment to change the amount of DR/slashing  on a character. Note this will override what ever value is also already set for this DR on a character." compset="InPlay" isprivate="yes">
    <fieldval field="pMinimum" value="0"/>
    <usesource source="srcS2Adjus"/>
    <tag group="Helper" tag="CoreCampOK"/>
    <bootstrap thing="xDamRdS"></bootstrap>
    <eval phase="Final" priority="9000"><![CDATA[~ If we're not enabled, get out now
doneif (field[pIsOn].value = 0)

~ Remove all hardcoded Value. tags
perform hero.child[xDamRdSil].delete[Value.?]

~ Set DR value
hero.child[xDamRdSil].field[abValue].value = field[pAdjust].value]]></eval>
    </thing>
  <thing id="pS2DRbludg" name="Deprecated" description="{B}{I}This adjustment has been deprecated as it was officially added to Hero Lab. Please remove this and add &quot;Damage Reduction&quot; or &quot;Damage Reduction, Set&quot;.  The Set version allows you to exactly set the value of DR where the non-set version lets you adjust the value up/down{/I}{/b}\n\nSelect this adjustment to set the amount of DR/bludgeoning on a character. Note this will override what ever value is also already set for this DR on a character." compset="InPlay" isprivate="yes">
    <fieldval field="pMinimum" value="0"/>
    <usesource source="srcS2Adjus"/>
    <tag group="Helper" tag="CoreCampOK"/>
    <bootstrap thing="xDamRdB"></bootstrap>
    <eval phase="Final" priority="9000"><![CDATA[~ If we're not enabled, get out now
doneif (field[pIsOn].value = 0)

~ Remove all hardcoded Value. tags
perform hero.child[xDamRdB].delete[Value.?]

~ Set new DR
hero.child[xDamRdB].field[abValue].value = field[pAdjust].value]]></eval>
    </thing>
  <thing id="pS2SplRs" name="Deprecated" description="{B}{I}This adjustment has been deprecated as it was officially added to Hero Lab. Please remove this and add &quot;Spell Resistance&quot;.{/I}{/b}\n\nSelect this adjustment to be able to increase/decrease the amount of spell resistance you have." compset="InPlay" isprivate="yes">
    <usesource source="srcS2Adjus"/>
    <tag group="Helper" tag="CoreCampOK"/>
    <eval phase="Final" priority="19000" index="2"><![CDATA[~ If we're not enabled, get out now
doneif (field[pIsOn].value = 0)

#value[xSplRs] += field[pAdjust].value]]></eval>
    </thing>
  <thing id="pS2ALSchDC" name="Deprecated" description="{B}{I}This adjustment has been deprecated as it was officially added to Hero Lab. Please remove this and add &quot;Spell DC, All Spells&quot;.{/I}{/b}\n\nSelect this adjustment to add a bonus/penalty to all your spell DCs regardless of school of magic." compset="InPlay" isprivate="yes">
    <usesource source="srcS2Adjus"/>
    <tag group="Helper" tag="CoreCampOK"/>
    <eval phase="PostLevel" priority="10000"><![CDATA[
~ If we're not enabled, get out now
doneif (field[pIsOn].value = 0)

~ Adjust the DC to all CORE schools of magic
foreach pick in hero from SplSchool where "!sDescript.? & !sWordCat.? & !sSubschool.?"
   eachpick.field[schDC].value += field[pAdjust].value
nexteach]]></eval>
    </thing>
  <thing id="pS2SchDC" name="Deprecated" description="{B}{I}This adjustment has been deprecated as it was officially added to Hero Lab. Please remove this and add &quot;Spell DC, Specific School&quot;.{/I}{/b}\n\nSelect this adjustment to add a bonus/penalty to all your spell DCs of a specific school of magic." compset="InPlay" isprivate="yes">
    <comment><![CDATA[~ Picks on Hero
field[pUsePicks].value = 1
~ Set search expression
field[pCandExpr].text = "component.BaseSpell & !portal.ClsBook & portal.?"]]></comment>
    <usesource source="srcS2Adjus"/>
    <tag group="Helper" tag="CoreCampOK"/>
    <tag group="Adjustment" tag="S2Custom" name="Custom Menu"/>
    <eval phase="PostLevel" priority="10000"><![CDATA[
~ If we're not enabled, get out now
doneif (field[pIsOn].value = 0)

~ Adjust the DC to choosen school of magic
field[pChosen].chosen.field[schDC].value += field[pAdjust].value]]></eval>
    <eval phase="PreLevel" priority="11000" index="2"><![CDATA[~ Picks on Hero
field[pUsePicks].value = 1
~ Set search expression for CORE spell school
field[pCandExpr].text = "component.SplSchool & !sDescript.? & !sWordCat.? & !sSubschool.?"]]></eval>
    </thing>
  <thing id="ioCBGoodbe" name="DEPRECATED - Goodberry" description="{b}Note{/b} If you see this on your character please remove it and re-add &quot;Goodberry&quot; to your character." compset="Wondrous">
    <usesource source="srcS2Gear"/>
    <tag group="Helper" tag="AlwaysAvl"/>
    <tag group="Helper" tag="UsesQty"/>
    <tag group="Helper" tag="ShowSpec"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <tag group="gType" tag="Wonder"/>
    </thing>
  <thing id="mS2ElvChai" name="DEPRECATED - Elven Chain" description="{b}Note{/b} If you see this on your character please remove it and re-add &quot;Elven Chain&quot; to your character." compset="Armor">
    <comment>HIDDEN!</comment>
    <fieldval field="gSizeCost" value="5150"/>
    <fieldval field="gWeight" value="20"/>
    <tag group="PieceArcFl" tag="10"/>
    <tag group="ArmorAC" tag="6"/>
    <tag group="ArmorMaxDx" tag="4"/>
    <tag group="ArmorCheck" tag="2"/>
    <tag group="ArmorArcFl" tag="20"/>
    <tag group="ArmorClass" tag="Light"/>
    <tag group="RaceEquip" tag="rElf"/>
    <tag group="Helper" tag="AlwaysMast"/>
    <tag group="ArmorCateg" tag="Gauntlets"/>
    <tag group="Ability" tag="eMithral"/>
    <tag group="HasAbility" tag="eMithral"/>
    <tag group="EquipType" tag="Metal"/>
    <prereq message="This armor is already made out of a special material and can&apos;t add another.">
      <validate><![CDATA[
        ~ If not a pick then we are valid
        validif (@ispick <> 1)
        ~ If we are a not a custom armor we are valid
        validif (tagis[portal.mMagChoose] <> 1)
        ~ We can't have any other special material
        validif (tagcount[Ability.e?] - tagcount[Ability.eNormal] = 1)]]></validate>
      </prereq>
    </thing>
  <thing id="mS2DwPlate" name="DEPRECATED - Dwarven Plate" description="{b}Note{/b} If you see this on your character please remove it and re-add &quot;Dwarven Plate&quot; to your character." compset="Armor">
    <comment>HIDDEN!</comment>
    <fieldval field="gWeight" value="50"/>
    <fieldval field="gSizeCost" value="16500"/>
    <tag group="ArmorClass" tag="Heavy" name="Heavy Armor" abbrev="Heavy"/>
    <tag group="ArmorMaxDx" tag="1" name="1" abbrev="1"/>
    <tag group="EquipType" tag="Metal" name="Metal" abbrev="Metal"/>
    <tag group="ArmorAC" tag="9" name="9" abbrev="9"/>
    <tag group="ArmorArcFl" tag="35" name="35" abbrev="35"/>
    <tag group="ArmorCateg" tag="Gauntlets" name="Includes Gauntlets" abbrev="Gauntlets"/>
    <tag group="RaceEquip" tag="rDwarf"/>
    <tag group="SpecSource" tag="DwarfPlate"/>
    <tag group="Helper" tag="AlwaysMast"/>
    <tag group="HasAbility" tag="eAdamant"/>
    <tag group="Ability" tag="eAdamant"/>
    <tag group="ArmorCateg" tag="Slows" name="Slows" abbrev="Slows"/>
    <tag group="ArmorCheck" tag="5"/>
    <eval phase="PreLevel" priority="10000"><![CDATA[
      ~ If equipped, add our damage reduction
      if (field[gIsEquip].value <> 0) then
         #applydr[xDamRd, 3]
      endif]]></eval>
    <prereq message="This armor is already made out of a special material and can&apos;t add another.">
      <validate><![CDATA[
        ~ If not a pick then we are valid
        validif (@ispick <> 1)
        ~ If we are a not a custom armor we are valid
        validif (tagis[portal.mMagChoose] <> 1)
        ~ We can't have any other special material
        validif (tagcount[Ability.e?] - tagcount[Ability.eNormal] = 1)]]></validate>
      </prereq>
    </thing>
  <thing id="mS2DrPlate" name="DEPRECATED - Dragonhide Plate" description="{b}Note{/b} If you see this on your character please remove it and re-add &quot;Dragonhide Plate&quot; to your character." compset="Armor">
    <comment>HIDDEN!</comment>
    <fieldval field="gWeight" value="50"/>
    <fieldval field="gSizeCost" value="3300"/>
    <tag group="ArmorClass" tag="Heavy" name="Heavy Armor" abbrev="Heavy"/>
    <tag group="ArmorMaxDx" tag="1" name="1" abbrev="1"/>
    <tag group="ArmorAC" tag="9" name="9" abbrev="9"/>
    <tag group="ArmorArcFl" tag="35" name="35" abbrev="35"/>
    <tag group="ArmorCateg" tag="Gauntlets" name="Includes Gauntlets" abbrev="Gauntlets"/>
    <tag group="SpecSource" tag="DwarfPlate"/>
    <tag group="Helper" tag="AlwaysMast"/>
    <tag group="HasAbility" tag="eDragon"/>
    <tag group="Ability" tag="eDragon"/>
    <tag group="ArmorCateg" tag="Slows" name="Slows" abbrev="Slows"/>
    <tag group="ArmorCheck" tag="5"/>
    <prereq message="This armor is already made out of a special material and can&apos;t add another.">
      <validate><![CDATA[
        ~ If not a pick then we are valid
        validif (@ispick <> 1)
        ~ If we are a not a custom armor we are valid
        validif (tagis[portal.mMagChoose] <> 1)
        ~ We can't have any other special material
        validif (tagcount[Ability.e?] - tagcount[Ability.eNormal] = 1)]]></validate>
      </prereq>
    </thing>
  <thing id="mS2MithShi" name="DEPRECATED - Mithral Shirt" description="{b}Note{/b} If you see this on your character please remove it and re-add &quot;Mithral Shirt&quot; to your character." compset="Armor">
    <comment>HIDDEN!</comment>
    <fieldval field="gWeight" value="10"/>
    <fieldval field="gSizeCost" value="1100"/>
    <tag group="EquipType" tag="Metal" name="Metal" abbrev="Metal"/>
    <tag group="PieceArcFl" tag="0"/>
    <tag group="ArmorAC" tag="4" name="4" abbrev="4"/>
    <tag group="ArmorArcFl" tag="10"/>
    <tag group="Helper" tag="AlwaysMast"/>
    <tag group="ArmorCheck" tag="0"/>
    <tag group="Ability" tag="eMithral"/>
    <tag group="HasAbility" tag="eMithral"/>
    <tag group="ArmorClass" tag="Light" name="Light Armor" abbrev="Light"/>
    <tag group="ArmorMaxDx" tag="6"/>
    <prereq message="This armor is already made out of a special material and can&apos;t add another.">
      <validate><![CDATA[
        ~ If not a pick then we are valid
        validif (@ispick <> 1)
        ~ If we are a not a custom armor we are valid
        validif (tagis[portal.mMagChoose] <> 1)
        ~ We can't have any other special material
        validif (tagcount[Ability.e?] - tagcount[Ability.eNormal] = 1)]]></validate>
      </prereq>
    </thing>
  <thing id="aruElvenCh" name="DEPRECATED" description="{b}Note{/b} If you see this on your character please remove it and re-add &quot;Elven Chain&quot; to your character." compset="Armor">
    <comment>HIDDEN!</comment>
    <fieldval field="gSizeCost" value="150"/>
    <fieldval field="gCost" value="5000"/>
    <fieldval field="gWeight" value="20"/>
    <tag group="ArmorClass" tag="Light" name="Light Armor" abbrev="Light"/>
    <tag group="ArmorMaxDx" tag="4" name="4" abbrev="4"/>
    <tag group="EquipType" tag="Metal" name="Metal" abbrev="Metal"/>
    <tag group="Helper" tag="AlwaysMast" name="AlwaysMast" abbrev="AlwaysMast"/>
    <tag group="PieceArcFl" tag="10" name="10" abbrev="10"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <tag group="ArmorAC" tag="6" name="6" abbrev="6"/>
    <tag group="ArmorArcFl" tag="20" name="20" abbrev="20"/>
    <tag group="ArmorCateg" tag="Gauntlets" name="Includes Gauntlets" abbrev="Gauntlets"/>
    <tag group="ArmorCheck" tag="2" name="2" abbrev="2"/>
    <eval phase="PreLevel" priority="10000">~ We no longer Slow
      var result as number
      result = gizmo.delete[ArmorCateg.Slows]</eval>
    <child entity="mSpecMagic">
      <bootstrap thing="arChain"></bootstrap>
      </child>
    </thing>

  <thing id="pS2wUAS" name="DEPRECATED" description="This adjustment is no longer needed as the core Unarmed Strike allows for two-weapon fighting." compset="InPlay">
    <comment>HIDDEN!</comment>
    <usesource source="srcS2Adjus"/>
    <tag group="Helper" tag="CoreCampOK"/>
    <tag group="Helper" tag="NoIncr"/>
    <tag group="OthAdjCat" tag="Race"/>
    <bootstrap thing="wS2Unarmed">
      <containerreq phase="First" priority="99"><![CDATA[fieldval:pIsOn <> 0]]></containerreq>
      </bootstrap>
    </thing>
  <thing id="wS2Unarmed" name="DEPRECATED" description="This weapon is no longer needed as the core Unarmed Strike allows for two-weapon fighting." compset="Weapon">
    <comment>HIDDEN!</comment>
    <usesource source="srcS2Adjus"/>
    <usesource source="srcS2Gear"/>
    <tag group="Helper" tag="NoOutGear"/>
    <tag group="Helper" tag="Proficient"/>
    <tag group="wCategory" tag="Melee"/>
    <tag group="wCategory" tag="Unarmed"/>
    <tag group="wClass" tag="Light"/>
    <tag group="wCritMin" tag="20"/>
    <tag group="wCritMult" tag="2"/>
    <tag group="wFtrGroup" tag="Close"/>
    <tag group="wFtrGroup" tag="Monk"/>
    <tag group="wFtrGroup" tag="Natural"/>
    <tag group="wMain" tag="1d3"/>
    <tag group="wProfReq" tag="Simple"/>
    <tag group="wSpecial" tag="Nonlethal"/>
    <tag group="wType" tag="B"/>
    <tag group="Helper" tag="CoreCampOK"/>
    <tag group="Helper" tag="GearNoSize"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <tag group="IsWeapon" tag="wUnarmed"/>
    <tag group="Helper" tag="NoSelect"/>
    <eval phase="Final" priority="10010"><![CDATA[
      ~ Try and find the base race
      perform hero.findchild[BaseWep,"thingid.wUnarmed"].setfocus
      ~ if can't find then get out now!
      doneif (state.isfocus = 0)

      ~ if wUnarmed does lethal damage than so do we
      if (focus.tagis[wSpecial.Nonlethal] = 0) then
        perform delete[wSpecial.Nonlethal]
      endif

      ~ Set damage
      perform delete[wMain.?]
      perform focus.pulltags[wMain.?]

      ~ Set all the helper tags
      perform focus.pulltags[Helper.?]
      
      ~ If the number of extra attacks is mismatched between the core
      ~ unarmed strike and ourself then redo the tags.
      if (focus.tagcount[Helper.ExtraHigh] <> tagcount[Helper.ExtraHigh]) then
        perform delete[Helper.ExtraHigh]
        var iX as number
        iX = 0
        while (iX < focus.tagcount[Helper.ExtraHigh])
          iX += 1
          ~ Apply the Extra Hight Attack tag to ourself
          perform assign[Helper.ExtraHigh]
        loop      
      endif]]></eval>
    </thing>





  <hidden id="fS2VitStr"/>
  <hidden id="pS2ClsAbDC"/>
  <hidden id="pS2ClsAbTr"/>
  <hidden id="pS2CL"/>
  <hidden id="pS2SKGrALL"/>
  <hidden id="pS2SkGrCHA"/>
  <hidden id="pS2SkGrCON"/>
  <hidden id="pS2SkGrDEX"/>
  <hidden id="pS2SkGrINT"/>
  <hidden id="pS2SkGrSTR"/>
  <hidden id="pS2SkGrWIS"/>
  <hidden id="pS2DRadama"/>
  <hidden id="pS2SchDC"/>
  <hidden id="pS2ALSchDC"/>
  <hidden id="pS2ClsAbV1"/>
  <hidden id="pS2ClsAbV2"/>
  <hidden id="pS2ClsAbV3"/>
  <hidden id="pS2ClsAbV4"/>
  <hidden id="pS2SplRs"/>
  <hidden id="pS2SaveEnh"/>
  <hidden id="pS2SaveIns"/>
  <hidden id="pS2SaveLuc"/>
  <hidden id="pS2SaveMor"/>
  <hidden id="pS2SavePro"/>
  <hidden id="pS2SaveRes"/>
  <hidden id="pS2SaveSac"/>
  <hidden id="pS2SaveTra"/>
  <hidden id="pS2svAlAlc"/>
  <hidden id="pS2svAlCir"/>
  <hidden id="pS2svAlEnh"/>
  <hidden id="pS2svAlIns"/>
  <hidden id="pS2svAlLuc"/>
  <hidden id="pS2svAlMor"/>
  <hidden id="pS2svAlPro"/>
  <hidden id="pS2svAlRes"/>
  <hidden id="pS2svAlSac"/>
  <hidden id="pS2svAlTra"/>
  <hidden id="yACarmor"/>
  <hidden id="yACdeflect"/>
  <hidden id="yACdodge"/>
  <hidden id="yACNatural"/>
  <hidden id="yACShield"/>
  <hidden id="yACtouch"/>
  <hidden id="pS2wViciou"/>
  <hidden id="pS2DRall"/>
  <hidden id="pS2DRbludg"/>
  <hidden id="pS2DRevil"/>
  <hidden id="pS2DRgood"/>
  <hidden id="pS2DRmagic"/>
  <hidden id="pS2DRpierc"/>
  <hidden id="pS2DRsilve"/>
  <hidden id="pS2DRslash"/>
  <hidden id="pS2SaveAlc"/>
  <hidden id="pS2SaveCir"/>
  <hidden id="pS2AttrDra"/>
  <hidden id="aruElvenCh"/>
  <hidden id="mS2MithShi"/>
  <hidden id="mS2DrPlate"/>
  <hidden id="mS2DwPlate"/>
  <hidden id="mS2ElvChai"/>
  <hidden id="ioCBGoodbe"/>
  <hidden id="wS2Unarmed"/>
  <hidden id="pS2wUAS"/>

  </document>