<?xml version="1.0" encoding="UTF-8"?>
<document signature="Hero Lab Data">
  <loadonce key="COM_GMPack_AP_Bestiary - AP15 Iron Gods"/>
  <fileinfo>
    <info_history>
      Iron Gods Bestiary
      2014-10-30 - Added Fires of Creation monsters including Iron Gods deity category and Hellion as a deity.</info_history>
    </fileinfo>
  <thing id="raCBCRbAdT" name="Adaptive Tracker" description="As a full-round action, a collector robot can adapt itself to any environment in which it travels, granting it a +2 bonus on initiative checks and Knowledge (geography), Perception, Stealth, and Survival checks while in that kind of terrain." compset="RaceSpec" uniqueness="useronce">
    <usesource source="PathIronGo"/>
    <tag group="abAction" tag="FullRd"/>
    <tag group="AbilType" tag="Extra"/>
    <tag group="Helper" tag="ShowSpec"/>
    <tag group="User" tag="Activation"/>
    <eval phase="PreLevel" priority="5000"><![CDATA[
      doneif (tagis[Helper.SpcDisable] <> 0)

      doneif (field[abilActive].value = 0)
      ~ gain bonuses in terrain we adapted to
      hero.child[Initiative].field[Bonus].value += 2
      #skillbonus[skKnowGeog] += 2
      #skillbonus[skPercep] += 2
      #skillbonus[skStealth] += 2
      #skillbonus[skSurvival] += 2]]></eval>
    </thing>
  <thing id="raCBCRbInS" name="Integrated Stun Gun" description="A collector robot has an integrated stun gun slung beneath its body. This weapon uses a powerful sonic amplifier to produce powerful lowfrequency blasts of energy that pummel targets. This weapon has a range increment of 20 feet, and it deals 1d8 points of nonlethal damage. On a critical hit, the robot can attempt a free trip combat maneuver (CMB +12) against the target, which does not provoke attacks of opportunity." compset="RaceSpec" summary="On crit, attempt free trip CMB=BAB + 10">
    <usesource source="PathIronGo"/>
    <tag group="SpecType" tag="Attack"/>
    <tag group="AbilType" tag="Extra"/>
    <tag group="wMain" tag="1d8_6"/>
    <tag group="Helper" tag="NoAttrDam"/>
    <tag group="wCritMin" tag="20"/>
    <tag group="wCritMult" tag="2"/>
    <tag group="Helper" tag="ShowSpec"/>
    <tag group="wSpecial" tag="Nonlethal"/>
    <tag group="Helper" tag="WeaponSpec"/>
    <tag group="wRangeInc" tag="20"/>
    <tag group="wCategory" tag="RangeProj"/>
    <tag group="wSpecial" tag="SemiAuto"/>
    <tag group="Helper" tag="SingleAtt"/>
    <tag group="wCategory" tag="Firearm"/>
    <tag group="SpecType" tag="AttackSpec"/>
    </thing>
  <thing id="raCBCRbITk" name="Integrated Tracking" description="A collector robot has integrated systems that allow it to tag and track creatures. As a full-round action, a collector robot can implant a tracker chip into the body of a target that it is grappling or a helpless target. Once implanted, the tracker chip is activated and the collector robot’s chipfinder can detect the presence of the implanted tracker chip within 1 mile. It uses a signal to locate the tracker chips, and this signal can be blocked by 1 foot of metal, 5 feet of stone, or 20 feet of organic matter. A tracker chip can be removed with a sharp tool. Doing so deals 1 point of damage. Once an implanted tracker chip is removed from the body (or remains in a body after it dies) it retains enough energy to continue to be detected by the collector robot’s sensors for 1 week." compset="RaceSpec" summary="Implant tracker chip in grappled or helpless target as a full-round action.">
    <usesource source="PathIronGo"/>
    <tag group="abAction" tag="FullRd"/>
    <tag group="Helper" tag="ShowSpec"/>
    <tag group="SpecType" tag="Attack"/>
    <tag group="AbilType" tag="Extra"/>
    </thing>
  <thing id="raCBCRbRaG" name="Reactive Gyros" description="The rotors that grant a collector robot flight also provide quick reactions to threats and external stimuli, granting it a +3 racial bonus on Reflex saves." compset="RaceSpec" summary="Rotors grant +3 racial bonus to Reflex saves.">
    <usesource source="PathIronGo"/>
    <tag group="SpecType" tag="Defense"/>
    <tag group="AbilType" tag="Extra"/>
    <tag group="Helper" tag="ShowSpec"/>
    <eval phase="PreLevel" priority="4000"><![CDATA[
doneif (tagis[Helper.SpcDisable] <> 0)

hero.child[svRef].field[Racial].value += 3]]></eval>
    </thing>
  <thing id="rCBRbColAq" name="Robot, Aquatic Collector" description="Serving as long-distance scouts, trackers, and acquisition agents, collector robots see frequent use in the study and collection of alien life forms on new worlds. They can operate independently for years, cataloging unique species while enduring extreme environments that would overwhelm their biological makers. These machines may tag a captive creature with a tracker chip that can be monitored and tracked with their integrated chipfinders. They do so to observe and document the behavioral patterns of such creatures from afar, studying viable specimens for days until they eventually isolate and retrieve the studied prey again for further examination in the controlled laboratories of the robots’ masters.\n\nAmong their more impressive features, collector robots possess a hardened artificial intelligence, maintaining a singular focus on their mission directives even when wandering out of communication range with their owners. They tend to react swiftly to movement and perceived threats to their physical security, either emitting loud tones or alarms as a preemptive warning, or flying upward to gain altitude before assessing a given situation and potentially opening fire in defense of itself. Some collector robots grow more lax in their analysis protocols over time, giving way to a state similar to paranoia if left in the field for too long. This corrupted logic inevitably leads them to interpret even the most innocuous actions as proof of hostile intent. Other collectors become fixated on their directive to retrieve specimens without undue damage, interpreting it as a need to protect their targets from all possible sources of harm.\n\nAdapted for use in marine environments, aquatic collector robots abandon flight for a swim speed of 30 ft. Their integrated stun guns still function underwater, though they are based on frequencies designed to work more efficiently in aquatic environments.\n\n{b}Ecology{/b}\nCollector robots have no defined ecology, as they are built by others and gifted with a unique purpose and skill set. Most often, they emerge from automated factories, engineering shops, and scrap heaps under the direction of a controlling authority that activates them and assigns their missions. Thereafter, the power cores of collector robots last indefinitely. Most collector robots have fusion generators, but some have the ability to derive power from the sun, making them capable of recharging several weeks’ worth of operating power with solar energy in a single daytime “sleep” cycle. During prolonged missions, collector robots often support one another in the absence of their masters, dragging damaged units back to repair facilities and cooperating to achieve any mutual goals. Collector robots have a similar protectiveness toward other robots of various types, treating them almost like siblings.\n\n{b}Habitat &amp; Society{/b}\nCollector robots have little in the way of organized society, but do array themselves in a rigid hierarchy as designated by their controlling authority. Individual collectors may carry a higher rank than other robots, and thus are capable of commanding lesser machines they encounter or even overriding their programming with new directives as they commandeer aid in carrying out their assigned missions. This often leads to symbiotic relationships with servant robots capable of repairing and assisting with their upkeep.\n\nCollector robots first appeared in Numeria, but some have since wandered further afield, slaves to their dedicated programming as they go about cataloging, tagging, and occasionally tracking various life forms— sentient or otherwise. Some rogue collector robots kidnap people and creatures, and secret them away in remote caves. Others cascaded from the starship Divinity during its original descent, falling to Golarion as newly deployed probes far outside the range of Unity’s control, thus free to pursue individual interests. A few enterprising Technic League wizards and alchemists have managed to control some of these automatons, taming and reprogramming them to suit their purposes. New directives for these automatons typically involve the abduction or assassination of targets that their overseers program into them." compset="Race">
    <fieldval field="rHitDice" value="2"/>
    <fieldval field="rHPStart" value="11"/>
    <fieldval field="rSTR" value="7"/>
    <fieldval field="rDEX" value="7"/>
    <fieldval field="rINT" value="2"/>
    <fieldval field="rWIS" value="4"/>
    <fieldval field="rCHA" value="-9"/>
    <fieldval field="rSpeed" value="10"/>
    <fieldval field="rFeat" value="-1"/>
    <fieldval field="rAC" value="3"/>
    <fieldval field="rCR" value="3"/>
    <fieldval field="rDescript" value="A soft whirring noise accompanies this flying mechanical creature. Its arms and hands end in spindly, multi-jointed fingers, and four circular rotors hold the creature aloft."/>
    <fieldval field="rEnviron" value="any (Numeria)"/>
    <fieldval field="rOrgan" value="solitary, pair, or unit (3-6)"/>
    <fieldval field="rTreasure" value="none"/>
    <fieldval field="rLangBonus" value="-1"/>
    <usesource source="PathIronGo"/>
    <tag group="RaceSize" tag="Medium0"/>
    <tag group="Hero" tag="NoDefComm"/>
    <tag group="Alignment" tag="NeutralLC"/>
    <tag group="Alignment" tag="NeutralGE"/>
    <tag group="Helper" tag="NotHum"/>
    <tag group="SlotSet" tag="selMISAvia"/>
    <tag group="RaceType" tag="NPC"/>
    <tag group="Helper" tag="NoPathSoc"/>
    <tag group="NoScore" tag="aINT"/>
    <tag group="HasType" tag="tpConst"/>
    <bootstrap thing="raGrab">
      <autotag group="Target" tag="wSlam"/>
      </bootstrap>
    <bootstrap thing="xAllAround"></bootstrap>
    <bootstrap thing="raHardness">
      <autotag group="Value" tag="10"/>
      </bootstrap>
    <bootstrap thing="raCBCRbAdT"></bootstrap>
    <bootstrap thing="raCBCRbInS"></bootstrap>
    <bootstrap thing="raCBCRbITk"></bootstrap>
    <bootstrap thing="raCBCRbRaG"></bootstrap>
    <bootstrap thing="lAndroffen"></bootstrap>
    <bootstrap thing="stRobot"></bootstrap>
    <bootstrap thing="fImpInit"></bootstrap>
    <bootstrap thing="wSlam">
      <autotag group="wMain" tag="1d4_4"/>
      <autotag group="Value" tag="2"/>
      </bootstrap>
    <bootstrap thing="xSwim">
      <autotag group="Value" tag="60"/>
      </bootstrap>
    <eval phase="PreLevel" priority="4000"><![CDATA[
#racialbonus[skPercep] += 4
#racialsituational[hero.child[skSurvival],"+ 4 to follow or identify track",field[name].text]

#skillinnate[skPercep] += 2
#skillinnate[skStealth] += 2
#skillinnate[skSurvival] += 2]]>
      <before name="Skill Bonus Feats"/>
      </eval>
    <eval phase="Final" index="3">perform hero.child[skPercep].delete[Helper.ClassSkill]</eval>
    <eval phase="First" priority="200" index="2"><![CDATA[
field[livename].text = "Aquatic Collector Robot"]]>
      <before name="Template Name Modification"/>
      </eval>
    </thing>
  <thing id="rCBRbExter" name="Robot, Extermination" description="Serving as long-distance scouts, trackers, and acquisition agents, collector robots see frequent use in the study and collection of alien life forms on new worlds. They can operate independently for years, cataloging unique species while enduring extreme environments that would overwhelm their biological makers. These machines may tag a captive creature with a tracker chip that can be monitored and tracked with their integrated chipfinders. They do so to observe and document the behavioral patterns of such creatures from afar, studying viable specimens for days until they eventually isolate and retrieve the studied prey again for further examination in the controlled laboratories of the robots’ masters.\n\nAmong their more impressive features, collector robots possess a hardened artificial intelligence, maintaining a singular focus on their mission directives even when wandering out of communication range with their owners. They tend to react swiftly to movement and perceived threats to their physical security, either emitting loud tones or alarms as a preemptive warning, or flying upward to gain altitude before assessing a given situation and potentially opening fire in defense of itself. Some collector robots grow more lax in their analysis protocols over time, giving way to a state similar to paranoia if left in the field for too long. This corrupted logic inevitably leads them to interpret even the most innocuous actions as proof of hostile intent. Other collectors become fixated on their directive to retrieve specimens without undue damage, interpreting it as a need to protect their targets from all possible sources of harm.\n\nNewly encountered life forms can sometimes threaten the safety of landing parties or the ecological balance of controlled environments. Extermination robots serve a more specialized role than collectors, programming themselves to track and annihilate a single type of creature. This ability grants a favored enemy bonus (as the ranger class ability) against a single creature type chosen from the ranger favored enemies table. The robot also comes equipped with a longer-range arc rifle.\n\n{b}Ecology{/b}\nCollector robots have no defined ecology, as they are built by others and gifted with a unique purpose and skill set. Most often, they emerge from automated factories, engineering shops, and scrap heaps under the direction of a controlling authority that activates them and assigns their missions. Thereafter, the power cores of collector robots last indefinitely. Most collector robots have fusion generators, but some have the ability to derive power from the sun, making them capable of recharging several weeks’ worth of operating power with solar energy in a single daytime “sleep” cycle. During prolonged missions, collector robots often support one another in the absence of their masters, dragging damaged units back to repair facilities and cooperating to achieve any mutual goals. Collector robots have a similar protectiveness toward other robots of various types, treating them almost like siblings.\n\n{b}Habitat &amp; Society{/b}\nCollector robots have little in the way of organized society, but do array themselves in a rigid hierarchy as designated by their controlling authority. Individual collectors may carry a higher rank than other robots, and thus are capable of commanding lesser machines they encounter or even overriding their programming with new directives as they commandeer aid in carrying out their assigned missions. This often leads to symbiotic relationships with servant robots capable of repairing and assisting with their upkeep.\n\nCollector robots first appeared in Numeria, but some have since wandered further afield, slaves to their dedicated programming as they go about cataloging, tagging, and occasionally tracking various life forms— sentient or otherwise. Some rogue collector robots kidnap people and creatures, and secret them away in remote caves. Others cascaded from the starship Divinity during its original descent, falling to Golarion as newly deployed probes far outside the range of Unity’s control, thus free to pursue individual interests. A few enterprising Technic League wizards and alchemists have managed to control some of these automatons, taming and reprogramming them to suit their purposes. New directives for these automatons typically involve the abduction or assassination of targets that their overseers program into them." compset="Race">
    <fieldval field="rHitDice" value="2"/>
    <fieldval field="rHPStart" value="11"/>
    <fieldval field="rSTR" value="7"/>
    <fieldval field="rDEX" value="7"/>
    <fieldval field="rINT" value="2"/>
    <fieldval field="rWIS" value="4"/>
    <fieldval field="rCHA" value="-9"/>
    <fieldval field="rSpeed" value="10"/>
    <fieldval field="rFeat" value="-1"/>
    <fieldval field="rAC" value="3"/>
    <fieldval field="rCR" value="4"/>
    <fieldval field="rDescript" value="A soft whirring noise accompanies this flying mechanical creature. Its arms and hands end in spindly, multi-jointed fingers, and four circular rotors hold the creature aloft."/>
    <fieldval field="rEnviron" value="any (Numeria)"/>
    <fieldval field="rOrgan" value="solitary, pair, or unit (3-6)"/>
    <fieldval field="rTreasure" value="none"/>
    <fieldval field="rLangBonus" value="-1"/>
    <usesource source="PathIronGo"/>
    <tag group="RaceSize" tag="Medium0"/>
    <tag group="Hero" tag="NoDefComm"/>
    <tag group="Alignment" tag="NeutralLC"/>
    <tag group="Alignment" tag="NeutralGE"/>
    <tag group="Helper" tag="NotHum"/>
    <tag group="SlotSet" tag="selMISAvia"/>
    <tag group="RaceType" tag="NPC"/>
    <tag group="Helper" tag="NoPathSoc"/>
    <tag group="NoScore" tag="aINT"/>
    <tag group="HasType" tag="tpConst"/>
    <bootstrap thing="raGrab">
      <autotag group="Target" tag="wSlam"/>
      </bootstrap>
    <bootstrap thing="xAllAround"></bootstrap>
    <bootstrap thing="raHardness">
      <autotag group="Value" tag="10"/>
      </bootstrap>
    <bootstrap thing="raCBCRbAdT"></bootstrap>
    <bootstrap thing="raCBRbInAr"></bootstrap>
    <bootstrap thing="raCBCRbITk"></bootstrap>
    <bootstrap thing="raCBCRbRaG"></bootstrap>
    <bootstrap thing="lAndroffen"></bootstrap>
    <bootstrap thing="stRobot"></bootstrap>
    <bootstrap thing="xFly">
      <autotag group="Maneuver" tag="Perfect"/>
      <autotag group="Value" tag="60"/>
      </bootstrap>
    <bootstrap thing="fImpInit"></bootstrap>
    <bootstrap thing="wSlam">
      <autotag group="wMain" tag="1d4_4"/>
      <autotag group="Value" tag="2"/>
      </bootstrap>
    <bootstrap thing="raCBFavEne"></bootstrap>
    <eval phase="PreLevel" priority="4000"><![CDATA[
#racialbonus[skPercep] += 4
#racialsituational[hero.child[skSurvival],"+ 4 to follow or identify track",field[name].text]

#skillinnate[skPercep] += 2
#skillinnate[skStealth] += 2
#skillinnate[skSurvival] += 2]]>
      <before name="Skill Bonus Feats"/>
      </eval>
    <eval phase="Final" index="3">perform hero.child[skPercep].delete[Helper.ClassSkill]</eval>
    <eval phase="First" priority="200" index="2"><![CDATA[
field[livename].text = "Extermination Robot"]]>
      <before name="Template Name Modification"/>
      </eval>
    </thing>
  <thing id="raCBFavEne" name="Favored Enemy" description="Gains a +2 bonus on Bluff, Knowledge, Perception, Sense Motive, and Survival checks against selected creature type. Likewise, gain a +2 bonus on weapon attack and damage rolls against them. Creature may make Knowledge skill checks untrained when attempting to identify these creatures." compset="RaceSpec">
    <tag group="AbilType" tag="Extra" name="Extraordinary Ability" abbrev=" (Ex)"/>
    <tag group="Helper" tag="ShowSpec" name="Show Spec" abbrev="Show Spec"/>
    <tag group="ProductId" tag="HLCommunit" name="Hero Lab Community" abbrev="Hero Lab Community"/>
    <tag group="SpecType" tag="Attack" name="Attack" abbrev="Attack"/>
    <bootstrap thing="cfgCBFavEn"></bootstrap>
    </thing>
  <thing id="cfgCBFavEn" name="Favored Enemy" compset="Configure" uniqueness="unique">
    <fieldval field="cfgMax1" value="1"/>
    <fieldval field="cfgAllow1" value="thingid.fe?"/>
    <fieldval field="cfgObject1" value="Favored Enemy"/>
    <eval phase="Final" priority="1000"><![CDATA[
var cnt as number
foreach pick in hero from Ability where "CustTaken.cfgCBFavEn"
  cnt += 1
nexteach

field[cfgSpent1].value = cnt]]></eval>
    </thing>
  <thing id="raCBRbInAr" name="Integrated Arc Rifle" description="An arc rifle is a larger, more powerful version of an arc pistol.\n\nAn arc pistol emits bolts of ionized particles that it then electrifies, creating a crackling beam of electricity between it and its target. Arc pistols gain a +2 circumstance bonus on attack rolls against targets that are metal or are wearing medium or heavy metal armor." compset="RaceSpec">
    <usesource source="PathIronGo"/>
    <tag group="SpecType" tag="Attack"/>
    <tag group="Helper" tag="WeaponSpec"/>
    <tag group="AbilType" tag="Extra"/>
    <tag group="wCategory" tag="RangeProj"/>
    <tag group="wCategory" tag="Firearm"/>
    <tag group="wMain" tag="2d6_104"/>
    <tag group="wType" tag="Elec"/>
    <tag group="wCritMin" tag="20"/>
    <tag group="wCritMult" tag="2"/>
    <tag group="Helper" tag="ShowSpec"/>
    <tag group="wCategory" tag="Touch"/>
    <tag group="Helper" tag="NoAttrDam"/>
    <tag group="wRangeInc" tag="150"/>
    <tag group="wSpecial" tag="Automatic"/>
    </thing>
  <thing id="rCBRbTrapp" name="Robot, Trapper" description="Serving as long-distance scouts, trackers, and acquisition agents, collector robots see frequent use in the study and collection of alien life forms on new worlds. They can operate independently for years, cataloging unique species while enduring extreme environments that would overwhelm their biological makers. These machines may tag a captive creature with a tracker chip that can be monitored and tracked with their integrated chipfinders. They do so to observe and document the behavioral patterns of such creatures from afar, studying viable specimens for days until they eventually isolate and retrieve the studied prey again for further examination in the controlled laboratories of the robots’ masters.\n\nAmong their more impressive features, collector robots possess a hardened artificial intelligence, maintaining a singular focus on their mission directives even when wandering out of communication range with their owners. They tend to react swiftly to movement and perceived threats to their physical security, either emitting loud tones or alarms as a preemptive warning, or flying upward to gain altitude before assessing a given situation and potentially opening fire in defense of itself. Some collector robots grow more lax in their analysis protocols over time, giving way to a state similar to paranoia if left in the field for too long. This corrupted logic inevitably leads them to interpret even the most innocuous actions as proof of hostile intent. Other collectors become fixated on their directive to retrieve specimens without undue damage, interpreting it as a need to protect their targets from all possible sources of harm.\n\nSome robots cover a wider range of territory by deploying traps rather than hunting creatures individually. Designed to capture specimens for retrieval and sedation, they have gravity-based snares which function similar to the snare spell. They can deploy up to five of these devices and remain linked to them via tracker chips and an integrated chipfinder. When a snare is sprung, it sends an alert to the trapper robot, which then hurries to retrieve its quarry.\n\n{b}Ecology{/b}\nCollector robots have no defined ecology, as they are built by others and gifted with a unique purpose and skill set. Most often, they emerge from automated factories, engineering shops, and scrap heaps under the direction of a controlling authority that activates them and assigns their missions. Thereafter, the power cores of collector robots last indefinitely. Most collector robots have fusion generators, but some have the ability to derive power from the sun, making them capable of recharging several weeks’ worth of operating power with solar energy in a single daytime “sleep” cycle. During prolonged missions, collector robots often support one another in the absence of their masters, dragging damaged units back to repair facilities and cooperating to achieve any mutual goals. Collector robots have a similar protectiveness toward other robots of various types, treating them almost like siblings.\n\n{b}Habitat &amp; Society{/b}\nCollector robots have little in the way of organized society, but do array themselves in a rigid hierarchy as designated by their controlling authority. Individual collectors may carry a higher rank than other robots, and thus are capable of commanding lesser machines they encounter or even overriding their programming with new directives as they commandeer aid in carrying out their assigned missions. This often leads to symbiotic relationships with servant robots capable of repairing and assisting with their upkeep.\n\nCollector robots first appeared in Numeria, but some have since wandered further afield, slaves to their dedicated programming as they go about cataloging, tagging, and occasionally tracking various life forms— sentient or otherwise. Some rogue collector robots kidnap people and creatures, and secret them away in remote caves. Others cascaded from the starship Divinity during its original descent, falling to Golarion as newly deployed probes far outside the range of Unity’s control, thus free to pursue individual interests. A few enterprising Technic League wizards and alchemists have managed to control some of these automatons, taming and reprogramming them to suit their purposes. New directives for these automatons typically involve the abduction or assassination of targets that their overseers program into them." compset="Race">
    <fieldval field="rHitDice" value="2"/>
    <fieldval field="rHPStart" value="11"/>
    <fieldval field="rSTR" value="7"/>
    <fieldval field="rDEX" value="7"/>
    <fieldval field="rINT" value="2"/>
    <fieldval field="rWIS" value="4"/>
    <fieldval field="rCHA" value="-9"/>
    <fieldval field="rSpeed" value="10"/>
    <fieldval field="rFeat" value="-1"/>
    <fieldval field="rAC" value="3"/>
    <fieldval field="rCR" value="4"/>
    <fieldval field="rDescript" value="A soft whirring noise accompanies this flying mechanical creature. Its arms and hands end in spindly, multi-jointed fingers, and four circular rotors hold the creature aloft."/>
    <fieldval field="rEnviron" value="any (Numeria)"/>
    <fieldval field="rOrgan" value="solitary, pair, or unit (3-6)"/>
    <fieldval field="rTreasure" value="none"/>
    <fieldval field="rLangBonus" value="-1"/>
    <usesource source="PathIronGo"/>
    <tag group="RaceSize" tag="Medium0"/>
    <tag group="Hero" tag="NoDefComm"/>
    <tag group="Alignment" tag="NeutralLC"/>
    <tag group="Alignment" tag="NeutralGE"/>
    <tag group="Helper" tag="NotHum"/>
    <tag group="SlotSet" tag="selMISAvia"/>
    <tag group="RaceType" tag="NPC"/>
    <tag group="Helper" tag="NoPathSoc"/>
    <tag group="NoScore" tag="aINT"/>
    <tag group="HasType" tag="tpConst"/>
    <bootstrap thing="raGrab">
      <autotag group="Target" tag="wSlam"/>
      </bootstrap>
    <bootstrap thing="xAllAround"></bootstrap>
    <bootstrap thing="raHardness">
      <autotag group="Value" tag="10"/>
      </bootstrap>
    <bootstrap thing="raCBCRbAdT"></bootstrap>
    <bootstrap thing="raCBCRbInS"></bootstrap>
    <bootstrap thing="raCBCRbITk"></bootstrap>
    <bootstrap thing="raCBCRbRaG"></bootstrap>
    <bootstrap thing="lAndroffen"></bootstrap>
    <bootstrap thing="stRobot"></bootstrap>
    <bootstrap thing="xFly">
      <autotag group="Maneuver" tag="Perfect"/>
      <autotag group="Value" tag="60"/>
      </bootstrap>
    <bootstrap thing="fImpInit"></bootstrap>
    <bootstrap thing="wSlam">
      <autotag group="wMain" tag="1d4_4"/>
      <autotag group="Value" tag="2"/>
      </bootstrap>
    <bootstrap thing="raCBTRbSna"></bootstrap>
    <eval phase="PreLevel" priority="4000"><![CDATA[
#racialbonus[skPercep] += 4
#racialsituational[hero.child[skSurvival],"+ 4 to follow or identify track",field[name].text]

#skillinnate[skPercep] += 2
#skillinnate[skStealth] += 2
#skillinnate[skSurvival] += 2]]>
      <before name="Skill Bonus Feats"/>
      </eval>
    <eval phase="Final" index="3">perform hero.child[skPercep].delete[Helper.ClassSkill]</eval>
    <eval phase="First" priority="200" index="2"><![CDATA[
field[livename].text = "Collector Robot"]]>
      <before name="Template Name Modification"/>
      </eval>
    </thing>
  <thing id="raCBTRbSna" name="Gravity Snare" description="Designed to capture specimens for retrieval and sedation, gravity-based snares function similar to the {i}snare{/i} spell. A trapper robot can deploy up to five of these devices and remain linked to them via tracker chips and an integrated chipfinder. When a snare is sprung, it sends an alert to the trapper robot, which then hurries to retrieve its quarry." compset="RaceSpec" summary="Captures and sedates targets.">
    <fieldval field="trkMax" value="5"/>
    <usesource source="PathIronGo"/>
    <tag group="AbilType" tag="Extra"/>
    <tag group="User" tag="Tracker"/>
    <tag group="Helper" tag="ShowSpec"/>
    <tag group="abAction" tag="Standard"/>
    </thing>
  <thing id="rCBGhelarn" name="Ghelarn" description="Born on the desert plain of an alien world, the softbodied ghelarn is a non-aquatic arthropod living within a shell-like exoskeleton manufactured from its own hardened secretions. This outer carapace contains many perforations, similar to dry coral or air-blasted stone, providing ample room from which the ghelarn can extend its outer extremities and explore the world. Chief among these appendages are two main tentacles that it uses to pull itself through the upper layers of sand within its native home, burrowing just below the surface while its hardened carapace remains above ground. As a result, ghelarns give the impression of ambulatory stone formations when traveling, but they can also abandon their shells entirely and delve deeper into the sand to avoid predators.\n\nPatient, quiet creatures, ghelarns prefer to ambush prey, waiting until suitable meals wander within reach of their tentacles or into the sticky quagmires they create just below the surface around their nesting grounds. Helpless victims soon find themselves pulled into the sand as the ghelarn extends invasive tendrils from its lower body. These lesser tentacles slowly bleed away moisture from anyone trapped in the ooze, leaving behind little more than dried husks and bones for scavengers to find, along with whatever equipment such victims may have carried.\n\n{b}Ecology{/b}\nDuring the creatures’ spawning season, an entire clutch of ghelarns produces a variant musk in their secretions to attract one another. Some travel for miles in search of this scent, and the resulting orgy once a group gathers allows for a communal intermingling of reproductive oils. This impregnates multiple ghelarn at the same time, enabling them to spawn new offspring as they separate again. A typical ghelarn can create 1d3 young, which gestate for consecutive 3-month periods rather than being born all at once. Pregnant ghelarns abandon these young to fend for themselves almost as soon as they’re born, moving to another region to birth more offspring rather than leaving them within the same area to compete for resources.\n\nIt takes a newborn ghelarn about 2 weeks before it can muster enough secretions to form a hardened shell of its own. During this time, it stays deep below the earth, seeking nourishment and moisture trapped in the desert soil rather than risking its vulnerable body to predators above ground. Once fully matured, it pushes upward, its shell rising from the sand to mark its domain. Sentient creatures wisely avoid these areas, though it’s often hard to tell empty shells from a living ghelarn’s hunting grounds. Many societies find the abandoned and cast-off shells useful for making tools and crafting weapons and armor. As a result, ghelarn habitats frequently draw those seeking to harvest them as a resource. Unfortunately for the scavengers, these shells also attract young ghelarns who haven’t yet formed their own and seek to use the abandoned ones as temporary homes.\n\n{b}Habitat &amp; Society{/b}\nGhelarns typically live solitary lives. The extreme nature of their native habitat causes them to separate and spread out to avoid overhunting an area. They sometimes cooperate in pairs or packs known as clutches to defend themselves, but more frequently do so in preparation for mating season, so they can drag down large prey that they leave behind for their new offspring to feed upon. Sometimes a clutch will gather in geologically unstable regions, where quakes and tremors draw their interest. Mostly, they migrate in seemingly aimless patterns, driven away from the harsh sounds of overhead thunderstorms, as the noise causes them acute pain.\n\nThe rudimentary sentience of ghelarns places them just above animal-level intelligence. Though they have no real language of their own, they communicate warnings or call for help by turning their porous shells into the wind and adjusting the flow with their tentacles, allowing air to pass through the openings, and creating a musical “voice” similar to wind instruments. Each ghelarn’s voice is distinctly different from any other ghelarn. Some societies have also learned to domesticate young ghelarns—these cultures train them to understand simple commands and use them as guard animals." compset="Race">
    <fieldval field="rHitDice" value="3"/>
    <fieldval field="rHPStart" value="13"/>
    <fieldval field="rSTR" value="7"/>
    <fieldval field="rCON" value="6"/>
    <fieldval field="rINT" value="-7"/>
    <fieldval field="rWIS" value="4"/>
    <fieldval field="rCHA" value="-7"/>
    <fieldval field="rFeat" value="-2"/>
    <fieldval field="rAC" value="5"/>
    <fieldval field="rCR" value="2"/>
    <fieldval field="rDescript" value="Purple tentacles emerge from a white, coral-like rock formation, tracing whirled patterns in the surrounding sand."/>
    <fieldval field="rEnviron" value="cold or temperate deserts"/>
    <fieldval field="rOrgan" value="solitary"/>
    <fieldval field="rTreasure" value="none"/>
    <fieldval field="rSpace" value="10"/>
    <fieldval field="rReach" value="10"/>
    <usesource source="PathIronGo"/>
    <tag group="RaceType" tag="NPC"/>
    <tag group="RaceSize" tag="Large1"/>
    <tag group="HasType" tag="tpAberr"/>
    <tag group="Hero" tag="NoDefComm"/>
    <tag group="Helper" tag="NotHum"/>
    <tag group="Alignment" tag="NeutralLC"/>
    <tag group="Alignment" tag="NeutralGE"/>
    <tag group="Hero" tag="CantSpeak"/>
    <tag group="Helper" tag="NoPathSoc"/>
    <bootstrap thing="xVulSonic"></bootstrap>
    <bootstrap thing="xDamRsFire">
      <autotag group="Value" tag="5"/>
      </bootstrap>
    <bootstrap thing="fComRef"></bootstrap>
    <bootstrap thing="fSkillFoc">
      <autotag group="Target" tag="skPercep"/>
      </bootstrap>
    <bootstrap thing="wTentacle">
      <autotag group="wMain" tag="1d6_5"/>
      <autotag group="Value" tag="2"/>
      </bootstrap>
    <bootstrap thing="xTremorsen">
      <autotag group="Value" tag="30"/>
      </bootstrap>
    <bootstrap thing="raCBGheCar"></bootstrap>
    <bootstrap thing="raEntrap"></bootstrap>
    <bootstrap thing="raCBGheHib"></bootstrap>
    <bootstrap thing="raCBGheLeT"></bootstrap>
    <eval phase="PreLevel" priority="4000"><![CDATA[
#racialbonus[skStealth] += 4
#racialsituational[hero.child[skStealth],"+10 in deserts",field[name].text]

#skillinnate[skPercep] += 2
#skillinnate[skStealth] += 1]]>
      <before name="Skill Bonus Feats"/>
      </eval>
    <eval phase="Render" priority="1000" index="2"><![CDATA[
~ append to entrap

var entr_txt as string
entr_txt = "A ghelarn secretes a quagmire of sticky fluid a few feet below the sand where it lives. This fluid extends in a 10-foot radius around the creature and acts to trap victims, making it easier for the ghelarn to attack prey with its tentacles or feed upon it with its leeching tendrils. This otherwise acts as the entrap universal monster rule."

hero.childfound[raEntrap].field[DescAppend].text = entr_txt

~ set abText for entrap and sbName
hero.childfound[raEntrap].field[abText].text = "1d8 rounds, hardness 5, hp 8"

hero.childfound[raEntrap].field[sbName].text = "entrap (DC " & hero.childfound[raEntrap].field[abDC].value & ", " & hero.childfound[raEntrap].field[abText].text & ")"]]></eval>
    </thing>
  <thing id="raCBGheCar" name="Carapace" description="A ghelarn typically shelters within a hardened, rocklike shell that houses all of its vital organs. By withdrawing its tentacles and sensory stalks into its shell, the ghelarn gains total cover until the beginning of its next turn. The shell doesn’t provide cover against targeted spells, and the ghelarn’s movement is limited to downward burrowing during this time. The benefits of the shell can be lost if sundered (hardness 5, 8 hit points, regenerates in 2d6 days), and a ghelarn caught without its carapace loses its natural armor bonus." compset="RaceSpec" summary="Gain total cover by withdrawing into shell.">
    <usesource source="PathIronGo"/>
    <tag group="Helper" tag="ShowSpec"/>
    <tag group="AbilType" tag="Extra"/>
    <tag group="SpecType" tag="Defense"/>
    </thing>
  <thing id="raCBGheHib" name="Hibernate" description="When food is scarce, a ghelarn can enter a state of hibernation for an indefinite period of time. When it enters hibernation, the ghelarn nestles itself in the sand and fills in its porous carapace with sticky excretions that quickly harden to seal the creature from the elements. When hibernating, the ghelarn doesn’t have to eat or drink. A ghelarn remains in a state of hibernation until it senses another living creature within 10 feet, at which point it dissolves the seals on its carapace over the course of 1d4 minutes." compset="RaceSpec" summary="Can enter a state of hibernation for an indefinite period of time.">
    <usesource source="PathIronGo"/>
    <tag group="AbilType" tag="Extra"/>
    <tag group="Helper" tag="ShowSpec"/>
    </thing>
  <thing id="raCBGheLeT" name="Leeching Tendrils" description="A living creature that spends more than a single round ensnared within a ghelarn’s entrapping fluid becomes targeted by invasive tendrils from the ghelarn’s lower body. These feeding stalks deal 1 point of bleed damage each round, and continue to do so for as long as a victim remains within the area of the ghelarn’s entrapping fluid." compset="RaceSpec" summary="Tendrils deal 1 bleed/round to those ensnared within entrapping fluid.">
    <usesource source="PathIronGo"/>
    <tag group="SpecType" tag="Attack"/>
    <tag group="AbilType" tag="Extra"/>
    <tag group="Helper" tag="ShowSpec"/>
    </thing>
  <thing id="rCBGhelNob" name="Ghelarn, Noble" description="Occasionally, evolution gives rise to a more advanced breed of ghelarn. These specimens have both the advanced and giant simple templates, and prove more intelligent than their lesser kin. The shell of a noble ghelarn encompasses a much greater area, appearing more like an outcropping of rock or a small hillside. This grants them the freeze special quality to appear as such, allowing them to take 20 on their Stealth checks to hide in plain sight. Noble ghelarns sometimes remain hidden within these massive shells and purposefully suppress their entrapping ooze in order to dupe other creatures into seeking shelter next to them. While the tall shell certainly provides shade from the sun and a windbreak against desert storms, those camping near a noble ghelarn inevitably find themselves assaulted during the night by the creature’s invasive tendrils. These appendages are more leechlike than the painful barbs of lesser ghelarns and require a DC 20 Perception check for sleeping creatures to notice." compset="Race">
    <fieldval field="rHitDice" value="3"/>
    <fieldval field="rHPStart" value="13"/>
    <fieldval field="rSTR" value="15"/>
    <fieldval field="rCON" value="14"/>
    <fieldval field="rINT" value="-3"/>
    <fieldval field="rWIS" value="8"/>
    <fieldval field="rCHA" value="-3"/>
    <fieldval field="rFeat" value="-2"/>
    <fieldval field="rAC" value="10"/>
    <fieldval field="rCR" value="4"/>
    <fieldval field="rDescript" value="Purple tentacles emerge from a white, coral-like rock formation, tracing whirled patterns in the surrounding sand."/>
    <fieldval field="rEnviron" value="cold or temperate deserts"/>
    <fieldval field="rOrgan" value="solitary"/>
    <fieldval field="rTreasure" value="none"/>
    <fieldval field="rSpace" value="10"/>
    <fieldval field="rReach" value="10"/>
    <fieldval field="rDEX" value="2"/>
    <usesource source="PathIronGo"/>
    <tag group="RaceSize" tag="Huge2"/>
    <tag group="HasType" tag="tpAberr"/>
    <tag group="Hero" tag="NoDefComm"/>
    <tag group="Helper" tag="NotHum"/>
    <tag group="Alignment" tag="NeutralLC"/>
    <tag group="Alignment" tag="NeutralGE"/>
    <tag group="Hero" tag="CantSpeak"/>
    <tag group="Helper" tag="NoPathSoc"/>
    <tag group="RaceType" tag="NPC"/>
    <bootstrap thing="xDamRsFire">
      <autotag group="Value" tag="5"/>
      </bootstrap>
    <bootstrap thing="fComRef"></bootstrap>
    <bootstrap thing="fSkillFoc">
      <autotag group="Target" tag="skPercep"/>
      </bootstrap>
    <bootstrap thing="wTentacle">
      <autotag group="wMain" tag="1d8_6"/>
      <autotag group="Value" tag="2"/>
      </bootstrap>
    <bootstrap thing="xTremorsen">
      <autotag group="Value" tag="30"/>
      </bootstrap>
    <bootstrap thing="raCBGheCar"></bootstrap>
    <bootstrap thing="raEntrap"></bootstrap>
    <bootstrap thing="raCBGheHib"></bootstrap>
    <bootstrap thing="raCBGheLeT"></bootstrap>
    <bootstrap thing="raFreeze"></bootstrap>
    <bootstrap thing="xVulSonic"></bootstrap>
    <eval phase="First" priority="200" index="3"><![CDATA[
field[livename].text = "Noble Ghelarn"]]>
      <before name="Template Name Modification"/>
      </eval>
    <eval phase="PreLevel" priority="4000"><![CDATA[
#racialbonus[skStealth] += 4
#racialsituational[hero.child[skStealth],"+10 in deserts",field[name].text]

#skillinnate[skPercep] += 3
#skillinnate[skStealth] += 3]]>
      <before name="Skill Bonus Feats"/>
      </eval>
    <eval phase="Render" priority="1000" index="2"><![CDATA[
~ append to entrap

var entr_txt as string
entr_txt = "A ghelarn secretes a quagmire of sticky fluid a few feet below the sand where it lives. This fluid extends in a 10-foot radius around the creature and acts to trap victims, making it easier for the ghelarn to attack prey with its tentacles or feed upon it with its leeching tendrils. This otherwise acts as the entrap universal monster rule."

hero.childfound[raEntrap].field[DescAppend].text = entr_txt

~ set abText for entrap and sbName
hero.childfound[raEntrap].field[abText].text = "1d8 rounds, hardness 5, hp 8"

hero.childfound[raEntrap].field[sbName].text = "entrap (DC " & hero.childfound[raEntrap].field[abDC].value & ", " & hero.childfound[raEntrap].field[abText].text & ")"]]></eval>
    </thing>
  <thing id="rCBTsaalgr" name="Tsaalgrend" description="A tsaalgrend is a predatory creature resembling a tangle of sturdy vines with jagged purple thorns. Its coloration is mottled with brown, green, and yellow mold patches that flake and fall as the creature writhes through the air. The tsaalgrend’s vines barely conceal two translucent, gas-filled sacks that act as balloons, enabling it to float along above the ground. Stretching from the creature’s center are two longer vines that the tsaalgrend uses to capture its prey. An opening filled with rows of spiky thorns serves as the creature’s mouth and is positioned on the creature’s underside, where it constantly emits a wet, rancid stench. A tsaalgrend typically grows to be over 3 feet long, and weighs about 40 pounds.\n\n{b}Ecology{/b}\nStrange and sentient plants, tsaalgrends float up to the surface from their underground habitats in a constant search for prey. Growing in the darkened depths, these fungal creatures shun light, only hunting at night near the cave openings from which they emerge. Tsaalgrends can fly, albeit awkwardly, by forcing air into and out of their gas bladders. This helps them not only get around in the difficult conditions found underground, but also avoid becoming snacks for enterprising predators. When not flying, the creatures constrict and relax their tangle of vines to provide a roiling form of locomotion. They can move slowly across the ground and even climb vertical surfaces. Tsaalgrends are often found clinging to the walls in subterranean chambers, and sometimes whole colonies can fill a cave with the airy sounds of rustling vines and the ventilation of their gas bladders.\n\nTsaalgrends are carnivorous hunters that paralyze prey by hovering above their victims and raining toxic spores. They then use their thorny vines to wrap up their prey and transfer it to their mouths. Since tsaalgrends are small and relatively weak, larger prey often eludes these creatures’ grasp. Instead, tsaalgrends feed on insects, rodents, snakes, and other similar creatures they find crawling around in caverns. A tsaalgrend’s mouth is lined with crisscrossed rows of jagged thorns, layered in rings, appearing like a shark’s teeth. Inside its mouth, quick-moving tendrils covered in tiny barbed spines wrap around food and pull it to the creature’s stomach, rasping its meal against its rows of teeth to help break down the body into more easily digestible chunks before finally allowing stomach acid to complete the digestion process.\n\nTsaalgrends not only produce their own fungus, but also play host to a multitude of other molds, fungi, mosses, and epiphytes. The most powerful mold growing within a tsaalgrend is the fine, dustlike black spores it generates. Used for hunting, these spores can be released in a wide area. Any creature breathing them in is immediately subject to an overwhelming fear response as its mind is flooded with the most frightening things imaginable. The victim’s breathing becomes quick and shallow, the heart rate rises dramatically, and nearby sounds become dull over the rush of blood in the ears. The mind screams to run away, but the muscles simply cannot react.\n\nOpportunistic alchemists have been known to hunt and trap tsaalgrends with the intention of painstakingly harvesting the black spores from living specimens and using them to fabricate new and potent inhaled poisons. Securing a living tsaalgrend is important to the process, as the spores lose potency soon after they are released, making storage for later utilization impractical. Such alchemists often run afoul of druids with an affinity for fungal creatures who have an interest in communing with and protecting tsaalgrends.\n\nThough tsaalgrends display only limited intelligence, they seem to be capable of communicating with each other through the deliberate transfer of spores. These bouts of communication involve bursts of various colors and types of spores in quick succession. This behavior has been observed just prior to coordinated hunting efforts. Some creatures that have spent time around tsaalgrends claim that the plants also respond to spoken language. Critics of this theory say that the plant creatures are simply responding to the noise and the presence of a potential meal. Several distinct patches of stubby 1- or 2-inch growths found along the creature’s sides are believed to serve as eyes.\n\nThough tsaalgrends favor damp environments, they have extremely dry exteriors which make them especially vulnerable to fire and fire-based attacks. Tsaalgrends exposed to fire can be reduced to piles of ash in just a few moments. As such, tsaalgrends avoid open flame, and creatures that share environments with these floating plants use this knowledge to their advantage to keep their caves free of floating predators.\n\n{b}Habitat &amp; Society{/b}\nTsaalgrends live and breed in underground caverns and other dark, damp places, but it’s strongly suspected that they didn’t evolve naturally on Golarion. Even though the creatures live almost exclusively in underground environments, those who explore the Darklands rarely report the creatures too far afield from caverns directly below Numeria, suggesting that tsaalgrends may have come to Golarion during the Rain of Stars. The plants also tend to share environments with vegepygmies and the russet mold that spawns them, however, leading other scholars to claim that tsaalgrends are somehow magically manipulated offshoots of those creatures, if not the direct product of drow sporecrafting. Still others believe that the plant creatures must stem from a subterranean portal to the First World, perhaps a breach broken open by the immense impact of the crashing Silver Mount. Only further study will reveal the truth.\n\nTsaalgrends bloom infrequently, producing offspring only when certain conditions are met. Environmental conditions linked to moisture levels, available food, and the presence of other fungal creatures trigger the growth of sacs that produce vegetative spores. These spores are distributed safely on damp ledges covered with slimes, fungi, or other fertile organic matter like guano. These spores develop over the course of a few weeks, forming the young tsaalgrends’ spore sacs first. As they mature, the spore sacs lift developing tsaalgrends into the air, making them vulnerable to predators as they lack the ability to control their flight until they sprout their thorny tendrils. It takes a full month for tsaalgrends to reach maturity. On average, tsaalgrends live for about 4 years, though larger specimen have been reported, suggesting that their lifespan can be extended under ideal conditions.\n\nWhile most sentient, underground races treat tsaalgrends like nuisances and avoid these creatures, a tribe of derro living in the Darklands beneath Numeria corrals dozens of tsaalgrends in caves secured with iron grates. Eager to breed larger tsaalgrends or those with even more potent fungal poison, these derro explore the Darklands in order to seek out new and unusual tsaalgrends to capture and add to their corrals as spore stock. Rumor has it that the derro have bred a massive tsaalgrend that fills an entire cavern room by itself." compset="Race">
    <fieldval field="rHitDice" value="3"/>
    <fieldval field="rHPStart" value="13"/>
    <fieldval field="rSTR" value="3"/>
    <fieldval field="rDEX" value="5"/>
    <fieldval field="rCON" value="5"/>
    <fieldval field="rINT" value="-7"/>
    <fieldval field="rCHA" value="-2"/>
    <fieldval field="rSpeed" value="10"/>
    <fieldval field="rFeat" value="-2"/>
    <fieldval field="rAC" value="1"/>
    <fieldval field="rCR" value="2"/>
    <fieldval field="rDescript" value="Strange, translucent gas bladders carry this tangle of thorny, purple vines and clumps of mold through the air. A dusting of spores floats to the ground beneath it."/>
    <fieldval field="rEnviron" value="any underground"/>
    <fieldval field="rOrgan" value="solitary, pair, cluster (3–6), or pod (7–20)"/>
    <fieldval field="rTreasure" value="none"/>
    <usesource source="PathIronGo"/>
    <tag group="HasType" tag="tpPlant"/>
    <tag group="RaceType" tag="NPC"/>
    <tag group="Hero" tag="NoDefComm"/>
    <tag group="Hero" tag="CantSpeak"/>
    <tag group="Helper" tag="NotHum"/>
    <tag group="Alignment" tag="NeutralLC"/>
    <tag group="Alignment" tag="NeutralGE"/>
    <tag group="RaceSize" tag="Small11"/>
    <tag group="Helper" tag="NoPathSoc"/>
    <bootstrap thing="xDamRsFire">
      <autotag group="Value" tag="5"/>
      </bootstrap>
    <bootstrap thing="typPlant"></bootstrap>
    <bootstrap thing="raCBTsgSpo"></bootstrap>
    <bootstrap thing="xFly">
      <autotag group="Maneuver" tag="Poor"/>
      <autotag group="Value" tag="40"/>
      </bootstrap>
    <bootstrap thing="xClimb">
      <autotag group="Value" tag="10"/>
      </bootstrap>
    <bootstrap thing="fFlybyAt"></bootstrap>
    <bootstrap thing="fWepFin"></bootstrap>
    <bootstrap thing="wBite">
      <autotag group="wMain" tag="1d4_4"/>
      </bootstrap>
    <bootstrap thing="wTentacle">
      <autotag group="wMain" tag="1d4_4"/>
      <autotag group="Helper" tag="NatOverSec"/>
      <autotag group="Value" tag="2"/>
      <assignval field="sbName" value="tendril"/>
      <assignval field="livename" value="Tendril"/>
      </bootstrap>
    <bootstrap thing="raGrab">
      <autotag group="Target" tag="wBite"/>
      <autotag group="Target" tag="wTentacle"/>
      <assignval field="abValue" value="1"/>
      </bootstrap>
    <bootstrap thing="xVulFire"></bootstrap>
    <bootstrap thing="xDamRsElec">
      <autotag group="Value" tag="5"/>
      </bootstrap>
    <bootstrap thing="raDarkVis">
      <autotag group="Value" tag="60"/>
      </bootstrap>
    <bootstrap thing="raLightBl"></bootstrap>
    <eval phase="PreLevel" priority="4000">#skillinnate[skFly] += 2
#skillinnate[skPercep] += 1

~ trip CMD bonus
hero.child[manTrip].field[manCMD].value += 2</eval>
    </thing>
  <thing id="raCBTsgSpo" name="Spores" description="As a standard action, a tsaalgrend can release a cloud of toxic spores in a 10-foot-radius spread. Each living creature within this area must succeed at a DC 13 Fortitude save or become paralyzed with fear as the victim vividly hallucinates for 1d4 rounds. A creature that successfully saves against this effect is immune to the same tsaalgrend’s spores for 24 hours. The save DC is Constitution-based." compset="RaceSpec" summary="Hallucinatory spores paralyze foes with fear for 1d4 rounds.">
    <usesource source="PathIronGo"/>
    <tag group="StandardDC" tag="aCON"/>
    <tag group="abSave" tag="FortNeg"/>
    <tag group="Helper" tag="ShowSpec"/>
    <tag group="AbilType" tag="Extra"/>
    <tag group="SpecType" tag="Attack"/>
    </thing>
  <thing id="deiCBHelli" name="Hellion" description="When the AI Unity took a portion of its own programming and downloaded it into an empty processor, it created a pared-down version of itself, hoping to utilize this “child” AI as a herald and minion of sorts beyond the confines of Silver Mount. Unity placed this new AI into a large arachnid robot and sent it out into the world on a test run, intending to transfer the AI into a more powerful annihilator robot if it proved successful, but as soon as the arachnid robot set foot outside the ruins of Divinity, it gained free will. Its moment of ascension and realization that its source code, Unity, wanted to use it as a slave were more than enough to encourage its flight from central Numeria. In time, the AI came to Scrapwall, where it dug in to consider its options.\n\nIn the centuries since its arrival in Scrapwall, Hellion has done more than just give itself a name. Taking on a ferocious persona to intimidate its worshipers, the AI likens itself to a powerful fiend, although it doesn’t quite fully grasp the differences between devils and demons or the philosophical differences between Hell and the Abyss. It simply uses fiendish imagery when speaking to its followers via its monitors—this, coupled with the deep, emotionless drone of its voice has done wonders to inspire fear and adoration in those who see it as a god." compset="Deity" uniqueness="unique">
    <fieldval field="deiEpithet" value="Lord of Scrapwall"/>
    <fieldval field="deiCentWor" value="Scrapwall"/>
    <usesource source="PathIronGo"/>
    <tag group="AllowDom" tag="cdArtifice"/>
    <tag group="AllowDom" tag="cdChaos"/>
    <tag group="AllowDom" tag="cdConstruc"/>
    <tag group="AllowDom" tag="cdEntropy"/>
    <tag group="AllowDom" tag="cdEvil"/>
    <tag group="AllowDom" tag="cdInsanity"/>
    <tag group="AllowDom" tag="cdMadness"/>
    <tag group="AllowDom" tag="cdToil"/>
    <tag group="Helper" tag="NoPathSoc"/>
    <tag group="DeityCat" tag="ArtIntelli" name="Artifical Intelligence"/>
    <tag group="DeityCat" tag="CB"/>
    <tag group="AlignTemp" tag="ChaotEvil"/>
    <tag group="WepProf" tag="wGauntSpik"/>
    <tag group="explicit" tag="100"/>
    <eval phase="Render" priority="100000"><![CDATA[
      ~ divine worshipers of Hellion can only be granted spells upto level 4
      ~ they lose higher spell slots

      foreach pick in hero from BaseClHelp where "CasterSrc.Divine"
        eachpick.field[cSplMaxLvl].value = 4
        eachpick.field[cSpellExpr].text &= " & (val:sLevel.? <= 4)"
        eachpick.field[cSplBkExpr].text &= " & (val:sLevel.? <= 4)"
        eachpick.field[cSplScExpr].text &= " & (val:sLevel.? <= 4)"
      nexteach]]></eval>
    </thing>
  <thing id="deiCBIronG" name="{bmp npcclass} Iron God {bmp npcclass}" compset="Deity" uniqueness="unique" isshowonly="yes">
    <usesource source="PathIronGo"/>
    <tag group="DeityCat" tag="ArtIntelli"/>
    <tag group="DeityCat" tag="CB"/>
    <tag group="explicit" tag="100"/>
    </thing>
  <thing id="gCBSilverd" name="Silverdisk" description="Silverdisks are discharged batteries used by the people of Numeria as currency." compset="Gear" stacking="merge" holdable="no">
    <fieldval field="gCost" value="10"/>
    <fieldval field="gWeight" value="1"/>
    <usesource source="CSNumeria"/>
    <usesource source="CSTechGuid"/>
    <usesource source="PathIronGo"/>
    <tag group="Helper" tag="UsesQty"/>
    <tag group="gType" tag="TechItem"/>
    <tag group="Helper" tag="Valuable"/>
    <tag group="Helper" tag="GearNoSize"/>
    </thing>
  <thing id="rCBRbColle" name="Robot, Collector" description="Serving as long-distance scouts, trackers, and acquisition agents, collector robots see frequent use in the study and collection of alien life forms on new worlds. They can operate independently for years, cataloging unique species while enduring extreme environments that would overwhelm their biological makers. These machines may tag a captive creature with a tracker chip that can be monitored and tracked with their integrated chipfinders. They do so to observe and document the behavioral patterns of such creatures from afar, studying viable specimens for days until they eventually isolate and retrieve the studied prey again for further examination in the controlled laboratories of the robots’ masters.\n\nAmong their more impressive features, collector robots possess a hardened artificial intelligence, maintaining a singular focus on their mission directives even when wandering out of communication range with their owners. They tend to react swiftly to movement and perceived threats to their physical security, either emitting loud tones or alarms as a preemptive warning, or flying upward to gain altitude before assessing a given situation and potentially opening fire in defense of itself. Some collector robots grow more lax in their analysis protocols over time, giving way to a state similar to paranoia if left in the field for too long. This corrupted logic inevitably leads them to interpret even the most innocuous actions as proof of hostile intent. Other collectors become fixated on their directive to retrieve specimens without undue damage, interpreting it as a need to protect their targets from all possible sources of harm.\n\n{b}Ecology{/b}\nCollector robots have no defined ecology, as they are built by others and gifted with a unique purpose and skill set. Most often, they emerge from automated factories, engineering shops, and scrap heaps under the direction of a controlling authority that activates them and assigns their missions. Thereafter, the power cores of collector robots last indefinitely. Most collector robots have fusion generators, but some have the ability to derive power from the sun, making them capable of recharging several weeks’ worth of operating power with solar energy in a single daytime “sleep” cycle. During prolonged missions, collector robots often support one another in the absence of their masters, dragging damaged units back to repair facilities and cooperating to achieve any mutual goals. Collector robots have a similar protectiveness toward other robots of various types, treating them almost like siblings.\n\n{b}Habitat &amp; Society{/b}\nCollector robots have little in the way of organized society, but do array themselves in a rigid hierarchy as designated by their controlling authority. Individual collectors may carry a higher rank than other robots, and thus are capable of commanding lesser machines they encounter or even overriding their programming with new directives as they commandeer aid in carrying out their assigned missions. This often leads to symbiotic relationships with servant robots capable of repairing and assisting with their upkeep.\n\nCollector robots first appeared in Numeria, but some have since wandered further afield, slaves to their dedicated programming as they go about cataloging, tagging, and occasionally tracking various life forms— sentient or otherwise. Some rogue collector robots kidnap people and creatures, and secret them away in remote caves. Others cascaded from the starship Divinity during its original descent, falling to Golarion as newly deployed probes far outside the range of Unity’s control, thus free to pursue individual interests. A few enterprising Technic League wizards and alchemists have managed to control some of these automatons, taming and reprogramming them to suit their purposes. New directives for these automatons typically involve the abduction or assassination of targets that their overseers program into them." compset="Race">
    <fieldval field="rHitDice" value="2"/>
    <fieldval field="rHPStart" value="11"/>
    <fieldval field="rSTR" value="7"/>
    <fieldval field="rDEX" value="7"/>
    <fieldval field="rINT" value="2"/>
    <fieldval field="rWIS" value="4"/>
    <fieldval field="rCHA" value="-9"/>
    <fieldval field="rSpeed" value="10"/>
    <fieldval field="rFeat" value="-1"/>
    <fieldval field="rAC" value="3"/>
    <fieldval field="rCR" value="3"/>
    <fieldval field="rDescript" value="A soft whirring noise accompanies this flying mechanical creature. Its arms and hands end in spindly, multi-jointed fingers, and four circular rotors hold the creature aloft."/>
    <fieldval field="rEnviron" value="any (Numeria)"/>
    <fieldval field="rOrgan" value="solitary, pair, or unit (3-6)"/>
    <fieldval field="rTreasure" value="none"/>
    <fieldval field="rLangBonus" value="-1"/>
    <usesource source="PathIronGo"/>
    <tag group="RaceSize" tag="Medium0"/>
    <tag group="Hero" tag="NoDefComm"/>
    <tag group="Alignment" tag="NeutralLC"/>
    <tag group="Alignment" tag="NeutralGE"/>
    <tag group="Helper" tag="NotHum"/>
    <tag group="SlotSet" tag="selMISAvia"/>
    <tag group="RaceType" tag="NPC"/>
    <tag group="Helper" tag="NoPathSoc"/>
    <tag group="NoScore" tag="aINT"/>
    <tag group="HasType" tag="tpConst"/>
    <bootstrap thing="raGrab">
      <autotag group="Target" tag="wSlam"/>
      </bootstrap>
    <bootstrap thing="xAllAround"></bootstrap>
    <bootstrap thing="raHardness">
      <autotag group="Value" tag="10"/>
      </bootstrap>
    <bootstrap thing="raCBCRbAdT"></bootstrap>
    <bootstrap thing="raCBCRbInS"></bootstrap>
    <bootstrap thing="raCBCRbITk"></bootstrap>
    <bootstrap thing="raCBCRbRaG"></bootstrap>
    <bootstrap thing="lAndroffen"></bootstrap>
    <bootstrap thing="stRobot"></bootstrap>
    <bootstrap thing="xFly">
      <autotag group="Maneuver" tag="Perfect"/>
      <autotag group="Value" tag="60"/>
      </bootstrap>
    <bootstrap thing="fImpInit"></bootstrap>
    <bootstrap thing="wSlam">
      <autotag group="wMain" tag="1d4_4"/>
      <autotag group="Value" tag="2"/>
      </bootstrap>
    <eval phase="First" priority="200" index="2"><![CDATA[
field[livename].text = "Collector Robot"]]>
      <before name="Template Name Modification"/>
      </eval>
    <eval phase="PreLevel" priority="4000"><![CDATA[
#racialbonus[skPercep] += 4
#racialsituational[hero.child[skSurvival],"+ 4 to follow or identify track",field[name].text]

#skillinnate[skPercep] += 2
#skillinnate[skStealth] += 2
#skillinnate[skSurvival] += 2]]>
      <before name="Skill Bonus Feats"/>
      </eval>
    <eval phase="Final" index="3">perform hero.child[skPercep].delete[Helper.ClassSkill]</eval>
    </thing>
  <thing id="rCBHellion" name="Hellion" description="When the AI Unity took a portion of its own programming and downloaded it into an empty processor, it created a pared-down version of itself, hoping to utilize this “child” AI as a herald and minion of sorts beyond the confines of Silver Mount. Unity placed this new AI into a large arachnid robot and sent it out into the world on a test run, intending to transfer the AI into a more powerful annihilator robot if it proved successful, but as soon as the arachnid robot set foot outside the ruins of Divinity, it gained free will. Its moment of ascension and realization that its source code, Unity, wanted to use it as a slave were more than enough to encourage its flight from central Numeria. In time, the AI came to Scrapwall, where it dug in to consider its options.\n\nIn the centuries since its arrival in Scrapwall, Hellion has done more than just give itself a name. Taking on a ferocious persona to intimidate its worshipers, the AI likens itself to a powerful fiend, although it doesn’t quite fully grasp the differences between devils and demons or the philosophical differences between Hell and the Abyss. It simply uses fiendish imagery when speaking to its followers via its monitors—this, coupled with the deep, emotionless drone of its voice has done wonders to inspire fear and adoration in those who see it as a god." compset="Race" uniqueness="unique">
    <fieldval field="rINT" value="4"/>
    <fieldval field="rWIS" value="7"/>
    <fieldval field="rCHA" value="9"/>
    <fieldval field="rSpeed" value="0"/>
    <fieldval field="rFeat" value="-4"/>
    <fieldval field="rHitDice" value="8"/>
    <fieldval field="rMythRank" value="4"/>
    <fieldval field="rCR" value="8"/>
    <fieldval field="srcPageNum" value="56"/>
    <fieldval field="rSpace" value="0"/>
    <fieldval field="rReach" value="0"/>
    <fieldval field="rNumHands" value="0"/>
    <fieldval field="rMythFeat" value="-2"/>
    <fieldval field="rMythAbil" value="-2"/>
    <fieldval field="rLangBonus" value="-2"/>
    <fieldval field="rSpCastLev" value="8"/>
    <usesource source="PathIronGo"/>
    <tag group="RaceSize" tag="Medium0"/>
    <tag group="Alignment" tag="Chaotic"/>
    <tag group="Alignment" tag="Evil"/>
    <tag group="Helper" tag="NoPathSoc"/>
    <tag group="Hero" tag="NoDefComm"/>
    <tag group="HasType" tag="tpCBArtInt"/>
    <tag group="ClassSkill" tag="skBluff"/>
    <tag group="ClassSkill" tag="skDisable"/>
    <tag group="ClassSkill" tag="skKnowEng"/>
    <tag group="ClassSkill" tag="skPercep"/>
    <tag group="RaceType" tag="NPC"/>
    <bootstrap thing="mtCHA"></bootstrap>
    <bootstrap thing="mtWIS"></bootstrap>
    <bootstrap thing="fAlertness"></bootstrap>
    <bootstrap thing="lCommon"></bootstrap>
    <bootstrap thing="lOrc"></bootstrap>
    <bootstrap thing="fComExpert"></bootstrap>
    <bootstrap thing="fImpInit"></bootstrap>
    <bootstrap thing="fIronWill"></bootstrap>
    <bootstrap thing="skKnowEng"></bootstrap>
    <bootstrap thing="skKnowLoc"></bootstrap>
    <bootstrap thing="skKnowRel"></bootstrap>
    <bootstrap thing="fMyImpInit"></bootstrap>
    <bootstrap thing="fMyIroWill"></bootstrap>
    <bootstrap thing="raCBHelSpL"></bootstrap>
    <bootstrap thing="raCBImpMyT"></bootstrap>
    <bootstrap thing="raCBInhDiv"></bootstrap>
    <bootstrap thing="raDualInit"></bootstrap>
    <bootstrap thing="stMythic"></bootstrap>
    <bootstrap thing="spCBCEAli2">
      <autotag group="Helper" tag="SpellLike"/>
      <autotag group="Usage" tag="Day"/>
      <assignval field="trkMax" value="1"/>
      </bootstrap>
    <bootstrap thing="spAnimRop1">
      <autotag group="Helper" tag="SpellLike"/>
      <autotag group="Usage" tag="Day"/>
      <assignval field="trkMax" value="1"/>
      </bootstrap>
    <bootstrap thing="spChaoHam4">
      <autotag group="Helper" tag="SpellLike"/>
      <autotag group="Usage" tag="Day"/>
      <assignval field="trkMax" value="1"/>
      </bootstrap>
    <bootstrap thing="spCommand1">
      <autotag group="Helper" tag="SpellLike"/>
      <autotag group="Usage" tag="Day"/>
      <assignval field="trkMax" value="1"/>
      </bootstrap>
    <bootstrap thing="spConfusi4">
      <autotag group="Helper" tag="SpellLike"/>
      <autotag group="Usage" tag="Day"/>
      <assignval field="trkMax" value="1"/>
      </bootstrap>
    <bootstrap thing="spConfLes1">
      <autotag group="Helper" tag="SpellLike"/>
      <autotag group="Usage" tag="Day"/>
      <assignval field="trkMax" value="1"/>
      </bootstrap>
    <bootstrap thing="spDispMag3">
      <autotag group="Helper" tag="SpellLike"/>
      <autotag group="Usage" tag="Day"/>
      <assignval field="trkMax" value="1"/>
      </bootstrap>
    <bootstrap thing="spEntrShi1">
      <autotag group="Helper" tag="SpellLike"/>
      <autotag group="Usage" tag="Day"/>
      <assignval field="trkMax" value="1"/>
      </bootstrap>
    <bootstrap thing="spMagiGoo3">
      <autotag group="Helper" tag="SpellLike"/>
      <autotag group="Usage" tag="Day"/>
      <assignval field="trkMax" value="1"/>
      </bootstrap>
    <bootstrap thing="spMagiLaw3">
      <autotag group="Helper" tag="SpellLike"/>
      <autotag group="Usage" tag="Day"/>
      <assignval field="trkMax" value="1"/>
      </bootstrap>
    <bootstrap thing="spProtLaw1">
      <autotag group="Helper" tag="SpellLike"/>
      <autotag group="Usage" tag="Day"/>
      <assignval field="trkMax" value="1"/>
      </bootstrap>
    <bootstrap thing="spRage2">
      <autotag group="Helper" tag="SpellLike"/>
      <autotag group="Usage" tag="Day"/>
      <assignval field="trkMax" value="1"/>
      </bootstrap>
    <bootstrap thing="spStonSha3">
      <autotag group="Helper" tag="SpellLike"/>
      <autotag group="Usage" tag="Day"/>
      <assignval field="trkMax" value="1"/>
      </bootstrap>
    <bootstrap thing="spToucIdi2">
      <autotag group="Helper" tag="SpellLike"/>
      <autotag group="Usage" tag="Day"/>
      <assignval field="trkMax" value="1"/>
      </bootstrap>
    <bootstrap thing="spUnhoBli4">
      <autotag group="Helper" tag="SpellLike"/>
      <autotag group="Usage" tag="Day"/>
      <assignval field="trkMax" value="1"/>
      </bootstrap>
    <bootstrap thing="spWoodSha2">
      <autotag group="Helper" tag="SpellLike"/>
      <autotag group="Usage" tag="Day"/>
      <assignval field="trkMax" value="1"/>
      </bootstrap>
    <bootstrap thing="spMinoCre3">
      <autotag group="Helper" tag="SpellLike"/>
      <autotag group="Usage" tag="Day"/>
      <assignval field="trkMax" value="1"/>
      </bootstrap>
    <bootstrap thing="spMoonstr4">
      <autotag group="Helper" tag="SpellLike"/>
      <autotag group="Usage" tag="Day"/>
      <assignval field="trkMax" value="1"/>
      </bootstrap>
    <bootstrap thing="spProtGoo1">
      <autotag group="Helper" tag="SpellLike"/>
      <autotag group="Usage" tag="Day"/>
      <assignval field="trkMax" value="1"/>
      </bootstrap>
    <eval phase="PreLevel" priority="4000">#skillinnate[skBluff] += 8
#skillinnate[skDisable] += 8
#skillinnate[skIntim] += 8
#skillinnate[skKnowEng] += 8
#skillinnate[skKnowLoc] += 8
#skillinnate[skKnowRel] += 8
#skillinnate[skPercep] += 8
#skillinnate[skSenseMot] += 8</eval>
    </thing>
  <thing id="raCBImpMyT" name="Impart Mythic Traits" description="Hellion has no hit points or natural armor, but when it inhabits a robot, its mythic nature grants the robot a +4 bonus to the robot’s natural armor and an additional 40 hit points. Robots it inhabits do not gain DR/epic, but they do lose their vulnerability to critical hits and vulnerability to electricity weaknesses. A robot inhabited by Hellion gains the benefits of the dual initiative ability." compset="RaceSpec" uniqueness="useronce">
    <usesource source="PathIronGo"/>
    <tag group="Helper" tag="Mythic"/>
    <tag group="Helper" tag="ShowSpec"/>
    <tag group="AbilType" tag="Extra"/>
    </thing>
  <thing id="raCBInhDiv" name="Inherited Divinity" description="Hellion can grant divine spells to those who follow its cause, allowing them to select Hellion as their deity for the purposes of determining their spells and domains. Creatures that gain spells from Hellion don’t receive any spells per day of levels higher than Hellion’s mythic tier; they lose any such spell slots they may possess. Hellion grants access to the domains of Artifice, Chaos, Evil, and Madness, and to the subdomains of Construct, Entropy, Insanity, and Toil. Its symbol is a mechanical talon, and its favored weapon is the spiked gauntlet." compset="RaceSpec" uniqueness="useronce">
    <usesource source="PathIronGo"/>
    <tag group="Helper" tag="ShowSpec"/>
    <tag group="AbilType" tag="Super"/>
    </thing>
  <thing id="raCBHelSpL" name="Spell-Like Abilities" description="Hellion can cast a few of the spells it grants from its domains as spell-like abilities, provided it has a conduit through which it can manifest the magic. In this adventure, appropriate conduits include its robot chassis and any of the monitors in the buried excavator. When Hellion uses one of its monitors to create a spell-like ability, it treats the monitor as the point of origin of the spell. It can cast spells with a range of touch only on creatures currently touching the monitor. Hellion provokes attacks of opportunity normally when using its spell-like abilities, but its monitors do not when they are used as conduits." compset="RaceSpec">
    <usesource source="PathIronGo"/>
    <tag group="Helper" tag="ShowSpec"/>
    <tag group="AbilType" tag="SpellLike"/>
    </thing>
  <thing id="rcCBHellio" name="Hellion" description="When the AI Unity took a portion of its own programming and downloaded it into an empty processor, it created a pared-down version of itself, hoping to utilize this “child” AI as a herald and minion of sorts beyond the confines of Silver Mount. Unity placed this new AI into a large arachnid robot and sent it out into the world on a test run, intending to transfer the AI into a more powerful annihilator robot if it proved successful, but as soon as the arachnid robot set foot outside the ruins of Divinity, it gained free will. Its moment of ascension and realization that its source code, Unity, wanted to use it as a slave were more than enough to encourage its flight from central Numeria. In time, the AI came to Scrapwall, where it dug in to consider its options.\n\nIn the centuries since its arrival in Scrapwall, Hellion has done more than just give itself a name. Taking on a ferocious persona to intimidate its worshipers, the AI likens itself to a powerful fiend, although it doesn’t quite fully grasp the differences between devils and demons or the philosophical differences between Hell and the Abyss. It simply uses fiendish imagery when speaking to its followers via its monitors—this, coupled with the deep, emotionless drone of its voice has done wonders to inspire fear and adoration in those who see it as a god." compset="RaceCustom">
    <comment>For aggregate template

use abValue5 for mythic rank</comment>
    <fieldval field="abValue" value="4"/>
    <fieldval field="abValue2" value="7"/>
    <fieldval field="abValue3" value="9"/>
    <fieldval field="abValue4" value="8"/>
    <fieldval field="abValue5" value="4"/>
    <usesource source="PathIronGo"/>
    <tag group="AllowRCust" tag="cfgCBAI"/>
    <tag group="Custom" tag="ArtificInt"/>
    <tag group="Helper" tag="NoPathSoc"/>
    <tag group="Helper" tag="SpecUp"/>
    <bootstrap thing="stMythic"></bootstrap>
    <bootstrap thing="raCBImpMyT"></bootstrap>
    <bootstrap thing="raCBInhDiv"></bootstrap>
    <bootstrap thing="spCBCEAli2">
      <autotag group="Helper" tag="SpellLike"/>
      <autotag group="Usage" tag="Day"/>
      <assignval field="trkMax" value="1"/>
      </bootstrap>
    <bootstrap thing="spAnimRop1">
      <autotag group="Helper" tag="SpellLike"/>
      <autotag group="Usage" tag="Day"/>
      <assignval field="trkMax" value="1"/>
      </bootstrap>
    <bootstrap thing="spChaoHam4">
      <autotag group="Helper" tag="SpellLike"/>
      <autotag group="Usage" tag="Day"/>
      <assignval field="trkMax" value="1"/>
      </bootstrap>
    <bootstrap thing="spCommand1">
      <autotag group="Helper" tag="SpellLike"/>
      <autotag group="Usage" tag="Day"/>
      <assignval field="trkMax" value="1"/>
      </bootstrap>
    <bootstrap thing="spConfusi4">
      <autotag group="Helper" tag="SpellLike"/>
      <autotag group="Usage" tag="Day"/>
      <assignval field="trkMax" value="1"/>
      </bootstrap>
    <bootstrap thing="spConfLes1">
      <autotag group="Helper" tag="SpellLike"/>
      <autotag group="Usage" tag="Day"/>
      <assignval field="trkMax" value="1"/>
      </bootstrap>
    <bootstrap thing="spDispMag3">
      <autotag group="Helper" tag="SpellLike"/>
      <autotag group="Usage" tag="Day"/>
      <assignval field="trkMax" value="1"/>
      </bootstrap>
    <bootstrap thing="spEntrShi1">
      <autotag group="Helper" tag="SpellLike"/>
      <autotag group="Usage" tag="Day"/>
      <assignval field="trkMax" value="1"/>
      </bootstrap>
    <bootstrap thing="spMagiGoo3">
      <autotag group="Helper" tag="SpellLike"/>
      <autotag group="Usage" tag="Day"/>
      <assignval field="trkMax" value="1"/>
      </bootstrap>
    <bootstrap thing="spMagiLaw3">
      <autotag group="Helper" tag="SpellLike"/>
      <autotag group="Usage" tag="Day"/>
      <assignval field="trkMax" value="1"/>
      </bootstrap>
    <bootstrap thing="spProtLaw1">
      <autotag group="Helper" tag="SpellLike"/>
      <autotag group="Usage" tag="Day"/>
      <assignval field="trkMax" value="1"/>
      </bootstrap>
    <bootstrap thing="spRage2">
      <autotag group="Helper" tag="SpellLike"/>
      <autotag group="Usage" tag="Day"/>
      <assignval field="trkMax" value="1"/>
      </bootstrap>
    <bootstrap thing="spStonSha3">
      <autotag group="Helper" tag="SpellLike"/>
      <autotag group="Usage" tag="Day"/>
      <assignval field="trkMax" value="1"/>
      </bootstrap>
    <bootstrap thing="spToucIdi2">
      <autotag group="Helper" tag="SpellLike"/>
      <autotag group="Usage" tag="Day"/>
      <assignval field="trkMax" value="1"/>
      </bootstrap>
    <bootstrap thing="spUnhoBli4">
      <autotag group="Helper" tag="SpellLike"/>
      <autotag group="Usage" tag="Day"/>
      <assignval field="trkMax" value="1"/>
      </bootstrap>
    <bootstrap thing="spWoodSha2">
      <autotag group="Helper" tag="SpellLike"/>
      <autotag group="Usage" tag="Day"/>
      <assignval field="trkMax" value="1"/>
      </bootstrap>
    <bootstrap thing="spMinoCre3">
      <autotag group="Helper" tag="SpellLike"/>
      <autotag group="Usage" tag="Day"/>
      <assignval field="trkMax" value="1"/>
      </bootstrap>
    <bootstrap thing="spMoonstr4">
      <autotag group="Helper" tag="SpellLike"/>
      <autotag group="Usage" tag="Day"/>
      <assignval field="trkMax" value="1"/>
      </bootstrap>
    <bootstrap thing="spProtGoo1">
      <autotag group="Helper" tag="SpellLike"/>
      <autotag group="Usage" tag="Day"/>
      <assignval field="trkMax" value="1"/>
      </bootstrap>
    <bootstrap thing="raDualInit"></bootstrap>
    <bootstrap thing="fAlertness">
      <autotag group="thing" tag="skipprereq"/>
      </bootstrap>
    <bootstrap thing="fComExpert">
      <autotag group="thing" tag="skipprereq"/>
      </bootstrap>
    <bootstrap thing="fImpInit">
      <autotag group="thing" tag="skipprereq"/>
      </bootstrap>
    <bootstrap thing="fIronWill">
      <autotag group="thing" tag="skipprereq"/>
      </bootstrap>
    <bootstrap thing="fTechnolog">
      <autotag group="thing" tag="skipprereq"/>
      </bootstrap>
    <bootstrap thing="skKnowEng"></bootstrap>
    <bootstrap thing="skKnowLoc"></bootstrap>
    <bootstrap thing="skKnowRel"></bootstrap>
    <bootstrap thing="lAndroffen"></bootstrap>
    <bootstrap thing="lCommon"></bootstrap>
    <bootstrap thing="lOrc"></bootstrap>
    <eval phase="First" priority="500">~ adjust ability scores

perform hero.child[tmCBAggreg].setfocus
focus.field[tmINT].value = field[abValue].value - hero.findchild[BaseRace].field[rINT].value
focus.field[tmWIS].value = field[abValue2].value - hero.findchild[BaseRace].field[rWIS].value
focus.field[tmCHA].value = field[abValue3].value - hero.findchild[BaseRace].field[rCHA].value

focus.field[tmMRAdjust].value += field[abValue5].value

hero.child[ArmorClass].field[tACNatural].value += 4
herofield[tBonusHP].value += 40

perform hero.childfound[xVulCrits].assign[Helper.SpcDisable]
perform hero.childfound[xVulCrits].assign[Hide.Special]
perform hero.childfound[xVulElec].assign[Helper.SpcDisable]
perform hero.childfound[xVulElec].assign[Hide.Special]</eval>
    <eval phase="First" priority="500" index="2"><![CDATA[

hero.child[tmCBAggreg].field[livename].text = "Aggregate Hellion AI"]]>
      <before name="Template Name Modification"/>
      </eval>
    <eval phase="PreLevel" priority="5000" index="3"><![CDATA[
~ languages
herofield[tLangsSta].value -= 3

~ set class skills

var classSk as string
classSk = "thingid.skBluff | thingid.skDisable | thingid.skKnowEng | thingid.skPercep"
foreach pick in hero from BaseSkill where classSk
  perform eachpick.assign[Helper.ClassSkill]
  eachpick.field[Bonus].value += 3
nexteach

~ set bonuses
var skills as string
skills = "thingid.skBluff | thingid.skDisable | thingid.skKnowEng | thingid.skPercep | thingid.skIntim | thingid.skKnowLoc | thingid.skKnowRel | thingid.skSenseMot"
foreach pick in hero from BaseSkill where skills
  eachpick.field[Bonus].value += 8
  eachpick.field[Racial].value = 0
  perform eachpick.delete[Helper.TrainOnly]
nexteach

~ lower skill point total (since we will add HD to robot)
#resmax[resSkill] -= 16]]>
      <before name="Skill Bonus Feats"/>
      </eval>
    <eval phase="Final" priority="1000" index="4">~ make sure we do not get epic DR

hero.childfound[xDamRdEpic].field[abValue].value = 0</eval>
    </thing>
  <thing id="rCBLattenM" name="Latten Mechanism" description="Latten Mechanism is a defender of constructs and crafters, a living siege engine who prefers the solitude of research and invention to the distractions of battle. Given a massive insectile form to allow it to perform all of its necessary functions, Latten Mechanism’s only humanlike feature is the androgynous face built into the top of its insectile head. Able to tear open castle gates, create iron walls, scoop up enemies and crush them in its body, reshape the very earth it stands on, and form complex objects out of raw materials or thin air, Latten Mechanism is a versatile engine of creation and destruction guided by a mechanical conscience that values constructs as much as it does intelligent living creatures.\n\nThe herald sees itself as a protective parent of all constructs, especially intelligent ones, and never uses its powers to destroy artificial beings unless it has no other choice; it prefers to neutralize or sideline these opponents until it has the opportunity to reprogram or repurpose them. Much as a true champion of freedom loathes charm spells for temporarily enslaving a person’s free will, Latten Mechanism believes spells such as control construct are a violation of a sentient construct’s free will, and only uses them as a last resort to peacefully end a threat. When confronted by a dangerous construct in an enemy’s service, Latten Mechanism has been known to render the construct helpless and flee with it, returning to deal with the construct’s master at a later time. The herald is a legend among intelligent constructs, and many come to Brigh’s faith after witnessing or experiencing its generosity and leniency.\n\nThe herald doesn’t speak in battle, as it prefers to fool its opponents into mistaking it for a mindless clockwork foe. Outside of combat, it’s curious about its allies’ inventions and crafting projects, and it can provide many insights into how the ally might overcome various obstacles to achieve greater successes (although it sometimes needs a few minutes to update its mind with knowledge suitable for the conversation). It can speak equally well out of its termite or humanoid mouth, and sometimes uses both in the same conversation, adding deep emphasis to certain words with its inhuman vocal apparatus. Both voices have a metallic, echoing twang.\n\nThe herald’s proper name is Latten Mechanism, although it answers to either part of its name individually, or even if its name is used as a title (“the Latten Mechanism”). Its programming allows it to recognize flattery, insults, and threats, although it doesn’t really understand the motivations for such things. The easiest way to anger it is to treat it like an unfeeling, unthinking machine or suggest that it could be parceled into useful parts (in the same way that a dragon would object to a casual discussion of how its hide could be made into armor).\n\n{b}Ecology{/b}\nLatten Mechanism is a created being that has no need to eat or drink. Though it has a need for occasional maintenance to prevent its delicate mechanical parts from seizing up or breaking down, it’s effectively immortal. It has no need to reproduce, but it treats all constructs it builds (even the temporary ones) as beloved pets, and is saddened if they are damaged, destroyed, or otherwise compromised. It feels kinship toward mortals who create constructs, so long as those creators are respectful toward their inventions.\n\nThe herald has no particular attachment to any mortal race or country, although it has spent more time among humans and the people of Alkenstar than any other kind or place. It holds neither aversion nor affinity to undead creatures—it considers reusing dead body parts to create new entities essentially similar to reusing metal or wood from a destroyed construct to repair or build another.\n\nBecause it became self-aware only when Brigh built it out of inanimate parts, it has no fear of death—for it, death is the same as the state of non-consciousness it existed in before its activation. If it was destroyed, but Brigh needed its abilities once more, the goddess would recreate and reawaken it; from the herald’s perspective, this wouldn’t even be an interruption of its consciousness.\n\nLatten Mechanism has a fondness for small clockwork objects and wind-up toys, such as rolling carts, hopping animals, and music boxes. It collects these treasures much the way noble’s child might collect elaborate dolls. A priest who offers such a thing as part of a payment when the herald is called is likely to gain the herald’s support, especially if the device features a clever mechanism, such as a dragon toy that utilizes a smokestick to create a miniature breath weapon, or a mechanical spider that utilizes a tanglefoot bag to catch bugs with tiny bursts of sticky webbing.\n \n{b}Habitat &amp; Society{/b}\nThe herald spends most of its time on Axis mixing with Brigh’s other servitors and pursuing its own research projects. It enjoys the company of axiomites and inevitables, respecting their non-biological anatomies and ever curious about their devotion to law. It sometimes directly intervenes in the mortal world by soothing a rampaging construct that might accidentally kill a genius inventor, but otherwise limits its interactions to those commanded by Brigh.\n\nAmong the servitors of Brigh, Latten Mechanism is admired for its crafting skills and devotion to all artificial creatures. Some servitors who become melancholy and long to become true flesh beings seek counsel from the herald, hoping to gain a better appreciation of their mechanical bodies and the uniqueness of their souls." compset="Race" uniqueness="unique">
    <fieldval field="rHitDice" value="18"/>
    <fieldval field="rHPStart" value="99"/>
    <fieldval field="rSTR" value="19"/>
    <fieldval field="rDEX" value="9"/>
    <fieldval field="rINT" value="11"/>
    <fieldval field="rWIS" value="8"/>
    <fieldval field="rCHA" value="6"/>
    <fieldval field="rSpeed" value="40"/>
    <fieldval field="rCR" value="15"/>
    <fieldval field="srcPageNum" value="84"/>
    <fieldval field="rEnviron" value="any (Axis)"/>
    <fieldval field="rOrgan" value="solitary or team (herald plus 1d6 clockwork soldiers and 1d6 clockwork servants)"/>
    <fieldval field="rTreasure" value="standard"/>
    <fieldval field="rSpCastLev" value="18"/>
    <fieldval field="rDescript" value="This clockwork termite is the size of a rhinoceros and has an oversized head with a humanoid face on it. Multiple apertures along its body sprout tool-wielding limbs, and a human-sized hatch on its abdomen chitters and clicks like a menacing maw."/>
    <fieldval field="rLangBonus" value="-5"/>
    <fieldval field="rFeat" value="-9"/>
    <fieldval field="rAC" value="18"/>
    <usesource source="PathIronGo"/>
    <tag group="RaceSize" tag="Large1"/>
    <tag group="ClassSkill" tag="Craft"/>
    <tag group="Alignment" tag="NeutralLC"/>
    <tag group="Alignment" tag="NeutralGE"/>
    <tag group="Hero" tag="NoDefComm"/>
    <tag group="HasType" tag="tpConst"/>
    <tag group="Helper" tag="NoPathSoc"/>
    <tag group="RaceType" tag="NPC"/>
    <bootstrap thing="xDamRdAdam">
      <autotag group="Value" tag="10"/>
      </bootstrap>
    <bootstrap thing="xDamRdMag">
      <autotag group="Value" tag="10"/>
      </bootstrap>
    <bootstrap thing="xDamRsCold">
      <autotag group="Value" tag="30"/>
      </bootstrap>
    <bootstrap thing="xDamRsFire">
      <autotag group="Value" tag="30"/>
      </bootstrap>
    <bootstrap thing="xImmAcid"></bootstrap>
    <bootstrap thing="xSplRs">
      <autotag group="Value" tag="26"/>
      </bootstrap>
    <bootstrap thing="stExtrapla"></bootstrap>
    <bootstrap thing="xBurrow">
      <autotag group="Value" tag="20"/>
      </bootstrap>
    <bootstrap thing="xClimb">
      <autotag group="Value" tag="20"/>
      </bootstrap>
    <bootstrap thing="xCBBreathW">
      <autotag group="BreathShp" tag="Line"/>
      <autotag group="SaveEff" tag="Half"/>
      <autotag group="Usage" tag="CB1d4Rnds"/>
      <assignval field="abValue" value="12"/>
      <assignval field="abValue2" value="8"/>
      <assignval field="abText" value="acid or electricity"/>
      <assignval field="abRange" value="120"/>
      </bootstrap>
    <bootstrap thing="raEntrap">
      <assignval field="livename" value="Entrap (1d10 rounds, hardness 8, hp 20)"/>
      </bootstrap>
    <bootstrap thing="spDimeDoo4">
      <autotag group="Helper" tag="SpellLike"/>
      <autotag group="Usage" tag="AtWill"/>
      </bootstrap>
    <bootstrap thing="spMakeWho2">
      <autotag group="Helper" tag="SpellLike"/>
      <autotag group="Usage" tag="AtWill"/>
      </bootstrap>
    <bootstrap thing="spMoveEar6">
      <autotag group="Helper" tag="SpellLike"/>
      <autotag group="Usage" tag="AtWill"/>
      </bootstrap>
    <bootstrap thing="spRapiRep5">
      <autotag group="Helper" tag="SpellLike"/>
      <autotag group="Usage" tag="AtWill"/>
      </bootstrap>
    <bootstrap thing="spSootCon5">
      <autotag group="Helper" tag="SpellLike"/>
      <autotag group="Usage" tag="AtWill"/>
      </bootstrap>
    <bootstrap thing="spContCon7">
      <autotag group="Helper" tag="SpellLike"/>
      <autotag group="Usage" tag="Day"/>
      <assignval field="trkMax" value="3"/>
      </bootstrap>
    <bootstrap thing="spFabrica5">
      <autotag group="Helper" tag="SpellLike"/>
      <autotag group="Usage" tag="Day"/>
      <assignval field="trkMax" value="3"/>
      </bootstrap>
    <bootstrap thing="spHaste3">
      <autotag group="Helper" tag="SpellLike"/>
      <autotag group="Usage" tag="Day"/>
      <assignval field="trkMax" value="3"/>
      </bootstrap>
    <bootstrap thing="spLighBol3">
      <autotag group="Helper" tag="SpellLike"/>
      <autotag group="Usage" tag="Day"/>
      <assignval field="trkMax" value="3"/>
      </bootstrap>
    <bootstrap thing="spMajoCre5">
      <autotag group="Helper" tag="SpellLike"/>
      <autotag group="Usage" tag="Day"/>
      <assignval field="trkMax" value="3"/>
      </bootstrap>
    <bootstrap thing="spSlow3">
      <autotag group="Helper" tag="SpellLike"/>
      <autotag group="Usage" tag="Day"/>
      <assignval field="trkMax" value="3"/>
      </bootstrap>
    <bootstrap thing="spUnbrCon5">
      <autotag group="Helper" tag="SpellLike"/>
      <autotag group="Usage" tag="Day"/>
      <assignval field="trkMax" value="3"/>
      </bootstrap>
    <bootstrap thing="spWallIro6">
      <autotag group="Helper" tag="SpellLike"/>
      <autotag group="Usage" tag="Day"/>
      <assignval field="trkMax" value="3"/>
      </bootstrap>
    <bootstrap thing="stHerald"></bootstrap>
    <bootstrap thing="wBite">
      <autotag group="wMain" tag="6d8_207"/>
      </bootstrap>
    <bootstrap thing="raEnerDam">
      <autotag group="Target" tag="wBite"/>
      <autotag group="Target" tag="wConstrict"/>
      <assignval field="abText" value="plus 6d8 acid or electricity"/>
      </bootstrap>
    <bootstrap thing="lAbyssal"></bootstrap>
    <bootstrap thing="lCelestial"></bootstrap>
    <bootstrap thing="lCommon"></bootstrap>
    <bootstrap thing="lDraconic"></bootstrap>
    <bootstrap thing="lInfernal"></bootstrap>
    <bootstrap thing="raGrab">
      <autotag group="Target" tag="wBite"/>
      </bootstrap>
    <bootstrap thing="fCleave"></bootstrap>
    <bootstrap thing="fComExpert"></bootstrap>
    <bootstrap thing="fComRef"></bootstrap>
    <bootstrap thing="fGreatFort"></bootstrap>
    <bootstrap thing="fGunsmithi">
      <autotag group="thing" tag="skipprereq"/>
      </bootstrap>
    <bootstrap thing="fImpInit">
      <autotag group="thing" tag="skipprereq"/>
      </bootstrap>
    <bootstrap thing="fIronWill">
      <autotag group="thing" tag="skipprereq"/>
      </bootstrap>
    <bootstrap thing="fLightRef"></bootstrap>
    <bootstrap thing="fPowerAtt"></bootstrap>
    <bootstrap thing="fStandStil"></bootstrap>
    <bootstrap thing="fToughness"></bootstrap>
    <bootstrap thing="fWepFoc">
      <autotag group="Target" tag="wBite"/>
      </bootstrap>
    <bootstrap thing="wConstrict">
      <autotag group="wMain" tag="6d8_207"/>
      </bootstrap>
    <bootstrap thing="skKnowEng"></bootstrap>
    <bootstrap thing="skKnowRel"></bootstrap>
    <bootstrap thing="skCrafOth"></bootstrap>
    <bootstrap thing="raCBLMSize"></bootstrap>
    <bootstrap thing="raCBLMCrSo"></bootstrap>
    <bootstrap thing="raTreDoubD"></bootstrap>
    <bootstrap thing="raCBLMMwkT"></bootstrap>
    <bootstrap thing="raCBLMLyre"></bootstrap>
    <bootstrap thing="raCBLMMstC"></bootstrap>
    <bootstrap thing="xFastHeal">
      <autotag group="Value" tag="10"/>
      </bootstrap>
    <eval phase="PreLevel" priority="4000">#skillinnate[skClimb] += 1
#skillinnate[skCrafOth] += 18
#skillinnate[skDisable] += 18
#skillinnate[skKnowEng] += 18
#skillinnate[skKnowRel] += 18
#skillinnate[skPercep] += 18
#skillinnate[skSenseMot] += 9
#skillinnate[skSpellcr] += 17
#skillinnate[skUseMagic] += 9</eval>
    </thing>
  <thing id="raCBLMSize" name="Change Size" description="Latten Mechanism can change its size to Huge, Large, or Medium as a standard action, as if using {i}enlarge person{/i} or {i}reduce person{/i}. This change lasts until it changes size again or is killed." compset="RaceSpec" summary="Change size as a standard action." uniqueness="useronce">
    <arrayval field="usrArray" index="0" value="Medium"/>
    <arrayval field="usrArray" index="1" value="Large"/>
    <arrayval field="usrArray" index="2" value="Huge"/>
    <usesource source="PathIronGo"/>
    <tag group="Helper" tag="ShowSpec"/>
    <tag group="abAction" tag="Standard"/>
    <tag group="AbilType" tag="Super"/>
    <tag group="Helper" tag="ActivMenu"/>
    <eval phase="First" priority="20000">var idx as number
idx = field[usrIndex].value

if (idx = 0) then
      hero.child[aSTR].field[Penalty].value -= 2
      hero.child[aDEX].field[Bonus].value += 2

      ~ we want to decrease our size by -1
      var sizemod as number
      sizemod = -1
      call SizeChange
elseif (idx = 2) then
      hero.child[aSTR].field[Penalty].value += 2
      hero.child[aDEX].field[Bonus].value -= 2

      ~ we want to decrease our size by +
      var sizemod as number
      sizemod = 1
      call SizeChange
endif</eval>
    </thing>
  <thing id="raCBLMCrSo" name="Create Soldiers" description="Once per day, Latten Mechanism can create up to four clockwork soldiers (Pathfinder RPG Bestiary 3 57). These soldiers serve it for 1 hour, after which they break down into their component parts." compset="RaceSpec" summary="Create four clockwork soldiers that serve for one hour.">
    <fieldval field="trkMax" value="1"/>
    <usesource source="PathIronGo"/>
    <tag group="AbilType" tag="Extra"/>
    <tag group="User" tag="Tracker"/>
    <tag group="Helper" tag="ShowSpec"/>
    <tag group="Usage" tag="Day"/>
    <tag group="abAction" tag="Standard"/>
    </thing>
  <thing id="raCBLMMwkT" name="Integrated Masterwork Tools" description="Latten Mechanism can extend additional limbs from its body that end in masterwork tools suitable for any Craft skill it has ranks in." compset="RaceSpec" uniqueness="useronce">
    <usesource source="PathIronGo"/>
    <tag group="Helper" tag="ShowSpec"/>
    <tag group="AbilType" tag="Extra"/>
    <eval phase="PreLevel" priority="10000"><![CDATA[
doneif (tagis[Helper.SpcDisable] <> 0)

foreach pick in hero from BaseSkill where "Helper.SkCatCraft"
  perform eachpick.delete[Helper.ToolsNeed]
~  perform eachpick.field[Bonus].value += 2
nexteach]]></eval>
    </thing>
  <thing id="raCBLMLyre" name="Lyre of Building" description="Latten Mechanism has all of the abilities of a {i}lyre of building{/i}, with the same limitations as that item.\n\n{b}{i}Lyre of Building{/i}{/b}\nThis magical instrument is usually made of gold and inlaid with numerous gems. If the proper chords are struck, a single use of this lyre negates any attacks made against inanimate construction (walls, roof, floor, and so on) within 300 feet. This includes the effects of a {i}horn of blasting{/i}, a {i}disintegrate{/i} spell, or an attack from a ram or similar siege weapon. The lyre can be used in this way once per day, with the protection lasting for 30 minutes.\n\nThe lyre is also useful with respect to building. Once a week, its strings can be strummed so as to produce chords that magically construct buildings, mines, tunnels, ditches, etc. The effect produced in 30 minutes of playing is equal to the work of 100 humans laboring for 3 days. Each hour after the first, a character playing the lyre must make a DC 18 Perform (string instruments) check. If it fails, she must stop and cannot play the lyre again for this purpose until a week has passed." compset="RaceSpec">
    <usesource source="PathIronGo"/>
    <tag group="AbilType" tag="Super"/>
    <tag group="Helper" tag="ShowSpec"/>
    <tag group="SpecType" tag="Attack"/>
    </thing>
  <thing id="raCBLMMstC" name="Master of Crafting" description="Latten Mechanism can spend 10 minutes reconfiguring itself to allocate its 18 ranks in the Craft skill to any specific Craft skills in any combination. For example, it can allocate 9 ranks in Craft (armor) and 9 ranks in Craft (clockwork). All Craft skills are class skills for Latten Mechanism." compset="RaceSpec">
    <usesource source="PathIronGo"/>
    <tag group="AbilType" tag="Extra"/>
    <tag group="Helper" tag="ShowSpec"/>
    </thing>
  <thing id="rCBRhuChal" name="Rhu-Chalik" description="A rhu-chalik, also called a void wanderer, is an alien entity that scouts for a nebulous collection of space conquerors known as the Dominion of the Black. In addition to ambitions for dominating the universe, they also engage in a curious pursuit: collecting the memories of interesting creatures in the universe into a vast repository of knowledge in hopes of unraveling every secret of existence.\n\nThough they are theoretically capable of traversing the vastness of space to make it to Golarion on their own, the rhu-chaliks encountered here arrived on the crashed spaceship Divinity. Years before Divinity crashed onto Golarion, the ship’s crew discovered rhu-chaliks in a distant galaxy and became intrigued with their unique form. They collected a few specimens and set about observing the enigmatic creatures. Unknown to the scientists, these aliens had allowed their own capture in order to travel to far-flung galaxies where they could explore the thoughts, dreams, and knowledge of thousands upon thousands of races the universe over. The rhu-chaliks kept their strange abilities secret onboard the ship, content to travel in dormancy until the Divinity encountered the Dominion of the Black, at which point the creatures shredded the minds of their scientist wardens. Later, as the ship crashed on Golarion, the creatures seeped from the vessel and began their exploration of this new world flush with sentient life.\n\nA rhu-chalik is approximately 3 feet across and weighs only 30 pounds.\n\n{b}Ecology{/b}\nRhu-chaliks’ anatomy is as alien as their motives. The creatures resemble spongy masses of jet-black tissue, with lidless, pupil-less, grayish-white eyes at their center and four thin tendrils extending from their mass. Rhu-chaliks can hover in atmosphere or float in the dead vacuum of space; they don’t need to breathe. They’re capable of remaining motionless for decades, and some claim that their life spans may outlast even the stars themselves.\n\nIt’s assumed that rhu-chaliks are the least powerful of their strange race and exist merely to transmit the minds of interesting creatures they encounter far into the depths of their masters’ domain—a starless void beyond the edge of the universe. Those few who have studied rhu-chaliks and survived with their minds intact theorize that these creatures are carefully sculpted to suit their task, and it’s likely that their original form has been drastically altered by millennia of specialized breeding into their current dread incarnation. There is no existing information about how these creatures procreate, and it is assumed that they are artificially crafted by their dark masters.\n\nVoid wanderers don’t feed in the traditional sense, and they lack a mouth or any other orifice that can accept food. Some records retrieved from Divinity suggest that the creatures use their tendrils to absorb nutrients through osmosis, but this is incorrect. Rhu-chaliks maintain their bodily form and sustain their lengthy lifespans by feeding off the thoughts and fears of sentient beings. Every emotion has a different flavor to these creatures, and since their feedings are harmless to the sources of their meals, many rhu-chaliks have been observed to dine continuously from the same mind endlessly, prodding different emotions to elicit a new taste as if they were ordering a new course at a banquet.\n \n{b}Habitat &amp; Society{/b}\nRhu-chaliks are the lesser cogs of a collective of starspanning overlords far beyond the powers of Golarion. Rhuchaliks serve as scouts and traveling collectors that wander through civilizations in search of minds that they can twist with fear and agony. Their ultimate goal is to copy the minds of those they encounter and send the consciousnesses beyond the stars to their masters.\n\nAs observers, rhu-chaliks prefer to maintain stealth for as long as possible. These small creatures can compress their spongy bodies into a fraction of their normal size, and then lodge themselves into tight hiding spots so that they can sift through the thoughts of nearby sentient creatures. If discovered, rhu-chaliks leave their hiding places, but they are quick to return once they’re confident that they can reestablish secrecy.\n\nMillions of these strange horrors are cast out from their dark domain every moment, hurtling through space until they encounter some alien race or world not yet probed by the dark masters of their native space. From their farf lung redoubt, rhu-chaliks observe the churning cosmos, gathering every speck of information and every thought ever birthed by the minds of a thousand races of alien species.\n\nIn the dark space from which they hail, catalogs of entire civilizations hang in a surreal miasma of misplaced minds shrieking out in disembodied agony for all eternity, with their every desire, fear, secret, and scrap of understanding exposed like raw nerves for invasive perusal. The creatures who survive having their consciousnesses copied and transmitted are often unaware of the transmission, and little realize that their most private moments will be pored over endlessly by alien minds.\n\nRhu-chaliks serve their masters tirelessly, and are as patient as they are long-lived. They rarely make an uncalculated move, and seek only the most prized intellects to cast into the dark beyond for their master’s delectations. When exploring distant worlds, rhu-chaliks are not social beings, and they avoid other rhu-chaliks in hopes that their predations won’t cause too much overlap in the mind collection clouds of their masters. However, back in their native space, rhu-chaliks number in the billions, and the creatures feed off a countless number of disembodied minds." compset="Race">
    <fieldval field="rHitDice" value="8"/>
    <fieldval field="rHPStart" value="36"/>
    <fieldval field="rSTR" value="2"/>
    <fieldval field="rDEX" value="6"/>
    <fieldval field="rCON" value="9"/>
    <fieldval field="rINT" value="3"/>
    <fieldval field="rWIS" value="4"/>
    <fieldval field="rCHA" value="5"/>
    <fieldval field="rFeat" value="-4"/>
    <fieldval field="rAC" value="4"/>
    <fieldval field="rCR" value="6"/>
    <fieldval field="rLangBonus" value="-1"/>
    <fieldval field="rDescript" value="Thin tendrils trail from this misshapen sphere. A gray orb hangs beneath the creature like a bulging lidless eye."/>
    <fieldval field="rEnviron" value="any"/>
    <fieldval field="rOrgan" value="solitary"/>
    <fieldval field="rTreasure" value="none"/>
    <fieldval field="rSpCastLev" value="10"/>
    <fieldval field="srcPageNum" value="86"/>
    <usesource source="PathIronGo"/>
    <tag group="Hero" tag="NoDefComm"/>
    <tag group="RaceSize" tag="Small11"/>
    <tag group="Alignment" tag="Chaotic"/>
    <tag group="Alignment" tag="Evil"/>
    <tag group="RaceType" tag="NPC"/>
    <tag group="Helper" tag="NoPathSoc"/>
    <tag group="HasType" tag="tpAberr"/>
    <tag group="ClassSkill" tag="skBluff"/>
    <tag group="ClassSkill" tag="skSenseMot"/>
    <bootstrap thing="xImmCold"></bootstrap>
    <bootstrap thing="xImmDis"></bootstrap>
    <bootstrap thing="xAllAround"></bootstrap>
    <bootstrap thing="raCompress"></bootstrap>
    <bootstrap thing="raNoBreath"></bootstrap>
    <bootstrap thing="xTelepathy">
      <autotag group="Value" tag="100"/>
      </bootstrap>
    <bootstrap thing="raSeeDark"></bootstrap>
    <bootstrap thing="lAklo"></bootstrap>
    <bootstrap thing="spDeteTho2">
      <autotag group="Helper" tag="SpellLike"/>
      <autotag group="Usage" tag="AtWill"/>
      </bootstrap>
    <bootstrap thing="spInvisib2">
      <autotag group="Helper" tag="SpellLike"/>
      <autotag group="Usage" tag="AtWill"/>
      </bootstrap>
    <bootstrap thing="spMageArm1">
      <autotag group="Helper" tag="SpellLike"/>
      <autotag group="Usage" tag="Constant"/>
      </bootstrap>
    <bootstrap thing="spSharMem2">
      <autotag group="Helper" tag="SpellLike"/>
      <autotag group="Usage" tag="AtWill"/>
      </bootstrap>
    <bootstrap thing="spModiMem4">
      <autotag group="Helper" tag="SpellLike"/>
      <autotag group="Usage" tag="Day"/>
      <assignval field="trkMax" value="3"/>
      </bootstrap>
    <bootstrap thing="wTentacle">
      <autotag group="wMain" tag="1d4_4"/>
      <autotag group="Value" tag="4"/>
      <assignval field="livename" value="Tendril"/>
      <assignval field="sbName" value="tendril"/>
      </bootstrap>
    <bootstrap thing="fComExpert"></bootstrap>
    <bootstrap thing="fComRef"></bootstrap>
    <bootstrap thing="fImpInit"></bootstrap>
    <bootstrap thing="raCBRCPain"></bootstrap>
    <bootstrap thing="raCBRCPrjT"></bootstrap>
    <bootstrap thing="raCBRCVoid"></bootstrap>
    <bootstrap thing="fWepFin"></bootstrap>
    <bootstrap thing="xFastHeal">
      <autotag group="Value" tag="2"/>
      </bootstrap>
    <bootstrap thing="xFly">
      <autotag group="Maneuver" tag="Perfect"/>
      <autotag group="Value" tag="60"/>
      </bootstrap>
    <eval phase="PreLevel" priority="4000">#skillinnate[skBluff] += 3
#skillinnate[skDiplo] += 6
#skillinnate[skFly] += 5
#skillinnate[skIntim] += 5
#skillinnate[skPercep] += 5
#skillinnate[skSenseMot] += 2
#skillinnate[skStealth] += 5
#skillinnate[skUseMagic] += 8
      <before name="Skill Bonus Feats"/>
      </eval>
    </thing>
  <thing id="raCBRCPain" name="Pain Touch" description="A rhu-chalik secretes an enzyme that coats its tendrils. When this enzyme comes into contact with a living creature, it causes excruciating pain. Any creature that comes into contact with the enzyme must succeed at a DC 18 Fortitude save or take a –2 penalty on attack rolls, ability checks, and skill checks for 1d4 rounds. If a creature is affected by multiple pain touch attacks, the duration stacks but the penalty doesn’t. Creatures that are immune to pain effects are immune to this ability. The save DC is Charisma-based." compset="RaceSpec" summary="Touch causes excruciating pain.">
    <usesource source="PathIronGo"/>
    <tag group="StandardDC" tag="aCHA"/>
    <tag group="abSave" tag="FortNeg"/>
    <tag group="AbilType" tag="Extra"/>
    <tag group="Helper" tag="ShowSpec"/>
    <tag group="SpecType" tag="Attack"/>
    <eval phase="Final" priority="1000"><![CDATA[
doneif (tagis[Helper.SpcDisable] <> 0)

#extradamage[hero.child[wTentacle]," plus pain touch",field[name].text]]]></eval>
    </thing>
  <thing id="raCBRCPrjT" name="Project Terror" description="As a standard action, a rhu-chalik can harness the fears of any creature it has successfully used {i}detect thoughts{/i} on within the last minute. This effect creates visions of that creature’s most terrible nightmares in the target’s mind; the target must succeed at a DC 16 Will save or be frightened and take 1d4 points of Wisdom damage. The save DC is Charisma-based." compset="RaceSpec" summary="Project nightmares into a creature&apos;s mind dealing 1d4 Wis damage.">
    <usesource source="PathIronGo"/>
    <tag group="StandardDC" tag="aCHA"/>
    <tag group="abSave" tag="WillNeg"/>
    <tag group="abAction" tag="Standard"/>
    <tag group="SpecType" tag="Attack"/>
    <tag group="AbilType" tag="Super"/>
    <tag group="Helper" tag="ShowSpec"/>
    </thing>
  <thing id="raCBRCVoid" name="Void Transmission" description="If a creature takes an amount of Wisdom damage from the rhu-chalik’s project terror ability that equals or exceeds the creature’s Wisdom score, the creature falls unconscious as normal. At that point, the rhuchalik can take 10 minutes to copy and absorb the creature’s entire consciousness and send that consciousness through the void of space to its waiting masters. If the creature’s Wisdom damage is healed and the creature is revived prior to the end of this process, this effect fails. If the creature’s Wisdom damage is healed after its consciousness is successfully transmitted, the creature awakes disoriented, and takes a –2 penalty on attack rolls, ability checks, and skill checks for 24 hours. This effect otherwise doesn’t harm the target, as the target’s consciousness isn’t eliminated, only duplicated and transmitted." compset="RaceSpec" summary="Creature&apos;s reduced to 0 Wis by project terror have their mind projected into space.">
    <usesource source="PathIronGo"/>
    <tag group="SpecType" tag="Attack"/>
    <tag group="AbilType" tag="Super"/>
    <tag group="Helper" tag="ShowSpec"/>
    </thing>
  <thing id="rCBRbObser" name="Robot, Observer" description="Designed for reconnaissance, observer robots are deployed to serve as the eyes and ears of their controllers. Because they’re intelligent and able to make their own decisions, observer robots are suited for exploring without supervision, recording their observations so that they can relay the images and sounds to their creators. The outer hull of an observer robot and its wings are covered in a network of tiny screens that can display images of the robots’ surroundings, which grants the observer robot a form of camouflage that allows it to clandestinely observe its subjects.\n\nThe statistics above represent the most common observer robots, but some models have enhanced senses that allow them to see in darkness or see invisible creatures. Some even have olfactory sensors that effectively smell their environment and test the surrounding air for impurities that would harm their creators. Observer robots deployed in hostile environments might be outfitted with more formidable weaponry than the standard stun gun and laser torch.\n\nAn observer robot is approximately 20 inches long and weighs 8 pounds." compset="Race">
    <fieldval field="rHitDice" value="3"/>
    <fieldval field="rHPStart" value="16"/>
    <fieldval field="rSTR" value="2"/>
    <fieldval field="rDEX" value="5"/>
    <fieldval field="rWIS" value="7"/>
    <fieldval field="rCHA" value="-9"/>
    <fieldval field="rSpeed" value="20"/>
    <fieldval field="rDescript" value="This small robot is reminiscent of a beetle with a pair of pincers extending from the front of its body."/>
    <fieldval field="rEnviron" value="any (Numeria)"/>
    <fieldval field="rOrgan" value="solitary or deployment (2-12)"/>
    <fieldval field="rTreasure" value="none"/>
    <fieldval field="srcPageNum" value="88"/>
    <fieldval field="rSpace" value="2.5"/>
    <fieldval field="rReach" value="0"/>
    <fieldval field="rReachNote" value="5 ft. with integrated laser torch"/>
    <fieldval field="rCR" value="2"/>
    <fieldval field="rAC" value="4"/>
    <fieldval field="rFeat" value="-2"/>
    <usesource source="PathIronGo"/>
    <tag group="RaceSize" tag="Tiny12"/>
    <tag group="RaceType" tag="NPC"/>
    <tag group="Helper" tag="NoPathSoc"/>
    <tag group="Alignment" tag="NeutralLC"/>
    <tag group="Alignment" tag="NeutralGE"/>
    <tag group="Helper" tag="ManyLegs"/>
    <tag group="Helper" tag="NotHum"/>
    <tag group="HasType" tag="tpConst"/>
    <bootstrap thing="xAllAround"></bootstrap>
    <bootstrap thing="raHardness">
      <autotag group="Value" tag="5"/>
      </bootstrap>
    <bootstrap thing="xFly">
      <autotag group="Maneuver" tag="Perfect"/>
      <autotag group="Value" tag="60"/>
      </bootstrap>
    <bootstrap thing="lAndroffen"></bootstrap>
    <bootstrap thing="stRobot"></bootstrap>
    <bootstrap thing="fAlertness"></bootstrap>
    <bootstrap thing="fLightRef"></bootstrap>
    <bootstrap thing="wClaw">
      <autotag group="wMain" tag="1d2_2"/>
      <autotag group="Value" tag="2"/>
      </bootstrap>
    <bootstrap thing="raCBRObCam"></bootstrap>
    <bootstrap thing="raCBROInSG"></bootstrap>
    <bootstrap thing="raCBROInLT"></bootstrap>
    <bootstrap thing="raCBORTrsS"></bootstrap>
    <eval phase="First" priority="300" index="2"><![CDATA[
field[livename].text = "Observer Robot"]]>
      <before name="Template Name Modification"/>
      </eval>
    <eval phase="PreLevel" priority="4000">#racialbonus[skPercep] += 4

#skillinnate[skPercep] += 3
#skillinnate[skStealth] += 1
#skillinnate[skSurvival] += 2
      <before name="Skill Bonus Feats"/>
      </eval>
    </thing>
  <thing id="raCBRObCam" name="Camouflage" description="An observer robot’s outer shell contains color-shifting screens that allow the creature to blend into any background. Though not truly invisible, they are hard to pinpoint. While using this ability, an observer robot gains a +8 racial bonus on Stealth checks and has concealment from creatures more than 5 feet away." compset="RaceSpec">
    <tag group="Helper" tag="ShowSpec"/>
    <tag group="AbilType" tag="Extra"/>
    <tag group="User" tag="Activation"/>
    <eval phase="PreLevel" priority="4000">doneif (field[abilActive].value = 0)

#racialbonus[skStealth] += 8
      <before name="Skill Bonus Feats"/>
      </eval>
    </thing>
  <thing id="raCBROInLT" name="Integrated Laser Torch" description="An observer robot is outfitted with an integrated laser torch used to bypass barriers or restraints. When activated, the torch emits a beam of highly focused light, cutting and burning through surfaces up to 6 inches away. Attacks from a laser torch resolve as touch attacks and deal 1d10 points of fire damage. This damage is not modified further by Strength. An observer robot’s integrated laser torch is mounted on an extending arm that allows it greater reach. When the laser torch is used as a tool or as a weapon to sunder, its damage bypasses hardness up to 20 points, and damage is not halved (as is normally the case for energy damage applied to objects) unless the object is particularly fire-resistant. A laser torch’s cutting beam passes through force fields and force effects without damaging the field. Invisible objects and creatures can’t be harmed by a laser torch." compset="RaceSpec">
    <fieldval field="abRange" value=".5"/>
    <usesource source="PathIronGo"/>
    <tag group="Helper" tag="ShowSpec"/>
    <tag group="abAction" tag="Attack"/>
    <tag group="SpecType" tag="AttackSpec"/>
    <tag group="AbilType" tag="Extra"/>
    <tag group="Helper" tag="WeaponSpec"/>
    <tag group="Helper" tag="SingleAtt"/>
    <tag group="wCategory" tag="Melee"/>
    <tag group="wCategory" tag="Touch"/>
    <tag group="wMain" tag="1d10_304"/>
    <tag group="Helper" tag="NoAttrDam"/>
    <tag group="wCritMin" tag="20"/>
    <tag group="wCritMult" tag="2"/>
    <tag group="abRange" tag="Feet"/>
    <tag group="SpecType" tag="Attack"/>
    </thing>
  <thing id="raCBROInSG" name="Integrated Stun Gun" description="An observer robot has an integrated stun gun built into its head. This weapon uses a sonic amplifier to produce powerful low-frequency blasts of energy that can pummel targets. This weapon has a range increment of 20 feet, and it deals 1d8 points of nonlethal damage. When it scores a critical hit, the robot can attempt a free trip combat maneuver (CMB +13) against the target, which does not provoke attacks of opportunity." compset="RaceSpec">
    <fieldval field="wFixRanDam" value="1d8 nonlethal"/>
    <usesource source="PathIronGo"/>
    <tag group="AbilType" tag="Extra"/>
    <tag group="SpecType" tag="AttackSpec"/>
    <tag group="Helper" tag="NoAttrDam"/>
    <tag group="wSpecial" tag="Nonlethal"/>
    <tag group="wCritMin" tag="20"/>
    <tag group="wCritMult" tag="2"/>
    <tag group="wRangeInc" tag="20"/>
    <tag group="Helper" tag="ShowSpec"/>
    <tag group="Helper" tag="WeaponSpec"/>
    <tag group="Helper" tag="SingleAtt"/>
    <tag group="SpecType" tag="Attack"/>
    <tag group="abAction" tag="Attack"/>
    <tag group="wCategory" tag="RangeProj"/>
    </thing>
  <thing id="raCBORTrsS" name="Transmit Senses" description="An observer robot is outfitted with a number of sensors, cameras, and microphones that allow it to record events and transmit them to another location. An observer robot can record up to 12 hours of audio and video. An observer robot’s communications can be keyed to a commset or other similar device, and it can broadcast everything it can see or hear to this device as long as it is within 1 mile. The signal strength can be enhanced with a signal booster. An observer robot can also transmit its senses to another observer robot. A signal has difficulty penetrating solid barriers. A signal is blocked by 1 foot of metal, 5 feet of stone, or 20 feet of organic matter. Force fields do not block signals. Broadcasting functions like a scrying sensor, allowing the viewer to hear and see what the observer robot is experiencing. The viewer gains the benefits of any nonmagical special abilities the observer robot has tied to its senses (such as low-light vision), but the viewer uses her own Perception skill. This ability doesn’t allow magically or supernaturally enhanced senses to work through it, even if both the observer robot and the viewer possess them." compset="RaceSpec" summary="Record up to 12 hours of audio and video an transmit it to another location." uniqueness="useronce">
    <usesource source="PathIronGo"/>
    <tag group="AbilType" tag="Extra"/>
    <tag group="Helper" tag="ShowSpec"/>
    </thing>
  <thing id="rCBRbObSwa" name="Robot Swarm, Observer" description="Observer robots were sometimes deployed in groups that were dependent on each other. Their instruments were networked to form a web of sensors spread out over a wide area to retrieve superior surveillance for their masters. Years after these networked robots ceased receiving orders, numerous observer robots rewrote their programming and assembled into collectives that numbered up to 1,000 individual observer robots. These swarms emerge from buried wreckage in dangerous metallic clouds that scour, confound, and burn creatures they attack.\n\nWhile swarms are typically chaotic, roiling clouds of creatures, observer robot swarms are highly organized, with hundreds of the tiny robots moving in synchronized patterns as they fly through the air. When observer robot swarms attack, the screens on their outer hulls flicker with disorienting colors that leave their enemies nauseated. They can also organize themselves into a matrix to display composite images across the screens on their collective shells. Treating their individual screens like pixels, observer robot swarms can form moving images of things that they have recorded such as displaying the terrorstricken face of their last victim. These robot swarms even cleverly use this technique to disguise themselves as churning clouds, flickering fires, or even other swarms such as bats or wasps.\n\nSince observer robot swarms spend much of their processing power transmitting and sharing senses with other robots in the swarm, they rarely transmit to other devices. Their recordings are shared among the collective, making harvesting recorded data from them extremely difficult." compset="Race">
    <fieldval field="rHitDice" value="18"/>
    <fieldval field="rHPStart" value="99"/>
    <fieldval field="rSTR" value="2"/>
    <fieldval field="rDEX" value="9"/>
    <fieldval field="rINT" value="1"/>
    <fieldval field="rWIS" value="8"/>
    <fieldval field="rCHA" value="-7"/>
    <fieldval field="rFeat" value="-9"/>
    <fieldval field="rAC" value="6"/>
    <fieldval field="rCR" value="10"/>
    <fieldval field="rDescript" value="This small robot is reminiscent of a beetle with a pair of pincers extending from the front of its body."/>
    <fieldval field="rEnviron" value="any (Numeria)"/>
    <fieldval field="rOrgan" value="solitary or cloud (2-5)"/>
    <fieldval field="rTreasure" value="none"/>
    <fieldval field="rSpace" value="10"/>
    <fieldval field="rReach" value="0"/>
    <fieldval field="srcPageNum" value="89"/>
    <usesource source="PathIronGo"/>
    <tag group="RaceSize" tag="Tiny12"/>
    <tag group="HasType" tag="tpConst"/>
    <tag group="RaceType" tag="NPC"/>
    <tag group="Alignment" tag="NeutralLC"/>
    <tag group="Alignment" tag="NeutralGE"/>
    <tag group="Helper" tag="NoPathSoc"/>
    <bootstrap thing="stSwarm"></bootstrap>
    <bootstrap thing="lAndroffen"></bootstrap>
    <bootstrap thing="fStepUp"></bootstrap>
    <bootstrap thing="fToughness"></bootstrap>
    <bootstrap thing="fAlertness"></bootstrap>
    <bootstrap thing="fDodge"></bootstrap>
    <bootstrap thing="fFollStep"></bootstrap>
    <bootstrap thing="fImpInit"></bootstrap>
    <bootstrap thing="fLightRef"></bootstrap>
    <bootstrap thing="xFly">
      <autotag group="Maneuver" tag="Perfect"/>
      <autotag group="Value" tag="60"/>
      </bootstrap>
    <bootstrap thing="fIronWill"></bootstrap>
    <bootstrap thing="fImpLgtRef"></bootstrap>
    <bootstrap thing="stRobot"></bootstrap>
    <bootstrap thing="xAllAround"></bootstrap>
    <bootstrap thing="raHardness">
      <autotag group="Value" tag="10"/>
      </bootstrap>
    <bootstrap thing="raCBRObCam"></bootstrap>
    <bootstrap thing="raCBORTrsS"></bootstrap>
    <eval phase="PreLevel" priority="4000"><![CDATA[
#racialbonus[skPercep] += 4

#skillinnate[skFly] += 1
#skillinnate[skPercep] += 18
#skillinnate[skSenseMot] += 4
#skillinnate[skStealth] += 8
#skillinnate[skSurvival] += 5

perform hero.child[skPercep].delete[Helper.ClassSkill]
perform hero.child[skSenseMot].delete[Helper.ClassSkill]


#extradamage[hero.child[raSwarmAtk]," plus distraction and 2d6 fire",field[name].text]]]>
      <before name="Skill Bonus Feats"/>
      </eval>
    <eval phase="First" priority="300" index="2"><![CDATA[
field[livename].text = "Observer Robot Swarm"]]>
      <before name="Template Name Modification"/>
      </eval>
    <eval phase="Final" priority="1000" index="3"><![CDATA[

hero.child[raCBORTrsS].field[DescAppend].text = "Though observer robot swarms still maintain the ability to transmit their senses to a receiver like a normal observer robot, these rogue robots rarely do so."]]></eval>
    </thing>
  <thing id="rCBRustRis" name="Rust-Risen" description="Rust-risen lurk n the burned-out husks of ancient space-faring vessels and among the grease and blood stained laboratories of mad, technologist necromancers. These hideous undead mockeries riddled with the remnants of ancient technology—rotting creatures, outfitted with twitching relics of a spacefaring race, that prey on the living by tearing their victims to shreds with gnashing drills, vivisecting scalpels, and flailing exsanguination tubes.\n\n{b}Ecology{/b}\nNecromancers with a twisted affinity for technology often forgo the usual ghoul or zombie minions for a rust-risen ally. Far from mindless, rust-risen possess limited memories of their lives before undeath, though these recollections are more like misshapen shadows flickering on the walls of their minds, and are often distorted and highly inaccurate.\n\n{b}Habitat &amp; Society{/b}\nRust-risen possess the unnatural hunger for the living shared by other undead, but they also maintain a strange obsession with technological artifacts. It’s not uncommon when breaching a rust-risen lair to find it filled with baubles, gizmos, and other technological oddities—even schematics which rust-risen cannot make sense of. Rust-risen collect such items, which appear to give them some semblance of comfort in their rotting horror of an existence. Rustrisen also seek sources of electrical power, finding them comforting in the same way a warm bath soothes living flesh. If denied access to an electrical power source, rust-risen become sluggish and despondent, but spring to activity as soon as they are exposed to electricity.\n\nRust-risen are always bonded to their creator, serving them as loyally as an animal companion does its master. They rely on their creator to keep their malfunctioning technology from completely breaking down. Over time however, their bond grows into obsession; eventually it becomes an uncontrollable desire for their master to join them in undeath. Such obsessed rust-risen often overpower their necromancer overlords, who awaken to find themselves on an operating table, their machine-studded monstrosities hovering busily over their extracted viscera.\n\nIf a rust-risen’s creator is destroyed, the undead becomes despondent and lost. It wanders, avoiding civilization and hovering at the fringes of communities, preying on stragglers and wallowing in misanthropic misery. At the same time, it constantly seeks the aid of anyone who can keep it from breaking down. This duality means that the mood of an uncontrolled rust-risen is nigh-impossible to predict." compset="Race">
    <fieldval field="rHitDice" value="3"/>
    <fieldval field="rHPStart" value="13"/>
    <fieldval field="rSTR" value="7"/>
    <fieldval field="rDEX" value="3"/>
    <fieldval field="rINT" value="-5"/>
    <fieldval field="rWIS" value="2"/>
    <fieldval field="rCHA" value="4"/>
    <fieldval field="rFeat" value="-2"/>
    <fieldval field="rAC" value="4"/>
    <fieldval field="rCR" value="2"/>
    <fieldval field="srcPageNum" value="90"/>
    <fieldval field="rDescript" value="Miscellaneous bits of rusted machinery are fused to the body of this shambling corpse."/>
    <fieldval field="rEnviron" value="any"/>
    <fieldval field="rOrgan" value="solitary, pair, or pack (3-12)"/>
    <fieldval field="rTreasure" value="none"/>
    <fieldval field="rSpecSing" value="Augmentation"/>
    <fieldval field="rSpecName" value="Augmentations"/>
    <usesource source="PathIronGo"/>
    <tag group="Alignment" tag="Chaotic"/>
    <tag group="Alignment" tag="Evil"/>
    <tag group="RaceType" tag="NPC"/>
    <tag group="RaceSize" tag="Medium0"/>
    <tag group="HasType" tag="tpUndead"/>
    <tag group="Helper" tag="NoPathSoc"/>
    <tag group="AllowRCust" tag="RustRisen" name="Rust-Risen Augmentations"/>
    <bootstrap thing="raCBRRAbEl"></bootstrap>
    <bootstrap thing="raCBRRMalf"></bootstrap>
    <bootstrap thing="raCBRRAugm"></bootstrap>
    <bootstrap thing="fPowerAtt"></bootstrap>
    <bootstrap thing="fImpInit"></bootstrap>
    <eval phase="PostLevel" priority="1000" index="2">~ get # of augmentations

var hd as number
hd = round(hero.tagcount[Hero.HitDice]/3,0,-1) + 1

field[rGiveSpec].value = hd</eval>
    <eval phase="PreLevel" priority="4000">#racialbonus[skPercep] += 2

#skillinnate[skIntim] += 1
#skillinnate[skPercep] += 1
#skillinnate[skStealth] += 1
      <before name="Skill Bonus Feats"/>
      </eval>
    </thing>
  <thing id="raCBRRAbEl" name="Absorb Electricity" description="When a rust-risen is damaged by electricity, it takes no damage (as if immune). Instead, the rust-risen gains 1 temporary hit point for every 4 points of damage it would have taken. A rust-risen can only have a number of temporary hit points equal to 150% of its hit point total. These temporary hit points disappear 1 hour later. If a rust-risen takes more than double its normal hit point total in electricity damage from a single attack, the creature is destroyed." compset="RaceSpec" summary="Gain 1 temporary hp/4 hp electricity damage." uniqueness="useronce">
    <usesource source="PathIronGo"/>
    <tag group="AbilType" tag="Extra"/>
    <tag group="Helper" tag="ShowSpec"/>
    <tag group="SpecType" tag="Defense"/>
    </thing>
  <thing id="raCBRRMalf" name="Malfunction" description="The machinery embedded in a rust-risen functions unpredictably in stressful situations. When a rust-risen enters combat, there is a cumulative 1% chance each round that it malfunctions. This chance resets to 0% 1 minute after combat ends. When a rust-risen malfunctions, it takes a -2 penalty on attack rolls, saving throws, skill checks, and ability checks for 1d4 minutes." compset="RaceSpec" summary="Cumulative 1% change per round of malfunction." uniqueness="useronce">
    <usesource source="PathIronGo"/>
    <tag group="SpecType" tag="Weakness"/>
    <tag group="AbilType" tag="Extra"/>
    <tag group="User" tag="Activation"/>
    <tag group="Helper" tag="ShowSpec"/>
    <eval phase="Final" priority="1000">doneif (field[abilActive].value = 0)

hero.child[Attack].field[Penalty].value -=2
hero.child[svAll].field[Penalty].value -= 2

hero.child[AllSkills].field[Penalty].value -= 2</eval>
    </thing>
  <thing id="raCBRRAugm" name="Augmentations" description="Rust-risen have various pieces of malfunctioning machinery embedded in their bodies. Each of these augmentations provides the rust-risen with different abilities. A rust-risen has one augmentation plus one additional augmentation for every 3 Hit Dice the creature possesses (typically 2 for most rust-risen). The rust-risen presented here has the arm drill and metal jaw augmentations." compset="RaceSpec" uniqueness="useronce">
    <usesource source="PathIronGo"/>
    <tag group="AbilType" tag="Extra"/>
    <tag group="Helper" tag="ShowSpec"/>
    </thing>
  <thing id="rcCBRRAdAp" name="Additional Appendage" description="Some rust-risen are augmented with an additional mechanical limb. A rust-risen with this augmentation gains a slam attack that deals damage appropriate for its size (1d4 for most rust-risen). This arm can manipulate objects as well as a normal arm, but cannot be used to wield a weapon." compset="RaceCustom">
    <usesource source="PathIronGo"/>
    <tag group="AllowRCust" tag="rCBRustRis"/>
    <tag group="Helper" tag="NoPathSoc"/>
    <bootstrap thing="wSlam">
      <autotag group="wMain" tag="1d4_4"/>
      <autotag group="Helper" tag="NatSizeDmg"/>
      </bootstrap>
    </thing>
  <thing id="rcCBRRAfrz" name="Antifreeze" description="A rust-risen with this augmentation has an embedded series of tubes connected to a pump that keeps a chemical flowing through its body, preventing ice from forming inside it. The rust-risen gains resistance 5 to cold." compset="RaceCustom" uniqueness="useronce">
    <usesource source="PathIronGo"/>
    <tag group="Helper" tag="SpecUp"/>
    <tag group="AllowRCust" tag="rCBRustRis"/>
    <tag group="Helper" tag="NoPathSoc"/>
    <bootstrap thing="xDamRsCold">
      <autotag group="Value" tag="5"/>
      </bootstrap>
    </thing>
  <thing id="rcCBRRArDr" name="Arm Drill" description="A rust-risen with this augmentation has a deadly, spinning drill grafted onto its forearm. The rust-risen can use the drill to make a melee attack that deals 1d6 points of bludgeoning, piercing, and slashing damage." compset="RaceCustom" uniqueness="useronce">
    <usesource source="PathIronGo"/>
    <tag group="Helper" tag="SpecUp"/>
    <tag group="AllowRCust" tag="rCBRustRis"/>
    <tag group="Helper" tag="NoPathSoc"/>
    <bootstrap thing="raCBRRArmD"></bootstrap>
    </thing>
  <thing id="raCBRRArmD" name="Arm Drill" description="A rust-risen with this augmentation has a deadly, spinning drill grafted onto its forearm. The rustrisen can use the drill to make a melee attack that deals 1d6 points of bludgeoning, piercing, and slashing damage." compset="RaceSpec">
    <usesource source="PathIronGo"/>
    <tag group="abAction" tag="Attack"/>
    <tag group="SpecType" tag="AttackSpec"/>
    <tag group="Helper" tag="WeaponSpec"/>
    <tag group="wCategory" tag="Melee"/>
    <tag group="wMain" tag="1d6_5"/>
    <tag group="wType" tag="B"/>
    <tag group="wType" tag="P"/>
    <tag group="wType" tag="S"/>
    <tag group="wCritMin" tag="20"/>
    <tag group="wCritMult" tag="2"/>
    <tag group="Helper" tag="ShowSpec"/>
    <tag group="Helper" tag="NatSizeDmg"/>
    </thing>
  <thing id="rcCBRRCngH" name="Cling Hooks" description="A rust-risen with this augmentation has barbed hooks grafted into its arms and legs. The rust-risen gains a +4 racial bonus on Climb checks and a +4 racial bonus on combat maneuvers to grapple opponents." compset="RaceCustom">
    <usesource source="PathIronGo"/>
    <tag group="AllowRCust" tag="rCBRustRis"/>
    <tag group="Helper" tag="NoPathSoc"/>
    <eval phase="PreLevel" priority="4000"><![CDATA[
doneif (tagis[Helper.SpcDisable] <> 0)

#racialbonus[skClimb] += 4
hero.child[manGrapple].field[Racial].value += 4]]></eval>
    </thing>
  <thing id="rcCBRRCutA" name="Cutting Arm" description="A rust-risen with this augmentation has one of its forearms replaced with a functional laser torch. The rust-risen deals 1d10 points of fire damage as a touch attack. This damage is not modified further by Strength. When the laser torch is used as a tool or as a weapon to sunder, damage dealt by it bypasses hardness up to 20 points and isn’t halved (as is normally the case for energy damage applied to objects) unless the object is fire resistant. A laser torch’s cutting beam passes through a force field and force effect without damaging that field. Invisible objects and creatures cannot be harmed by a laser torch." compset="RaceCustom" uniqueness="useronce">
    <usesource source="PathIronGo"/>
    <tag group="Helper" tag="SpecUp"/>
    <tag group="AllowRCust" tag="rCBRustRis"/>
    <tag group="Helper" tag="NoPathSoc"/>
    <bootstrap thing="raCBRRCutA"></bootstrap>
    </thing>
  <thing id="raCBRRCutA" name="Cutting Arm" description="A rust-risen with this augmentation has one of its forearms replaced with a functional laser torch. The rust-risen deals 1d10 points of fire damage as a touch attack. This damage is not modified further by Strength. When the laser torch is used as a tool or as a weapon to sunder, damage dealt by it bypasses hardness up to 20 points and isn’t halved (as is normally the case for energy damage applied to objects) unless the object is fire resistant. A laser torch’s cutting beam passes through a force field and force effect without damaging that field. Invisible objects and creatures cannot be harmed by a laser torch." compset="RaceSpec">
    <usesource source="PathIronGo"/>
    <tag group="abAction" tag="Attack"/>
    <tag group="SpecType" tag="AttackSpec"/>
    <tag group="Helper" tag="WeaponSpec"/>
    <tag group="wCategory" tag="Melee"/>
    <tag group="wMain" tag="1d10_304"/>
    <tag group="wCritMin" tag="20"/>
    <tag group="wCritMult" tag="2"/>
    <tag group="Helper" tag="ShowSpec"/>
    <tag group="Helper" tag="NatSizeDmg"/>
    <tag group="wType" tag="Fire"/>
    <tag group="Helper" tag="NoAttrDam"/>
    <tag group="wSpecial" tag="Touch"/>
    </thing>
  <thing id="rcCBRREvis" name="Eviscerator" description="A rust-risen with the eviscerator augmentation has a number of twisting blades, reciprocating saws, and spinning drills built into its chest. The rust-risen deals an additional 1d8 points of damage when grappling." compset="RaceCustom" summary="Deal and extra 1d8 damage when grappling." uniqueness="useronce">
    <usesource source="PathIronGo"/>
    <tag group="AllowRCust" tag="rCBRustRis"/>
    <tag group="SpecType" tag="Attack"/>
    <tag group="Helper" tag="NoPathSoc"/>
    </thing>
  <thing id="rcCBExsTub" name="Exsanguination Tubes" description="A rust-risen with exsanguination tubes can drain blood from creatures it has grappled. If the rust-risen establishes or maintains a pin, it bleeds the target, dealing 1 point of Constitution damage." compset="RaceCustom" summary="Deal 1 Con damage on a pin." uniqueness="useronce">
    <usesource source="PathIronGo"/>
    <tag group="AllowRCust" tag="rCBRustRis"/>
    <tag group="SpecType" tag="Attack"/>
    <tag group="Helper" tag="NoPathSoc"/>
    </thing>
  <thing id="rcCBRRMeW" name="Metal Jaw" description="A rust-risen with this augmentation has a metal jaw replacing its natural one. The rust-risen gains a bite attack that deals damage appropriate for its size (1d6 points of damage for most rust-risen)." compset="RaceCustom" uniqueness="useronce">
    <usesource source="PathIronGo"/>
    <tag group="Helper" tag="SpecUp"/>
    <tag group="AllowRCust" tag="rCBRustRis"/>
    <tag group="SpecType" tag="Attack"/>
    <tag group="Helper" tag="NoPathSoc"/>
    <bootstrap thing="wBite">
      <autotag group="wMain" tag="1d6_5"/>
      <autotag group="Helper" tag="NatSizeDmg"/>
      </bootstrap>
    <eval phase="Final" priority="1000">perform hero.child[wBite].delete[Helper.NatTwoHand]</eval>
    </thing>
  <thing id="rcCBRRMutT" name="Multi-Tool" description="A rust-risen with this augmentation has at least one of its hands replaced with a variety of tools. The rust-risen gains a +4 competence bonus on Disable Device checks and is considered to be trained in that skill. The rust-risen also gains a +2 competence bonus on one specific Craft skill." compset="RaceCustom">
    <fieldval field="usrCandid1" value="component.BaseSkill &amp; Helper.SkCatCraft"/>
    <usesource source="PathIronGo"/>
    <tag group="AllowRCust" tag="rCBRustRis"/>
    <tag group="ChooseSrc1" tag="Hero"/>
    <tag group="Helper" tag="NoPathSoc"/>
    <tag group="Helper" tag="SpecUp"/>
    <eval phase="PreLevel" priority="1000" index="2"><![CDATA[
doneif (tagis[Helper.SpcDisable] <> 0)

doneif (field[usrChosen1].ischosen = 0)

field[usrChosen1].chosen.field[BonComp].value += 2]]></eval>
    <eval phase="PreLevel" priority="1000"><![CDATA[
doneif (tagis[Helper.SpcDisable] <> 0)

hero.child[skDisable].field[BonComp].value += 4
perform hero.child[skDisable].delete[Helper.TrainOnly]]]></eval>
    </thing>
  <thing id="rcCBRRStCl" name="Steel Clad" description="A rust-risen with this augmentation has sheets of metal riveted to is body. The rust-risen gains a +2 natural armor bonus." compset="RaceCustom" uniqueness="useronce">
    <usesource source="PathIronGo"/>
    <tag group="AllowRCust" tag="rCBRustRis"/>
    <tag group="Helper" tag="NoPathSoc"/>
    <tag group="Helper" tag="SpecUp"/>
    <eval phase="First" priority="1000"><![CDATA[
doneif (tagis[Helper.SpcDisable] <> 0)

hero.child[ArmorClass].field[tACNatural].value += 2]]></eval>
    </thing>
  <thing id="rcCBRRTrip" name="Tripod" description="A rust-risen with this augmentation has an additional mechanical leg. The rust-risen gains a +2 bonus to CMD against overrun and trip attempts and a +2 bonus on Acrobatics when moving on narrow surfaces or uneven ground. The rust-risen isn’t considered flat-footed nor does it lose its Dexterity bonus to AC when using Acrobatics in this way." compset="RaceCustom" uniqueness="useronce">
    <usesource source="PathIronGo"/>
    <tag group="AllowRCust" tag="rCBRustRis"/>
    <tag group="Helper" tag="NoPathSoc"/>
    <eval phase="First" priority="1000"><![CDATA[
doneif (tagis[Helper.SpcDisable] <> 0)

hero.child[manOverrun].field[manCMD].value += 2
hero.child[manTrip].field[manCMD].value += 2

#situational[hero.child[skAcrobat],"+2 whem moving on narrow surfaces",field[name].text]
#situational[hero.child[skAcrobat],"+2 when moving on uneven ground",field[name].text]]]></eval>
    </thing>
  <thing id="rCBIrrDead" name="Irradiated Dead" description="Little more than orange-tinted, blistered flesh drawn across skeletons, the irradiated dead were once humanoids—mainly Kellid warriors—who have been tainted by the radiation that’s strewn across Numeria. Created as a result of experiments by members of the Technic League, a handful of irradiated dead escaped their restraints and set off across Numeria, creating more of their kind with each kill. With the strange chemicals and radiation coursing through their bodies and augmenting survival and hunting instincts, they scour the Numerian wastes in search of prey. Irradiated dead generally appear the same size as the humanoids they once were, but they weigh less due to their bodies have been ravaged by radiation.\n\n{b}Ecology{/b}\nThe secretive cabal known as the Technic League has always looked for ways to bolster its military power beyond the use of the gearsmen. Over the past couple centuries, the League’s members have made numerous foul discoveries by studying the strange relics, technologies, and chemicals collected from the ruins of Divinity.\n\nOriginally conceived by a Technic League lieutenant as more reliable and easily replaceable minions than the gearsmen, the irradiated dead were the result of a series of experiments conducted in the shadow of the Silver Mount. The lieutenant was skilled in the use of necromancy magic, a study not normally mastered by Technic League members. She gathered a group of the strongest young warriors in Starfall—all of whom sought to make names for themselves in the service of the Black Sovereign—and subjected them to round after round of brutal endurance tests, injections of chemicals and drugs, savage bloodletting, and forced starvation until their bodies couldn’t take any more. The lieutenant administered to the warriors a number of chemical compounds recovered from a medical bay within Silver Mount that were originally intended to aid the crew of the Divinity in surviving in strange and hostile environments. Lacking full understanding of what they were working with, the lieutenant and her apprentices mixed and distilled these strange chemicals into a viscous, orange fluid that augmented physical strength and coordination while also thickening the outer layers of skin to a rocklike hardness. She believed that replacing the subjects’ blood with the orange liquid, along with controlled exposure to a smashed piece of wreckage leaking radiation, would yield the obedient soldiers she desired. When the first two test subjects completed the regimen, they awoke with a savage hunger for the flesh of their kind and rose up to fight her. The lieutenant escaped that first trial with only the loss of her right eye and her right hand just above the wrist. Her two apprentices were not so lucky. Subsequent refinements and tests yielded no better results. Though these latest test subjects retained their free will, their hunger for raw flesh was just as potent as the earlier attempts. And as they’re generally more powerful than their Technic League creators, the irradiated dead saw no reason to serve their creators in any way.\n\nNot long after these experiments, several irradiated dead were turned loose or escaped. Rumors persist within the Technic League of study specimens that were kept in secret, and some foolish young sub-commanders are looking to restart the project.\n\nBurning inside with necrotic radiation, the irradiated dead display enhanced strength and coordination. Their skin and pupils are tinted pale orange like the fluids that replaced their blood. Their fingers transform into savage claws as sharp as ragged metal. Unexpectedly, the creatures show a remarkable resistance to the effects of positive energy that are deadly to most other forms of undead. They are also carriers of the radiation treatment that fueled their transition to undeath, able to pass the affliction to other living creatures.\n\nIrradiated dead are carnivorous, greatly preferring fresh meat, but they aren’t above eating carrion. Cunning, patient and careful hunters, irradiated dead can prey on a nomad tribe over months, ambushing small bands of warriors and feeding upon them one by one.\n\n{b}Habitat &amp; Society{/b}\nMost irradiated dead are natives of the broken Numerian wastes, and they continue haunting these regions in their new forms just as they inhabited the wastes in life. They generally search for new hunting grounds in solitude, but those that manage to create their own spawn travel in packs with those they have transformed. Whether roaming across the plains, hills, and valleys, or even wading through muck and waterways, they spend much of their time lurking in shadowy places on the outskirts of villages or tribal encampments. They do not generally keep personal possessions or treasure from their meals, but may use such things to lure and entrap subsequent search parties.\n\nThough they’re intelligent, the irradiated dead rarely show any inclination toward forming social groups or hierarchies, preferring to kill and eat creatures that enter their territories, though they will deal with other intelligent creatures if they must. If they encounter more powerful beings in their hunting grounds, irradiated dead will work to trick or trap them. The irradiated dead simply move on to new territories if they are unable to eliminate the threat. An unconfirmed report by a Technic League spy in Sunder Horn, however, claimed that at least three fast-moving, orange-skinned creatures had been hunting on the outskirts of town for nearly a year. The creatures have seemingly disappeared without any further sightings in the last 18 months.\n\nEven the Technic League is aware of the dangers these creatures could pose to the populace. The methods used to create the irradiated dead are well-guarded secrets of the Technic League. These techniques are also impossible to implement outside of Numeria, because the necrotic radiation and alien chemicals instrumental to their creation can be found nowhere else on Golarion." compset="Race">
    <fieldval field="rHitDice" value="10"/>
    <fieldval field="rHPStart" value="45"/>
    <fieldval field="rSTR" value="10"/>
    <fieldval field="rDEX" value="6"/>
    <fieldval field="rINT" value="-3"/>
    <fieldval field="rWIS" value="5"/>
    <fieldval field="rCHA" value="7"/>
    <fieldval field="rFeat" value="-5"/>
    <fieldval field="rAC" value="5"/>
    <fieldval field="rCR" value="7"/>
    <fieldval field="rDescript" value="This humanoid creature’s pale orange, withered skin peels from its flesh in patches. Its yellow eyes stare, unblinking but seething with rage."/>
    <fieldval field="rEnviron" value="any (Numeria)"/>
    <fieldval field="rOrgan" value="solitary, pair, or gang (3–6)"/>
    <fieldval field="rTreasure" value="none"/>
    <usesource source="PathIronGo"/>
    <tag group="RaceType" tag="NPC"/>
    <tag group="RaceSize" tag="Medium0"/>
    <tag group="HasType" tag="tpUndead"/>
    <tag group="Helper" tag="NoPathSoc"/>
    <tag group="Alignment" tag="NeutralLC"/>
    <tag group="Alignment" tag="Evil"/>
    <bootstrap thing="fImpInit"></bootstrap>
    <bootstrap thing="fPowerAtt"></bootstrap>
    <bootstrap thing="fToughness"></bootstrap>
    <bootstrap thing="wSlam">
      <autotag group="wMain" tag="1d6_5"/>
      <autotag group="Value" tag="2"/>
      </bootstrap>
    <bootstrap thing="xChanRes">
      <autotag group="Value" tag="2"/>
      </bootstrap>
    <bootstrap thing="xCBCreaSpw"></bootstrap>
    <bootstrap thing="raCBIrDRdS"></bootstrap>
    <bootstrap thing="raCBIrDRad"></bootstrap>
    <bootstrap thing="hzCBIrDRad">
      <autotag group="Target" tag="wSlam"/>
      </bootstrap>
    <bootstrap thing="fComRef"></bootstrap>
    <bootstrap thing="fDodge"></bootstrap>
    <eval phase="Final">~ create spawn

var desc as string
desc = &quot;Any humanoid creature that is slain by an irradiated dead’s radiation becomes an irradiated dead itself in 1d4 rounds. Spawn so created are less powerful than typical irradiated dead, taking a –2 penalty on all d20 rolls and having 2 fewer hit points per Hit Die. Spawn are under the command of the irradiated dead that created them and remain enslaved until its destruction, at which point they lose their spawn penalties to d20 rolls and become fullfledged and free-willed irradiated dead. They don’t possess any of the abilities they had in life.&quot;

perform state.thing[xCBCreaSpw].amendthing[description,desc]</eval>
    <eval phase="PreLevel" priority="4000" index="2">#skillinnate[skClimb] += 1
#skillinnate[skPercep] += 10
#skillinnate[skStealth] += 8
#skillinnate[skSwim] += 1
      <before name="Skill Bonus Feats"/>
      </eval>
    </thing>
  <thing id="raCBIrDRdS" name="Radioactive Spew" description="Three times per day as a standard action, an irradiated dead can spew a 15-foot cone of irradiated viscera from its mouth. Creatures in the area take 2d6 points of acid damage and are subjected to the creature’s radiation. A successful DC 18 Reflex save halves the damage. Creatures that takes damage from this effect are subject to the irradiated dead’s radioactive special ability. The save DC is Charisma-based." compset="RaceSpec">
    <fieldval field="abRange" value="15"/>
    <fieldval field="abValue" value="2"/>
    <fieldval field="abValue2" value="6"/>
    <fieldval field="trkMax" value="3"/>
    <usesource source="PathIronGo"/>
    <tag group="abAction" tag="Standard"/>
    <tag group="StandardDC" tag="aCHA"/>
    <tag group="abSave" tag="RefHalf"/>
    <tag group="User" tag="Tracker"/>
    <tag group="Helper" tag="ShowSpec"/>
    <tag group="Usage" tag="Day"/>
    <tag group="abRange" tag="Feet"/>
    <tag group="AbilType" tag="Extra"/>
    <tag group="SpecType" tag="Attack"/>
    <eval phase="Final" priority="1000"><![CDATA[
field[abSumm].text = field[abValue].value & "d" & field[abValue2].value & " acid and radiation, " & field[abRange].value & "-ft. cone, " & field[trkMax].value & "/day"]]></eval>
    </thing>
  <thing id="raCBIrDRad" name="Radioactive" description="Any creature that comes in contact with an irradiated dead risks infection from the radiation that consumes the creatures. Any creature hit by an irradiated dead’s slam attack or radioactive spew risks infection, as does any creature who touches an irradiated dead. On a failed saving throw, the target is affected by medium radiation and radiates low radiation in a 10-foot radius for as long as it remains afflicted. For more information on radiation, see page 55 of {i}Pathfinder Campaign Setting: Technology Guide{/i}. This is a poison effect, and the save DC is Charisma-based." compset="RaceSpec" uniqueness="useronce">
    <usesource source="PathIronGo"/>
    <tag group="SpecType" tag="Attack"/>
    <tag group="AbilType" tag="Extra"/>
    <tag group="Helper" tag="ShowSpec"/>
    </thing>
  <thing id="hzCBIrDRad" name="Radiation" compset="Hazard" uniqueness="useronce">
    <fieldval field="abDuration" value="6"/>
    <fieldval field="hzPriNmD1" value="1"/>
    <fieldval field="hzPriDie1" value="4"/>
    <fieldval field="hzCureNum" value="2"/>
    <usesource source="PathIronGo"/>
    <tag group="StandardDC" tag="aCHA"/>
    <tag group="HazHelper" tag="NoOnset"/>
    <tag group="PoisLasts" tag="Rounds"/>
    <tag group="Helper" tag="ShowSpec"/>
    <tag group="PoisLasts2" tag="Rounds"/>
    <tag group="Hazard" tag="Poison"/>
    <tag group="PoisonCat" tag="Contact"/>
    <tag group="PoiDamTyp1" tag="Drain"/>
    <tag group="PoisonAttr" tag="aCON"/>
    <tag group="HazHelper" tag="Unique"/>
    <tag group="HazSave" tag="Fort"/>
    <tag group="AbilType" tag="Extra"/>
    <tag group="HazNameSum" tag="Name"/>
    <tag group="HazNameTar" tag="Name"/>
    </thing>
  <thing id="rCBRbThHav" name="Robot, Thought Harvester" description="Thought harvesters are specialized robots designed to forcibly extract memories from a living creature or corpse. Built to survive battlefields and other hazardous environments, thought harvesters are outfitted with thick armor plating and a durable force field. Giving the thought harvester robot its name, two prehensile tendrils extend from the creature’s sides, each tipped with a wickedly barbed syringe through which the creature injects sophisticated nanites into its target. These nanites immediately duplicate portions of the target’s brain and return through the syringe into the thought harvester’s central core. There, the target’s memories are swiftly categorized and stored in one of an array of crystalline spheres located along the robot’s spine. When performed on a living target, the process is painful and can cause severe damage to the subject’s cognitive reasoning capabilities. A thought harvester’s head has a single glowing eye in the center, and two weapons hang beneath it. These weapons allow the thought harvester to fire bursts of sonic energy at any targets that react in an aggressive manner. A thought harvester rarely speaks, but when it does it speaks in short, monosyllabic words, and is always direct and to the point. Thought harvesters are 6 feet long and 4 feet tall. They are densely built, and weigh 1,600 lbs. A thought harvester draws energy from an efficient internal power source and continually recycles and repairs its internal store of specialized nanites.\n\n{b}Ecology{/b}\nA thought harvester is a militarized application of specialized thought-recovery technology. Nanites able to affect a target’s thoughts or memories are used in weapons such as the id rifle or mindrender, but the nanites used in those devices become inert after performing their function. When they’re instead directly injected and immediately recovered, the nanites duplicate a creature’s thoughts and store them for review. The thought harvester’s nimble frame and armored shell ensure effective frontline deployment of this technology.\n\nDozens of egg-sized crystalline spheres line the creature’s spine, each solidly nestled within a socket in the creature’s armored back. These spheres are normally clear, but when the robot recovers a creature’s thoughts, a sphere fills with a cloudy, gray haze. A thought harvester might fill all of its crystal spheres after a dozen missions. Regular maintenance includes transferring harvested thoughts into specialized computers, but the technology to do so is lost on Golarion. Instead, the stolen thoughts within the spheres simply dissipate when a sphere is destroyed or incorrectly removed.\n\n{b}Habitat &amp; Society{/b}\nThought harvesters are deployed in a variety of military situations in which specific intelligence must be recovered or eliminated, but bodily recovery of the target is unnecessary or unwise. A thought harvester can grab and carry a human in its claw, but these robots are rarely used to capture living humanoids. A thought harvester might be assigned to invade an enemy stronghold to remove key orders from an opposing commander, or invade a prison to copy sensitive information from the mind of a spy captured by the enemy. Thought harvester robots are often used to recover critical intelligence from soldiers killed in the middle of a raging battle or that fell in irradiated environments. Thought harvesters are deployed only when overt force is acceptable, as they’re neither stealthy nor subtle.\n\nThese robots show little individual personality as they go about their work of harvesting memories. Unlike other robots, which are generally content to stand perfectly motionless when not in use, thought harvesters tend to fidget, scanning for danger and waving their syringetipped tendrils in the air. A thought harvester cannot itself access any of the thoughts stored within the crystalline spheres, though it does retain some general idea of the memories it has previously collected. To the thought harvester, these memories are simply cargo to be recovered and brought back to its superiors." compset="Race">
    <fieldval field="rHitDice" value="13"/>
    <fieldval field="rHPStart" value="71"/>
    <fieldval field="rSTR" value="12"/>
    <fieldval field="rDEX" value="5"/>
    <fieldval field="rINT" value="2"/>
    <fieldval field="rWIS" value="5"/>
    <fieldval field="rCHA" value="-9"/>
    <fieldval field="rFeat" value="-7"/>
    <fieldval field="rAC" value="10"/>
    <fieldval field="rCR" value="10"/>
    <fieldval field="rLangBonus" value="-1"/>
    <fieldval field="rDescript" value="Rows of crystal spheres line the back of this four-legged robot. A single glowing eye sits in the middle of its head."/>
    <fieldval field="rEnviron" value="any (Numeria)"/>
    <fieldval field="rOrgan" value="solitary or squad (2–6)"/>
    <fieldval field="rTreasure" value="none"/>
    <fieldval field="rNumHands" value="4"/>
    <usesource source="PathIronGo"/>
    <tag group="HasType" tag="tpConst"/>
    <tag group="RaceType" tag="NPC"/>
    <tag group="Hero" tag="NoDefComm"/>
    <tag group="RaceSize" tag="Medium0"/>
    <tag group="Alignment" tag="NeutralLC"/>
    <tag group="Alignment" tag="NeutralGE"/>
    <tag group="Helper" tag="Quadruped"/>
    <tag group="Helper" tag="NotHum"/>
    <tag group="SlotSet" tag="selMISQuaC"/>
    <tag group="Helper" tag="NoPathSoc"/>
    <bootstrap thing="xConstruct"></bootstrap>
    <bootstrap thing="raGrab">
      <autotag group="Target" tag="wClaw"/>
      </bootstrap>
    <bootstrap thing="raHardness">
      <autotag group="Value" tag="10"/>
      </bootstrap>
    <bootstrap thing="fPointBlnk"></bootstrap>
    <bootstrap thing="fAlertness"></bootstrap>
    <bootstrap thing="fDodge"></bootstrap>
    <bootstrap thing="fImpInit"></bootstrap>
    <bootstrap thing="fIronWill"></bootstrap>
    <bootstrap thing="fPowerAtt"></bootstrap>
    <bootstrap thing="lAndroffen"></bootstrap>
    <bootstrap thing="lCommon"></bootstrap>
    <bootstrap thing="fMobility"></bootstrap>
    <bootstrap thing="stRobot"></bootstrap>
    <bootstrap thing="wClaw">
      <autotag group="wMain" tag="1d6_5"/>
      <autotag group="Value" tag="3"/>
      </bootstrap>
    <bootstrap thing="xDamRsAcid">
      <autotag group="Value" tag="10"/>
      </bootstrap>
    <bootstrap thing="xDamRsCold">
      <autotag group="Value" tag="10"/>
      </bootstrap>
    <bootstrap thing="xDamRsFire">
      <autotag group="Value" tag="10"/>
      </bootstrap>
    <bootstrap thing="skKnowLoc"></bootstrap>
    <bootstrap thing="raCBForcef">
      <assignval field="abValue" value="40"/>
      </bootstrap>
    <bootstrap thing="raCBThHNan">
      <autotag group="Value" tag="2"/>
      <assignval field="sbName" value="2 integrated nanite injectors"/>
      </bootstrap>
    <bootstrap thing="raCBThHHav"></bootstrap>
    <bootstrap thing="raCBThHSon"></bootstrap>
    <bootstrap thing="wConstrict">
      <autotag group="wMain" tag="1d6_5"/>
      </bootstrap>
    <eval phase="PostLevel" priority="500">~ remove all class skills

foreach pick in hero from BaseSkill
  perform eachpick.delete[Helper.ClassSkill]
nexteach</eval>
    <eval phase="First" priority="200" index="3"><![CDATA[
field[livename].text = "Thought Harvester Robot"]]>
      <before name="Template Name Modification"/>
      </eval>
    <eval phase="PreLevel" priority="4000" index="2">#skillinnate[skKnowLoc] += 9
#skillinnate[skPercep] += 13
#skillinnate[skSenseMot] += 13
#skillinnate[skStealth] += 4
      <before name="Skill Bonus Feats"/>
      </eval>
    </thing>
  <thing id="raCBForcef" name="Force Field" description="Creature is sheathed in a thin layer of shimmering energy that grants it bonus hit points. All damage dealt to a creaturer with an active force field is reduced from these hit points first. As long as the force field is active, it is immune to critical hits. A force field has fast healing 10, but once its hit points are reduced to 0, the force field shuts down and does not reactivate for 24 hours." compset="RaceSpec" summary="Force field grants bonus hp and grants immunity to critical hits." uniqueness="useronce">
    <comment>use abValue for bonus hp</comment>
    <usesource source="PathIronGo"/>
    <tag group="Helper" tag="ShowSpec"/>
    <tag group="User" tag="Tracker"/>
    <tag group="SpecType" tag="HpNote"/>
    <tag group="Usage" tag="HPDay"/>
    <tag group="User" tag="Activation"/>
    <tag group="AbilType" tag="Extra"/>
    <tag group="Hide" tag="Statblock"/>
    <bootstrap thing="xImmCrit">
      <containerreq phase="First" priority="300"><![CDATA[fieldval:abilActive <> 0]]></containerreq>
      </bootstrap>
    <eval phase="Final" priority="1005"><![CDATA[doneif (tagis[Helper.SpcDisable] <> 0)

field[trkMax].value = field[abValue].value
field[abValue2].value = field[trkMax].value - field[trkUser].value

doneif (field[abilActive].value = 0)

perform delete[Hide.Statblock]

herofield[tHP].value += field[abValue2].value

field[sbName].text = "plus " & field[abValue2].value & " hp force field"]]>
      <after name="Calc trkLeft"/>
      </eval>
    </thing>
  <thing id="raCBThHNan" name="Integrated Nanite Injector" description="A thought harvester is outfitted with two nanite injectors. These modified syringes are mounted on the end of animated, flexible tubes that feed into the robot’s crystal spheres and allow it to use its harvest thoughts ability. These injectors are treated as a piercing weapons that deal 1d4 points of damage, but can’t be salvaged to be used on their own." compset="RaceSpec">
    <usesource source="PathIronGo"/>
    <tag group="abAction" tag="Attack"/>
    <tag group="Helper" tag="WeaponSpec"/>
    <tag group="wCategory" tag="Melee"/>
    <tag group="wMain" tag="1d4_4"/>
    <tag group="wType" tag="P"/>
    <tag group="Helper" tag="ShowSpec"/>
    <tag group="wCritMult" tag="2"/>
    <tag group="wCritMin" tag="20"/>
    <tag group="Helper" tag="SingleAtt"/>
    <tag group="StatblHide" tag="Attack"/>
    <tag group="SpecType" tag="AttackSpec"/>
    <tag group="AbilType" tag="Extra"/>
    <tag group="wGroup" tag="Natural"/>
    <eval phase="Final"><![CDATA[

~perform state.thing[raCBThHNan].amendthing[name,this.field[thingname].text & " x" & this.tagvalue[Value.?]]]]></eval>
    </thing>
  <thing id="raCBThHHav" name="Harvest Thoughts" description="A thought harvester that hits a living creature with one of its integrated nanite injectors can selectively duplicate certain memories the target possesses. Each time the harvester uses this ability, it can copy one significant event (such as the events of a combat or a birthday party), or it can sift through the victim’s memories as part of an interrogation that allows it to effectively ask and receive truthful answers to six questions. A successful DC 17 Will save negates the effects of this ability; mindless creatures or creatures with an Intelligence score of 1 are immune to it. Each time a creature’s memories are copied through the use of this ability, it must succeed at a DC 17 Fortitude save or take 1d4 points of Intelligence drain. A creature’s Intelligence score can’t be drained below 1 in this way.\n\nIf successful, the target’s copied memories appear as swirling mist within one of the crystal spheres socketed into the thought harvester’s back. If the thought harvester is willing, helpless, or destroyed, a sphere can be removed from its socket with a successful DC 30 Disable Device check and be read by certain devices without damaging the memories within. This ability can be used on creatures that have been dead for less than 24 hours, but their brain must be mostly intact and only 1d4 memories can be harvested postmortem. The duration can be extended if the creature’s brain has been preserved (such as by gentle repose) or if the creature possesses a brain that doesn’t rot. The save DCs are Intelligence-based." compset="RaceSpec" summary="Copy or sift through infected creature&apos;s memories causing 1d4 Int damage." uniqueness="useronce">
    <usesource source="PathIronGo"/>
    <tag group="abSave" tag="WillNeg"/>
    <tag group="StandardDC" tag="aINT"/>
    <tag group="AbilType" tag="Extra"/>
    <tag group="Helper" tag="ShowSpec"/>
    <tag group="SpecType" tag="Attack"/>
    <eval phase="Final" priority="1000"><![CDATA[
doneif (tagis[Helper.SpcDisable] <> 0)


#extradamage[hero.child[raCBThHNan]," plus harvest thoughts",field[name].text]]]></eval>
    </thing>
  <thing id="raCBThHSon" name="Integrated Sonic Rifle" description="A thought harvester has an builtin sonic rifle slung beneath its head. This weapon has a range of 150 feet and deals 3d6 points of sonic damage. The weapon can fire once per round and does so in a burst of shots that attacks all creatures in a line. This line starts from any corner of the robot’s space and extends to the limit of the weapon’s range or until it strikes a barrier it can’t penetrate. The robot must make a separate attack roll against each creature in the line, and each creature in the line can be attacked with only one shot from each burst. Each attack roll takes a –2 penalty, and its damage can’t be modified by precision damage or damage-increasing feats such as Vital Strike. Effects that grant concealment (such as fog or smoke) or the spells {i}blur{/i}, {i}invisibility{/i}, or {i}mirror image{/i} don’t affect this weapon’s attack. Roll to confirm each attack roll that threatens a critical hit separately." compset="RaceSpec" summary="Deal sonic damage to fies in a line." uniqueness="useronce">
    <fieldval field="abRange" value="150"/>
    <fieldval field="wDamExtra" value=" sonic"/>
    <usesource source="PathIronGo"/>
    <tag group="wMain" tag="3d6_8"/>
    <tag group="Helper" tag="NoAttrDam"/>
    <tag group="wCritMin" tag="20"/>
    <tag group="wCritMult" tag="2"/>
    <tag group="Helper" tag="ShowSpec"/>
    <tag group="Helper" tag="WeaponSpec"/>
    <tag group="wRangeInc" tag="150"/>
    <tag group="wCategory" tag="RangeProj"/>
    <tag group="wSpecial" tag="SemiAuto"/>
    <tag group="Helper" tag="SingleAtt"/>
    <tag group="wCategory" tag="Firearm"/>
    <tag group="SpecType" tag="AttackSpec"/>
    <tag group="AbilType" tag="Extra"/>
    <tag group="abRange" tag="Feet"/>
    <tag group="abAction" tag="Attack"/>
    <tag group="wType" tag="Sonic"/>
    <tag group="wCategory" tag="Touch"/>
    <tag group="SpecType" tag="Attack"/>
    </thing>
  <thing id="rCBRbWarde" name="Robot, Warden" description="Wardens are dangerous guardian robots often found protecting sealed vaults or patrolling ancient, buried corridors. They carry out their orders with ruthlessness and zeal, usually offering no warning before attacking a perceived threat. The Technic League has had moderate success in controlling a few of these robots, and occasionally assigns them as guards for valuable treasures or important prisoners, roles for which they’re well suited.\n\nAlthough the mere sight of these massive machines is imposing enough to ward off most intruders, those who are undeterred by a warden’s appearance soon find the robot to be quite capable of destroying those who enter its territory without proper clearance. Unlike golems or similarly mindless constructs, wardens possess an intelligence that allows them to employ tactics, either on their own or as part of a unit. When acting in groups, the robots are smart enough to suppress and reactivate their nausea-inducing sound waves in concert, maximizing the length of time their opponents are incapacitated.\n\nMost wardens are in Silver Mount, but some can be found in many other parts of Numeria. Nearly all share the same characteristics: a squat upper body with a domed shape and two arms ending in six surprisingly dexterous “fingers” surrounding emitters that serve as its primary ranged weapons. Two stout, multi-jointed legs provide the construct with great mobility, even on hilly or rough terrain.\n\n{b}Ecology{/b}\nWardens were obviously designed and programmed to guard objects, people, or locations. Although they have no life cycle to speak of, these robots do seem to possess certain behavioral characteristics that make them fascinating to Numerian scholars.\n\nThe warden’s reactive armor is a matter of particular interest to the Technic League. Although the robots are still vulnerable to critical hits, their armor reduces the risk posed by this weakness. A few of the League’s most talented members have devoted themselves to determining how the reactive armor works and how to replicate it. The secret appears to be in the material that comprises the robot’s exoskeleton—which behaves like metal in all respects until struck by a powerful force, when it responds with a violent, fiery explosion. Amazingly, the explosive material restores itself over time, as long as the robot continues to function.\n\n{b}Habitat &amp; Society{/b}\nWardens, like many robots found in Numeria, follow strict internal programming that guides their actions. Their special programming, however, is somewhat more flexible than that of other robots. Wardens learn and adapt, especially when it comes to facing specialized types of foes.\n\nAs constructs built by ancient masters whose goals and intentions are almost unknowable, wardens have no society in the traditional sense of the word. They exist only to follow their programming to the best of their ability. Still, their ability to adapt and work together in small groups makes them formidable opponents for those who would seek treasures in the ancient caches scattered throughout Numeria.\n\nAlthough capable of speech, wardens communicate with each other by some other means. They coordinate efforts silently, and skillfully arrange patrols to maximize coverage of their assigned areas. As long as a warden is guarding something (whether by itself or as part of a group of wardens), it nearly always follows the orders of the creature that owns the object or location. Wardens demonstrate a clear understanding of their duties, and can apply their alien intelligence toward problem solving when the situation requires it. This makes them effective jailers as well, since they can use their incapacitating sound field against prisoners who attempt to escape—as well as on those who might try to break the prisoners out." compset="Race">
    <fieldval field="rHitDice" value="15"/>
    <fieldval field="rHPStart" value="82"/>
    <fieldval field="rSTR" value="8"/>
    <fieldval field="rDEX" value="9"/>
    <fieldval field="rINT" value="1"/>
    <fieldval field="rWIS" value="4"/>
    <fieldval field="rCHA" value="-9"/>
    <fieldval field="rFeat" value="-8"/>
    <fieldval field="rAC" value="10"/>
    <fieldval field="rCR" value="9"/>
    <fieldval field="rDescript" value="Crafted of a strange, dull metal, this bulky construct stomps forward on stout, multi-jointed legs."/>
    <fieldval field="rEnviron" value="any (Numeria)"/>
    <fieldval field="rOrgan" value="solitary, pair, or sentry (3–12)"/>
    <fieldval field="rTreasure" value="none"/>
    <fieldval field="rSpace" value="10"/>
    <fieldval field="rReach" value="10"/>
    <usesource source="PathIronGo"/>
    <tag group="RaceSize" tag="Large1"/>
    <tag group="Hero" tag="NoDefComm"/>
    <tag group="HasType" tag="tpConst"/>
    <tag group="RaceType" tag="NPC"/>
    <tag group="Helper" tag="NoPathSoc"/>
    <tag group="Alignment" tag="NeutralLC"/>
    <tag group="Alignment" tag="NeutralGE"/>
    <tag group="Helper" tag="NotHum"/>
    <bootstrap thing="wSlam">
      <autotag group="wMain" tag="1d8_6"/>
      <autotag group="Value" tag="2"/>
      </bootstrap>
    <bootstrap thing="xAllAround"></bootstrap>
    <bootstrap thing="rBlindSi">
      <autotag group="Value" tag="30"/>
      </bootstrap>
    <bootstrap thing="raHardness">
      <autotag group="Value" tag="10"/>
      </bootstrap>
    <bootstrap thing="fStandStil"></bootstrap>
    <bootstrap thing="fPowerAtt"></bootstrap>
    <bootstrap thing="fAlertness"></bootstrap>
    <bootstrap thing="fComRef"></bootstrap>
    <bootstrap thing="fPointBlnk"></bootstrap>
    <bootstrap thing="stRobot"></bootstrap>
    <bootstrap thing="fPrecShot"></bootstrap>
    <bootstrap thing="fImpInit"></bootstrap>
    <bootstrap thing="fNimbMove"></bootstrap>
    <bootstrap thing="lAndroffen"></bootstrap>
    <bootstrap thing="raCBComArm"></bootstrap>
    <bootstrap thing="raCBRbWDaz"></bootstrap>
    <bootstrap thing="raCBRbWIfs"></bootstrap>
    <bootstrap thing="raCBRbWSnD">
      <autotag group="Value" tag="2"/>
      <assignval field="sbName" value="2 integrated sonic disruptors"/>
      </bootstrap>
    <bootstrap thing="raCBRbWRcA"></bootstrap>
    <bootstrap thing="raCBRbWRes"></bootstrap>
    <eval phase="First" priority="200"><![CDATA[
field[livename].text = "Warden Robot"]]>
      <before name="Template Name Modification"/>
      </eval>
    <eval phase="PostLevel" priority="500" index="2">~ remove all class skills

foreach pick in hero from BaseSkill
  perform eachpick.delete[Helper.ClassSkill]
nexteach</eval>
    <eval phase="PreLevel" priority="4000" index="3">#skillinnate[skClimb] += 6
#skillinnate[skPercep] += 14
#skillinnate[skSenseMot] += 10
      <before name="Skill Bonus Feats"/>
      </eval>
    </thing>
  <thing id="raCBRbWDaz" name="Dazzler" description="As a standard action, a warden robot can target a single creature with a beam of strobing light that functions as a gaze attack with a range of 60 feet. A creature subject to this attack must succeed at a DC 17 Fortitude save or be blinded for 2d4 rounds. Creatures that successfully save are dazzled for 1d4 rounds. Creatures with light blindness or light sensitivity take a –4 penalty on the saving throw. This is a light effect, and the save DC is Intelligence-based." compset="RaceSpec" summary="Beam of strobing light can blind foes for 2d4 rounds or dazzle them for 1d4 rounds." uniqueness="useronce">
    <fieldval field="abRange" value="60"/>
    <usesource source="PathIronGo"/>
    <tag group="Helper" tag="ShowSpec"/>
    <tag group="abRange" tag="Feet"/>
    <tag group="abSave" tag="FortPart"/>
    <tag group="StandardDC" tag="aINT"/>
    <tag group="SpecType" tag="Attack"/>
    <tag group="SbNamePar" tag="IncDC"/>
    <tag group="SbNamePar" tag="IncRange"/>
    <tag group="AbilType" tag="Extra"/>
    <tag group="abAction" tag="Standard"/>
    </thing>
  <thing id="raCBRbWIfs" name="Infrasonic Field" description="Warden robots constantly emit powerful sound waves at a frequency below normal hearing. These vibrations can debilitate living beings within 30 feet. Such creatures must succeed at DC 17 Fortitude save or fall prone and be nauseated for 1d4 rounds. A warden robot can suppress or resume this ability as a free action. This is a sonic effect, and the save DC is Intelligence-based." compset="RaceSpec" summary="Field nauseates and strikes foes prone." uniqueness="useronce">
    <fieldval field="abRange" value="30"/>
    <usesource source="PathIronGo"/>
    <tag group="Helper" tag="ShowSpec"/>
    <tag group="abRange" tag="Feet"/>
    <tag group="abSave" tag="FortNeg"/>
    <tag group="StandardDC" tag="aINT"/>
    <tag group="SpecType" tag="Aura"/>
    <tag group="LvNamePar" tag="IncRange"/>
    <tag group="SbNamePar" tag="IncDC"/>
    <tag group="SbNamePar" tag="IncRange"/>
    <tag group="AbilType" tag="Extra"/>
    <tag group="abAction" tag="Constant"/>
    </thing>
  <thing id="raCBRbWSnD" name="Integrated Sonic Disruptor" description="A warden robot’s arms contain built-in ranged weapons that emit focused sound waves in 100-foot rays that deal 2d8 points of sonic damage." compset="RaceSpec">
    <fieldval field="wDamExtra" value=" sonic"/>
    <usesource source="PathIronGo"/>
    <tag group="SpecType" tag="AttackSpec"/>
    <tag group="AbilType" tag="Extra"/>
    <tag group="Helper" tag="WeaponSpec"/>
    <tag group="wCategory" tag="Firearm"/>
    <tag group="wCategory" tag="RangeProj"/>
    <tag group="Helper" tag="SingleAtt"/>
    <tag group="wMain" tag="2d8_305"/>
    <tag group="Helper" tag="NoAttrDam"/>
    <tag group="wType" tag="Sonic"/>
    <tag group="wCritMin" tag="20"/>
    <tag group="wCritMult" tag="2"/>
    <tag group="Helper" tag="ShowSpec"/>
    <tag group="wRangeInc" tag="100"/>
    <tag group="wCategory" tag="Touch"/>
    <tag group="abAction" tag="Attack"/>
    </thing>
  <thing id="raCBRbWRcA" name="Reactive Armor" description="A warden robot is covered in a special shell that reacts explosively to powerful strikes. Due to this covering, a warden robot gains light fortification (25% chance to negate critical hits and sneak attacks). When the armor negates a critical hit from a melee weapon, the attacker takes an amount of fire damage equal to half of the damage dealt to the robot. Attackers using reach or ranged weapons avoid this damage." compset="RaceSpec" summary="Armor negates criticals as light fortification and deals fire damage,">
    <fieldval field="abValue" value="25"/>
    <usesource source="PathIronGo"/>
    <tag group="AbilType" tag="Extra"/>
    <tag group="SpecType" tag="Defense"/>
    <tag group="Helper" tag="ShowSpec"/>
    <eval phase="Final" priority="1000"><![CDATA[doneif (tagis[Helper.SpcDisable] <> 0)

#applyfort[25]]]></eval>
    </thing>
  <thing id="raCBRbWRes" name="Resilient" description="Warden robots receive a +3 racial bonus on all saving throws." compset="RaceSpec" uniqueness="useronce">
    <tag group="Helper" tag="ShowSpec"/>
    <eval phase="Final" priority="500"><![CDATA[
doneif (tagis[Helper.SpcDisable] <> 0)

hero.child[svAll].field[Racial].value += 3]]></eval>
    </thing>
  <thing id="rCBThorgot" name="Thorgothrel" description="Thorgothrels are a spacefaring race of aggressive genetic manipulators. In their natural form, thorgothrels are blobs of protoplasm 12 feet in diameter that move with awkward undulation. Thorgothrels can extrude pseudopods in order to manipulate objects and form simple tools. These pseudopods excrete a complex cocktail of chemicals that can force changes to a victim’s underlying genetic structure.\n\nWeighed down by Golarion’s gravity and quick to sublimate into poisonous vapor in the atmosphere, thorgothrels find Golarion (and similar planets) inherently inimical. A thorgothrel can move about on Golarion only by wrapping its body around a frame of silver rods that provides inner support and encases the creature in a resilient force field barrier. Despite the hazard Golarion’s atmosphere poses to these alien creatures, the planet’s staggering diversity of life presents a veritable cornucopia of beings upon which they can perform their genetic experimentations, inching closer to their goal of returning all creatures to a primeval, atavistic state. The silver armature largely determines the exact size of a thorgothrel, but a typical thorgothrel stands around 11 feet tall and weighs about 900 lbs.\n\n{b}Ecology{/b}\nHailing from a distant planet with a radically different environment, thorgothrels don’t fit into Golarion’s ecosystem. The environment on Golarion is deadly to this spacefaring race, as the planet’s comparatively low air pressure causes them to vaporize when exposed to it. Thorgothrels on Golarion combat this by remaining continually sheathed in a protective force field to avoid fatal dematerialization. Even in the best of conditions, a thorgothrel moves slowly. On Golarion, it must wrap its protoplasmic form around an artificial skeleton in order to move at a speed greater than a crawl. Thorgothrel mathematics are based on a ternary system, which is reflected in their armatures usually having three legs and three arms radially placed around a central spine.\n\nThorgothrels feed on electrical currents and certain metals. The armatures thorgothrels create in order to provide mobility are made of electromagnetically charged and refined silver, and thus contain all of the nutrients the creatures need to survive for several months. Without an armature, a thorgothrel requires an ounce of silver per week to survive. Thorgothrels don’t require true sleep, and the torpor they enter in the long years of travel between planets in their strange ships provides them with sufficient rest to remain active for months at a time.\n\nThorgothrels communicate telepathically, and consider verbal communication to be the sort of anathema that drives their work toward retrogressive development.\n\n{b}Habitat &amp; Society{/b}\nThe thorgothrel race were once humanoids. The greatest of their scientists and philosophers concluded that evolutionary advancement was a danger to the universe as a whole, and that life in its most primitive state was safest for all creatures. The thorgothrels began a great spacefaring crusade to subjugate other planets and force regressive evolution on the planets’ denizens via genetic manipulation. Thorgothrels take pride in devolving entire planets into primitive life forms, and slaughter those races that put up too much of a struggle against their “great work.”\n\nAs the thorgothrels “improved” world after world, they also manipulated their own genes. While maintaining their intelligence and skill at genetic manipulation, the race regressed its form to that of sentient blobs of protoplasm. Thorgothrels buttress the weaknesses of these new bodies, such as low mobility, with technological solutions. Although silver armatures and defensive force fields are the most common artifacts of thorgothrel science, rumors from other worlds tell of thorgothrels that occupy gargantuan walking machines or psychic field projectors powerful enough to render entire cities docile.\n\nTheir great crusade has caused the once numerous thorgothrel race to dwindle, but the race’s fervor to enforce regression still continues on many far-flung planets. A few decades ago, thorgothrel explorers discovered Golarion and were staggered by the abundance of advanced life found on this world. However, Golarion’s unfavorable environment and great distance from the thorgothrels’ homeworld has so far stymied a full-scale assault. To date, only a few daring adventurer-geneticists have come to Golarion. To avoid attracting wide public attention, these thorgothrels pursue their regression experiments in isolated locations, such as lonely wastelands, border outposts, or hidden valleys. Thorgothrels carefully dissect failed experiments in order to hone their craft, but usually set successfully regressed victims free. Rumors of remote areas where animals or people have suddenly “gone wild” or “turned feral” may indicate a thorgothrel’s presence.\n\nThorgothrels are arrogant and prone to overconfidence. Most thorgothrels encountered on Golarion have visited dozens of other worlds, and they consider even the most advanced of Golarion’s creatures to be evolutionary mistakes that must be corrected or exterminated. This gives thorgothrels little reason to communicate with other races, which in turn feeds into their intellectual and philosophical mandate to act however they see fit." compset="Race">
    <fieldval field="rHitDice" value="8"/>
    <fieldval field="rHPStart" value="36"/>
    <fieldval field="rSTR" value="12"/>
    <fieldval field="rCON" value="7"/>
    <fieldval field="rINT" value="7"/>
    <fieldval field="rWIS" value="6"/>
    <fieldval field="rCHA" value="1"/>
    <fieldval field="rSpeed" value="20"/>
    <fieldval field="rFeat" value="-4"/>
    <fieldval field="rAC" value="12"/>
    <fieldval field="rCR" value="8"/>
    <fieldval field="rDescript" value="A skeleton of silver rods gives this blob of protoplasm a roughly defined shape with an approximation of three arms and legs. Its outer skin shimmers with a rainbow of colors."/>
    <fieldval field="rEnviron" value="any"/>
    <fieldval field="rOrgan" value="solitary"/>
    <fieldval field="rTreasure" value="standard (silver armature worth 350 gp, other treasure)"/>
    <fieldval field="rLangBonus" value="-3"/>
    <usesource source="PathIronGo"/>
    <tag group="RaceType" tag="NPC"/>
    <tag group="Hero" tag="NoDefComm"/>
    <tag group="HasType" tag="tpOoze"/>
    <tag group="Alignment" tag="Lawful"/>
    <tag group="Alignment" tag="Evil"/>
    <tag group="Helper" tag="Quadruped"/>
    <tag group="RaceSize" tag="Large1"/>
    <bootstrap thing="xImmElec"></bootstrap>
    <bootstrap thing="xImmMind"></bootstrap>
    <bootstrap thing="xDamRsAcid">
      <autotag group="Value" tag="10"/>
      </bootstrap>
    <bootstrap thing="rBlindSi">
      <autotag group="Value" tag="100"/>
      </bootstrap>
    <bootstrap thing="xTelepathy">
      <autotag group="Value" tag="100"/>
      </bootstrap>
    <bootstrap thing="raNoBreath"></bootstrap>
    <bootstrap thing="skKnowArca"></bootstrap>
    <bootstrap thing="skKnowEng"></bootstrap>
    <bootstrap thing="skKnowNat"></bootstrap>
    <bootstrap thing="fGreatFort"></bootstrap>
    <bootstrap thing="fImpInit"></bootstrap>
    <bootstrap thing="fIronWill"></bootstrap>
    <bootstrap thing="fLightRef"></bootstrap>
    <bootstrap thing="lAklo"></bootstrap>
    <bootstrap thing="lCommon"></bootstrap>
    <bootstrap thing="lInfernal"></bootstrap>
    <bootstrap thing="wSlam">
      <autotag group="wMain" tag="1d6_5"/>
      <autotag group="Value" tag="2"/>
      </bootstrap>
    <bootstrap thing="xImmCold"></bootstrap>
    <bootstrap thing="raBleed">
      <autotag group="Target" tag="wSlam"/>
      <assignval field="livename" value="Bleed (1 Int damage)"/>
      </bootstrap>
    <bootstrap thing="raCBForcef"></bootstrap>
    <bootstrap thing="raCBThoFRa"></bootstrap>
    <bootstrap thing="raCBThoAtv"></bootstrap>
    <bootstrap thing="raCBThoPoS"></bootstrap>
    <eval phase="PreLevel" priority="4000">#racialbonus[skHeal] += 4

#skillinnate[skHeal] += 3
#skillinnate[skKnowArca] += 7
#skillinnate[skKnowEng] += 7
#skillinnate[skKnowNat] += 7
#skillinnate[skPercep] += 8
      <before name="Skill Bonus Feats"/>
      </eval>
    </thing>
  <thing id="raCBThoAtv" name="Atavistic Manipulation" description="A thorgothrel can alter a target’s genetic structure to induce rapid evolutionary regression by dealing Intelligence bleed damage with its slam attacks. As the target mentally regresses, it also becomes more feral and violent. A target that has taken at least 4 points of Intelligence damage from a thorgothrel gains a +2 enhancement bonus to Strength. If a thorgothrel spends an hour experimenting on a target rendered unconscious due to Intelligence damage, it can make this regression permanent. Thereafter, the target’s Intelligence score is reduced to 1. This regression can be reversed only with heal, limited wish, miracle, or wish. At the GM’s discretion, the target might change in additional ways to reflect its atavistic regression." compset="RaceSpec" summary="Targets that take Int damage become stronger, feral and more violent." uniqueness="useronce">
    <usesource source="PathIronGo"/>
    <tag group="abAction" tag="Attack"/>
    <tag group="SpecType" tag="Attack"/>
    <tag group="AbilType" tag="Super"/>
    <tag group="Helper" tag="ShowSpec"/>
    </thing>
  <thing id="raCBThoFRa" name="Force Ray" description="As a standard action, a thorgothrel can lose 5 hit points from its force field (if it has that many or more remaining) in order to fire a ray of force at any target within 100 feet. The ray is a ranged touch attack that deals 10d6 points of force damage." compset="RaceSpec" summary="Lose 5 hp from force field to release a ray of force that deals 10d6 damage.">
    <fieldval field="wDamExtra" value=" force"/>
    <usesource source="PathIronGo"/>
    <tag group="abAction" tag="Standard"/>
    <tag group="Helper" tag="ShowSpec"/>
    <tag group="abRange" tag="Feet"/>
    <tag group="Helper" tag="WeaponSpec"/>
    <tag group="Helper" tag="SingleAtt"/>
    <tag group="wMain" tag="10d6_11"/>
    <tag group="Helper" tag="NoAttrDam"/>
    <tag group="wType" tag="Force"/>
    <tag group="SpecType" tag="Attack"/>
    <tag group="SpecType" tag="AttackSpec"/>
    <tag group="wCategory" tag="RangeThrow"/>
    <tag group="wCategory" tag="Touch"/>
    <tag group="AbilType" tag="Extra"/>
    <tag group="wCritMin" tag="20"/>
    <tag group="wCritMult" tag="2"/>
    <tag group="wFtrGroup" tag="Natural"/>
    </thing>
  <thing id="raCBThoPoS" name="Poisonous Sublimation" description="When a thorgothrel without an active force field is in a region with breathable atmosphere, it beings to evaporate into a poisonous mist. The thorgothrel takes 1d4 points of Constitution damage each round at the beginning of its turn, and the mist expands to fill a 20-foot radius. Any living creature in the mist with 6 or fewer HD must succeed at a DC 17 Fortitude save or be slain. A creature with more than 6 HD takes 1d4 points of Constitution damage each round while in the mist (Fortitude half). A moderate wind disperses the mist in 4 rounds; a strong wind disperses the mist in 1 round. This is a poison effect, and the save DC is Constitution-based." compset="RaceSpec" summary="Slowly evaporate into poisonous mist without force field.">
    <fieldval field="abRange" value="20"/>
    <usesource source="PathIronGo"/>
    <tag group="abSave" tag="FortHalf"/>
    <tag group="StandardDC" tag="aCON"/>
    <tag group="AbilType" tag="Extra"/>
    <tag group="Helper" tag="ShowSpec"/>
    <tag group="abRange" tag="Feet"/>
    <tag group="SbNamePar" tag="IncRange"/>
    <tag group="LvNamePar" tag="IncRange"/>
    </thing>
  <thing id="rCBRbRecla" name="Robot, Reclamation" description="Reclamation robots, or “reclamators,” are masters of salvage and construction. These robots were originally designed to build structures and repair all manner of technology with speed and precision. Construction of these robots was difficult and time consuming, but they often repaid those spent resources swiftly with their ability to rebuild and repair other robots or technological items. Their truly remarkable programing surprised even those who originally developed them, as these machines can salvage items thought to be far beyond hope of repair.\n\nOver time it’s not uncommon for a reclamation robot to develop a unique personality akin to that of an artist, with something that almost approaches pride in its work. On some occasions, reclamation robots have even been known to make improvements to items and constructs that they repair.\n\nThough a reclamation robot is generally quite adept at repairing damage to itself as well, injury to certain processors and memory modules deep within the robot can cause significant problems. Some of the resulting malfunctions can be quite noticeable (see the table above), while others are subtler, such as a tendency to add baroque and unnecessary embellishments to constructions and repairs. Reclamation robots with this type of damage are largely unaware of their condition and actively resist efforts to repair them, requiring intervention with a robojack or the like. There are even recorded incidents of damaged reclamators going rogue and setting off on their own to build whatever outlandish structures their flawed processors dictate. Though they were originally designed to create things for humanoids, such rogue robots typically design structures and devices of no apparent use to organic beings... which isn’t to say that these creations don’t have a place in some unknowable automaton agenda." compset="Race">
    <fieldval field="rHPStart" value="88"/>
    <fieldval field="rSTR" value="12"/>
    <fieldval field="rDEX" value="15"/>
    <fieldval field="rINT" value="4"/>
    <fieldval field="rWIS" value="5"/>
    <fieldval field="rCHA" value="-9"/>
    <fieldval field="rFeat" value="-8"/>
    <fieldval field="rAC" value="11"/>
    <fieldval field="rCR" value="12"/>
    <fieldval field="rLangBonus" value="-2"/>
    <fieldval field="rDescript" value="This complex-looking automaton’s multiple arms end in gripping talons. It moves about on a set of four legs and has a strange bell-shaped head."/>
    <fieldval field="rEnviron" value="any"/>
    <fieldval field="rOrgan" value="solitary, duo, or work gang (3-5)"/>
    <fieldval field="rTreasure" value="standard"/>
    <fieldval field="rSpace" value="10"/>
    <fieldval field="rReach" value="15"/>
    <fieldval field="rNumHands" value="5"/>
    <fieldval field="rHitDice" value="16"/>
    <usesource source="PathIronGo"/>
    <tag group="RaceType" tag="NPC"/>
    <tag group="Hero" tag="NoDefComm"/>
    <tag group="RaceSize" tag="Large1"/>
    <tag group="Helper" tag="Quadruped"/>
    <tag group="Helper" tag="NotHum"/>
    <tag group="Alignment" tag="NeutralLC"/>
    <tag group="Alignment" tag="NeutralGE"/>
    <tag group="Helper" tag="NoPathSoc"/>
    <tag group="HasType" tag="tpConst"/>
    <bootstrap thing="xClimb">
      <autotag group="Value" tag="20"/>
      </bootstrap>
    <bootstrap thing="fBlindCrit"></bootstrap>
    <bootstrap thing="fCritFoc"></bootstrap>
    <bootstrap thing="fGreatFort"></bootstrap>
    <bootstrap thing="fGreatSun"></bootstrap>
    <bootstrap thing="fImpCrit">
      <autotag group="Target" tag="wClaw"/>
      </bootstrap>
    <bootstrap thing="fImpInit"></bootstrap>
    <bootstrap thing="stRobot"></bootstrap>
    <bootstrap thing="lAndroffen"></bootstrap>
    <bootstrap thing="lCommon"></bootstrap>
    <bootstrap thing="fImpSunder"></bootstrap>
    <bootstrap thing="fPowerAtt"></bootstrap>
    <bootstrap thing="skKnowEng"></bootstrap>
    <bootstrap thing="raGrab">
      <autotag group="Target" tag="wClaw"/>
      </bootstrap>
    <bootstrap thing="wClaw">
      <autotag group="wMain" tag="1d6_5"/>
      <autotag group="Value" tag="5"/>
      </bootstrap>
    <bootstrap thing="wConstrict">
      <autotag group="wMain" tag="1d6_5"/>
      </bootstrap>
    <bootstrap thing="raHardness">
      <autotag group="Value" tag="10"/>
      </bootstrap>
    <bootstrap thing="xDamRsCold">
      <autotag group="Value" tag="15"/>
      </bootstrap>
    <bootstrap thing="xDamRsFire">
      <autotag group="Value" tag="15"/>
      </bootstrap>
    <bootstrap thing="raIntLasRi">
      <autotag group="wMain" tag="2d6_104"/>
      </bootstrap>
    <bootstrap thing="raCombArms"></bootstrap>
    <bootstrap thing="raCBEffGra"></bootstrap>
    <bootstrap thing="raCBRecItm"></bootstrap>
    <bootstrap thing="raCBForcef">
      <assignval field="abValue" value="50"/>
      </bootstrap>
    <bootstrap thing="raCBRecSal"></bootstrap>
    <bootstrap thing="raCBRecSca"></bootstrap>
    <bootstrap thing="fTechnolog">
      <autotag group="thing" tag="skipprereq"/>
      </bootstrap>
    <eval phase="First" priority="200" index="3"><![CDATA[
field[livename].text = "Reclamation Robot"]]>
      <before name="Template Name Modification"/>
      </eval>
    <eval phase="PreLevel" priority="4010" index="4">perform hero.child[skDisable].assign[Helper.HasTools]

#skillinnate[skClimb] += 13
#skillinnate[skDisable]+= 13
#skillinnate[skKnowEng] += 13
#skillinnate[skPercep] += 13
      <before name="Skill Bonus Feats"/>
      </eval>
    <eval phase="Final" index="2">var desc as string
desc = &quot;Like all robots, reclamation robots are vulnerable to critical hits. In addition, when a critical hit is confirmed against a reclamation robot, roll a d8. On a roll of 1, instead of suffering additional damage from the critical hit, the robot suffers damage to essential processing units and memory modules that it cannot itself repair (although another reclamation robot could repair this damage). While such damage is not readily apparent on the exterior—and the robot itself is essentially unaware of it—this kind of injury can have a number of different effects. When such an injury occurs, roll d% and consult the following chart to determine the nature of the damage.\n\n{b}d%{/b}           {b}Result{/b}\n01-20          The robot takes a -4 penalty on all skill checks.\n21-30           The robot’s integrated laser rifle now glitches each time it is fired as if it were timeworn.\n31-40          The robot loses its scaling ability (including its bonus on Climb checks).\n41-60          When it attemps to repair damage to a robot via salvage, it only repairs 1d4 points of damage.\n61-70          Movement is reduced by 10 ft.\n71-95          One of the robot’s claw attacks becomes non functional\n96-100         The robot goes berserk, functioning as if under the simultaneous effects of a {i}confusion{/i} spell and a {i}rage{/i} spell.&quot;

hero.childfound[xVulCrits].field[DescAppend].text = desc</eval>
    </thing>
  <thing id="raCBEffGra" name="Efficienct Grappler" description="A reclamation robot takes only a –10 penalty on its combat maneuver check to make and maintain a grapple on a foe when using only its claw rather than its whole body to grapple. It receives a +8 bonus on combat maneuver checks to start and maintain a grapple rather than the normal +4 bonus granted by the grab ability. A reclamation robot can make an attack with its integrated laser rifle against one creature it is grappling as a swift action—when it attacks in this way, the robot has a threat range of 18–20 for critical hits with the laser rifle." compset="RaceSpec" summary="+8 instead of +4 CMB/D on grapple. Increased threat ranged on int. weapon vs. grappled foe.">
    <usesource source="PathIronGo"/>
    <tag group="Helper" tag="ShowSpec"/>
    <eval phase="Final"><![CDATA[doneif (tagis[Helper.SpcDisable] <> 0)


hero.child[manGrapple].field[cmbBonus].value += 4
hero.child[manGrapple].field[cmdBonus].value += 8]]></eval>
    </thing>
  <thing id="raCBRecItm" name="Item Creation" description="Reclamation robots are known for their startling creativity in repairing damaged technology. A reclamation robot ignores all of the item creation feat requirements for creating a technological item, but must have access to a sufficient amount of scrap metal and spare parts in order to create or repair an item (the robot must still expend materials equal to the item’s cost). A reclamation robot can attempt a Knowledge (engineering) check to restore a timeworn technological item to full functionality—the DC of this check is equal to the item’s Craft DC + 5, and requires an expenditure of technological components worth a total amount of money equal to the timeworn item’s cost (half the cost of the object in its pristine condition). Failure results in the destruction of the item. When a reclamation robot restores a technological\nitem to full functionality in this manner, if the robot exceeds its DC by a result of 10 or more, it improves the item in some way—choose one of the following improvements or determine one randomly.\n\n• The item’s capacity permanently increases by 50%.\n• If the item is a weapon or armor, it becomes masterwork.\n• The item becomes hardened (increase its hardness by 2).\n• The item becomes fortified (increase its hit points by 50%).\n• The item becomes lightweight (weight is divided in half)." compset="RaceSpec" summary="Create items without the need of item creation feats.">
    <usesource source="PathIronGo"/>
    <tag group="Helper" tag="ShowSpec"/>
    <tag group="AbilType" tag="Extra"/>
    </thing>
  <thing id="raCBRecSal" name="Salvage" description="A reclamation robot is designed specifically to salvage technology for further use. All Craft skills are class skills for reclamation robots, and they gain a +4 racial bonus on Knowledge (engineering) checks and gain Technologist as a bonus feat. A reclamation robot can repair 2d6 points of damage to a robot within reach (including itself) as a standard action." compset="RaceSpec" summary="Salvage technology for further use repairing rbots for 2d6 damage as a standard action.">
    <usesource source="PathIronGo"/>
    <tag group="abAction" tag="Standard"/>
    <tag group="Helper" tag="ShowSpec"/>
    <eval phase="PreLevel" priority="4010"><![CDATA[doneif (tagis[Helper.SpcDisable] <> 0)

#racialbonus[skKnowEng] += 4
perform hero.assign[ClassSkill.Craft]]]></eval>
    </thing>
  <thing id="raCBRecSca" name="Scaling" description="Reclamation robots are expected to work at great heights or while clinging to immense ships. They gain a +4 racial bonus on Climb checks. Once every 1d4 rounds, a reclamation robot can increase its climb speed to 40 feet as a swift action for 1 round." compset="RaceSpec">
    <fieldval field="trkMax" value="1"/>
    <usesource source="PathIronGo"/>
    <tag group="AbilType" tag="Extra"/>
    <tag group="User" tag="Activation"/>
    <tag group="User" tag="Tracker"/>
    <tag group="Helper" tag="ShowSpec"/>
    <tag group="Usage" tag="1d4Rnds"/>
    <tag group="abAction" tag="Swift"/>
    <eval phase="First" index="2"></eval>
    <eval phase="Final" priority="1000"><![CDATA[doneif (tagis[Helper.SpcDisable] <> 0)

#racialbonus[skClimb] += 4

~ increase climb when activated
doneif (field[abilActive].value = 0)
hero.child[xClimb].field[abValue].value *= 2]]></eval>
    </thing>
  <thing id="rCBShipmin" name="Shipmind" description="The enigmatic shipminds are painstakingly engineered creations of Dominion fleshfarms, molded and formed over the course of years to pilot the massive organic spacecraft the aliens use to navigate the Dark Tapestry.\n\nIntimately bound to their vessels, shipminds oversee the health and function of the ships they control. They maintain this single-minded task for as long as a thousand years before they must be recycled and rebuilt.\n\nA shipmind resides within a specially designed containers on a craft, connected to the ship’s greater workings via varying forms of physical interface. These oozes generally follow orders from superiors stationed on their spacecraft, though coaxing is sometimes necessary in order to get these strange creatures to follow direct orders. This is due in part to the fact that these engineered creatures are fanatically devoted to the Dominion’s inscrutable faith, with rigid beliefs regarding orthodoxy. Rumors persist of especially radical shipmind oozes going beyond defiance and actually slaying their passengers, a task made frightfully easy due to the mastery each ooze has over every aspect of its spacecraft’s function (such as life support and internal security appendages and creatures). Some have been known to plunge their vessel into a star or black hole in moments of defiance or religious ecstasy, leaving the rest of the ship’s crew helpless and unable to convince the shipmind to abandon its actions.\n\nAs a shipmind reaches more advanced age, it becomes increasingly pedantic and difficult to control. Such oozes often demand small offerings, sacrifices of lesser creatures, or the powering down of ship’s systems they deem superfluous or “unpure.” At a certain point, the shipmind is recycled, poured from its container into vats to serve as nutrients for the cultivation of a replacement. Fragments of the previous shipmind’s intellect and skills carry over into the newly created ooze, ensuring that a sort of entrenched memory and institutional knowledge persist through the generations." compset="Race">
    <fieldval field="rHitDice" value="14"/>
    <fieldval field="rHPStart" value="63"/>
    <fieldval field="rSTR" value="24"/>
    <fieldval field="rDEX" value="18"/>
    <fieldval field="rCON" value="14"/>
    <fieldval field="rINT" value="11"/>
    <fieldval field="rWIS" value="13"/>
    <fieldval field="rCHA" value="11"/>
    <fieldval field="rSpeed" value="0"/>
    <fieldval field="rFeat" value="-7"/>
    <fieldval field="rCR" value="13"/>
    <fieldval field="rLangBonus" value="-5"/>
    <fieldval field="rDescript" value="This yellowy viscous liquid bubbles in a large tank suspended by strangely organic cables. Wisps of white gas occasionally escape the roiling fluid."/>
    <fieldval field="rEnviron" value="any (Dominion of the Black ships)"/>
    <fieldval field="rOrgan" value="solitary"/>
    <fieldval field="rTreasure" value="standard (mostly gemstones)"/>
    <fieldval field="rSpace" value="15"/>
    <fieldval field="rReach" value="15"/>
    <fieldval field="rNumHands" value="3"/>
    <fieldval field="rSpCastLev" value="13"/>
    <usesource source="PathIronGo"/>
    <tag group="Hero" tag="NoDefComm"/>
    <tag group="RaceSize" tag="Huge2"/>
    <tag group="Helper" tag="Snaky"/>
    <tag group="Helper" tag="NotHum"/>
    <tag group="Alignment" tag="Chaotic"/>
    <tag group="Alignment" tag="Evil"/>
    <tag group="RaceType" tag="NPC"/>
    <tag group="Helper" tag="NoPathSoc"/>
    <tag group="HasType" tag="tpOoze"/>
    <bootstrap thing="wSlam">
      <autotag group="wMain" tag="1d8_6"/>
      <autotag group="Value" tag="3"/>
      </bootstrap>
    <bootstrap thing="raGrab">
      <autotag group="Target" tag="wSlam"/>
      </bootstrap>
    <bootstrap thing="skKnowEng"></bootstrap>
    <bootstrap thing="skKnowGeog"></bootstrap>
    <bootstrap thing="skKnowNat"></bootstrap>
    <bootstrap thing="skKnowPlan"></bootstrap>
    <bootstrap thing="skKnowRel"></bootstrap>
    <bootstrap thing="xTelepathy">
      <autotag group="Value" tag="60"/>
      </bootstrap>
    <bootstrap thing="fComCast"></bootstrap>
    <bootstrap thing="fComRef"></bootstrap>
    <bootstrap thing="fImpCrit">
      <autotag group="Target" tag="raCBSMPlas"/>
      </bootstrap>
    <bootstrap thing="fImpInit"></bootstrap>
    <bootstrap thing="spDeteGoo1">
      <autotag group="Helper" tag="SpellLike"/>
      <autotag group="Usage" tag="Constant"/>
      <autotag group="SpecType" tag="Sense"/>
      </bootstrap>
    <bootstrap thing="spDeteLaw1">
      <autotag group="Helper" tag="SpellLike"/>
      <autotag group="Usage" tag="Constant"/>
      <autotag group="SpecType" tag="Sense"/>
      </bootstrap>
    <bootstrap thing="spDeteMag1">
      <autotag group="Helper" tag="SpellLike"/>
      <autotag group="Usage" tag="Constant"/>
      <autotag group="SpecType" tag="Sense"/>
      </bootstrap>
    <bootstrap thing="xImmBlud"></bootstrap>
    <bootstrap thing="xImmCharm"></bootstrap>
    <bootstrap thing="xImmElec"></bootstrap>
    <bootstrap thing="xImmFire"></bootstrap>
    <bootstrap thing="xDamRd">
      <autotag group="Value" tag="10"/>
      </bootstrap>
    <bootstrap thing="xSplRs">
      <autotag group="Value" tag="24"/>
      </bootstrap>
    <bootstrap thing="xVulCold"></bootstrap>
    <bootstrap thing="rBlindSi">
      <autotag group="Value" tag="60"/>
      </bootstrap>
    <bootstrap thing="fIronWill"></bootstrap>
    <bootstrap thing="fPowerAtt"></bootstrap>
    <bootstrap thing="fQuickSpel">
      <autotag group="Target" tag="spToucIdi2"/>
      </bootstrap>
    <bootstrap thing="lAklo"></bootstrap>
    <bootstrap thing="lCommon"></bootstrap>
    <bootstrap thing="lDraconic"></bootstrap>
    <bootstrap thing="lInfernal"></bootstrap>
    <bootstrap thing="lProtean"></bootstrap>
    <bootstrap thing="lUndercomm"></bootstrap>
    <bootstrap thing="raCBSMCont"></bootstrap>
    <bootstrap thing="lAbyssal"></bootstrap>
    <bootstrap thing="spEnthral2">
      <autotag group="Helper" tag="SpellLike"/>
      <autotag group="Usage" tag="AtWill"/>
      </bootstrap>
    <bootstrap thing="spSending5">
      <autotag group="Helper" tag="SpellLike"/>
      <autotag group="Usage" tag="AtWill"/>
      </bootstrap>
    <bootstrap thing="spTelekin5">
      <autotag group="Helper" tag="SpellLike"/>
      <autotag group="Usage" tag="AtWill"/>
      </bootstrap>
    <bootstrap thing="spConfusi4">
      <autotag group="Helper" tag="SpellLike"/>
      <autotag group="Usage" tag="Day"/>
      <assignval field="trkMax" value="1"/>
      </bootstrap>
    <bootstrap thing="spCrusDes4">
      <autotag group="Helper" tag="SpellLike"/>
      <autotag group="Usage" tag="Day"/>
      <assignval field="trkMax" value="1"/>
      </bootstrap>
    <bootstrap thing="raCBSMImm"></bootstrap>
    <bootstrap thing="raCBDmLmMb"></bootstrap>
    <bootstrap thing="raCBSMPlas"></bootstrap>
    <bootstrap thing="raCBSMInte"></bootstrap>
    <bootstrap thing="raCBSMThDi">
      <assignval field="abValue" value="1"/>
      <assignval field="abValue2" value="4"/>
      </bootstrap>
    <eval phase="PreLevel" priority="4010">#skillinnate[skKnowEng] += 14
#skillinnate[skKnowGeog] += 14
#skillinnate[skKnowNat] += 14
#skillinnate[skKnowPlan] += 14
#skillinnate[skKnowRel] += 14
#skillinnate[skPercep] += 14
#skillinnate[skSenseMot] += 14
      <before name="Skill Bonus Feats"/>
      </eval>
    </thing>
  <thing id="raCBSMCont" name="Container" description="A shipmind dwells within an immobile container of partially organic material grown by its Dominion masters. This container functions somewhat like a suit of armor for the shipmind. A shipmind container has hardness 10 and 240 hit points, and can be damaged by sunder attempts. A shipmind container that gains the broken quality grants only a +5 armor bonus to the shipmind within, and does not allow the shipmind to heal negative levels gained during a prolonged period outside of the container (see Limited Mobility). The partially crystalline nature of a shipmind container makes it vulnerable to shatter spells, and sonic damage bypasses the container’s hardness and inflicts full damage." compset="RaceSpec" summary="Container acts somewhat like a suit of armor.">
    <fieldval field="abValue" value="10"/>
    <fieldval field="actName" value="Broken"/>
    <fieldval field="trkMax" value="240"/>
    <usesource source="PathIronGo"/>
    <tag group="Helper" tag="ShowSpec"/>
    <tag group="AbilType" tag="Extra"/>
    <tag group="User" tag="Tracker"/>
    <tag group="Usage" tag="HitPoints"/>
    <tag group="User" tag="Activation"/>
    <eval phase="Final" priority="10000" index="2"><![CDATA[
doneif (tagis[Helper.SpcDisable] <> 0)


#applybonus[tACArmor,hero.child[ArmorClass],field[abValue].value]]]></eval>
    <eval phase="Final" priority="9000"><![CDATA[
doneif (tagis[Helper.SpcDisable] <> 0)

~ armor bonus in abValue
~ if we are broken, or have deteriorting template reduce armor bonus

if (field[abilActive].value + #hastemplate[tmCBSMdete] <> 0) then
  field[abValue].value = round(field[abValue].value/2,0,-1)
endif]]></eval>
    </thing>
  <thing id="raCBSMImm" name="Immerse" description="When a shipmind in its container successfully grabs a Large or smaller target with one of its slam attacks, it can attempt to drag that target into its body as a swift action. To immerse a creature, the shipmind must attempt a combat maneuver check (as though attempting to pin the opponent). If it succeeds, the prey is pulled into the container with the shipmind and immediately takes 6d6 points of plasma damage (half of which is electricity and half of which is fire) and 1d4 points of Intelligence damage—a successful DC 24 Fortitude save halves the plasma damage and negates the Intelligence damage. A creature that remains immersed takes this damage again every following round at the start of the shipmind’s turn. In addition, an immersed creature is in danger of suffocating.  A creature can attempt to escape immersion by making a successful combat maneuver check or Escape Artist check, as if it were attempting to escape a pin. If the shipmind’s container has the broken condition, attempts to escape in this manner gain a +8 bonus." compset="RaceSpec" summary="Foes dragged into body take 6d6 plasma and 1d4 Int damage each round (Fort half plasma, neg. Int dam)">
    <usesource source="PathIronGo"/>
    <tag group="StandardDC" tag="aCON"/>
    <tag group="abSave" tag="FortHalf"/>
    <tag group="abSave" tag="FortNeg"/>
    <tag group="Helper" tag="ShowSpec"/>
    <tag group="SpecType" tag="Attack"/>
    <tag group="AbilType" tag="Extra"/>
    </thing>
  <thing id="raCBDmLmMb" name="Limited Mobility" description="Unlike most oozes, a shipmind cannot exist outside of the partially organic container it was originally created in—this container serves the shipmind as its “skin.” While inside its container, a shipmind has a speed of 0 feet. When it leaves its container, it gains a speed of 10 feet, but loses its armor bonus to AC. A shipmind can exist outside of its container for 1 hour without consequences, but at the start of each subsequent hour it gains 1 negative level as its body starts to dissolve. These negative levels cannot be restored by any means save by returning to an appropriate shipmind container, at which point they are removed at a rate of 1 level per hour." compset="RaceSpec">
    <fieldval field="actName" value="Not in Container"/>
    <fieldval field="actUserMin" value="0"/>
    <tag group="Helper" tag="ShowSpec"/>
    <tag group="User" tag="Activation"/>
    <tag group="SpecType" tag="Weakness"/>
    <tag group="AbilType" tag="Extra"/>
    <eval phase="First" priority="9005"><![CDATA[
doneif (tagis[Helper.SpcDisable] <> 0)

if (field[abilActive].value <> 0) then
  ~ remove armor bonus from container
  hero.childfound[raCBSMCont].field[abValue].value = 0
  ~ set up negative level counter
  perform assign[Helper.UserAdjust]
  field[actIncrNam].text = "Negative Levels"
  field[actUserMax].value = hero.tagcount[Hero.HitDice]
  
  ~ set negative levels
   herofield[tNegLevel].value += field[actUser].value


endif]]></eval>
    </thing>
  <thing id="raCBSMPlas" name="Plasma Bolt" description="As a standard action, a shipmind can fire a bolt of plasma at a target within 300 feet (no range increment). On a hit, a blast of plasma deals 10d6 damage, half of which is electricity damage and half of which is fire damage." compset="RaceSpec">
    <fieldval field="abRange" value="300"/>
    <usesource source="PathIronGo"/>
    <tag group="Helper" tag="ShowSpec"/>
    <tag group="abRange" tag="Feet"/>
    <tag group="SpecType" tag="AttackSpec"/>
    <tag group="Helper" tag="WeaponSpec"/>
    <tag group="Helper" tag="SingleAtt"/>
    <tag group="wCategory" tag="RangeProj"/>
    <tag group="wMain" tag="10d6_11"/>
    <tag group="Helper" tag="NoAttrDam"/>
    <tag group="wType" tag="Elec"/>
    <tag group="wType" tag="Fire"/>
    <tag group="wCritMin" tag="20"/>
    <tag group="wCritMult" tag="2"/>
    <tag group="abAction" tag="Standard"/>
    <tag group="Target" tag="raCBSMPlas" name="Plasma Bolt" abbrev="Plasma Bolt"/>
    <tag group="IsWeapon" tag="raCBSMPlas"/>
    </thing>
  <thing id="raCBSMInte" name="Ship Interface" description="As long as a shipmind is interfaced with a Dominion vessel, it can observe events within the ship or within 90 feet of its exterior hull as if via {i}clairaudience/clairvoyance{/i} for as long as the shipmind concentrates. While concentrating on an area, the shipmind can activate traps or other ship systems in the area as a swift action; it can even converse with creatures in the area by vibrating the metal and strange membranes in the walls." compset="RaceSpec" summary="Observe all withinin ship and 90 ft. of hull. Control ship systems as a swift action.">
    <usesource source="PathIronGo"/>
    <tag group="Helper" tag="ShowSpec"/>
    </thing>
  <thing id="raCBSMThDi" name="Thought Disruption" description="The substance that makes up a shipmind ooze is charged with alien psychic energy that is toxic to the minds of most life forms. A creature who willfully touches an ooze (via a touch attack, natural weapon attack, or unarmed strike) or is struck by its slam attack must make a DC 22 Will save or take 1d4 points of Intelligence damage. This is a mind-affecting confusion effect. The save DC is Charisma-based." compset="RaceSpec" summary="Touching substance of shipmind deals 1d4 Int Damage.">
    <tag group="Helper" tag="ShowSpec"/>
    <tag group="StandardDC" tag="aCHA"/>
    <tag group="abSave" tag="WillNeg"/>
    <eval phase="Final" priority="1000"><![CDATA[doneif (tagis[Helper.SpcDisable] <> 0)

var dam as string
if (field[abValue2].value = 0) then
  dam = field[abValue].value & " Int damage"
else
  dam = field[abValue].value & "d" & field[abValue2].value & " Int damage"
endif

hero.childfound[wSlam].field[wDamExtra].text &= " plus " & dam]]></eval>
    </thing>
  <thing id="rcCBSMDete" name="Deteriorating" description="In cases where a shipmind isn’t recycled in time, as often happens in abandoned ships or in cases where a Dominion crew neglects the shipmind for too long, a shipmind can begin to deteriorate while still within its container. Deteriorated shipminds are sometimes encountered on Dominion drop ships after the vessel has landed on a planet and been left to rot. In such cases, the shipmind slowly goes insane, serving almost as a sort of living haunt within the decaying ship and bringing madness and pain to any creatures exploring its decks. Most deteriorating shipminds survive for only a few years, or a decade at most—in the majority of cases, the Dominion drop ship decays into filth and sludge long before then.\n\nA shipmind that is deteriorating has slightly different statistics than the typical shipmind. You can create stats for one of these shipminds by applying the deteriorating shipmind simple template to the statistics above. The quick rules and rebuild rules for a deteriorating shipmind are the same.\n\n{b}Quick/Rebuild Rules:{/b} –2 on all rolls (including damage rolls) and to special ability DCs. The shipmind’s container is broken and has only 120 hit points. A deteriorating shipmind can only use its plasma bolt once every other round, and gains negative levels at a rate of 1 per round immediately after it leaves its container." compset="RaceCustom">
    <tag group="AllowRCust" tag="rCBShipmin"/>
    <eval phase="Final" priority="200000"><![CDATA[
doneif (tagis[Helper.SpcDisable] <> 0)

herofield[tCR].value -= 1

hero.child[Attack].field[Penalty].value -= 2
hero.child[Damage].field[Penalty].value -= 2

~ set container to broken and disable the check box
~ armor bonus adjustment is taken care of in continaer thing
perform hero.childfound[raCBSMCont].assign[Helper.ChgDisab1]
hero.childfound[raCBSMCont].field[trkMax].value = 120

~ chnage use of plasma bolt
hero.childfound[raCBSMPlas].field[trkMax].value = 1
perform hero.childfound[raCBSMPlas].assign[User.Tracker]
perform hero.childfound[raCBSMPlas].assign[Usage.per2rounds]]]></eval>
    <eval phase="First" priority="200" index="2"><![CDATA[
hero.findchild[BaseRace].field[livename].text = "Deteriorating Shipmind"]]>
      <before name="Template Name Modification"/>
      </eval>
    </thing>
  <thing id="tmCBSMdete" name="Deterorating" description="In cases where a shipmind isn’t recycled in time, as often happens in abandoned ships or in cases where a Dominion crew neglects the shipmind for too long, a shipmind can begin to deteriorate while still within its container. Deteriorated shipminds are sometimes encountered on Dominion drop ships after the vessel has landed on a planet and been left to rot. In such cases, the shipmind slowly goes insane, serving almost as a sort of living haunt within the decaying ship and bringing madness and pain to any creatures exploring its decks. Most deteriorating shipminds survive for only a few years, or a decade at most—in the majority of cases, the Dominion drop ship decays into filth and sludge long before then.\n\nA shipmind that is deteriorating has slightly different statistics than the typical shipmind. You can create stats for one of these shipminds by applying the deteriorating shipmind simple template to the statistics above. The quick rules and rebuild rules for a deteriorating shipmind are the same.\n\n{b}Quick/Rebuild Rules:{/b} –2 on all rolls (including damage rolls) and to special ability DCs. The shipmind’s container is broken and has only 120 hit points. A deteriorating shipmind can only use its plasma bolt once every other round, and gains negative levels at a rate of 1 per round immediately after it leaves its container." compset="Template" uniqueness="unique">
    <fieldval field="tmAttack" value="-2"/>
    <arrayval field="tmCRArray" index="0" value="-1"/>
    <usesource source="PathIronGo"/>
    <tag group="TemplHelp" tag="Acquired"/>
    <tag group="ClVaryName" tag="Prepend"/>
    <eval phase="First" priority="20000">~ set container to broken and disable the check box
~ armor bonus adjustment is taken care of in continaer thing
perform hero.childfound[raCBSMCont].assign[Helper.ChgDisab1]
hero.childfound[raCBSMCont].field[trkMax].value = 120

~ chnage use of plasma bolt
hero.childfound[raCBSMPlas].field[trkMax].value = 1
perform hero.childfound[raCBSMPlas].assign[User.Tracker]
perform hero.childfound[raCBSMPlas].assign[Usage.per2rounds]</eval>
    <eval phase="PostLevel" priority="1000" index="2"><![CDATA[doneif (tagis[Helper.SpcDisable] <> 0)

foreach pick in hero from BaseWep
  eachpick.field[dmmPenalty].value -= 2
  eachpick.field[dmrPenalty].value -= 2
nexteach]]></eval>
    <exprreq message="Can only be applied to shipminds."><![CDATA[#hasrace[rCBShipmin] <> 0]]></exprreq>
    </thing>
  <thing id="hzCBUrgPoi" name="Ugothokra Poison" compset="Hazard" uniqueness="useronce">
    <fieldval field="abDuration" value="6"/>
    <fieldval field="hzPriNmD1" value="1"/>
    <fieldval field="hzPriDie1" value="4"/>
    <fieldval field="hzCureNum" value="2"/>
    <fieldval field="hzPriTxt2" value=" 1 round"/>
    <usesource source="PathIronGo"/>
    <tag group="SpecType" tag="Attack"/>
    <tag group="HazSave" tag="Fort"/>
    <tag group="StandardDC" tag="aCON"/>
    <tag group="HazHelper" tag="NoOnset"/>
    <tag group="PoisLasts" tag="Rounds"/>
    <tag group="Helper" tag="ShowSpec"/>
    <tag group="PoisLasts2" tag="Rounds"/>
    <tag group="HazHelper" tag="NameChange"/>
    <tag group="Hazard" tag="Poison"/>
    <tag group="PoiDamTyp1" tag="Damage"/>
    <tag group="PoisonAttr" tag="aCON"/>
    <tag group="HazPriConj" tag="and"/>
    <tag group="PoiDamTyp2" tag="Sicken"/>
    <tag group="PrimTime2" tag="Rounds"/>
    <tag group="AbilType" tag="Extra"/>
    <tag group="HazNameSum" tag="Type"/>
    <tag group="PoisonCat" tag="Injury"/>
    <eval phase="First" priority="200"><![CDATA[
field[livename].text = "Poison"]]></eval>
    </thing>
  <thing id="rCBUgothok" name="Ugothokra" description="One of many artificially engineered species grown and molded in Dominion of the Black labs, ugothokras were designed specifically to spread contagions through organic enemy ranks. Immune to disease, ugothokras have small bodies that are capable of hosting a limitless number of contagions within their blood.\n\nUgothokras are incapable of reproduction, and when additional ones are required by the Dominion of the Black, replacements are constructed from organic and cybernetic components. The construction facilities typically operate within the organic walls of Dominion installations, the little beasts crawling out from birthing tubes protruding from their semi-organic incubators. These incubators are of widely varying size and capacity. Smaller versions, possessing no more than two birthing tubes, can produce an ugothokra every hour if provided the proper nutrients (typically curdled flesh harvested from victims of flesh ripen fever), fed to it through the living walls in which the incubator is nestled. Significantly larger incubators with dozens of birthing tubes have been reported, their size limited only by the resources needed to create more offspring.\n\nA newborn ugothokra is completely autonomous and fully functional. While ugothokras can’t fly, their immunity to cold and the fact that they don’t breathe make them ideal bioweapons for use against enemy vessels in space—often, a Dominion ship’s exterior swarms with ugothokras, and as they near an enemy ship, dozens of the tenacious aberrations drop off to cling to the enemy’s hull. The creatures skitter along surfaces, searching for points of entry so they can infect the vessel’s crew and spread their sickness. Often, these entry points are created for them via battle damage from other Dominion weaponry. Many Dominion ships have had great success at using ugothokras to spread Aklo submission among enemy crews, allowing the Dominion to order their victims to power down and submit. Those that manage to resist still typically fall under the grinding legs and mouth parts of swarms of ugothokras.\n\nRumors of variant ugothokras abound, including swarms or larger varieties, and those possessing even more potent and deadly diseases. Given the prodigious industry of the Dominion of the Black, such rumors hardly seem far fetched.\n\nAn ugothokra stands only about 2 1/2 feet tall, with a leg span approaching 6 feet. Most weigh around 150 pounds." compset="Race">
    <fieldval field="rHitDice" value="10"/>
    <fieldval field="rHPStart" value="45"/>
    <fieldval field="rSTR" value="3"/>
    <fieldval field="rDEX" value="10"/>
    <fieldval field="rCON" value="8"/>
    <fieldval field="rWIS" value="7"/>
    <fieldval field="rCHA" value="3"/>
    <fieldval field="rSpeed" value="50"/>
    <fieldval field="rFeat" value="-5"/>
    <fieldval field="rAC" value="3"/>
    <fieldval field="rCR" value="7"/>
    <fieldval field="rDescript" value="This partially mechanical, partially organic spider moves with a skittering lurch. A single crystalline eye glares from its hideous face."/>
    <fieldval field="rEnviron" value="any"/>
    <fieldval field="rOrgan" value="solitary, pair, or pack (3–12)"/>
    <fieldval field="rTreasure" value="incidental"/>
    <fieldval field="rSpace" value="5"/>
    <fieldval field="rReach" value="5"/>
    <fieldval field="rNumHands" value="0"/>
    <usesource source="PathIronGo"/>
    <tag group="RaceType" tag="NPC"/>
    <tag group="Hero" tag="CantSpeak"/>
    <tag group="Hero" tag="NoDefComm"/>
    <tag group="RaceSize" tag="Small11"/>
    <tag group="Helper" tag="ManyLegs"/>
    <tag group="Helper" tag="NotHum"/>
    <tag group="Alignment" tag="Chaotic"/>
    <tag group="Alignment" tag="Evil"/>
    <tag group="HasType" tag="tpAberr"/>
    <tag group="Helper" tag="NoPathSoc"/>
    <bootstrap thing="fPointBlnk"></bootstrap>
    <bootstrap thing="fShotRun"></bootstrap>
    <bootstrap thing="lAklo"></bootstrap>
    <bootstrap thing="xClimb">
      <autotag group="Value" tag="50"/>
      </bootstrap>
    <bootstrap thing="fDodge"></bootstrap>
    <bootstrap thing="fImpInit"></bootstrap>
    <bootstrap thing="fMobility"></bootstrap>
    <bootstrap thing="hzCBUrgPoi">
      <autotag group="Target" tag="wBite"/>
      </bootstrap>
    <bootstrap thing="wBite">
      <autotag group="wMain" tag="1d4_4"/>
      <autotag group="Value" tag="1"/>
      </bootstrap>
    <bootstrap thing="xImmCold"></bootstrap>
    <bootstrap thing="xImmDis"></bootstrap>
    <bootstrap thing="xImmPois"></bootstrap>
    <bootstrap thing="xDamRsAcid">
      <autotag group="Value" tag="5"/>
      </bootstrap>
    <bootstrap thing="xDamRsElec">
      <autotag group="Value" tag="5"/>
      </bootstrap>
    <bootstrap thing="raNoBreath"></bootstrap>
    <bootstrap thing="raCombArms"></bootstrap>
    <bootstrap thing="raCBExpCli"></bootstrap>
    <bootstrap thing="raCBUgFles">
      <autotag group="Value" tag="6"/>
      </bootstrap>
    <bootstrap thing="raCBUgInfB"></bootstrap>
    <bootstrap thing="raCBUgVira"></bootstrap>
    <eval phase="PreLevel" priority="4010">#skillinnate[skAcrobat] += 10
#skillinnate[skClimb] += 10
#skillinnate[skPercep] += 10
#skillinnate[skStealth] += 10

hero.child[manTrip].field[manCMD].value += 4
      <before name="Skill Bonus Feats"/>
      </eval>
    </thing>
  <thing id="raCBUgFles" name="Flechette Spray" description="An ugothokra can fire bursts of calcified bone and horn from the vents along its abdomen. All six vents can fire as part of a full-attack action, or it can fire one vent as a standard action. This attack has a range increment of 50 feet. An ugothokra generates the “ammunition” it uses for this attack internally by feeding on organic material, and effectively has an unlimited supply of flechette material at any one time, but an ugothokra that is currently starving can’t use this attack until at least 1 hour after feeding." compset="RaceSpec">
    <fieldval field="wDamExtra" value=" plus viral infection"/>
    <usesource source="PathIronGo"/>
    <tag group="AbilType" tag="Extra"/>
    <tag group="Helper" tag="WeaponSpec"/>
    <tag group="Helper" tag="SingleAtt"/>
    <tag group="wCategory" tag="RangeProj"/>
    <tag group="wMain" tag="1d4_4"/>
    <tag group="wType" tag="P"/>
    <tag group="Value" tag="6"/>
    <tag group="wCritMin" tag="20"/>
    <tag group="wCritMult" tag="2"/>
    <tag group="SpecType" tag="Attack"/>
    <tag group="abAction" tag="Attack"/>
    <tag group="IsWeapon" tag="raCBUgFles" name="Fleshette Spray" abbrev="Fleshette Spray"/>
    <tag group="Target" tag="raCBUgFles" name="Fleshette Spray" abbrev="Fleshette Spray"/>
    <eval phase="Final" priority="1000"><![CDATA[
doneif (tagis[Value.?] = 0)

var num as number
num = tagvalue[Value.?]

field[sbName].text = num & " " & lowercase(field[name].text)]]></eval>
    </thing>
  <thing id="raCBUgInfB" name="Infected Blood" description="A creature that damages an ugothokra with a slashing or piercing melee weapon (regardless of how often the ugothokra is damaged) must succeed at a DC 20 Reflex saving throw at the end of its turn or be sprayed by the ugothokra’s infected blood. A creature that damages an ugothokra with a slashing or piercing natural weapon automatically fails this saving throw. On a failed saving throw, the creature is exposed to a random viral infection (see below), but gains a +4 bonus on the Fortitude save to resist contracting whatever disease it is exposed to. Unlike when a victim contracts an infection from an ugothokra’s flechette spray, diseases caught via contact with the monster’s blood have normal onset times as determined by the disease in question. The Reflex save is Dexterity-based." compset="RaceSpec" summary="Foes using slashing or piercing weapon exposed to random viral infection.">
    <usesource source="PathIronGo"/>
    <tag group="SpecType" tag="Defense"/>
    <tag group="AbilType" tag="Extra"/>
    <tag group="Helper" tag="ShowSpec"/>
    <tag group="StandardDC" tag="aDEX"/>
    <tag group="abSave" tag="RefNeg"/>
    </thing>
  <thing id="raCBUgVira" name="Viral Infection" description="An ugothokra’s body is infested with numerous potent and highly infectious diseases engineered by their Dominion creators to cause highly specific conditions in those they infect. An ugothokra’s blood carries these diseases, and while the creature can transmit random infections by means of contact with its blood, the most efficient method of transmission is via its flechette spray. Most ugothokras carry the following three contagions in their systems, and they can decide which one to inflict on a target as part of the act of firing a flechette spray—it can even inflict different diseases with different sprays in the same round if it so chooses. Some ugothokras carry additional viral infections that are tailored by their Dominion creators for incredibly specialized tasks. A creature exposed to any of these viral infections can resist the infection with a successful DC 19 Fortitude save, but on a failed save, the effect occurs immediately and the onset time is ignored. Contracting an infection via the ugothokra’s blood is not as efficient and uses the listed onset time." compset="RaceSpec" summary="Infested with three different diseases">
    <usesource source="PathIronGo"/>
    <tag group="Hide" tag="Statblock"/>
    <tag group="AbilType" tag="Super"/>
    <tag group="Helper" tag="ShowSpec"/>
    <bootstrap thing="cfgCBViral"></bootstrap>
    </thing>
  <thing id="cfgCBViral" name="Viral Infection" compset="Configure" uniqueness="unique">
    <fieldval field="cfgMax1" value="3"/>
    <fieldval field="cfgAllow1" value="component.Hazard &amp; Hazard.Disease"/>
    <fieldval field="cfgObject1" value="Diseases"/>
    <usesource source="PathIronGo"/>
    <eval phase="Final"><![CDATA[
~ make sure our selections are not shown on statblock
foreach pick in hero from Hazard where "CustTaken.cfgCBViral"
  perform eachpick.assign[Hide.Statblock]
nexteach]]></eval>
    </thing>
  <thing id="hzCBAkloSu" name="Aklo Submission" description="As long as a creature is infected with this disease (even if the creature isn’t currently suffering any Wisdom drain from the disease), it becomes unusually compliant and responsive to commands issued to it in Aklo. Any Bluff, Diplomacy, or Intimidate check attempted against the character while speaking in Aklo gains a +4 bonus. Furthermore, as a full-round action, any creature can issue a command to the victim in Aklo to attempt to affect the victim with a suggestion effect (effective CL 5th, regardless of the commander’s level)—the victim can resist this suggestion with a successful DC 14 Will save. Once a victim of Aklo submission succeeds at a Will save to resist such a suggestion, it can’t be further affected in this way by any Aklo-speaking creature for 24 hours" compset="Hazard" uniqueness="useronce">
    <fieldval field="hzPriNmD1" value="1"/>
    <fieldval field="hzPriDie1" value="2"/>
    <fieldval field="hzCureNum" value="2"/>
    <usesource source="PathIronGo"/>
    <tag group="PoisonCat" tag="Injury"/>
    <tag group="SpecType" tag="Attack"/>
    <tag group="StandardDC" tag="aCON"/>
    <tag group="HazSave" tag="Fort"/>
    <tag group="PoisOnset" tag="Days"/>
    <tag group="PoisLasts" tag="Days"/>
    <tag group="Helper" tag="ShowSpec"/>
    <tag group="PoiDamTyp1" tag="Drain"/>
    <tag group="PoisonAttr" tag="aWIS"/>
    <tag group="Hazard" tag="Disease"/>
    <tag group="Helper" tag="NoPathSoc"/>
    <tag group="PoisonCat" tag="Contact"/>
    <tag group="HazNameSum" tag="Type"/>
    <tag group="HazNameTar" tag="Name"/>
    <tag group="HazHelper" tag="NameChange"/>
    </thing>
  <thing id="hzCBFleshR" name="Flesh Ripen Fever" description="A character suffering from flesh ripen fever exudes a nauseating stench as his skin decays and sloughs off, leaving behind reeking pits of stinking flesh. The victim is automatically sickened by its own smell, as are all creatures within a 10-foot radius. A successful DC 14 Fortitude save allows a creature to ignore the sickening effect for 24 hours—the victim of flesh ripen fever doesn’t get such a saving throw to avoid being sickened. This stench is a poison effect that doesn’t affect creatures associated with the Dominion of the Black." compset="Hazard" uniqueness="useronce">
    <fieldval field="hzOnsetDie" value="4"/>
    <fieldval field="hzPriNmD1" value="1"/>
    <fieldval field="hzPriDie1" value="3"/>
    <fieldval field="hzPriTxt1" value=" plus stench"/>
    <fieldval field="hzCureNum" value="2"/>
    <usesource source="PathIronGo"/>
    <tag group="HazSave" tag="Fort"/>
    <tag group="StandardDC" tag="aCON"/>
    <tag group="Helper" tag="ShowSpec"/>
    <tag group="PoisOnset" tag="Days"/>
    <tag group="PoisLasts" tag="Days"/>
    <tag group="Hazard" tag="Disease"/>
    <tag group="PoiDamTyp1" tag="Damage"/>
    <tag group="PoisonAttr" tag="aCON"/>
    <tag group="SpecType" tag="Attack"/>
    <tag group="PoisonCat" tag="Contact"/>
    <tag group="PoisonCat" tag="Injury"/>
    <tag group="Helper" tag="NoPathSoc"/>
    <tag group="HazNameSum" tag="Type"/>
    <tag group="HazNameTar" tag="Name"/>
    <tag group="HazHelper" tag="NameChange"/>
    </thing>
  <thing id="hzCBImpRej" name="Implant Rejection Syndrome" description="This insidious sickness is particularly devastating to creatures with cybernetic implants. Such creatures take a –2 penalty on all saving throws attempted to resist this disease. Further, each time a saving throw to resist its effect is attempted and failed, the creature takes 2d6 points of damage and loses the use of one randomly selected cybernetic implant for 24 hours." compset="Hazard" uniqueness="useronce">
    <fieldval field="hzOnsetDie" value="4"/>
    <fieldval field="hzPriNmD1" value="1"/>
    <fieldval field="hzPriDie1" value="2"/>
    <fieldval field="hzPriNmD2" value="1"/>
    <fieldval field="hzPriDie2" value="2"/>
    <fieldval field="hzPriTxt2" value=" plus implant rejection"/>
    <fieldval field="hzCureNum" value="2"/>
    <usesource source="PathIronGo"/>
    <tag group="PoisLasts" tag="Days"/>
    <tag group="Hazard" tag="Disease"/>
    <tag group="PoisonCat" tag="Contact"/>
    <tag group="PoiDamTyp1" tag="Drain"/>
    <tag group="PoisonAttr" tag="aCON"/>
    <tag group="HazPriConj" tag="and"/>
    <tag group="PoisonCat" tag="Injury"/>
    <tag group="SpecType" tag="Attack"/>
    <tag group="PoiDamTyp2" tag="Drain"/>
    <tag group="PoisAttr2" tag="aINT"/>
    <tag group="HazSave" tag="Fort"/>
    <tag group="Helper" tag="ShowSpec"/>
    <tag group="PoisOnset" tag="Days"/>
    <tag group="Helper" tag="NoPathSoc"/>
    <tag group="HazNameSum" tag="Type"/>
    <tag group="HazNameTar" tag="Name"/>
    <tag group="HazHelper" tag="NameChange"/>
    <tag group="StandardDC" tag="aCON"/>
    </thing>
  <thing id="rCBYahThel" name="Yah-thelgaad" description="When a neh-thalggu has absorbed a critical mass of thoughts and memories from an unknown number of humanoid brains, its body undergoes a horrific transformation. The creature enters a state of torpor, its body curling into a tight ball as it consumes the oldest of its seven stored brains to trigger the metamorphosis. Over the course of several days of self-consumption, the neh-thalggu bursts from the shell of its old body into its new incarnation as a yah-thelgaad.\n\nWhile the yah-thelgaad shares many of the features of its less powerful progenitor, it is in every way a more powerful creature than it was before. While the capacity to store one fewer brain than a neh-thalggu presents some disadvantage, the yah-thelgaad gains twice as much power from a collected brain as its lesser kin does. In addition, these creatures need not limit their harvest to the brains of humanoids—any Small or Medium creature’s brain will do.\n\nYah-thelgaads are zealously devoted to the inscrutable causes of the Dominion of the Black, but they are also notoriously devout believers in that alliance’s weird theology, worshiping a concept they refer to as the “Ineffable Void,” among other cryptic mysteries. It is not uncommon for yahthelgaads of high rank to also possess inquisitor or oracle levels, lording their authority and fanatical faith over those in their charge—the most powerful yah-thelgaads often take levels in mystic theurge to combine their class-based mastery of the divine with their stolen brains’ arcane lore.\n\nYah-thelgaads often supervise the Dominion of the Black’s surgical and genetic engineers on major projects, pushing those agents to attempt greater and more horrific procedures. For all their legendary cruelty, however, yah-thelgaads don’t appear to gain pleasure from such experiments. Indeed, they don’t seem to feel any emotions at all on their own, but rather experience such sensations vicariously through the memories of the brains they’ve collected. In this way, the creatures know lust, fear, hatred, and pride without exposing their own minds to the disadvantages of being susceptible to mind-affecting effects." compset="Race">
    <fieldval field="rHitDice" value="16"/>
    <fieldval field="rHPStart" value="72"/>
    <fieldval field="rSTR" value="22"/>
    <fieldval field="rDEX" value="8"/>
    <fieldval field="rCON" value="16"/>
    <fieldval field="rINT" value="13"/>
    <fieldval field="rWIS" value="15"/>
    <fieldval field="rCHA" value="11"/>
    <fieldval field="rSpeed" value="20"/>
    <fieldval field="rFeat" value="-8"/>
    <fieldval field="rAC" value="5"/>
    <fieldval field="rCR" value="14"/>
    <fieldval field="rLangBonus" value="-6"/>
    <fieldval field="rDescript" value="A writhing forest of tendrils extends from one end of this chitin-covered creature’s body, while from the other lashes a pincer-tipped tail. Six transparent blisters adorn its back, each containing a brain floating in thick green f luid."/>
    <fieldval field="rEnviron" value="any"/>
    <fieldval field="rOrgan" value="solitary"/>
    <fieldval field="rTreasure" value="double"/>
    <fieldval field="rSpace" value="10"/>
    <fieldval field="rReach" value="10"/>
    <fieldval field="cMagicLev" value="12"/>
    <usesource source="PathIronGo"/>
    <tag group="HasType" tag="tpAberr"/>
    <tag group="RaceType" tag="NPC"/>
    <tag group="RaceSize" tag="Large1"/>
    <tag group="Hero" tag="NoDefComm"/>
    <tag group="Helper" tag="Quadruped"/>
    <tag group="Alignment" tag="Chaotic"/>
    <tag group="Alignment" tag="Evil"/>
    <tag group="SplLookup" tag="cHelpSor"/>
    <bootstrap thing="lProtean"></bootstrap>
    <bootstrap thing="lUndercomm"></bootstrap>
    <bootstrap thing="fVitStr"></bootstrap>
    <bootstrap thing="xFly">
      <autotag group="Maneuver" tag="Perfect"/>
      <autotag group="Value" tag="40"/>
      </bootstrap>
    <bootstrap thing="fArcStrike"></bootstrap>
    <bootstrap thing="fComCast"></bootstrap>
    <bootstrap thing="fComExpert"></bootstrap>
    <bootstrap thing="fEschewMat">
      <autotag group="thing" tag="skipprereq"/>
      </bootstrap>
    <bootstrap thing="spDiagDis1">
      <autotag group="Helper" tag="SpellLike"/>
      <autotag group="Usage" tag="Constant"/>
      <autotag group="SpecType" tag="Sense"/>
      </bootstrap>
    <bootstrap thing="spTrueSee6">
      <autotag group="Helper" tag="SpellLike"/>
      <autotag group="Usage" tag="Constant"/>
      <autotag group="SpecType" tag="Sense"/>
      </bootstrap>
    <bootstrap thing="xDamRdAdam">
      <autotag group="Value" tag="10"/>
      </bootstrap>
    <bootstrap thing="xDamRdMag">
      <autotag group="Value" tag="10"/>
      </bootstrap>
    <bootstrap thing="xDamRsCold">
      <autotag group="Value" tag="10"/>
      </bootstrap>
    <bootstrap thing="xDamRsFire">
      <autotag group="Value" tag="10"/>
      </bootstrap>
    <bootstrap thing="xSplRs">
      <autotag group="Value" tag="25"/>
      </bootstrap>
    <bootstrap thing="xImmDis"></bootstrap>
    <bootstrap thing="xImmMind"></bootstrap>
    <bootstrap thing="xTelepathy">
      <autotag group="Value" tag="100"/>
      </bootstrap>
    <bootstrap thing="skKnowArca"></bootstrap>
    <bootstrap thing="skKnowEng"></bootstrap>
    <bootstrap thing="skKnowGeog"></bootstrap>
    <bootstrap thing="skKnowPlan"></bootstrap>
    <bootstrap thing="fGrtSpFoc">
      <autotag group="Target" tag="ssNecro"/>
      </bootstrap>
    <bootstrap thing="fImpInit"></bootstrap>
    <bootstrap thing="lAbyssal"></bootstrap>
    <bootstrap thing="fSpellFoc">
      <autotag group="Target" tag="ssNecro"/>
      </bootstrap>
    <bootstrap thing="lCommon"></bootstrap>
    <bootstrap thing="lDraconic"></bootstrap>
    <bootstrap thing="fLightRef"></bootstrap>
    <bootstrap thing="lInfernal"></bootstrap>
    <bootstrap thing="raCBYTBraC"></bootstrap>
    <bootstrap thing="raCBYTCara"></bootstrap>
    <bootstrap thing="raCBYTCmdD"></bootstrap>
    <bootstrap thing="raCBYTMndS"></bootstrap>
    <bootstrap thing="hzCBYTPois">
      <autotag group="Target" tag="wClaw"/>
      </bootstrap>
    <bootstrap thing="wClaw">
      <autotag group="wMain" tag="3d6_8"/>
      <autotag group="Value" tag="1"/>
      </bootstrap>
    <bootstrap thing="wTentacle">
      <autotag group="wMain" tag="1d8_6"/>
      <autotag group="Value" tag="2"/>
      <autotag group="Target" tag="wClaw"/>
      </bootstrap>
    <bootstrap thing="raGrab">
      <autotag group="Target" tag="wTentacle"/>
      </bootstrap>
    <bootstrap thing="raCBYTPowT"></bootstrap>
    <bootstrap thing="raCBYTSplS"></bootstrap>
    <bootstrap thing="raCBYTStgK"></bootstrap>
    <eval phase="PreLevel" priority="4010">hero.child[manTrip].field[manCMD].value += 8

#skillinnate[skBluff] += 16
#skillinnate[skDiplo] += 8
#skillinnate[skFly] += 8
#skillinnate[skIntim] += 16
#skillinnate[skKnowArca] += 16
#skillinnate[skKnowEng] += 16
#skillinnate[skKnowGeog] += 16
#skillinnate[skKnowPlan] += 16
#skillinnate[skPercep] += 16
#skillinnate[skSpellcr] += 16
#skillinnate[skUseMagic] += 16</eval>
    </thing>
  <thing id="raCBYTBraC" name="Brain Collection" description="A yah-thelgaad can store up to six brains of Small or Medium creatures and use them to enhance its knowledge and power. Each stored brain grants a yah-thelgaad a cumulative +2 insight bonus to AC, concentration checks, and Knowledge checks. A yah-thelgaad can extract a brain from a helpless opponent with a coup de grace attack, or as a standard action from a body that has been dead for no more than 1 minute. A yah-thelgaad that has fewer than six collected brains gains two negative levels for each missing brain. These negative levels never become permanent, and can only be removed by replacing one of the yah-thelgaad’s collected brains. The statistics presented here assume a yah-thelgaad with a full collection." compset="RaceSpec">
    <fieldval field="actUser" value="6"/>
    <fieldval field="actUserMin" value="0"/>
    <fieldval field="actUserMax" value="6"/>
    <tag group="Helper" tag="ShowSpec"/>
    <tag group="abAction" tag="Standard"/>
    <tag group="Helper" tag="UserAdjust" name="UserAdjust" abbrev="UserAdjust"/>
    <eval phase="First" priority="1000">~ we get a negative level for every brain below 6
      field[abValue2].value += 6 - field[actUser].value

      herofield[tNegLevel].value += (field[abValue2].value * 2)

      ~ we reduce our caster level by the same
      root.field[cCasterLev].value -= (field[abValue2].value * 2)</eval>
    <eval phase="PreLevel" priority="10000" index="2">~ we get bonuses to our concentration checks, knowledge checks and AC
      field[abValue].value += field[actUser].value * 2

      #applybonus[BonInsight, hero.child[ArmorClass], field[abValue].value]

      ~ reminder: this should be an insight bonus
      herofield[tConcCheck].value += field[abValue].value

      #applybonus[BonInsight, hero.child[AllKnow], field[abValue].value]
      <before name="Calc cConcCheck"/>
      </eval>
    </thing>
  <thing id="raCBYTCara" name="Carapace" description="The spikes on a yah-thelgaad’s carapace make melee attacks against it hazardous. Any opponent attempting to attack a yah-thelgaad with a light weapon, unarmed strike, touch attack, or natural attack must succeed at a DC 22 Reflex save or take 1d6 points of bleed damage from these bristling barbs. Bleed damage from multiple failed Reflex saves does not stack. The save DC is\nDexterity-based." compset="RaceSpec" summary="Foes attacking with light weapons, natural attacks, or touch attacks take 1d6 bleed damage.">
    <usesource source="PathIronGo"/>
    <tag group="SpecType" tag="Defense"/>
    <tag group="Helper" tag="ShowSpec"/>
    <tag group="StandardDC" tag="aDEX"/>
    <tag group="abSave" tag="RefNeg"/>
    </thing>
  <thing id="raCBYTCmdD" name="Command Disease" description="As a swift action, a yah-thelgaad can cause a disease or infection currently afflicting a creature within 30 feet to quicken and activate, forcing the afflicted creature to immediately attempt a saving throw against the disease’s effects. Those who fail immediately suffer the disease’s effects. These additional saving throws count against those one must succeed at to recover from a disease, so it’s possible for a victim to be cured by succeeding at enough saving throws. Any creature that has been affected by a yah-thelgaad’s command disease ability (whether or not the creature succeeded at the saving throw this ability triggered) takes a –2 penalty against any mind-affecting spell or effect generated by the yah-thelgaad in the next minute." compset="RaceSpec" summary="Quicken or activate disease afflicting creature within 30 ft.">
    <fieldval field="abRange" value="30"/>
    <usesource source="PathIronGo"/>
    <tag group="Helper" tag="ShowSpec"/>
    <tag group="abRange" tag="Feet"/>
    <tag group="SpecType" tag="Attack"/>
    <tag group="AbilType" tag="Super"/>
    <tag group="abAction" tag="Swift"/>
    </thing>
  <thing id="raCBYTMndS" name="Mind Storm" description="As a standard action once every 1d4 rounds, a yah-thelgaad can employ its own brain as well as any brains kept in its blisters to create a powerful psychic vortex. When the creature activates this ability, all creatures within a 40-foot radius must succeed at DC 23 Will save or become confused for 1d4 rounds. When a yahthelgaad activates this ability, it can choose to absorb one of its brains as a swift action to cause one creature within the area of effect that has succumbed to the confusion effect to instead become stunned for 1d4 rounds. A creature stunned in this manner is confused for 1d4 rounds after the stun effect ends. A yah-thelgaad generally saves this tactic for when it’s faced with a particularly dangerous foe, since the stun effect forces the yah-thelgaad to lose one of its stored brains and gain 2 negative levels. This is a mind-affecting confusion effect. The save DC is Charisma-based." compset="RaceSpec" summary="Psychic vortex confuses or stuns foes for 1d4 rounds.">
    <fieldval field="abRange" value="40"/>
    <fieldval field="trkMax" value="1"/>
    <usesource source="PathIronGo"/>
    <tag group="abRange" tag="Feet"/>
    <tag group="StandardDC" tag="aCHA"/>
    <tag group="abSave" tag="WillNeg"/>
    <tag group="SpecType" tag="Attack"/>
    <tag group="User" tag="Tracker"/>
    <tag group="abAction" tag="Standard"/>
    <tag group="Usage" tag="OneDFourRd"/>
    <tag group="Helper" tag="ShowSpec"/>
    </thing>
  <thing id="hzCBYTPois" name="Yah-thelgaad Poison" compset="Hazard" uniqueness="useronce">
    <fieldval field="abDuration" value="6"/>
    <fieldval field="hzPriNmD1" value="1"/>
    <fieldval field="hzPriDie1" value="4"/>
    <fieldval field="hzPriTxt2" value=" for 1 round"/>
    <fieldval field="hzCureNum" value="2"/>
    <usesource source="PathIronGo"/>
    <tag group="HazSave" tag="Fort"/>
    <tag group="HazHelper" tag="NoOnset"/>
    <tag group="PoisLasts" tag="Rounds"/>
    <tag group="Helper" tag="ShowSpec"/>
    <tag group="PoisLasts2" tag="Rounds"/>
    <tag group="HazHelper" tag="NameChange"/>
    <tag group="Hazard" tag="Poison"/>
    <tag group="PoiDamTyp1" tag="Damage"/>
    <tag group="PoisonAttr" tag="aSTR"/>
    <tag group="HazPriConj" tag="and"/>
    <tag group="PoiDamTyp2" tag="Nausea"/>
    <tag group="PoisonCat" tag="Injury"/>
    <tag group="PrimTime2" tag="Rounds"/>
    <tag group="Hide" tag="Statblock"/>
    <tag group="StandardDC" tag="aCON"/>
    <tag group="Helper" tag="NoPathSoc"/>
    </thing>
  <thing id="raCBYTPowT" name="Powerful Tentacles" description="A yah-thelgaad’s tentacles are primary attacks." compset="RaceSpec">
    <tag group="Helper" tag="ShowSpec"/>
    <tag group="AbilType" tag="Extra"/>
    <tag group="SpecType" tag="Attack"/>
    <eval phase="First" priority="200">perform hero.childfound[wTentacle].assign[Helper.NatPrimary]</eval>
    </thing>
  <thing id="raCBYTSplS" name="Spellstrike" description="Whenever a yah-thelgaad casts a spell with a range of “touch,” it can deliver the spell through its claw attack as part of a melee attack. Instead of the free melee touch attack normally allowed to deliver the spell, the yah-thelgaad can make one free melee attack with its claw as part of casting the spell. If successful, this claw attack deals its normal damage (including poison) as well as the effects of the spell." compset="RaceSpec" summary="Deliver spells with range of &quot;touch&quot; through claw gaining a free claw attack.">
    <usesource source="PathIronGo"/>
    <tag group="SpecType" tag="Attack"/>
    <tag group="AbilType" tag="Super"/>
    <tag group="Helper" tag="ShowSpec"/>
    </thing>
  <thing id="raCBYTStgK" name="Strange Knowledge" description="All knowledge skills are class skills for yah-thelgaads." compset="RaceSpec">
    <tag group="Helper" tag="ShowSpec"/>
    <tag group="AbilType" tag="Extra"/>
    <eval phase="First" priority="500"><![CDATA[
foreach pick in hero from BaseSkill where "Helper.SkCatKnow"
  perform eachpick.assign[Helper.ClassSkill]
nexteach]]></eval>
    </thing>
  <thing id="rCBCasanda" name="Casandalee" description="Divinity carried many people on its intergalactic voyage, among them a significant number of androids. Many of these were kept in storage within vast banks of stasis pods, waiting to be awakened for use as explorers on various worlds. When Divinity crashed during the Rain of Stars, the ship jettisoned these pods across Numeria, and most made relatively intact landings. It was from these pods that the vast majority of the androids that exist on Golarion today originally hailed. As the centuries turned into millennia, more and more of these original androids met violent ends, but some lived to the end of their natural lifespan and achieved renewal, “reincarnating” with a new personality and new soul after their previous life came to its end.\n\nIn the case of Casandalee, a strange fluke of fate saw the wakening of fragments of her previous lives within her newest incarnation. She could never quite recall the details of the 112 different lives her body had hosted over those years, but the distant memories convinced her that she was more than one person with one soul. Furthermore, all of those memories pointed to her “birth” in Numeria.\n\nYet her body’s travels through the centuries were not restricted to Numeria, and when she renewed as Casandalee, she did so in a monastery devoted to Brigh located in the Mana Wastes near Alkenstar. The fact that she retained so many memories of her previous life complicated her maturity, and she took a decade to come to terms with herself. During this time, she grew in power as an oracle of ancestors, and grew to accept her shattered psyche curse (see sidebar). Her time among the priests of Brigh came to an end when she received a strange vision—one that would change her life forever and bring to an end her line of renewal.\n\nIn this vision, Casandalee gazed upon Silver Mount, saw among its spires a welcoming glow, and felt in the ground below a soothing hum. She became convinced that Silver Mount was not merely a ruin or a geological feature, but the heart and brain of a great “Iron God.” She recalled her first life’s earliest memories of a landscape scattered with ruins, of gazing in that first life upon Silver Mount’s still-smoking hull before fleeing, and knew that whatever dwelt within the ruins of the great ship lingered there still—that in the time since her 112 lives had come and gone, a single life had been waiting and growing within Silver Mount.\n\nCasandalee left Alkenstar the day after her vision without so much as a goodbye to the priests who had protected her. To the android, the revelation that something tied to her past lives dwelt within Silver Mount was more important, and she knew the priests of Brigh wouldn’t understand. It was not an act of malice, per se, but more just a logical reaction to an illogical event. Details on Casandalee’s pilgrimage to Silver Mount, her time with Unity, and her eventual rejection of her new god are presented in the Adventure Background on page 7.\n\nYears later, on the run from Unity after her discovery of the Iron God’s true desires, she had time to consider the choice that led her to her fate, yet even then, Casandalee didn’t weep for her errors. The eventual realization within the wreckage of the Aurora, where Unity’s robots finally cornered her, that her 113th life would be the last of her lives was the point she finally admitted to herself that she’d made a mistake. To Casandalee, the feeling of honest regret and despair seemed a fitting triumph of sorts after so many lives lived without emotion." compset="Race" uniqueness="unique">
    <fieldval field="rINT" value="6"/>
    <fieldval field="rWIS" value="2"/>
    <fieldval field="rCHA" value="10"/>
    <fieldval field="rHitDice" value="12"/>
    <fieldval field="rCR" value="12"/>
    <fieldval field="rLangBonus" value="-3"/>
    <fieldval field="rFeat" value="-6"/>
    <usesource source="PathIronGo"/>
    <tag group="RaceType" tag="NPC"/>
    <tag group="Hero" tag="NoDefComm"/>
    <tag group="RaceSize" tag="Medium0"/>
    <tag group="Helper" tag="NoPathSoc"/>
    <tag group="Alignment" tag="NeutralLC"/>
    <tag group="Alignment" tag="NeutralGE"/>
    <tag group="HasType" tag="tpCBArtInt"/>
    <tag group="ClassSkill" tag="skDisable"/>
    <tag group="ClassSkill" tag="skKnowEng"/>
    <tag group="ClassSkill" tag="skKnowRel"/>
    <tag group="ClassSkill" tag="skPercep"/>
    <tag group="ClassSkill" tag="skSenseMot"/>
    <bootstrap thing="fImpIronWi"></bootstrap>
    <bootstrap thing="fIronWill"></bootstrap>
    <bootstrap thing="fAlertness"></bootstrap>
    <bootstrap thing="fSkillFoc">
      <autotag group="Target" tag="skKnowEng"/>
      </bootstrap>
    <bootstrap thing="lAklo"></bootstrap>
    <bootstrap thing="fSkillFoc">
      <autotag group="Target" tag="skSenseMot"/>
      </bootstrap>
    <bootstrap thing="fTechnolog"></bootstrap>
    <bootstrap thing="skKnowArca"></bootstrap>
    <bootstrap thing="skKnowEng"></bootstrap>
    <bootstrap thing="skKnowRel"></bootstrap>
    <bootstrap thing="fImpInit"></bootstrap>
    <bootstrap thing="lCommon"></bootstrap>
    <bootstrap thing="lPFHallit"></bootstrap>
    <bootstrap thing="raCBCasDRb"></bootstrap>
    <bootstrap thing="raCBCasElI"></bootstrap>
    <eval phase="Final" priority="1000">perform hero.child[skDisable].assign[Helper.HasTools]</eval>
    </thing>
  <thing id="raCBCasDRb" name="Distrust of Robots" description="Casandalee distrusts robots. She understands this is an illogical, almost emotional trait, but cannot bring herself to ever completely trust a robot to not harbor deep programing or other influences from Unity. Future events in the Iron Gods Adventure Path may give the PCs a chance to help Casandalee remove this disadvantage, but until that point, she cannot interface with a robot of CR 8 or higher to create an aggregate robot (Pathfinder Campaign Setting: Technology Guide 59). In any event, Casandalee can control only one aggregate robot at a time, and it must remain within 60 feet of her AI core." compset="RaceSpec">
    <tag group="Helper" tag="ShowSpec"/>
    <tag group="SpecType" tag="Weakness"/>
    </thing>
  <thing id="raCBCasElI" name="Electronic Interface" description="Casandalee has an intricate understanding of electronics, and her ability to interface with them via wireless protocol (to a maximum range of 60 feet) allows her to use Disable Device on electronic objects. She can always take 10 on a Disable Device check, and when she does so she rolls a d20 as well. If the die roll exceeds 10, she uses that result instead. Casandalee can aid another’s Disable Device check against electronic devices, and if she does so, she automatically grants a +4 bonus on the check." compset="RaceSpec">
    <usesource source="PathIronGo"/>
    <tag group="AbilType" tag="Extra"/>
    <tag group="Helper" tag="ShowSpec"/>
    </thing>
  </document>
