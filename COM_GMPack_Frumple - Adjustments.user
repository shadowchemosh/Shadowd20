<?xml version="1.0" encoding="UTF-8"?>
<document signature="Hero Lab Data">
  <loadonce key="COM_GMPack_Frumple - Adjustments"/>
  <fileinfo>
    <info_author>Jeffrey Hersh jeffrey.m.hersh@gmail.com</info_author>
    <info_history><![CDATA[
      January 31, 2015 - Tim Shadow
      -Removed the Protection From Energy adjustment thingid.pProtEnerg as a one was officially added in Pathfinder 10.13.

      Oct 30, 2014 - Jeff Hersh
      Added the following:
      id="pCBAbilAct" name="Ability: Activate"
      id="pCBFastHea" name="Fast Healing (adjust)"

      May 21, 2014 - Tim Shadow
      -Merged in the following from Frumple's Adjustment file v2.20.
      id="puSplLkDay" name="Spell-Like Ability (per day)"
      id="puAbilForc" name="Ability Score (Forced)"
      id="pCBFlyManu" name="Flight Maneuverability"
      id="sCBFlyPoor" name="Poor"
      id="sCBFlyGood" name="Good"
      id="sCBFlyAver" name="Average"
      id="sCBFlyPerf" name="Perfect"
      id="sCBFlyClum" name="Clumsy"
      id="pCBRmClssk" name="Class Skill, Remove"
      id="pCBSnkAtk" name="Race Ability, Sneak Attack"
      id="pCBProfGif" name="Profane Gift"
      id="pCBEvasion" name="Evasion"
      id="pCBRemSpd" name="Speed, Remove"


      December 28, 2013 - Tim Shadow
      -Removed "pTransform" adjustment as it was officially added in Pathfinder v8.5.

      August 11, 2013 - Tim Shadow
      -Merged in "xCBDmRdCdM" which is an id change from "xDamRdCldM". Problem is DR's are attached to all characters and I don't feel like breaking every single .por file ever made against the CB.
      -"Racial Caster Level" fixed so that it does not through errors. After using setfocus one must check for doneif (state.isfocus = 0) or if a massive error can get thrown.
      -"Number of Attacks" moved over to my adjustments file and name changed to "Natural Weapons: Number of Attacks".


      June 4, 2013 - Tim Shadow
      -Removed "pACNatural" Armor Class: Natural as it was added officially with the exact name Unqiue ID and we clashed against pathfinder v7.13.

      May 13, 2013 - Tim Shadow
      -Merged over id="puTotSpeed" name="Speed, Total" and id="puBtQuadru" name="Body Type: Quadruped".

      March 17, 2013 - Tim Shadow
      -Moved out the Elven Chain to the new PFRPG_PlayerPack_equipment.user file as I found we had mulitple copies of Elven Chain in the data set.
      -Moved over all the Adjustments from the "PFRPG_Bestiary_UniversialAbilities.user" file as it was causing me issues with the Player Pack migration.

      March 12, 2013 - Tim Storen
      -Moved thingid.puRmClsSk "Remove Class Skill" over to my "Shadow" adjustments file so that lots of people can get access to it. Updated the .por files that used this adjustment.  Also renamed it to "Class Skill, Remove" to match HL naming convetions.

      March 6, 2013 - Tim Storen
      -Merged in "Remove Class Skill"
      -Moved thingid.puRmClsSk "Remove Class Skill" over to my "Shadow" adjustments file so that lots of people can get access to it.

      Feb 2, 2013 - Tim Storen
      -Fixed Transformation bug that came back again. 
      -Added Conditions to Transformation's Feats that are bootstraped so when the ability is turned off the feats go away.
      -Added the Product ID of HL Community to all over Adjustments.

      Nov 24, 2012 - Jeff Hersh
      Fixed Transformation bug.

      June 18, 2012 - Jeff Hersh
      Added DR x/cold iron or magic

      June 4, 2012 - Jeff Hersh
      Added Regneration
      Added Increase Damage Die
      Added Natural AC adjustment

      Mar 30, 2012 - Jeff Hersh
      Added adjustment for transformation spell

      feb 20, 2012 - Jeff Hersh
      Added adjustments for channel resistance and BAB

      Feb 12, 2012 - Jeff Hersh
      Added Jump and Fast Healing adjustments

      Feb 8, 2012 - Jeff Hersh
      Added a base weapon for improvised weapons with 1d4 damage
      Added goodberry as a wondrous item (for goodberry spell)

      Feb 5, 2012 - Tim Shadow
      -Created this file from "PFRPG_Frumple_bonuses.user".
      -Added in just the Adjustments stuff.]]></info_history>
    </fileinfo>
  <thing id="sCBFlyPoor" name="Poor" description="Poor maneuverability." compset="Simple">
    <usesource source="srcCoBeAdj"/>
    <tag group="AdjManeuv" tag="Selector"/>
    <tag group="Maneuver" tag="Poor"/>
    </thing>
  <thing id="sCBFlyGood" name="Good" description="Good maneuverability." compset="Simple">
    <usesource source="srcCoBeAdj"/>
    <tag group="AdjManeuv" tag="Selector"/>
    <tag group="Maneuver" tag="Good"/>
    </thing>
  <thing id="sCBFlyAver" name="Average" description="Average maneuverability." compset="Simple">
    <usesource source="srcCoBeAdj"/>
    <tag group="Maneuver" tag="Average"/>
    <tag group="AdjManeuv" tag="Selector"/>
    </thing>
  <thing id="sCBFlyPerf" name="Perfect" description="Perfect Maneuverability" compset="Simple">
    <usesource source="srcCoBeAdj"/>
    <tag group="AdjManeuv" tag="Selector"/>
    <tag group="Maneuver" tag="Perfect"/>
    </thing>
  <thing id="sCBFlyClum" name="Clumsy" description="Clumsy maneuverability." compset="Simple">
    <usesource source="srcCoBeAdj"/>
    <tag group="Maneuver" tag="Clumsy"/>
    <tag group="AdjManeuv" tag="Selector"/>
    </thing>
  <thing id="puInsParan" name="Insanity: Paranoia" description="{b}Type{/b} insanity; {b}Save{/b} Will DC 17\n{b}Onset{/b} 2d6 days\n{b}Effect{/b} -4 penalty on Will saves and Charisma-based skill checks; cannot receive benefit from or attempt the Aid Another action; cannot willingly accept aid (including healing) from another creature unless he makes a Will save against his insanity&apos;s DC \n\nThe paranoid character is convinced that the world and all that dwell within it are out to get him. Paranoid characters are typically argumentative or introverted." compset="InPlay">
    <usesource source="srcCoBeAdj"/>
    <tag group="Helper" tag="NoIncr"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <tag group="Helper" tag="AdjConfer"/>
    <tag group="Helper" tag="AdjInfo"/>
    <eval phase="First" priority="10000"><![CDATA[
      ~ If we're not enabled, get out now
      doneif (field[pIsOn].value = 0)

      ~ -4 penalty to Will saves
      #applypenalty[Bonus,hero.child[svWill],-4]

      ~ -4 penalty to all CHA based skills
      foreach pick in hero from BaseSkill
        if (eachpick.tagis[SkillOver.aCHA] <> 0) then
            eachpick.field[Bonus].value -= 4
        elseif (eachpick.islinkage[skillattr] <> 0) then
          if (eachpick.linkage[skillattr].tagis[thingid.aCHA] <> 0) then
             eachpick.field[Bonus].value -= 4
          endif
        endif
      nexteach]]></eval>
    </thing>
  <thing id="puInsAmnes" name="Insanity: Amnesia" description="{b}Type{/b} insanity; {b}Save{/b} Will DC 20\n{b}Onset{/b} immediate\n{b}Effect{/b} -4 penalty on Will saving throws and all skill checks; loss of memory (see below)\n\nA character suffering from amnesia cannot remember things; his name, his skills, and his past are all equal mysteries. He can build new memories, but any memories that existed before he became an amnesiac are suppressed.\n\nWorse, the amnesiac loses all class abilities, feats, and skill ranks for as long as his amnesia lasts. He retains his base attack bonus, base saving throw bonuses, combat maneuver bonus, combat maneuver defense, total experience points, and hit dice (and hit points), but everything else is gone until the amnesia is cured. If a character gains a class level while suffering from amnesia, he may use any abilities gained by that class level normally. If the class level he gained was of a class he already possess levels in, he gains the abilities of a 1st-level character of that class, even though he is technically of a higher level in that class. If his amnesia is later cured, he regains all the full abilities of this class, including those gained from any levels taken while he was suffering from amnesia." compset="InPlay">
    <usesource source="srcCoBeAdj"/>
    <tag group="Helper" tag="NoIncr"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <tag group="Helper" tag="AdjConfer"/>
    <tag group="Helper" tag="AdjInfo"/>
    <eval phase="First" priority="10000"><![CDATA[
      ~ If we're not enabled, get out now
      doneif (field[pIsOn].value = 0)

      ~ -4 penalty to Will saves
      #applypenalty[Bonus,hero.child[svWill],-4]

      foreach pick in hero from BaseSkill
        eachpick.field[Bonus].value -= 4
      nexteach]]></eval>
    </thing>
  <thing id="puInsMani" name="Insanity: Mania" description="{b}Type{/b} insanity; {b}Save{/b} Will DC 14\n{b}Onset{/b} 1 day\n{b}Effect{/b} target is sickened (if manic) or shaken (if phobic) as long as the source of the mania or phobia is obvious; chance of becoming fascinated or frightened (see below)\n\nA mania is an irrational obsession with a (usually inappropriate) particular object or situation, while a phobia is an irrational fear of a (usually commonplace) object or situation. Additionally, if a manic or phobic character is directly confronted by his obsession (requiring a standard action), he must make a Will save against the insanity or become fascinated (if manic) or frightened (if phobic) by the object for 1d6 rounds.\n\n{b}Note:{/b} Player needs to activate the sickened or shaken condition manually." compset="InPlay">
    <usesource source="srcCoBeAdj"/>
    <tag group="Helper" tag="NoIncr"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <tag group="Helper" tag="AdjConfer"/>
    <tag group="Helper" tag="AdjInfo"/>
    </thing>
  <thing id="puInsPhobi" name="Insanity: Phobia" description="{b}Type{/b} insanity; {b}Save{/b} Will DC 14\n{b}Onset{/b} 1 day\n{b}Effect{/b} target is sickened (if manic) or shaken (if phobic) as long as the source of the mania or phobia is obvious; chance of becoming fascinated or frightened (see below)\n\nA mania is an irrational obsession with a (usually inappropriate) particular object or situation, while a phobia is an irrational fear of a (usually commonplace) object or situation. Additionally, if a manic or phobic character is directly confronted by his obsession (requiring a standard action), he must make a Will save against the insanity or become fascinated (if manic) or frightened (if phobic) by the object for 1d6 rounds.\n\n{b}Note:{/b} Player needs to activate the sickened or shaken condition manually." compset="InPlay">
    <usesource source="srcCoBeAdj"/>
    <tag group="Helper" tag="NoIncr"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <tag group="Helper" tag="AdjConfer"/>
    <tag group="Helper" tag="AdjInfo"/>
    </thing>
  <thing id="puInsMultP" name="Insanity: Multiple Personality Disorder" description="{b}Type{/b} insanity; {b}Save{/b} Will DC 19\n{b}Onset{/b} 2d6 days\n{b}Effect{/b} --6 penalty on Will saving throws and Wisdom-based skill checks; multiple personalities (see below)\n\nThis is a complicated disorder that manifests as 1 or more distinct and different personalities within the same body and mind. The number of additional personalities the victim manifests equals the DC of the insanity divided by 10 (round down, minimum of 1 additional personality). Should the insanity worsen in some way (such as by the save DC increasing), the number of additional personalities increases as well. Likewise, the number of additional personalities decreases as the sufferer recovers and the insanity&apos;s DC decreases. The GM should develop these additional personalities.\n\nEvery morning, and each time the afflicted character is rendered unconscious, he must make a Will save against his insanity&apos;s DC. Failure indicates that a different personality takes over. A character&apos;s memories and skills remain unchanged, but the various personalities have no knowledge of each other and will deny, often violently, that these other personalities exist." compset="InPlay">
    <usesource source="srcCoBeAdj"/>
    <tag group="Helper" tag="NoIncr"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <tag group="Helper" tag="AdjConfer"/>
    <tag group="Helper" tag="AdjInfo"/>
    <eval phase="First" priority="10000"><![CDATA[
      ~ If we're not enabled, get out now
      doneif (field[pIsOn].value = 0)

      ~ -4 penalty to Will saves
      #applypenalty[Bonus,hero.child[svWill],-6]

      ~ -4 penalty to all CHA based skills
      foreach pick in hero from BaseSkill
        if (eachpick.tagis[SkillOver.aWIS] <> 0) then
            eachpick.field[Bonus].value -= 6
        elseif (eachpick.islinkage[skillattr] <> 0) then
          if (eachpick.linkage[skillattr].tagis[thingid.aWIS] <> 0) then
             eachpick.field[Bonus].value -= 6
          endif
        endif
      nexteach]]></eval>
    </thing>
  <thing id="puInsPsych" name="Insanity: Psychosis" description="{b}Type{/b} insanity; {b}Save{/b} Will DC 20\n{b}Onset{/b} 3d6 days\n{b}Effect{/b} character becomes chaotic evil; gains +10 competence bonus on Bluff checks to hide insanity\n\nThis complex insanity fills the victim with hate for the world. He may suppress his psychosis for a period of 1 day by making a Will save against the DC of his insanity, otherwise he cannot help but plot and plan the death and destruction of his friends and enemies alike. For the most part, the impact of psychosis must be roleplayed, although not all players find entertainment in roleplaying a lunatic who&apos;s trying to do in his friends. In such cases, the GM should assume control of the character whenever his psychosis is in control." compset="InPlay">
    <usesource source="srcCoBeAdj"/>
    <tag group="Helper" tag="NoIncr"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <tag group="Helper" tag="AdjConfer"/>
    <tag group="Helper" tag="AdjInfo"/>
    <bootstrap thing="xBonusBluf">
      <assignval field="livename" value="to hide insanity"/>
      <assignval field="abValue" value="10"/>
      </bootstrap>
    </thing>
  <thing id="puInsSchiz" name="Insanity: Schizophrenia" description="{b}Type{/b} insanity; {b}Save{/b} Will DC 16\n{b}Onset{/b} 1d6 days\n{b}Effect{/b} -4 penalty on all Wisdom and Charisma-based skill checks; cannot take 10 or take 20; chance of becoming confused (see below)\n\nA schizophrenic character has lost his grip on reality, and can no longer tell the difference between what is real and what is not. These constant hallucinations cause the schizophrenic to appear erratic, chaotic, and unpredictable to others. Each time a schizophrenic character finds himself in a stressful situation (such as combat) he must make a Will save against his insanity&apos;s DC. Failure indicates that the character becomes confused for 1d6 rounds." compset="InPlay">
    <usesource source="srcCoBeAdj"/>
    <tag group="Helper" tag="NoIncr"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <tag group="Helper" tag="AdjConfer"/>
    <tag group="Helper" tag="AdjInfo"/>
    <eval phase="First" priority="10000"><![CDATA[
      ~ If we're not enabled, get out now
      doneif (field[pIsOn].value = 0)

      ~ -4 penalty to all WIS and CHA based skills
      foreach pick in hero from BaseSkill
        if (eachpick.tagis[SkillOver.aCHA] <> 0) then
            eachpick.field[Bonus].value -= 4
        elseif (eachpick.islinkage[skillattr] <> 0) then
          if (eachpick.linkage[skillattr].tagis[thingid.aCHA] <> 0) then
             eachpick.field[Bonus].value -= 4
          endif
        endif
      nexteach
      foreach pick in hero from BaseSkill
        if (eachpick.tagis[SkillOver.aWIS] <> 0) then
            eachpick.field[Bonus].value -= 4
        elseif (eachpick.islinkage[skillattr] <> 0) then
          if (eachpick.linkage[skillattr].tagis[thingid.aWIS] <> 0) then
             eachpick.field[Bonus].value -= 4
          endif
        endif
      nexteach]]></eval>
    </thing>
  <thing id="puInsHwlNt" name="Insanity: Howl of the North" description="{b}Type{/b} insanity; {b}Save{/b} Will DC 13\n{b}Onset{/b} 2d6 days\n{b}Effect{/b} -4 penalty on Will saves and Wisdom-based skill checks; target is shaken while animals are within sight or hearing (see below)\n\nThis form of insanity has its onset after a character is exposed to polar twilight or polar night for the stated number of days. A character afflicted with howl of the north begins to fear even the tamest beasts, fearing for her safety while simultaneously becoming more animalistic and primitive herself. Whenever a character afflicted with howl of the north sees a creature of the animal type or hears a bestial call (such as a wolf&apos;s howling), she becomes shaken. Characters native to polar regions are immune to this affliction." compset="InPlay">
    <usesource source="srcCoBeAdj"/>
    <tag group="Helper" tag="NoIncr"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <tag group="Helper" tag="AdjConfer"/>
    <tag group="Helper" tag="AdjInfo"/>
    <eval phase="First" priority="10000"><![CDATA[
      ~ If we're not enabled, get out now
      doneif (field[pIsOn].value = 0)

      ~ -4 penalty to Will saves
      #applypenalty[Bonus,hero.child[svWill],-4]

      ~ -4 penalty to all WIS based skills
      foreach pick in hero from BaseSkill
        if (eachpick.tagis[SkillOver.aWIS] <> 0) then
            eachpick.field[Bonus].value -= 4
        elseif (eachpick.islinkage[skillattr] <> 0) then
          if (eachpick.linkage[skillattr].tagis[thingid.aWIS] <> 0) then
             eachpick.field[Bonus].value -= 4
          endif
        endif
      nexteach]]></eval>
    </thing>
  <thing id="puSnkAttc" name="Sneak Attack: Add Dice" description="Add dice to sneak attack." compset="InPlay">
    <usesource source="srcCoBeAdj"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <tag group="OthAdjCat" tag="Race"/>
    <tag group="Helper" tag="AdjInfo"/>
    <eval phase="First"><![CDATA[
      ~ If we're not enabled, get out now
      doneif (field[pIsOn].value = 0)

      ~ if we have sneak attack from a class adjust that 
      if (hero.childexists[cSneakAtt] <> 0) then
        hero.child[cSneakAtt].field[abValue].value += field[pAdjust].value

      ~ else if we have racial sneak attack attack adjust that
      elseif (hero.childexists[raSneakAtt] <> 0) then
        hero.child[raSneakAtt].field[abValue].value += field[pAdjust].value
      endif]]></eval>
    </thing>
  <thing id="xNoUnarmed" name="No Unarmed Strike" description="Hides unarmed strike." compset="RaceSpec">
    <usesource source="srcCoBeAdj"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <eval phase="First">perform hero.childfound[wUnarmed].assign[Hide.Weapon]
      perform hero.child[xNoUnarmed].assign[Hide.Special]</eval>
    </thing>
  <thing id="pCBFastHea" name="Fast Healing (adjust)" description="Adjusts a creature&apos;s fast healing." compset="InPlay">
    <usesource source="srcCoBeAdj"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <tag group="OthAdjCat" tag="Race"/>
    <tag group="Helper" tag="AdjInfo"/>
    <bootstrap thing="xFastHeal"></bootstrap>
    <eval phase="Render" priority="1000"><![CDATA[
      ~ If we're not enabled, get out now
      doneif (field[pIsOn].value = 0)

      hero.child[xFastHeal].field[abValue].value += field[pAdjust].value

      hero.child[xFastHeal].field[abValue].value = maximum(0,hero.child[xFastHeal].field[abValue].value)

      if (hero.child[xFastHeal].field[abValue].value = 0) then
        perform hero.child[xFastHeal].assign[Helper.SpcDisable]
        perform hero.child[xFastHeal].assign[Hide.Special]
      endif]]></eval>
    </thing>
  <thing id="puChannelR" name="Channel Resistance" description="Adjusts channel resistance." compset="InPlay">
    <usesource source="srcCoBeAdj"/>
    <tag group="OthAdjCat" tag="Class"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <eval phase="First" priority="10000"><![CDATA[
      ~ If we're not enabled, get out now
      doneif (field[pIsOn].value = 0)

      var curVal as number
      curVal = hero.childfound[xChanRes].tagvalue[Value.?]
      curVal += field[pAdjust].value

      var valStr as string
      valStr = "Value." & curVal

      perform hero.childfound[xChanRes].delete[Value.?]
      perform hero.childfound[xChanRes].assignstr[valStr]]]></eval>
    </thing>
  <thing id="puRegenera" name="Regeneration" description="Heal HP quickly and cannot die. Use soruce field for specific regeneration conditions." compset="InPlay" summary="Heal HP quickly and cannot die.">
    <fieldval field="pMinimum" value="0"/>
    <usesource source="srcCoBeAdj"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <tag group="OthAdjCat" tag="Race"/>
    <tag group="Helper" tag="AdjNoPlus"/>
    <bootstrap thing="xRegen"></bootstrap>
    <eval phase="Final" priority="1000"><![CDATA[
      ~ If we're not enabled, get out now
      doneif (field[pIsOn].value = 0)

      hero.child[xRegen].field[abValue].value += field[pAdjust].value

      if (compare(field[pSource].text, "(source)") = 0) then
         hero.child[xRegen].field[livename].text = hero.child[xRegen].field[thingname].text
      else
         hero.child[xRegen].field[livename].text = field[pSource].text
      endif]]></eval>
    </thing>
  <thing id="puIncDamDi" name="Increase Damage Die" description="Increase damage die of selected attack." compset="InPlay">
    <usesource source="srcCoBeAdj"/>
    <tag group="Helper" tag="NoIncr"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <tag group="OthAdjCat" tag="Equipment"/>
    <tag group="Adjustment" tag="YourWep"/>
    <eval phase="First"><![CDATA[
      ~ If we're not enabled, get out now
      doneif (field[pIsOn].value = 0)

      perform field[pChosen].chosen.assign[Helper.DamageUp]]]></eval>
    </thing>
  <thing id="puAbilNone" name="Ability Score (None)" description="Removes chosen ability score." compset="InPlay">
    <usesource source="srcCoBeAdj"/>
    <tag group="Helper" tag="NoIncr"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <tag group="OthAdjCat" tag="Attributes"/>
    <tag group="Adjustment" tag="Attribute"/>
    <eval phase="PreAttr" priority="1000"><![CDATA[
      ~ If we're not enabled, get out now
      doneif (field[pIsOn].value = 0)

      ~If no attribute's been chosen, there's nothing we can do
      doneif (field[pChosen].ischosen = 0)

      ~Remove ability score
      perform field[pChosen].chosen.assign[Helper.NoScore]]]></eval>
    </thing>
  <thing id="puIncorpIt" name="Incorporeal Item" description="Reduces its&apos;s weight to 0 for being incorporeal." compset="InPlay">
    <usesource source="srcCoBeAdj"/>
    <tag group="Helper" tag="NoIncr"/>
    <tag group="Helper" tag="AdjNoPlus"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <tag group="OthAdjCat" tag="Equipment"/>
    <tag group="Adjustment" tag="YourGear"/>
    <eval phase="Final"><![CDATA[
      ~ If we're not enabled, get out now
      doneif (field[pIsOn].value = 0)

      field[pChosen].chosen.field[gWeight].value = 0]]></eval>
    </thing>
  <thing id="puSpace" name="Space" description="Adjusts creature&apos;s space." compset="InPlay">
    <usesource source="srcCoBeAdj"/>
    <tag group="OthAdjCat" tag="Race"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <eval phase="PreLevel" priority="10000"><![CDATA[
      ~ If we're not enabled, get out now
      doneif (field[pIsOn].value = 0)

      perform hero.findchild[BaseRace].setfocus
      focus.field[rSpace].value += field[pAdjust].value]]></eval>
    </thing>
  <thing id="puReach" name="Reach" description="Adjusts creature&apos;s reach." compset="InPlay">
    <usesource source="srcCoBeAdj"/>
    <tag group="OthAdjCat" tag="Race"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <eval phase="PreLevel" priority="10000"><![CDATA[
      ~ If we're not enabled, get out now
      doneif (field[pIsOn].value = 0)

      perform hero.findchild[BaseRace].setfocus
      focus.field[rReach].value += field[pAdjust].value]]></eval>
    </thing>
  <thing id="puLdBanVct" name="Wondrous Item: Lord&apos;s Banner of Victory" description="A lord&apos;s banner is a cloth flag or standard, typically at least 2 feet wide and 4 feet long (though some are up to twice that size), meant to be carried and displayed on a lance, polearm, frame, or staff. It has no effect when not mounted properly or when laying on the ground. It normally depicts the insignia or heraldic symbol of a particular noble.\n\nA lord&apos;s banner may be carried (on foot or mounted) or planted. In the latter case, the banner does not need a bearer, but if it is toppled or touched by an enemy, it loses its effectiveness until reclaimed and replanted by allies of its owner.\n\n{b}Victory:{/b} Allies of the owner of a lord&apos;s banner of victory gain a +2 morale bonus on attack rolls, saves, and skill checks for as long as they can see the banner." compset="InPlay">
    <usesource source="APG"/>
    <tag group="Helper" tag="AdjNoPlus"/>
    <tag group="Helper" tag="NoIncr"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <tag group="Helper" tag="AdjConfer"/>
    <eval phase="PreLevel" priority="10000"><![CDATA[ 
      ~ If we're not enabled, get out now
      doneif (field[pIsOn].value = 0)

      ~ Add bonuses
      hero.child[Attack].field[BonMorale].value += maximum(hero.child[Attack].field[BonMorale].value,2)

      hero.child[AllSkills].field[BonMorale].value += maximum(hero.child[AllSkills].field[BonMorale].value,2)

      hero.child[svFort].field[BonMorale].value += maximum(hero.child[svFort].field[BonMorale].value,2)
      hero.child[svRef].field[BonMorale].value += maximum(hero.child[svRef].field[BonMorale].value,2)
      hero.child[svWill].field[BonMorale].value += maximum(hero.child[svWill].field[BonMorale].value,2)]]></eval>
    </thing>
  <thing id="puSwarmAtk" name="Swarm Attack Damage" description="Adjusts the number of dice damage in a swarm attack." compset="InPlay">
    <usesource source="srcCoBeAdj"/>
    <tag group="OthAdjCat" tag="Race"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <eval phase="Final" priority="20000"><![CDATA[
      ~ If we're not enabled, get out now
      doneif (field[pIsOn].value = 0)

      ~ make sure we have a swarm attack
      doneif (hero.childcount[raSwarmAtk] = 0)

      hero.child[raSwarmAtk].field[abValue].value += field[pAdjust].value

      hero.child[raSwarmAtk].field[livename].text = "Swarm Attack (" & hero.child[raSwarmAtk].field[abValue].value & "d6)"]]></eval>
    </thing>
  <thing id="puAbilModA" name="Ability Score (Animal-Form)" description="Select this adjustment to permanently change your a lycanthrope&apos;s Strength, Dexterity, Constitution, Intelligence, Wisdom or Charisma while in animal form.\n\nThis changes the value you had at character creation - for example, adding a starting adjustment to your intelligence will increase your skill points at first level and number of starting languages." compset="InPlay">
    <fieldval field="pWhat" value="(Starting)"/>
    <fieldval field="pDuration" value="Permanent"/>
    <usesource source="srcCoBeAdj"/>
    <tag group="Adjustment" tag="Attribute" name="Attributes" abbrev="Attributes"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <tag group="OthAdjCat" tag="Attributes"/>
    <eval phase="Attr"><![CDATA[
      ~ If we're not enabled, get out now
      doneif (field[pIsOn].value = 0)
      ~ If animal-form is not activated we are out.
      doneif (hero.child[xLyChange].field[abilAct2].value = 0)

      ~ Add to our chosen attribute
      field[pChosen].chosen.field[aPostMod].value += field[pAdjust].value]]></eval>
    </thing>
  <thing id="puAbilModH" name="Ability Score (Hybrid)" description="Select this adjustment to permanently change your a lycanthrope-hybrid&apos;s Strength, Dexterity, Constitution, Intelligence, Wisdom or Charisma.\n\nThis changes the value you had at character creation - for example, adding a starting adjustment to your intelligence will increase your skill points at first level and number of starting languages." compset="InPlay">
    <fieldval field="pWhat" value="(Starting)"/>
    <fieldval field="pDuration" value="Permanent"/>
    <usesource source="srcCoBeAdj"/>
    <tag group="Adjustment" tag="Attribute" name="Attributes" abbrev="Attributes"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <tag group="OthAdjCat" tag="Attributes"/>
    <eval phase="Attr"><![CDATA[
      ~ If we're not enabled, get out now
      doneif (field[pIsOn].value = 0)
      ~ If hybrid is not activated we are out.
      doneif (hero.child[xLyChange].field[abilActive].value = 0)

      ~ Add to our chosen attribute
      field[pChosen].chosen.field[aPostMod].value += field[pAdjust].value]]></eval>
    </thing>
  <thing id="puConstric" name="Natural Weapon: Constrict" description="Select this adjustment to have the constrict natural attack added to your character.  Then from the drop down box you can select the constrict natural attack to change the following:\n\n-Change the name of the natural attack by typing into the duration text box area.\n-Use the counter to either up or down the damage of the natural attack." compset="InPlay">
    <fieldval field="pDuration" value="Constrict"/>
    <usesource source="srcCoBeAdj"/>
    <tag group="Helper" tag="AdjInfo" name="AdjInfo" abbrev="AdjInfo"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <tag group="Adjustment" tag="YourWep" name="Current Weapons" abbrev="Current Weapons"/>
    <tag group="OthAdjCat" tag="Race"/>
    <bootstrap thing="wConstrict">
      <containerreq phase="First" priority="99"><![CDATA[fieldval:pIsOn <> 0]]></containerreq>
      <autotag group="Value" tag="1"/>
      <autotag group="wMain" tag="1d6_5"/>
      </bootstrap>
    <eval phase="PostAttr" priority="10000" index="2"><![CDATA[
      ~ If we're not enabled, get out now
      doneif (field[pIsOn].value = 0)
      ~if nothing's been chosen, get out now
      doneif (field[pChosen].ischosen = 0)

      field[pChosen].chosen.field[wDamage].value += field[pAdjust].value]]></eval>
    <eval phase="Final" priority="20500"><![CDATA[
      ~ If we're not enabled, get out now
      doneif (field[pIsOn].value = 0)
      ~if nothing's been chosen, get out now
      doneif (field[pChosen].ischosen = 0)

      field[pChosen].chosen.field[livename].text = field[pDuration].text]]></eval>
    </thing>
  <thing id="puMagSton" name="Magic Stone" description="You transmute as many as three pebbles, which can be no larger than sling bullets, so that they strike with great force when thrown or slung. If hurled, they have a range increment of 20 feet. If slung, treat them as sling bullets (range increment 50 feet). The spell gives them a +1 enhancement bonus on attack and damage rolls. The user of the stones makes a normal ranged attack. Each stone that hits deals 1d6+1 points of damage (including the spell&apos;s enhancement bonus), or 2d6+2 points against undead." compset="InPlay">
    <fieldval field="pDuration" value="30 minutes or until discharged"/>
    <usesource source="srcCoBeAdj"/>
    <tag group="Custom" tag="magStone"/>
    <tag group="Helper" tag="AdjSpell"/>
    <tag group="Helper" tag="AdjNoPlus"/>
    <tag group="Helper" tag="NoIncr"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <tag group="Helper" tag="AdjInfo"/>
    <bootstrap thing="wRock2">
      <containerreq phase="First" priority="99"><![CDATA[fieldval:pIsOn <> 0]]></containerreq>
      <autotag group="Value" tag="1"/>
      <autotag group="Helper" tag="FixSizeDmg"/>
      <autotag group="Helper" tag="UsesQty"/>
      <autotag group="Helper" tag="DamageUp"/>
      <assignval field="wDamNoAttr" value="6"/>
      <assignval field="livename" value="Magic Stone"/>
      <assignval field="trkMax" value="3"/>
      <assignval field="trkMin" value="0"/>
      <assignval field="trkLeft" value="3"/>
      <assignval field="BonEnhance" value="1" behavior="maximum"/>
      <assignval field="wDamage" value="6"/>
      </bootstrap>
    </thing>
  <thing id="pS2WThrRg" name="Weapon: Double Threat Range" description="This doubles the threat range of the weapon. A threat range of 20 becomes 19-20, a threat range of 19-20 becomes 17-20, and a threat range of 18-20 becomes 15-20. \n\nMultiple effects that increase a weapon&apos;s threat range (such as the keen special weapon property and the Improved Critical feat) don&apos;t stack." compset="InPlay">
    <usesource source="srcCoBeAdj"/>
    <tag group="Helper" tag="NoIncr" name="NoIncr" abbrev="NoIncr"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <tag group="Adjustment" tag="YourWep" name="Current Weapons" abbrev="Current Weapons"/>
    <tag group="OthAdjCat" tag="Equipment"/>
    <eval phase="PreLevel" priority="5000"><![CDATA[
      ~ If we're not enabled, get out now
      doneif (field[pIsOn].value = 0)
      ~if nothing's been chosen, get out now
      doneif (field[pChosen].ischosen = 0)

      ~ Give Improved Crit to the specific chosen weapon
      perform field[pChosen].chosen.assign[Broadcast.ImpCrit]]]></eval>
    </thing>
  <thing id="puSpiderCl" name="Spider Climb" description="The subject can climb and travel on vertical surfaces or even traverse ceilings as well as a spider does. The affected creature must have its hands free to climb in this manner. The subject gains a climb speed of 20 feet and a +8 racial bonus on Climb skill checks; furthermore, it need not make Climb checks to traverse a vertical or horizontal surface (even upside down). A spider climbing creature retains its Dexterity bonus to Armor Class (if any) while climbing, and opponents get no special bonus to their attacks against it. It cannot, however, use the run action while climbing." compset="InPlay">
    <fieldval field="pDuration" value="10 min./level"/>
    <fieldval field="pMinimum" value="20"/>
    <fieldval field="pMaximum" value="20"/>
    <usesource source="srcCoBeAdj"/>
    <tag group="Helper" tag="AdjInfo"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <tag group="Helper" tag="AdjSpell"/>
    <tag group="Helper" tag="AdjNoPlus"/>
    <bootstrap thing="xBonusClim">
      <assignval field="abValue" value="8"/>
      </bootstrap>
    <eval phase="First" priority="10000"><![CDATA[
      ~ If we're not enabled, get out now
      doneif (field[pIsOn].value <> 1)

      hero.child[xClimb].field[abValue].value += field[pAdjust].value]]></eval>
    </thing>
  <thing id="puHdUnarme" name="Hide Unarmed Strike" description="Hides a creature&apos;s unarmed strike. (Useful for creatures with natural attacks)" compset="InPlay">
    <fieldval field="pWhat" value="Hides unarmed strike"/>
    <usesource source="srcCoBeAdj"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <tag group="OthAdjCat" tag="Race"/>
    <tag group="Helper" tag="NoIncr"/>
    <eval phase="First">perform hero.childfound[wUnarmed].assign[Hide.Weapon]</eval>
    </thing>
  <thing id="puTotSpeed" name="Speed, Total" description="Adjust the total base speed of race." compset="InPlay">
    <usesource source="srcCoBeAdj"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <tag group="OthAdjCat" tag="Race"/>
    <eval phase="PreLevel" priority="1000"><![CDATA[
      ~ If we're not enabled, get out now
      doneif (field[pIsOn].value = 0)

      hero.child[Speed].field[tSpeed].value += field[pAdjust].value]]></eval>
    </thing>
  <thing id="puBtQuadru" name="Body Type: Quadruped" description="Change creature&apos;s body type to quadruped." compset="InPlay" uniqueness="useronce">
    <usesource source="srcCoBeAdj"/>
    <tag group="Helper" tag="AdjNoPlus"/>
    <tag group="Helper" tag="NoIncr"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <tag group="OthAdjCat" tag="Race"/>
    <eval phase="First"><![CDATA[
      doneif (field[pIsOn].value = 0)
      doneif (hero.tagis[Helper.ManyLegs] + hero.tagis[Helper.Quadruped] + hero.tagis[Helper.Snaky] <> 0)

      perform hero.findchild[BaseRace].assign[Helper.Quadruped]]]></eval>
    </thing>
  <thing id="puBTMoreLg" name="Body Type: More than 4 Legs" description="Change creature&apos;s body type to one with more than 4 legs. Counter adds legs above 6." compset="InPlay" uniqueness="useronce">
    <fieldval field="pWhat" value="Additional Legs"/>
    <fieldval field="pMinimum" value="0"/>
    <usesource source="srcCoBeAdj"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <tag group="OthAdjCat" tag="Race"/>
    <eval phase="First"><![CDATA[
      doneif (field[pIsOn].value = 0)
      doneif (hero.tagis[Helper.ManyLegs] + hero.tagis[Helper.Quadruped] + hero.tagis[Helper.Snaky] <> 0)

      perform hero.findchild[BaseRace].assign[Helper.ManyLegs]

      var bon as number
      bon = field[pAdjust].value

      hero.child[manTrip].field[manCMD].value += 2 * bon]]></eval>
    </thing>
  <thing id="puBTSnaky" name="Body Type: Immune to Trip" description="Change creature&apos;s body type to one that is immune to trip." compset="InPlay" uniqueness="useronce">
    <usesource source="srcCoBeAdj"/>
    <tag group="Helper" tag="AdjNoPlus"/>
    <tag group="Helper" tag="NoIncr"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <tag group="OthAdjCat" tag="Race"/>
    <eval phase="First"><![CDATA[
      doneif (field[pIsOn].value = 0)
      doneif (hero.tagis[Helper.ManyLegs] + hero.tagis[Helper.Quadruped] + hero.tagis[Helper.Snaky] <> 0)

      perform hero.findchild[BaseRace].assign[Helper.Snaky]]]></eval>
    </thing>
  <thing id="puRacCaste" name="Racial Caster Level" description="Adjusts the caster level of a race that innate caster capability." compset="InPlay">
    <usesource source="srcCoBeAdj"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <tag group="OthAdjCat" tag="Race"/>
    <eval phase="First" priority="10"><![CDATA[
      ~ If we're not enabled, get out now
      doneif (field[pIsOn].value = 0)

      perform hero.findchild[BaseRace].setfocus
      ~ if can't find then get out now!
      doneif (state.isfocus = 0)

      doneif (focus.tagcount[SplLookup.?] = 0)

      focus.field[cMagicLev].value += field[pAdjust].value]]></eval>
    <prereq message="Race must be innate spell-casters.">
      <validate><![CDATA[
        perform hero.findchild[BaseRace].setfocus
        ~ if can't find then get out now!
        doneif (state.isfocus = 0)
        validif (focus.tagcount[SplLookup.?] <> 0)]]></validate>
      </prereq>
    </thing>
  <thing id="puSplLkDay" name="Spell-Like Ability (per day)" compset="InPlay">
    <fieldval field="pMinimum" value="1"/>
    <fieldval field="pMaximum" value="10"/>
    <usesource source="srcCoBeAdj"/>
    <tag group="Adjustment" tag="S2Custom"/>
    <tag group="Helper" tag="AdjNoPlus"/>
    <tag group="OthAdjCat" tag="Spell"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <eval phase="PostLevel" priority="10000"><![CDATA[
      ~ If we're not enabled, get out now
      doneif (field[pIsOn].value = 0)
      ~ if nothing is chosen, get out now
      doneif (field[pChosen].ischosen = 0)

      ~ Pull the tag to see the info for our chosen spell
      perform field[pChosen].chosen.pulltags[SpInfo.?]

      ~ add tags
      perform field[pChosen].chosen.assign[Helper.SpellLike]
      perform field[pChosen].chosen.assign[Usage.Day]
      field[pChosen].chosen.field[trkMax].value = field[pAdjust].value]]></eval>
    <eval phase="PreLevel" priority="11000" index="2"><![CDATA[
      ~ Set search expression for all spells
      field[pCandExpr].text = "component.BaseSpell & CasterType.?"]]></eval>
    </thing>
  <thing id="puAbilForc" name="Ability Score (Forced)" description="Select this adjustment to permanently change an ability score that is forced to a new value (usually by template)." compset="InPlay">
    <fieldval field="pDuration" value="Permanent"/>
    <usesource source="srcCoBeAdj"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <tag group="OthAdjCat" tag="Attributes"/>
    <tag group="Adjustment" tag="Attribute"/>
    <eval phase="PreAttr" priority="10000"><![CDATA[
      ~ If we're not enabled, get out now
      doneif (field[pIsOn].value = 0)

      ~ Add to our chosen attribute
      field[pChosen].chosen.field[aNormForce].value += field[pAdjust].value]]></eval>
    </thing>
  <thing id="pCBFlyManu" name="Flight Maneuverability" description="This changes the manueverability of a creatures fly speed." compset="InPlay" uniqueness="useronce">
    <usesource source="srcCoBeAdj"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <tag group="Adjustment" tag="S2Custom"/>
    <tag group="Helper" tag="NoIncr"/>
    <tag group="OthAdjCat" tag="Race"/>
    <eval phase="PreLevel" priority="11000"><![CDATA[
      ~ Things on Hero
      field[pUsePicks].value = 0
      ~ Set search to daze or prone
      field[pCandExpr].text = "component.Simple & AdjManeuv.Selector"

      ~ If we're not enabled, get out now
      doneif (field[pIsOn].value <> 1)
      ~ If nothing chosen, get out now
      doneif (field[pChosen].ischosen <> 1)

      ~ remove any maneuver tag on fly and change the fly speed's manuverability

      perform hero.child[xFly].delete[Maneuver.?]

      if (field[pChosen].chosen.tagis[Maneuver.Clumsy] <> 0) then
        perform hero.child[xFly].assign[Maneuver.Clumsy]
      elseif (field[pChosen].chosen.tagis[Maneuver.Poor] <> 0) then
        perform hero.child[xFly].assign[Maneuver.Poor]
      elseif (field[pChosen].chosen.tagis[Maneuver.Average] <> 0) then
        perform hero.child[xFly].assign[Maneuver.Average]
      elseif (field[pChosen].chosen.tagis[Maneuver.Good] <> 0) then
        perform hero.child[xFly].assign[Maneuver.Good]
      elseif (field[pChosen].chosen.tagis[Maneuver.Perfect] <> 0) then
        perform hero.child[xFly].assign[Maneuver.Perfect]
      endif]]></eval>
    </thing>
  <thing id="pCBSnkAtk" name="Race Ability, Sneak Attack" description="Gives the hero the sneak attack ability. Use the incrementer to set the number of dice damage." compset="InPlay">
    <fieldval field="pMinimum" value="1"/>
    <usesource source="srcCoBeAdj"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <tag group="OthAdjCat" tag="Race"/>
    <tag group="Helper" tag="NoPathSoc"/>
    <bootstrap thing="raSneakAtt"></bootstrap>
    <eval phase="First"><![CDATA[
      ~ If we're not enabled, get out now
      doneif (field[pIsOn].value = 0)

      hero.child[raSneakAtt].field[abValue].value +=  field[pAdjust].value]]></eval>
    </thing>
  <thing id="pCBProfGif" name="Profane Gift" description="Once per day as a full-round action, a succubus may grant a profane gift to a willing humanoid creature by touching it for 1 full round. The target gains a +2 profane bonus to an ability score of his choice. A single creature may have no more than one profane gift from a succubus at a time. As long as the profane gift persists, the succubus can communicate telepathically with the target across any distance (and may use her suggestion spell-like ability through it). A profane gift is removed by dispel evil or dispel chaos. The succubus can remove it as well as a free action (causing 2d6 Charisma drain to the victim, no save)." compset="InPlay">
    <usesource source="srcCoBeAdj"/>
    <tag group="Helper" tag="NoIncr"/>
    <tag group="Helper" tag="AdjNoPlus"/>
    <tag group="Helper" tag="AdjConfer"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <tag group="Helper" tag="NoPathSoc"/>
    <tag group="Adjustment" tag="Attribute"/>
    <eval phase="PreAttr"><![CDATA[
      ~ If we're not enabled, get out now
      doneif (field[pIsOn].value = 0)
      ~if nothing's been chosen, get out now
      doneif (field[pChosen].ischosen = 0)

      field[pChosen].chosen.field[BonProfane].value += 2]]></eval>
    </thing>
  <thing id="pCBEvasion" name="Evasion" description="Character gains evasion (or improved evasion if character already has it)." compset="InPlay">
    <usesource source="srcCoBeAdj"/>
    <tag group="Helper" tag="AdjNoPlus"/>
    <tag group="Helper" tag="NoPathSoc"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <tag group="Helper" tag="NoIncr"/>
    <tag group="OthAdjCat" tag="Race"/>
    <bootstrap thing="raEvasion">
      <containerreq phase="First" priority="500"><![CDATA[fieldval:pIsOn <> 0]]></containerreq>
      </bootstrap>
    </thing>
  <thing id="pCBRemSpd" name="Speed, Remove" description="This removes a particular mode of movement." compset="InPlay">
    <usesource source="srcCoBeAdj"/>
    <tag group="Helper" tag="AdjNoPlus"/>
    <tag group="Helper" tag="NoIncr"/>
    <tag group="Adjustment" tag="Movement"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <tag group="Helper" tag="NoPathSoc"/>
    <tag group="OthAdjCat" tag="Race"/>
    <eval phase="Final" priority="1000" index="2"><![CDATA[
      ~if nothing's been chosen yet, there's nothing we can do
      doneif (field[pChosen].ischosen = 0)

      ~ If we're not enabled, get out now
      doneif (field[pIsOn].value = 0)

      if (compare(field[pChosen].chosen.idstring,"xFly") = 0) then
         hero.child[skFly].field[skManuvMod].value =0
         perform field[pChosen].chosen.delete[Maneuver.?]
      endif]]></eval>
    <eval phase="PreLevel" priority="10000"><![CDATA[      
      ~if nothing's been chosen yet, there's nothing we can do
      doneif (field[pChosen].ischosen = 0)

      ~ If we're not enabled, get out now
      doneif (field[pIsOn].value = 0)

      if (compare(field[pChosen].chosen.idstring,"xFly") = 0) then
         hero.child[skFly].field[skManuvMod].value =0
         perform field[pChosen].chosen.delete[Maneuver.?]
      endif

      ~ Apply the speed
      field[pChosen].chosen.field[abValue].value = 0]]></eval>
    </thing>
  <thing id="pCBEnerImm" name="Energy Immunity" description="Grants immunity to chosen energy type." compset="InPlay">
    <fieldval field="pCandExpr" value="component.SelectHelp &amp; Selection.Energy"/>
    <usesource source="srcCoBeAdj"/>
    <tag group="Helper" tag="NoIncr"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <tag group="Adjustment" tag="S2Custom"/>
    <tag group="OthAdjCat" tag="Race"/>
    <tag group="Helper" tag="AdjNoPlus"/>
    <bootstrap thing="xImmFire">
      <autotag group="Hide" tag="Special"/>
      <autotag group="Helper" tag="SpcDisable"/>
      </bootstrap>
    <bootstrap thing="xImmElec">
      <autotag group="Hide" tag="Special"/>
      <autotag group="Helper" tag="SpcDisable"/>
      </bootstrap>
    <bootstrap thing="xImmSoni">
      <autotag group="Hide" tag="Special"/>
      <autotag group="Helper" tag="SpcDisable"/>
      </bootstrap>
    <bootstrap thing="xImmAcid">
      <autotag group="Hide" tag="Special"/>
      <autotag group="Helper" tag="SpcDisable"/>
      </bootstrap>
    <bootstrap thing="xImmCold">
      <autotag group="Hide" tag="Special"/>
      <autotag group="Helper" tag="SpcDisable"/>
      </bootstrap>
    <eval phase="PostLevel" priority="500" index="2"><![CDATA[
      ~ If we're not enabled, get out now
      doneif (field[pIsOn].value <> 1)
      ~ If nothing chosen, get out now
      doneif (field[pChosen].ischosen <> 1)

      perform field[pChosen].chosen.pulltags[BloodEner.?]

      if (tagis[BloodEner.Acid] <> 0) then
        perform hero.child[xImmAcid].delete[Hide.Special]
        perform hero.child[xImmAcid].delete[Helper.SpcDisable] 

      elseif (tagis[BloodEner.Cold] <> 0) then
        perform hero.child[xImmCold].delete[Hide.Special]
        perform hero.child[xImmCold].delete[Helper.SpcDisable] 

      elseif (tagis[BloodEner.Elec] <> 0) then
        perform hero.child[xImmElec].delete[Hide.Special]
        perform hero.child[xImmElec].delete[Helper.SpcDisable] 

      elseif (tagis[BloodEner.Fire] <> 0) then
        perform hero.child[xImmFire].delete[Hide.Special]
        perform hero.child[xImmFire].delete[Helper.SpcDisable] 

      elseif (tagis[BloodEner.Sonic] <> 0) then

        perform hero.child[xImmSoni].delete[Hide.Special]
        perform hero.child[xImmSoni].delete[Helper.SpcDisable] 
      endif]]></eval>
    </thing>
  <thing id="pCBAbilAct" name="Ability: Activate" description="Activates an ability that has been disabled." compset="InPlay">
    <fieldval field="pCandExpr" value="component.Ability &amp; Helper.SpcDisable"/>
    <usesource source="srcCoBeAdj"/>
    <tag group="Helper" tag="AdjNoPlus"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <tag group="OthAdjCat" tag="Attributes"/>
    <tag group="Helper" tag="NoIncr"/>
    <eval phase="Final" priority="1000">
      doneif (field[pIsOn].value = 0)
      doneif (field[pChosen].ischosen = 0)

      perform field[pChosen].chosen.delete[Helper.SpcDisable]</eval>
    </thing>
  <thing id="pCBFeatDis" name="Disable Feat" description="Disable chosen feat." compset="InPlay">
    <usesource source="srcCoBeAdj"/>
    <tag group="Helper" tag="NoPathSoc"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <tag group="Helper" tag="NoIncr"/>
    <tag group="Helper" tag="AdjNoPlus"/>
    <tag group="Adjustment" tag="S2Custom"/>
    <tag group="OthAdjCat" tag="FeatTrait"/>
    <eval phase="First" priority="500" index="2"><![CDATA[
      ~ If we're not enabled, get out now
      doneif (field[pIsOn].value = 0)

      ~ disable chosen feat
      perform field[pChosen].chosen.assign[Helper.FtDisable]]]></eval>
    <eval phase="First"><![CDATA[
      ~ Picks on Hero
      field[pUsePicks].value = 1
      ~ Set search expression for all spells
      field[pCandExpr].text = "component.BaseFeat"]]></eval>
    </thing>
  <thing id="puInsHoplo" name="Insanity: Hoplophobia" description="{b}Type{/b} insanity; {b}Save{/b} Will DC 14\n{b}Onset{/b} 2d6 days\n{b}Effect{/b} Shaken for 1d6 round when confronted with firearms. Against selected weapon, sufferer takes -4 penalty on the save." compset="InPlay">
    <usesource source="srcCoBeAdj"/>
    <tag group="Helper" tag="NoIncr"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <tag group="Helper" tag="AdjConfer"/>
    <tag group="Helper" tag="AdjInfo"/>
    <eval phase="Final" priority="10000"><![CDATA[
      ~ If we're not enabled, get out now
      doneif (field[pIsOn].value = 0)

      field[livename].text = "Insanity: Hoplophobia (" & field[pSource].text & ")"]]></eval>
    </thing>
  <thing id="pCBGhostTc" name="Ghost Touch" description="Makes an item a ghost touch item.\n\nThis is useful for certain incorporeal creatures, such as some kinds of ghosts, that can wield objects." compset="InPlay">
    <usesource source="srcCoBeAdj"/>
    <tag group="Helper" tag="NoIncr"/>
    <tag group="Helper" tag="AdjNoPlus"/>
    <tag group="Adjustment" tag="YourGear"/>
    <tag group="OthAdjCat" tag="Race"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <eval phase="First" priority="1000"><![CDATA[
      ~ If we're not enabled, get out now
      doneif (field[pIsOn].value = 0)

      ~if nothing's been chosen, there's nothing we can do
      doneif (field[pChosen].ischosen = 0)

      perform field[pChosen].chosen.assign[Ability.iGhostTch]]]></eval>
    </thing>
  <thing id="pCBHardnes" name="Race, Hardness" description="Select this adjustment to increase/decrease the hardness value of a construct creature." compset="InPlay">
    <comment>Seperate adjustment for Hardness since it uses CalcValue routine</comment>
    <usesource source="srcCoBeAdj"/>
    <tag group="OthAdjCat" tag="Race"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <eval phase="Render" priority="5000"><![CDATA[
      ~ If we're not enabled, get out now
      doneif (field[pIsOn].value = 0)
      ~ If racial ability hardness not live get out now!
      doneif (hero.childlives[raHardness] = 0)

      hero.childfound[raHardness].field[abValue].value += field[pAdjust].value]]></eval>
    <pickreq thing="raHardness"/>
    </thing>
  </document>
