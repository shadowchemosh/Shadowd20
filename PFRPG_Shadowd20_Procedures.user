<?xml version="1.0" encoding="ISO-8859-1"?>
<document signature="Hero Lab Data">
  <fileinfo>
    <info_author>
Tim Shadow
Email: ShadowChemosh@yahoo.com

This is a houserules file for a group of gamers in Romeoville, IL.  To see the changes vist our wiki at http://shadowd20.pbworks.com/PRPG
    </info_author>
    <info_history><![CDATA[
July 12, 2012
-HaveSpell and CntMartWea are meant to be used in a "Pre-Req" script only.
-Added the new procedure "HaveSpell" to test if a character has access to a specific spell ID.
-Added the new procedure "CntMartWea" to count the number of martial weapon proficiencies a character has. 

July 10, 2012
-Added the new procedure "RmvShield" that when called removes just a Shield where the "RmvArmor" procedure removes both armor and shields.]]>
    </info_history>
  </fileinfo>

<!-- =================================================================== -->
<!--                          Remove Armor                               -->
<!-- =================================================================== -->
  <procedure id="RmvArmor" context="pick"><![CDATA[
  ~Procedure is used to disable all armor on a character
    ~Loop through each armor on the character
    foreach pick in hero from BaseArmor where "!thingid.mNatural & EquipType.Armor"
        perform eachpick.assign[Helper.NoArmor]
        perform eachpick.delete[ArmorCateg.Slows]
        eachpick.field[arMaxDex].value = 999
        eachpick.field[arArcFail].value = 0
        eachpick.field[arArmorChk].value = 0
    nexteach
    ]]>
  </procedure>

<!-- =================================================================== -->
<!--                          Remove Shield                              -->
<!-- =================================================================== -->
  <procedure id="RmvShield" context="pick"><![CDATA[
  ~Procedure is used to disable just shields on a character
    ~Find the currently equipped shields on the character and remove it
    foreach pick in hero from BaseArmor where "EquipType.Shield"
        perform eachpick.assign[Helper.NoArmor]
        eachpick.field[arMaxDex].value = 999
        eachpick.field[arArcFail].value = 0
        eachpick.field[arArmorChk].value = 0
    nexteach
    ]]>
  </procedure>

<!-- =================================================================== -->
<!--                     Calculate Shifter Damage based on level         -->
<!-- =================================================================== -->
  <procedure id="ShifterDmg" context="pick"><![CDATA[
    ~ This procedure gives a Bonus on damage for every 4 levels we have
    field[abValue3].value += round(#totallevelcount[]/4,0,-1)
    var s2Shifter as string
    ~ Pull all the shifter tags from the parent thing
    s2Shifter = tagids[Shifter.?,"|"]
    ~Only process if bonus is +1 or higher
    if (field[abValue3].value >= 1) then
      ~ Go through each natural attack that matchs our Shifter tags and give a bonus on damage
      foreach pick in hero from BaseWep where s2Shifter
         each.field[wDamBonus].value += field[abValue3].value
      nexteach
    endif
    ]]>
  </procedure>

</document>