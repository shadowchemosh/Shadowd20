<?xml version="1.0" encoding="ISO-8859-1"?>
<document signature="Hero Lab Data">
  <loadonce key="COM_3PPPack_RGG - Bullet Points Cure Light Wounds Feats"/>
  <fileinfo>
    <info_author>Tim Shadow
Created New June 3rd, 2012</info_author>
    </fileinfo>
  <thing id="fS2BolCure" name="Bolstering Cure" description="You can turn extra healing into bonus vigor.{br}{br}{b}Prerequisites:{/b} Heal 1 rank, ability to cast {i}cure light wounds{/i}.{br}{br}{b}Benefit:{/b} When you cast a {i}cure light wounds{/i} spell, if the healing you grant the subject of the spell exceed&apos;s the subject&apos;s maximum hit points, the additional points are gained as temporary hit points. These temporary hit points do not stack with themselves, or any other source of temporary hit points." compset="Feat" uniqueness="useronce">
    <usesource source="src7CLWFea"/>
    <tag group="Helper" tag="ShowSpec"/>
    <exprreq message="Heal 1 ranks required."><![CDATA[#skillranks[skHeal] >= 1]]></exprreq>
    <prereq message="Ability to cast {I}Cure Light Wounds{/i} required.">
      <validate><![CDATA[var search as string
var classes as string
@valid = 0

~ Get the classes that are valid for CLW spell
foreach thing in BaseSpell where "thingid.spCureLig1"
   classes = eachthing.tagids[sClass.?,"|"]
nexteach
~ replace the sClass tags with thingid tag groups
search = replace(classes,"sClass","thingid",0)

~ Loop through classes and see if we have one of the classes
~ valid for casting CLW spells
foreach pick in hero where search
  @valid = 1
nexteach]]></validate>
      </prereq>
    </thing>
  <thing id="fS2CloCuri" name="Cloak of Curing" description="You can hold a charge of {i}cure light wounds{/i} in your aura, allowing allies to grab it when needed.{br}{br}{b}Prerequisites:{/b} Sleight of Hand 1 rank, ability to cast {i}cure light wounds{/i}.{br}{br}{b}Benefit:{/b} When you cast a {i}cure light wounds{/i} spell, you may choose to hold the charge of the touch spell for up to six rounds. Unlike most cases where you hold a charge, you are free to cast other spells and touch objects and other creatures without losing the spell.{br}{br}At any time during this duration if you and another creature come into contact you may, as a swift or immediate action, choose to discharge the {i}cure light wounds{/i} into the touching creature. You may only have one cure spell held in this way at a time." compset="Feat" uniqueness="useronce">
    <usesource source="src7CLWFea"/>
    <tag group="Helper" tag="ShowSpec"/>
    <exprreq message="Sleight of Hand 1 ranks required."><![CDATA[#skillranks[skSleight] >= 1]]></exprreq>
    <prereq message="Ability to cast {I}Cure Light Wounds{/i} required.">
      <validate><![CDATA[var search as string
var classes as string
@valid = 0

~ Get the classes that are valid for CLW spell
foreach thing in BaseSpell where "thingid.spCureLig1"
   classes = eachthing.tagids[sClass.?,"|"]
nexteach
~ replace the sClass tags with thingid tag groups
search = replace(classes,"sClass","thingid",0)

~ Loop through classes and see if we have one of the classes
~ valid for casting CLW spells
foreach pick in hero where search
  @valid = 1
nexteach]]></validate>
      </prereq>
    </thing>
  <thing id="fS2LayOnCu" name="Lay On Cure" description="Like a paladin, you can heal yourself more quickly than you can heal others.{br}{br}{b}Prerequisites:{/b} Ability to cast {i}cure light wounds{/i}, lawful good alignment.{br}{br}{b}Benefit:{/b} Once a round you can cast a {i}cure light wounds{/i} spell, with yourself as the target, as a move action.{br}{br}{b}Normal:{/b} Casting {i}cure light wounds{/i} is a standard action." compset="Feat" uniqueness="useronce">
    <usesource source="src7CLWFea"/>
    <tag group="Helper" tag="ShowSpec"/>
    <exprreq message="Lawful Good alignment required.">hero.tagis[Alignment.Good] + hero.tagis[Alignment.Lawful] = 2</exprreq>
    <prereq message="Ability to cast {I}Cure Light Wounds{/i} required.">
      <validate><![CDATA[var search as string
var classes as string
@valid = 0

~ Get the classes that are valid for CLW spell
foreach thing in BaseSpell where "thingid.spCureLig1"
   classes = eachthing.tagids[sClass.?,"|"]
nexteach
~ replace the sClass tags with thingid tag groups
search = replace(classes,"sClass","thingid",0)

~ Loop through classes and see if we have one of the classes
~ valid for casting CLW spells
foreach pick in hero where search
  @valid = 1
nexteach]]></validate>
      </prereq>
    </thing>
  <thing id="fS2LinCure" name="Lingering Cure" description="You can expand the healing you do by drawing out the time it takes to be effective.\n\n{b}Prerequisites:{/b} Heal 1 rank, ability to cast {i}cure light wounds{/i}.\n\n{b}Benefit:{/b} When you cast a {i}cure light wounds{/i} spell, you may choose to make it a lingering cure. This increases the amount of healing you do by 5 hit points per level of the {i}cure light wounds{/i} spell (which is normally +5 hp, but if you prepared the spell with Heighten Spell, are a ranger, or have Moderate Mastery, this may not be the case), and causes the spell to not have a maximum on the amount of healing you add from your caster level. However, the healing does not happen immediately. Instead, the spell&apos;s subject gains a number of hit points equal to the spell&apos;s level at the beginning of its turn each round, until it has received all the spell&apos;s healing." compset="Feat" uniqueness="useronce">
    <usesource source="src7CLWFea"/>
    <tag group="Helper" tag="ShowSpec"/>
    <exprreq message="Heal 1 ranks required."><![CDATA[#skillranks[skHeal] >= 1]]></exprreq>
    <prereq message="Ability to cast {I}Cure Light Wounds{/i} required.">
      <validate><![CDATA[var search as string
var classes as string
@valid = 0

~ Get the classes that are valid for CLW spell
foreach thing in BaseSpell where "thingid.spCureLig1"
   classes = eachthing.tagids[sClass.?,"|"]
nexteach
~ replace the sClass tags with thingid tag groups
search = replace(classes,"sClass","thingid",0)

~ Loop through classes and see if we have one of the classes
~ valid for casting CLW spells
foreach pick in hero where search
  @valid = 1
nexteach]]></validate>
      </prereq>
    </thing>
  <thing id="fS2ModMast" name="Moderate Mastery" description="You&apos;ve expanded your healing expertise to more advanced cure spells.\n\n{b}Prerequisites:{/b} One or more feats that have the ability to cast {i}cure light wounds{/i} as a prerequisite. \n\n{b}Benefit:{/b} You may apply the benefits of any feat that has the ability to cast {i}cure light wounds{/i} as a prerequisite to a {i}cure moderate wounds{/i} spell.\n\n{b}Special:{/b} A GM may, at her discretion, decide that even higher-level versions of this feat exist that affect higher-level cure spells. Each would have all lower-level versions as prerequisites." compset="Feat" uniqueness="useronce">
    <usesource source="src7CLWFea"/>
    <tag group="Helper" tag="ShowSpec"/>
    <exprreq message="One or more feats that have the ability to cast {i}cure light wounds{/i} as a prerequisite required."><![CDATA[#hasfeat[fS2BolCure] + #hasfeat[fS2CloCuri] + #hasfeat[fS2LayOnCu] + #hasfeat[fS2LinCure] + #hasfeat[fS2ShaCure] + #hasfeat[fS2ReiCure]  <> 0]]></exprreq>
    </thing>
  <thing id="fS2ShaCure" name="Shared Cure" description="You&apos;ve learned that sometimes, the healer needs to be healed too.{br}{br}{b}Prerequisites:{/b} Toughness, ability to cast {i}cure light wounds{/i}.{br}{br}{b}Benefit:{/b} When you cast a {i}cure light wounds{/i} spell, you may choose to gain any amount of the healing rolled yourself, rather than give it to the spell&apos;s subject. You may decide to do this after seeing how much damage you have healed." compset="Feat" uniqueness="useronce">
    <usesource source="src7CLWFea"/>
    <tag group="Helper" tag="ShowSpec"/>
    <exprreq message="Toughness Feat required."><![CDATA[#hasfeat[fToughness] <> 0]]></exprreq>
    <prereq message="Ability to cast {I}Cure Light Wounds{/i} required.">
      <validate><![CDATA[var search as string
var classes as string
@valid = 0

~ Get the classes that are valid for CLW spell
foreach thing in BaseSpell where "thingid.spCureLig1"
   classes = eachthing.tagids[sClass.?,"|"]
nexteach
~ replace the sClass tags with thingid tag groups
search = replace(classes,"sClass","thingid",0)

~ Loop through classes and see if we have one of the classes
~ valid for casting CLW spells
foreach pick in hero where search
  @valid = 1
nexteach]]></validate>
      </prereq>
    </thing>
  <thing id="fS2ReiCure" name="Reinforced Cure" description="You can add a little extra magic to your cure effects.{br}{br}{b}Prerequisites:{/b} Use Magic Device 1 rank, ability to cast {i}cure light wounds{/i}.{br}{br}{b}Benefit:{/b} When you cast a {i}cure light wounds{/i} on a subject, you may also affect the subject with any 0-level spell you are currently able to cast that have a casting time of 1 standard action or less, a range of touch, and a (harmless) note in its saving throw.{br}{br}For a cleric or oracle, this includes {i}guidance, resistance{/i}, and {i}virtue{/i}." compset="Feat" uniqueness="useronce">
    <usesource source="src7CLWFea"/>
    <tag group="Helper" tag="ShowSpec"/>
    <exprreq message="Use Magic Device 1 ranks required."><![CDATA[#skillranks[skUseMagic] >= 1]]></exprreq>
    <prereq message="Ability to cast {I}Cure Light Wounds{/i} required.">
      <validate><![CDATA[var search as string
var classes as string
@valid = 0

~ Get the classes that are valid for CLW spell
foreach thing in BaseSpell where "thingid.spCureLig1"
   classes = eachthing.tagids[sClass.?,"|"]
nexteach
~ replace the sClass tags with thingid tag groups
search = replace(classes,"sClass","thingid",0)

~ Loop through classes and see if we have one of the classes
~ valid for casting CLW spells
foreach pick in hero where search
  @valid = 1
nexteach]]></validate>
      </prereq>
    </thing>
  </document>
