<?xml version="1.0" encoding="UTF-8"?>
<document signature="Hero Lab Data">
  <loadonce key="COM_BasicPack_ShadowChemosh - Feats"/>
  <fileinfo>
    <info_author><![CDATA[
      Author:  Tim Shadow
      Email: shadowchemosh@yahoo.com
      File Name changed from PFRPG_ShadowChemosh_VitalStrike.user => COM_BasicPack_ShadowChemosh - Feats.user]]></info_author>
    <info_history><![CDATA[
      December 12, 2014 - Tim Shadow
      -Added new feat "Outflank" that can be activated to increase the "Flanking" condition to +4.

      December 8, 2014 - Tim Shadow
      -Added new feat "Improved Weapon Finesse".
    
      November 24, 2014 - Tim Shadow
      -Fixed issue where some spells could still give an extra attack.

      April 14, 2014 - Tim Shadow
      -Fixes to "Vital Strike" to work again fully due to changes in HL.
      -"Vital Strike" now correctly works with the Devastating Strike feat to increase damage.

      August 25, 2013 - Tim Shadow
      -Created new.
      -Vital Strike was scrpited to now actually calculate the damage dice and damage bonus correctly. The damage is increased when taking Improved, Greater, and Mythic versions of the feats.]]></info_history>
    </fileinfo>
  <thing id="fS2VitStr" name="Vital Strike" description="You make a single attack that deals significantly more damage than normal.\n\n{b}Prerequisites{/b}: Base attack bonus +6.\n\n{b}Benefit{/b}: When you use the attack action, you can make one attack at your highest base attack bonus that deals additional damage. Roll the weapon&apos;s damage dice for the attack twice and add the results together before adding bonuses from Strength, weapon abilities (such as flaming), precision-based damage, and other damage bonuses. These extra weapon damage dice are not multiplied on a critical hit, but are added to the total.\n\n{B}Note:{/b} This version of the feat allows you to &quot;activate&quot; it on the In-Play tab." compset="Feat" summary="Standard action: x2 weapon damage dice." uniqueness="useronce">
    <comment>Make Vital Strike Actually Work.
abValue = Number of additional dice
abValue2 = Plus Bonus to increase</comment>
    <usesource source="s20PFCamp"/>
    <tag group="fCategory" tag="Combat" name="Combat" abbrev="Combat"/>
    <tag group="User" tag="Activation"/>
    <tag group="Helper" tag="ShowSpec" name="Show Spec" abbrev="Show Spec"/>
    <tag group="HasFeat" tag="fVitStr"/>
    <tag group="Helper" tag="CoreCampOK"/>
    <eval phase="Final" priority="9999999999"><![CDATA[
      ~ If not active get out now!
      doneif (field[abilActive].value <> 1)

      ~ Set amount to increase dice by 2
      field[abValue].value += 2
      ~ If we have improved vital strike increase dice by additional 1
      If (#hasfeat[fImpVitStr] <> 0) Then
         field[abValue].value += 1
      Endif
      ~ If we have Greater vital strike increase dice by additional 1
      If (#hasfeat[fGrtVitStr] <> 0) Then
         field[abValue].value += 1
      Endif
      ~ Default the amount the Plus Damage should be increased by
      field[abValue2].value += 1
      ~ If we have Mythic Vital Strike double plus damage. Here we use a string value
      ~ instead of hard-coded Tag because we don't know if where this script runs
      ~ will have the Mythic Adventure addon.
      If (hero.tagcountstr["HasFeat.fPTVitStri"] + hero.tagcountstr["HasFeat.fMyVitStri"] <> 0) Then
         field[abValue2].value = field[abValue].value
      Endif

      var sDice as String
      var nDice as number
      var nDieSize as number
      var nPlus as number
      var iX    as number
      iX = 1

      ~ Loop through all weapons on the hero except Touch Attacks
      ~ and any Ammunition.
      foreach pick in hero from BaseWep where "!(thingid.wRay|wCategory.Ammunition|thingid.wTouch|wCategory.AmmoCart)"
        ~ Assume one handed damage
        iX = 0
        ~ If two handed weapon set to two-handed damage
        If (eachpick.tagis[wClass.TwoHanded] <> 0) Then
          iX = 1
        ~ If one handed and used in two hands then damage is two-handed
        ElseIf (eachpick.tagis[wClass.OneHanded] + eachpick.tagis[Hero.MainHand] + eachpick.tagis[Hero.OffHand] = 3) Then
          iX = 1
        ~ If used in off-hand
        ElseIf (eachpick.tagis[Hero.OffHand] - eachpick.tagis[Hero.MainHand] = 1) Then
          iX = 4
        Endif

        ~ We have a Melee damage table and a Ranged damage table to deal with now.
        ~ So if we are ranged process HERE
        ~ ------------------------------------------------------------------------
        if (eachpick.tagis[wCategory.RangeProj] = 1) then
          ~ Pull out the number of dice
          nDice = mid(eachpick.field[wRanDamTbl].arraytext[iX],0,1)
          ~ Pull out damage bonus after the plus sign if the plus sign exists
          If (pos(eachpick.field[wRanDamTbl].arraytext[iX],"+") <> -1) Then
            nPlus = mid(eachpick.field[wRanDamTbl].arraytext[iX],pos(eachpick.field[wRanDamTbl].arraytext[iX],"+")+1,2)
          Endif
          ~ Pull out the die size
          nDieSize = mid(eachpick.field[wRanDamTbl].arraytext[iX],2,2)

        ~..We ar a melee weapon so process HERE
        ~ -------------------------------------
        else
          ~ Pull out the number of dice
          nDice = mid(eachpick.field[wDamageTbl].arraytext[iX],0,1)
          ~ Pull out damage bonus after the plus sign if the plus sign exists
          If (pos(eachpick.field[wDamageTbl].arraytext[iX],"+") <> -1) Then
            nPlus = mid(eachpick.field[wDamageTbl].arraytext[iX],pos(eachpick.field[wDamageTbl].arraytext[iX],"+")+1,2)
          Endif
          ~ Pull out the die size
          nDieSize = mid(eachpick.field[wDamageTbl].arraytext[iX],2,2)
        endif

        ~ Double the number of dice
        nDice *= field[abValue].value

        ~ If we have devastating strike then increase plus damage
        If (hero.tagcountstr["HasFeat.fDevasStri"] <> 0) Then
          ~ Based on how many extra dice we get extra plus damage
          If (field[abValue].value = 2) Then
            nPlus += 2
          ElseIf (field[abValue].value = 3) Then
            nPlus += 4
          ElseIf (field[abValue].value >= 4) Then
            nPlus += 6
          Endif
        Endif    

        ~ Increase the plus damage if mythic
        nPlus *= field[abValue2].value 

        ~ If we have no "dice" then do NOT display 0d0+0 for the weapon.
        if (nDice <> 0) then
          ~ Set new custom damage dice onto the weapon 
          eachpick.field[wFixDamage].text = nDice & "d" & nDieSize
          ~ If we have a bonus value other than zero then append it otherwise leave off +0
          If (nPlus <> 0) Then
            eachpick.field[wFixDamage].text &= signed(nPlus)
          Endif
          ~ Set new custom damage dice onto the weapon 
          eachpick.field[wFixRanDam].text = eachpick.field[wFixDamage].text
        endif
        
        ~ Force each weapon to only have a single attack now that Vital strike is active
        perform eachpick.assign[Helper.SingleAtt]
        ~ Remove any "Extra High" tags as we need only a single attack
        perform eachpick.delete[Helper.ExtraHigh]
      nexteach]]></eval>
    <exprreq message="Base attack bonus +6 required." iserror="no"><![CDATA[#BAB[] >= 6]]></exprreq>
    </thing>
  <thing id="fImpWepFin" name="Improved Weapon Finesse" description="You&apos;ve become more reliant on agility rather than strength when it comes to damage.\n\n{b}Prerequisites{/b}: Weapon Finesse\n\n{b}Benefit{/b}: With a light weapon, elven curve blade, rapier, whip, or spiked chain made for a creature of your size category, you may use your Dexterity modifier instead of your Strength modifier on damage rolls.\n\n{b}Normal{/b}: When using a melee weapon, you apply your Strength modifier to damage rolls." compset="Feat" summary="Gain Dex on damage with Finesse weapons." uniqueness="useronce">
    <usesource source="s20PFCamp"/>
    <tag group="fCategory" tag="Combat"/>
    <tag group="Helper" tag="ShowSpec"/>
    <tag group="Helper" tag="NoPathSoc"/>
    <eval phase="First" priority="10000"><![CDATA[
      ~ If we're disabled, get out now!
      doneif (tagis[Helper.FtDisable] <> 0)    

      ~ All Finesse and Light Weapons
      foreach pick in hero from BaseWep where "Helper.Finesse|wClass.Light"
        ~ Set tag so that we use either Str or Dex
        perform eachpick.assign[DamageOpt.aDEX]
      nexteach]]></eval>
    <exprreq message="Weapon Finesse feat required"><![CDATA[#hasfeat[fWepFin] <> 0]]></exprreq>
    </thing>
  </document>
