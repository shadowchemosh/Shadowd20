<?xml version="1.0" encoding="ISO-8859-1"?>
<document signature="Hero Lab Data">
  <loadonce key="COM_GMPack_FGG_TomeOfHorrors - Deprecated"/>
  <fileinfo>
    <info_author>
      Tim Shadow
      Created new 9/8/2013 so that deprecated Things can all go into a single location.</info_author>
    <info_history><![CDATA[
      August 8, 2013 - Tim Shadow
      -The following Thing ID's where deprecated
      -Thingids: ruMantiBla; ruMantiBlu; ruMantiGre; ruMantiRed; ruMantiWhi
      -Dragon, Dungeon: ruDungWrml, ruDungVrYg, ruDungYoun, ruDungJuve, ruDungYgAt, uDungAdult, ruDungMtAd]]></info_history>
    </fileinfo>
  <thing id="ruMantiBla" name="Mantidrake, Black" description="{B}This creature was deprecated. Please add the &quot;Mantidrake&quot; monster and select your Color from the Race tab.{/b}\n\nMantidrakes were born from fell experiments and dark rituals that crossed evil dragons with manticores. The result: a creature that combines the best and worst traits of both of its parents. From a distance, a mantidrake is often mistaken for a normal manticore. Only when opponents close against it do they see that the creature is something different.\n\nMantidrakes like dragons are territorial predators and often claim a wide expanse of land as their hunting ground. Creatures that wander into a mantidrake&apos;s territory rarely go unnoticed, especially during the daylight hours when the mantidrake spends most of its time hunting. Slain prey is either devoured on the spot (if the mantidrake is hungry) or carried back to its lair and stored for later (or fed to the young if such creatures are present). Mantidrakes are generally solitary creatures though sometimes a pair may be encountered. Such an encounter is with a mated pair.\n\nFemale mantidrakes are just as common (or rare depending on how you classify this creature) as males and are just as likely to be encountered as both sexes are skilled hunters. When gestating, a female curtails the time she spends hunting to spend it in the lair preparing both herself and the lair for her young. Young are born live and by 2 years of age they are independent enough to go out hunting on their own.\n\nA typical mantidrake is about 10 to 12 feet long and weighs about 1,100 to 1,300 pounds. Its draconic head is scaled and is the same color as its dragon parent. The color slowly fades and meshes with the mantidrake&apos;s leonine body which is covered in dull tan fur, except for its underbelly which is scaled like a true dragon&apos;s. Its wings are of the same color as its dragon parent, dark, almost black (and in the case of a black dragon parent, the wings are actually black in color).\n\nA mantidrake&apos;s environment varies based on its dragon heritage: black mantidrakes can be found in warm marshes, deserts, or underground; blue mantidrakes favor warm hills and mountains, rarely being found underground; green mantidrake s favor temperate or warm forests and underground settings; red mantidrakes favor warm mountains and underground settings; and white mantidrakes favor cold mountains, cold deserts, and underground environments.\n\nMantidrakes are aggressive combatants and begin most attacks with a blast from their deadly breath weapon. This is followed next by a volley of spikes or a claw/claw/bite routine against the closest opponent. Mantidrakes prefer to use their powerful wings to stay aloft and fight from the air where it can rain a combination of its breath weapon and deadly spikes down on its opponents." compset="Race">
    <fieldval field="rHitDice" value="9"/>
    <fieldval field="rHPStart" value="49"/>
    <fieldval field="rSTR" value="14"/>
    <fieldval field="rDEX" value="5"/>
    <fieldval field="rCON" value="10"/>
    <fieldval field="rINT" value="-1"/>
    <fieldval field="rWIS" value="4"/>
    <fieldval field="rCHA" value="3"/>
    <fieldval field="rFeat" value="-5"/>
    <fieldval field="rAC" value="8"/>
    <fieldval field="rCR" value="9"/>
    <fieldval field="rDescript" value="This creature resembles a large, powerfully-built lion with a dragon&apos;s head where its head would normally be, a pair of large scaly draconic wings, and a long serpentine tail that ends in volley of sharpened spikes."/>
    <fieldval field="rEnviron" value="warm marshes, deserts, or underground"/>
    <fieldval field="rOrgan" value="solitary or pair"/>
    <fieldval field="rTreasure" value="standard"/>
    <fieldval field="rSpace" value="10"/>
    <fieldval field="rReach" value="5"/>
    <usesource source="srcTomeHor"/>
    <tag group="RaceType" tag="NPC"/>
    <tag group="Hero" tag="NoDefComm"/>
    <tag group="RaceSize" tag="Large1"/>
    <tag group="Helper" tag="Quadruped"/>
    <tag group="Alignment" tag="Lawful"/>
    <tag group="Alignment" tag="Evil"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <tag group="HasType" tag="tpMagBeast"/>
    <tag group="WepProf" tag="wManSpike"/>
    <bootstrap thing="fPowerAtt"></bootstrap>
    <bootstrap thing="fSkillFoc">
      <autotag group="Target" tag="skSurvival"/>
      </bootstrap>
    <bootstrap thing="fWepFoc">
      <autotag group="Target" tag="wManSpike"/>
      </bootstrap>
    <bootstrap thing="lCommon"></bootstrap>
    <bootstrap thing="lDraconic"></bootstrap>
    <bootstrap thing="xFly">
      <autotag group="Maneuver" tag="Clumsy"/>
      <autotag group="Value" tag="50"/>
      </bootstrap>
    <bootstrap thing="wBite">
      <autotag group="wMain" tag="1d8_6"/>
      </bootstrap>
    <bootstrap thing="wClaw">
      <autotag group="wMain" tag="1d6_5"/>
      <autotag group="Value" tag="2"/>
      </bootstrap>
    <bootstrap thing="fFlybyAt"></bootstrap>
    <bootstrap thing="xImmAcid"></bootstrap>
    <bootstrap thing="xImmParaly"></bootstrap>
    <bootstrap thing="xImmSleep"></bootstrap>
    <bootstrap thing="xScent"></bootstrap>
    <bootstrap thing="xBonusPerc">
      <autotag group="Value" tag="4"/>
      </bootstrap>
    <bootstrap thing="raBreath">
      <assignval field="livename" value="Breath Weapon (60-ft. line, 5d8 acid, Ref. half, 1/1d4 rnds.)"/>
      </bootstrap>
    <bootstrap thing="rauMdrkSpi"></bootstrap>
    <bootstrap thing="fImpNatAtt">
      <autotag group="Target" tag="wClaw"/>
      </bootstrap>
    <bootstrap thing="wManSpike">
      <autotag group="Value" tag="6"/>
      </bootstrap>
    <eval phase="First">#skillinnate[skFly] += 1
#skillinnate[skIntim] += 2
#skillinnate[skPercep] += 5
#skillinnate[skSurvival] += 1</eval>
    </thing>
  <thing id="ruMantiBlu" name="Mantidrake, Blue" description="{B}This creature was deprecated. Please add the &quot;Mantidrake&quot; monster and select your Color from the Race tab.{/b}\n\nMantidrakes were born from fell experiments and dark rituals that crossed evil dragons with manticores. The result: a creature that combines the best and worst traits of both of its parents. From a distance, a mantidrake is often mistaken for a normal manticore. Only when opponents close against it do they see that the creature is something different.\n\nMantidrakes like dragons are territorial predators and often claim a wide expanse of land as their hunting ground. Creatures that wander into a mantidrake&apos;s territory rarely go unnoticed, especially during the daylight hours when the mantidrake spends most of its time hunting. Slain prey is either devoured on the spot (if the mantidrake is hungry) or carried back to its lair and stored for later (or fed to the young if such creatures are present). Mantidrakes are generally solitary creatures though sometimes a pair may be encountered. Such an encounter is with a mated pair.\n\nFemale mantidrakes are just as common (or rare depending on how you classify this creature) as males and are just as likely to be encountered as both sexes are skilled hunters. When gestating, a female curtails the time she spends hunting to spend it in the lair preparing both herself and the lair for her young. Young are born live and by 2 years of age they are independent enough to go out hunting on their own.\n\nA typical mantidrake is about 10 to 12 feet long and weighs about 1,100 to 1,300 pounds. Its draconic head is scaled and is the same color as its dragon parent. The color slowly fades and meshes with the mantidrake&apos;s leonine body which is covered in dull tan fur, except for its underbelly which is scaled like a true dragon&apos;s. Its wings are of the same color as its dragon parent, dark, almost black (and in the case of a black dragon parent, the wings are actually black in color).\n\nA mantidrake&apos;s environment varies based on its dragon heritage: black mantidrakes can be found in warm marshes, deserts, or underground; blue mantidrakes favor warm hills and mountains, rarely being found underground; green mantidrake s favor temperate or warm forests and underground settings; red mantidrakes favor warm mountains and underground settings; and white mantidrakes favor cold mountains, cold deserts, and underground environments.\n\nMantidrakes are aggressive combatants and begin most attacks with a blast from their deadly breath weapon. This is followed next by a volley of spikes or a claw/claw/bite routine against the closest opponent. Mantidrakes prefer to use their powerful wings to stay aloft and fight from the air where it can rain a combination of its breath weapon and deadly spikes down on its opponents." compset="Race">
    <fieldval field="rHitDice" value="9"/>
    <fieldval field="rHPStart" value="49"/>
    <fieldval field="rSTR" value="14"/>
    <fieldval field="rDEX" value="5"/>
    <fieldval field="rCON" value="10"/>
    <fieldval field="rINT" value="-1"/>
    <fieldval field="rWIS" value="4"/>
    <fieldval field="rCHA" value="3"/>
    <fieldval field="rFeat" value="-5"/>
    <fieldval field="rAC" value="8"/>
    <fieldval field="rCR" value="9"/>
    <fieldval field="rDescript" value="This creature resembles a large, powerfully-built lion with a dragon&apos;s head where its head would normally be, a pair of large scaly draconic wings, and a long serpentine tail that ends in volley of sharpened spikes."/>
    <fieldval field="rEnviron" value="warm hills and mountains"/>
    <fieldval field="rOrgan" value="solitary or pair"/>
    <fieldval field="rTreasure" value="standard"/>
    <fieldval field="rSpace" value="10"/>
    <fieldval field="rReach" value="5"/>
    <usesource source="srcTomeHor"/>
    <tag group="RaceType" tag="NPC"/>
    <tag group="Hero" tag="NoDefComm"/>
    <tag group="RaceSize" tag="Large1"/>
    <tag group="Helper" tag="Quadruped"/>
    <tag group="Alignment" tag="Lawful"/>
    <tag group="Alignment" tag="Evil"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <tag group="HasType" tag="tpMagBeast"/>
    <tag group="WepProf" tag="wManSpike"/>
    <bootstrap thing="fPowerAtt"></bootstrap>
    <bootstrap thing="fSkillFoc">
      <autotag group="Target" tag="skSurvival"/>
      </bootstrap>
    <bootstrap thing="fWepFoc">
      <autotag group="Target" tag="wManSpike"/>
      </bootstrap>
    <bootstrap thing="lCommon"></bootstrap>
    <bootstrap thing="lDraconic"></bootstrap>
    <bootstrap thing="xFly">
      <autotag group="Maneuver" tag="Clumsy"/>
      <autotag group="Value" tag="50"/>
      </bootstrap>
    <bootstrap thing="wBite">
      <autotag group="wMain" tag="1d8_6"/>
      </bootstrap>
    <bootstrap thing="wClaw">
      <autotag group="wMain" tag="1d6_5"/>
      <autotag group="Value" tag="2"/>
      </bootstrap>
    <bootstrap thing="fFlybyAt"></bootstrap>
    <bootstrap thing="xImmElec"></bootstrap>
    <bootstrap thing="xImmParaly"></bootstrap>
    <bootstrap thing="xImmSleep"></bootstrap>
    <bootstrap thing="xScent"></bootstrap>
    <bootstrap thing="xBonusPerc">
      <autotag group="Value" tag="4"/>
      </bootstrap>
    <bootstrap thing="raBreath">
      <assignval field="livename" value="Breath Weapon (60-ft. line, 5d8 electricity, Ref. half, 1/1d4 rnds.)"/>
      </bootstrap>
    <bootstrap thing="rauMdrkSpi"></bootstrap>
    <bootstrap thing="fImpNatAtt">
      <autotag group="Target" tag="wClaw"/>
      </bootstrap>
    <bootstrap thing="wManSpike">
      <autotag group="Value" tag="6"/>
      </bootstrap>
    <eval phase="First">#skillinnate[skFly] += 1
#skillinnate[skIntim] += 2
#skillinnate[skPercep] += 5
#skillinnate[skSurvival] += 1</eval>
    </thing>
  <thing id="ruMantiGre" name="Mantidrake, Green" description="{B}This creature was deprecated. Please add the &quot;Mantidrake&quot; monster and select your Color from the Race tab.{/b}\n\nMantidrakes were born from fell experiments and dark rituals that crossed evil dragons with manticores. The result: a creature that combines the best and worst traits of both of its parents. From a distance, a mantidrake is often mistaken for a normal manticore. Only when opponents close against it do they see that the creature is something different.\n\nMantidrakes like dragons are territorial predators and often claim a wide expanse of land as their hunting ground. Creatures that wander into a mantidrake&apos;s territory rarely go unnoticed, especially during the daylight hours when the mantidrake spends most of its time hunting. Slain prey is either devoured on the spot (if the mantidrake is hungry) or carried back to its lair and stored for later (or fed to the young if such creatures are present). Mantidrakes are generally solitary creatures though sometimes a pair may be encountered. Such an encounter is with a mated pair.\n\nFemale mantidrakes are just as common (or rare depending on how you classify this creature) as males and are just as likely to be encountered as both sexes are skilled hunters. When gestating, a female curtails the time she spends hunting to spend it in the lair preparing both herself and the lair for her young. Young are born live and by 2 years of age they are independent enough to go out hunting on their own.\n\nA typical mantidrake is about 10 to 12 feet long and weighs about 1,100 to 1,300 pounds. Its draconic head is scaled and is the same color as its dragon parent. The color slowly fades and meshes with the mantidrake&apos;s leonine body which is covered in dull tan fur, except for its underbelly which is scaled like a true dragon&apos;s. Its wings are of the same color as its dragon parent, dark, almost black (and in the case of a black dragon parent, the wings are actually black in color).\n\nA mantidrake&apos;s environment varies based on its dragon heritage: black mantidrakes can be found in warm marshes, deserts, or underground; blue mantidrakes favor warm hills and mountains, rarely being found underground; green mantidrake s favor temperate or warm forests and underground settings; red mantidrakes favor warm mountains and underground settings; and white mantidrakes favor cold mountains, cold deserts, and underground environments.\n\nMantidrakes are aggressive combatants and begin most attacks with a blast from their deadly breath weapon. This is followed next by a volley of spikes or a claw/claw/bite routine against the closest opponent. Mantidrakes prefer to use their powerful wings to stay aloft and fight from the air where it can rain a combination of its breath weapon and deadly spikes down on its opponents." compset="Race">
    <fieldval field="rHitDice" value="9"/>
    <fieldval field="rHPStart" value="49"/>
    <fieldval field="rSTR" value="14"/>
    <fieldval field="rDEX" value="5"/>
    <fieldval field="rCON" value="10"/>
    <fieldval field="rINT" value="-1"/>
    <fieldval field="rWIS" value="4"/>
    <fieldval field="rCHA" value="3"/>
    <fieldval field="rFeat" value="-5"/>
    <fieldval field="rAC" value="8"/>
    <fieldval field="rCR" value="9"/>
    <fieldval field="rDescript" value="This creature resembles a large, powerfully-built lion with a dragon&apos;s head where its head would normally be, a pair of large scaly draconic wings, and a long serpentine tail that ends in volley of sharpened spikes."/>
    <fieldval field="rEnviron" value="warm forests and underground"/>
    <fieldval field="rOrgan" value="solitary or pair"/>
    <fieldval field="rTreasure" value="standard"/>
    <fieldval field="rSpace" value="10"/>
    <fieldval field="rReach" value="5"/>
    <usesource source="srcTomeHor"/>
    <tag group="RaceType" tag="NPC"/>
    <tag group="Hero" tag="NoDefComm"/>
    <tag group="RaceSize" tag="Large1"/>
    <tag group="Helper" tag="Quadruped"/>
    <tag group="Alignment" tag="Lawful"/>
    <tag group="Alignment" tag="Evil"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <tag group="HasType" tag="tpMagBeast"/>
    <tag group="WepProf" tag="wManSpike"/>
    <bootstrap thing="fPowerAtt"></bootstrap>
    <bootstrap thing="fSkillFoc">
      <autotag group="Target" tag="skSurvival"/>
      </bootstrap>
    <bootstrap thing="fWepFoc">
      <autotag group="Target" tag="wManSpike"/>
      </bootstrap>
    <bootstrap thing="lCommon"></bootstrap>
    <bootstrap thing="lDraconic"></bootstrap>
    <bootstrap thing="xFly">
      <autotag group="Maneuver" tag="Clumsy"/>
      <autotag group="Value" tag="50"/>
      </bootstrap>
    <bootstrap thing="wBite">
      <autotag group="wMain" tag="1d8_6"/>
      </bootstrap>
    <bootstrap thing="wClaw">
      <autotag group="wMain" tag="1d6_5"/>
      <autotag group="Value" tag="2"/>
      </bootstrap>
    <bootstrap thing="fFlybyAt"></bootstrap>
    <bootstrap thing="xImmAcid"></bootstrap>
    <bootstrap thing="xImmParaly"></bootstrap>
    <bootstrap thing="xImmSleep"></bootstrap>
    <bootstrap thing="xScent"></bootstrap>
    <bootstrap thing="xBonusPerc">
      <autotag group="Value" tag="4"/>
      </bootstrap>
    <bootstrap thing="raBreath">
      <assignval field="livename" value="Breath Weapon (30-ft. cone, 5d8 acid, Ref. half, 1/1d4 rnds.)"/>
      </bootstrap>
    <bootstrap thing="rauMdrkSpi"></bootstrap>
    <bootstrap thing="fImpNatAtt">
      <autotag group="Target" tag="wClaw"/>
      </bootstrap>
    <bootstrap thing="wManSpike">
      <autotag group="Value" tag="6"/>
      </bootstrap>
    <eval phase="First">#skillinnate[skFly] += 1
#skillinnate[skIntim] += 2
#skillinnate[skPercep] += 5
#skillinnate[skSurvival] += 1</eval>
    </thing>
  <thing id="ruMantiRed" name="Mantidrake, Red" description="{B}This creature was deprecated. Please add the &quot;Mantidrake&quot; monster and select your Color from the Race tab.{/b}\n\nMantidrakes were born from fell experiments and dark rituals that crossed evil dragons with manticores. The result: a creature that combines the best and worst traits of both of its parents. From a distance, a mantidrake is often mistaken for a normal manticore. Only when opponents close against it do they see that the creature is something different.\n\nMantidrakes like dragons are territorial predators and often claim a wide expanse of land as their hunting ground. Creatures that wander into a mantidrake&apos;s territory rarely go unnoticed, especially during the daylight hours when the mantidrake spends most of its time hunting. Slain prey is either devoured on the spot (if the mantidrake is hungry) or carried back to its lair and stored for later (or fed to the young if such creatures are present). Mantidrakes are generally solitary creatures though sometimes a pair may be encountered. Such an encounter is with a mated pair.\n\nFemale mantidrakes are just as common (or rare depending on how you classify this creature) as males and are just as likely to be encountered as both sexes are skilled hunters. When gestating, a female curtails the time she spends hunting to spend it in the lair preparing both herself and the lair for her young. Young are born live and by 2 years of age they are independent enough to go out hunting on their own.\n\nA typical mantidrake is about 10 to 12 feet long and weighs about 1,100 to 1,300 pounds. Its draconic head is scaled and is the same color as its dragon parent. The color slowly fades and meshes with the mantidrake&apos;s leonine body which is covered in dull tan fur, except for its underbelly which is scaled like a true dragon&apos;s. Its wings are of the same color as its dragon parent, dark, almost black (and in the case of a black dragon parent, the wings are actually black in color).\n\nA mantidrake&apos;s environment varies based on its dragon heritage: black mantidrakes can be found in warm marshes, deserts, or underground; blue mantidrakes favor warm hills and mountains, rarely being found underground; green mantidrake s favor temperate or warm forests and underground settings; red mantidrakes favor warm mountains and underground settings; and white mantidrakes favor cold mountains, cold deserts, and underground environments.\n\nMantidrakes are aggressive combatants and begin most attacks with a blast from their deadly breath weapon. This is followed next by a volley of spikes or a claw/claw/bite routine against the closest opponent. Mantidrakes prefer to use their powerful wings to stay aloft and fight from the air where it can rain a combination of its breath weapon and deadly spikes down on its opponents." compset="Race">
    <fieldval field="rHitDice" value="9"/>
    <fieldval field="rHPStart" value="49"/>
    <fieldval field="rSTR" value="14"/>
    <fieldval field="rDEX" value="5"/>
    <fieldval field="rCON" value="10"/>
    <fieldval field="rINT" value="-1"/>
    <fieldval field="rWIS" value="4"/>
    <fieldval field="rCHA" value="3"/>
    <fieldval field="rFeat" value="-5"/>
    <fieldval field="rAC" value="8"/>
    <fieldval field="rCR" value="9"/>
    <fieldval field="rDescript" value="This creature resembles a large, powerfully-built lion with a dragon&apos;s head where its head would normally be, a pair of large scaly draconic wings, and a long serpentine tail that ends in volley of sharpened spikes."/>
    <fieldval field="rEnviron" value="warm mountains and underground"/>
    <fieldval field="rOrgan" value="solitary or pair"/>
    <fieldval field="rTreasure" value="standard"/>
    <fieldval field="rSpace" value="10"/>
    <fieldval field="rReach" value="5"/>
    <usesource source="srcTomeHor"/>
    <tag group="RaceType" tag="NPC"/>
    <tag group="Hero" tag="NoDefComm"/>
    <tag group="RaceSize" tag="Large1"/>
    <tag group="Helper" tag="Quadruped"/>
    <tag group="Alignment" tag="Lawful"/>
    <tag group="Alignment" tag="Evil"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <tag group="HasType" tag="tpMagBeast"/>
    <tag group="WepProf" tag="wManSpike"/>
    <bootstrap thing="fPowerAtt"></bootstrap>
    <bootstrap thing="fSkillFoc">
      <autotag group="Target" tag="skSurvival"/>
      </bootstrap>
    <bootstrap thing="fWepFoc">
      <autotag group="Target" tag="wManSpike"/>
      </bootstrap>
    <bootstrap thing="lCommon"></bootstrap>
    <bootstrap thing="lDraconic"></bootstrap>
    <bootstrap thing="xFly">
      <autotag group="Maneuver" tag="Clumsy"/>
      <autotag group="Value" tag="50"/>
      </bootstrap>
    <bootstrap thing="wBite">
      <autotag group="wMain" tag="1d8_6"/>
      </bootstrap>
    <bootstrap thing="wClaw">
      <autotag group="wMain" tag="1d6_5"/>
      <autotag group="Value" tag="2"/>
      </bootstrap>
    <bootstrap thing="fFlybyAt"></bootstrap>
    <bootstrap thing="xImmFire"></bootstrap>
    <bootstrap thing="xImmParaly"></bootstrap>
    <bootstrap thing="xImmSleep"></bootstrap>
    <bootstrap thing="xScent"></bootstrap>
    <bootstrap thing="xBonusPerc">
      <autotag group="Value" tag="4"/>
      </bootstrap>
    <bootstrap thing="raBreath">
      <assignval field="livename" value="Breath Weapon (30-ft. cone, 5d8 fire, Ref. half, 1/1d4 rnds.)"/>
      </bootstrap>
    <bootstrap thing="rauMdrkSpi"></bootstrap>
    <bootstrap thing="fImpNatAtt">
      <autotag group="Target" tag="wClaw"/>
      </bootstrap>
    <bootstrap thing="wManSpike">
      <autotag group="Value" tag="6"/>
      </bootstrap>
    <eval phase="First">#skillinnate[skFly] += 1
#skillinnate[skIntim] += 2
#skillinnate[skPercep] += 5
#skillinnate[skSurvival] += 1</eval>
    </thing>
  <thing id="ruMantiWhi" name="Mantidrake, White" description="{B}This creature was deprecated. Please add the &quot;Mantidrake&quot; monster and select your Color from the Race tab.{/b}\n\nMantidrakes were born from fell experiments and dark rituals that crossed evil dragons with manticores. The result: a creature that combines the best and worst traits of both of its parents. From a distance, a mantidrake is often mistaken for a normal manticore. Only when opponents close against it do they see that the creature is something different.\n\nMantidrakes like dragons are territorial predators and often claim a wide expanse of land as their hunting ground. Creatures that wander into a mantidrake&apos;s territory rarely go unnoticed, especially during the daylight hours when the mantidrake spends most of its time hunting. Slain prey is either devoured on the spot (if the mantidrake is hungry) or carried back to its lair and stored for later (or fed to the young if such creatures are present). Mantidrakes are generally solitary creatures though sometimes a pair may be encountered. Such an encounter is with a mated pair.\n\nFemale mantidrakes are just as common (or rare depending on how you classify this creature) as males and are just as likely to be encountered as both sexes are skilled hunters. When gestating, a female curtails the time she spends hunting to spend it in the lair preparing both herself and the lair for her young. Young are born live and by 2 years of age they are independent enough to go out hunting on their own.\n\nA typical mantidrake is about 10 to 12 feet long and weighs about 1,100 to 1,300 pounds. Its draconic head is scaled and is the same color as its dragon parent. The color slowly fades and meshes with the mantidrake&apos;s leonine body which is covered in dull tan fur, except for its underbelly which is scaled like a true dragon&apos;s. Its wings are of the same color as its dragon parent, dark, almost black (and in the case of a black dragon parent, the wings are actually black in color).\n\nA mantidrake&apos;s environment varies based on its dragon heritage: black mantidrakes can be found in warm marshes, deserts, or underground; blue mantidrakes favor warm hills and mountains, rarely being found underground; green mantidrake s favor temperate or warm forests and underground settings; red mantidrakes favor warm mountains and underground settings; and white mantidrakes favor cold mountains, cold deserts, and underground environments.\n\nMantidrakes are aggressive combatants and begin most attacks with a blast from their deadly breath weapon. This is followed next by a volley of spikes or a claw/claw/bite routine against the closest opponent. Mantidrakes prefer to use their powerful wings to stay aloft and fight from the air where it can rain a combination of its breath weapon and deadly spikes down on its opponents." compset="Race">
    <fieldval field="rHitDice" value="9"/>
    <fieldval field="rHPStart" value="49"/>
    <fieldval field="rSTR" value="14"/>
    <fieldval field="rDEX" value="5"/>
    <fieldval field="rCON" value="10"/>
    <fieldval field="rINT" value="-1"/>
    <fieldval field="rWIS" value="4"/>
    <fieldval field="rCHA" value="3"/>
    <fieldval field="rFeat" value="-5"/>
    <fieldval field="rAC" value="8"/>
    <fieldval field="rCR" value="9"/>
    <fieldval field="rDescript" value="This creature resembles a large, powerfully-built lion with a dragon&apos;s head where its head would normally be, a pair of large scaly draconic wings, and a long serpentine tail that ends in volley of sharpened spikes."/>
    <fieldval field="rEnviron" value="cold deserts and underground"/>
    <fieldval field="rOrgan" value="solitary or pair"/>
    <fieldval field="rTreasure" value="standard"/>
    <fieldval field="rSpace" value="10"/>
    <fieldval field="rReach" value="5"/>
    <usesource source="srcTomeHor"/>
    <tag group="RaceType" tag="NPC"/>
    <tag group="Hero" tag="NoDefComm"/>
    <tag group="RaceSize" tag="Large1"/>
    <tag group="Helper" tag="Quadruped"/>
    <tag group="Alignment" tag="Lawful"/>
    <tag group="Alignment" tag="Evil"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <tag group="HasType" tag="tpMagBeast"/>
    <tag group="WepProf" tag="wManSpike"/>
    <bootstrap thing="fPowerAtt"></bootstrap>
    <bootstrap thing="fSkillFoc">
      <autotag group="Target" tag="skSurvival"/>
      </bootstrap>
    <bootstrap thing="fWepFoc">
      <autotag group="Target" tag="wManSpike"/>
      </bootstrap>
    <bootstrap thing="lCommon"></bootstrap>
    <bootstrap thing="lDraconic"></bootstrap>
    <bootstrap thing="xFly">
      <autotag group="Maneuver" tag="Clumsy"/>
      <autotag group="Value" tag="50"/>
      </bootstrap>
    <bootstrap thing="wBite">
      <autotag group="wMain" tag="1d8_6"/>
      </bootstrap>
    <bootstrap thing="wClaw">
      <autotag group="wMain" tag="1d6_5"/>
      <autotag group="Value" tag="2"/>
      </bootstrap>
    <bootstrap thing="fFlybyAt"></bootstrap>
    <bootstrap thing="xImmCold"></bootstrap>
    <bootstrap thing="xImmParaly"></bootstrap>
    <bootstrap thing="xImmSleep"></bootstrap>
    <bootstrap thing="xScent"></bootstrap>
    <bootstrap thing="xBonusPerc">
      <autotag group="Value" tag="4"/>
      </bootstrap>
    <bootstrap thing="raBreath">
      <assignval field="livename" value="Breath Weapon (30-ft. cone, 5d8 cold, Ref. half, 1/1d4 rnds.)"/>
      </bootstrap>
    <bootstrap thing="rauMdrkSpi"></bootstrap>
    <bootstrap thing="fImpNatAtt">
      <autotag group="Target" tag="wClaw"/>
      </bootstrap>
    <bootstrap thing="wManSpike">
      <autotag group="Value" tag="6"/>
      </bootstrap>
    <eval phase="First">#skillinnate[skFly] += 1
#skillinnate[skIntim] += 2
#skillinnate[skPercep] += 5
#skillinnate[skSurvival] += 1</eval>
    </thing>
  <thing id="ruDungWrml" name="Dragon, Dungeon, Wyrmling" description="{B}This creature was deprecated. Please add the &quot;Dragon, Dungeon&quot; monster and select your age cateogry from the Dragon Age tab.{/b}\n\nThe dungeon dragon is a curious creature that gets amusement by watching other beings engaged in life and death struggles. To this end, a dungeon dragon sets up a labyrinthine lair, setting traps and populating it with monsters. Younger dungeon dragons tend to lair in natural caverns to ease the burden of construction. Older, more experienced dungeon dragons have been known to construct their own sprawling subterranean complexes, even to the point of hiring on dwarf work gangs and swearing them to secrecy.\n\nOnce the construction and refurbishing of its lair is complete, the dungeon dragon transforms itself into a humanoid and ventures into the surrounding countryside. There it spreads rumors and tales of this horrible catacomb in hopes of luring adventurers forth so it may watch them via its crystal ball. Young dungeon dragons often spend years living among humanoids, even to the point of joining adventurers involved in dungeon delves. On such adventures, the intrepid dungeon dragon takes notes regarding the devious traps and monsters it encounters so that it can add such things to its own lair.\n\nOddly enough, although a dungeon dragon goes to great pains to amass a treasure hoard, it cares little for material wealth. Rather, it uses the treasure it gathers as bait in its dungeon to lure in adventurers and provide it the entertainment it so greatly desires. Watching adventurers explore its catacomb is the only real treasure a dungeon dragon desires. The only material possession a dungeon dragon will risk its life to save is its crystal ball. Without this vital piece of equipment, all of the dragon&apos;s labor is in vain.\n\nA dungeon dragon in its natural form prefers to flee any combat. It likes to watch other creatures engaged in fights for life, not itself. If forced into melee, it swats at opponents with its powerful claws and bite. A dungeon dragon is proficient in the use of all simple and martial weapons and light and medium armor and shields." compset="Race">
    <fieldval field="rSTR" value="1"/>
    <fieldval field="rDEX" value="5"/>
    <fieldval field="rCON" value="-2"/>
    <fieldval field="rCHA" value="-2"/>
    <fieldval field="rHitDice" value="1"/>
    <fieldval field="rHPStart" value="6"/>
    <fieldval field="rAC" value="1"/>
    <fieldval field="rCR" value="1"/>
    <fieldval field="rEnviron" value="Underground"/>
    <fieldval field="rOrgan" value="Solitary"/>
    <fieldval field="rTreasure" value="Triple plus crystal ball"/>
    <fieldval field="rDescript" value="This dragon has a long serpentine neck, small wings, and glistening scales. Two small horns dominate its triangular head. Its body is gray in color, with scales tipped in flecks of gold and green. Its eyes are rounded and gray."/>
    <fieldval field="rFeat" value="-1"/>
    <usesource source="srcTomeHor"/>
    <tag group="Race" tag="rTrueDrago" name="True Dragon" abbrev="True Dragon"/>
    <tag group="RaceSize" tag="Tiny12" name="Tiny" abbrev="Tiny"/>
    <tag group="RaceType" tag="NPC" name="NPC Race" abbrev="NPC Race"/>
    <tag group="HasType" tag="tpDragon" name="Dragon" abbrev="Dragon"/>
    <tag group="Helper" tag="Quadruped" name="Quadruped" abbrev="Quadruped"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <tag group="Alignment" tag="NeutralLC"/>
    <tag group="Alignment" tag="NeutralGE"/>
    <tag group="Hero" tag="NoDefComm" name="NoDefComm" abbrev="NoDefComm"/>
    <bootstrap thing="wWing">
      <autotag group="wMain" tag="1d2_2"/>
      <autotag group="Value" tag="2"/>
      </bootstrap>
    <bootstrap thing="wCrush"></bootstrap>
    <bootstrap thing="wTailSweep"></bootstrap>
    <bootstrap thing="raDarkVis">
      <autotag group="Value" tag="120"/>
      </bootstrap>
    <bootstrap thing="rBlindsen">
      <autotag group="Value" tag="60"/>
      </bootstrap>
    <bootstrap thing="lCommonND"></bootstrap>
    <bootstrap thing="xFly">
      <autotag group="Maneuver" tag="Average"/>
      </bootstrap>
    <bootstrap thing="lDraconic"></bootstrap>
    <bootstrap thing="stShapecha"></bootstrap>
    <bootstrap thing="raDrBreath">
      <autotag group="BloodEner" tag="Acid"/>
      </bootstrap>
    <bootstrap thing="wBite">
      <autotag group="wMain" tag="1d4_4"/>
      <autotag group="Helper" tag="NatPrimary"/>
      <autotag group="Helper" tag="NatTwoHand"/>
      </bootstrap>
    <bootstrap thing="wClaw">
      <autotag group="wMain" tag="1d3_3"/>
      <autotag group="Value" tag="2"/>
      <autotag group="Helper" tag="NatPrimary"/>
      </bootstrap>
    <bootstrap thing="raDrSenses"></bootstrap>
    <bootstrap thing="xuImmEnchm"></bootstrap>
    <bootstrap thing="rauDrDgCfC"></bootstrap>
    <bootstrap thing="xBonusPerc">
      <autotag group="Value" tag="4"/>
      </bootstrap>
    <bootstrap thing="fSkillFoc">
      <autotag group="Target" tag="skCrafOth"/>
      </bootstrap>
    <bootstrap thing="wTailSlap">
      <autotag group="wMain" tag="1d3_3"/>
      <autotag group="Helper" tag="NatTwoHand"/>
      </bootstrap>
    <bootstrap thing="skCrafOth">
      <assignval field="skUserName" value="crystal carving"/>
      <assignval field="skTools" value="1"/>
      </bootstrap>
    <bootstrap thing="fMasCraft">
      <autotag group="thing" tag="skipprereq"/>
      <autotag group="Target" tag="skCrafOth"/>
      </bootstrap>
    <eval phase="PreLevel" priority="9900" index="3"><![CDATA[~ Set the name, range (based on size) and damage of our breath weapon.
      var Lrange as number
      if (herofield[tSize].value <= -2) then
          Lrange = 30
      elseif (herofield[tSize].value = -1) then
          Lrange = 40
      elseif (herofield[tSize].value = 0) then
          Lrange = 60
      elseif (herofield[tSize].value = 1) then
          Lrange = 80
      elseif (herofield[tSize].value = 2) then
          Lrange = 100
      elseif (herofield[tSize].value = 3) then
          Lrange = 120
      elseif (herofield[tSize].value >= 4) then
          Lrange = 140
      endif

var Crange as number
Crange = Lrange / 2

~ Manually change the damage dice for each age category, since this does not depend on size.
      hero.child[raDrBreath].field[livename].text = "Breath Weapon (" & Lrange & "-ft. line or " & Crange & "-ft. cone, confusion, every 1d6 rounds, Fort neg.)"

~ Modified natural weapons according to size... If we are too small hide the weapons, if we are Huge our bite should be 2d8 not 3d6, if we are Gargantuan then Claw and Tail slap should be same, if we are Colossol then bite should be 4d8 and Wings should be 2d8. Also set the fly speed.

if (herofield[tSize].value <= -4) then
   perform hero.child[wWing].assign[Hide.Weapon]
   perform hero.child[wTailSlap].assign[Hide.Weapon]

   perform hero.child[wCrush].assign[Hide.Weapon]
   perform hero.child[wTailSweep].assign[Hide.Weapon]

   hero.child[xFly].field[abValue].value = maximum(hero.child[xFly].field[abValue].value, 100)
   perform hero.child[xFly].assign[Maneuver.Average]

elseif (herofield[tSize].value = -3) then
   perform hero.child[wWing].assign[Hide.Weapon]
   perform hero.child[wTailSlap].assign[Hide.Weapon]

   perform hero.child[wCrush].assign[Hide.Weapon]
   perform hero.child[wTailSweep].assign[Hide.Weapon]

   hero.child[xFly].field[abValue].value = maximum(hero.child[xFly].field[abValue].value, 100)
   perform hero.child[xFly].assign[Maneuver.Average]

elseif (herofield[tSize].value = -2) then
   perform hero.child[wWing].assign[Hide.Weapon]
   perform hero.child[wTailSlap].assign[Hide.Weapon]

   perform hero.child[wCrush].assign[Hide.Weapon]
   perform hero.child[wTailSweep].assign[Hide.Weapon]

   hero.child[xFly].field[abValue].value = maximum(hero.child[xFly].field[abValue].value, 100)
   perform hero.child[xFly].assign[Maneuver.Average]

elseif (herofield[tSize].value = -1) then
   perform hero.child[wWing].assign[Hide.Weapon]
   perform hero.child[wTailSlap].assign[Hide.Weapon]

   perform hero.child[wCrush].assign[Hide.Weapon]
   perform hero.child[wTailSweep].assign[Hide.Weapon]

   hero.child[xFly].field[abValue].value = maximum(hero.child[xFly].field[abValue].value, 150)
   perform hero.child[xFly].assign[Maneuver.Average]

elseif (herofield[tSize].value = 0) then
   perform hero.child[wTailSlap].assign[Hide.Weapon]

   perform hero.child[wCrush].assign[Hide.Weapon]
   perform hero.child[wTailSweep].assign[Hide.Weapon]

   hero.child[xFly].field[abValue].value = maximum(hero.child[xFly].field[abValue].value, 150)
   perform hero.child[xFly].assign[Maneuver.Average]

elseif (herofield[tSize].value = 1) then
   perform hero.child[wCrush].assign[Hide.Weapon]
   perform hero.child[wTailSweep].assign[Hide.Weapon]

   hero.child[xFly].field[abValue].value = maximum(hero.child[xFly].field[abValue].value, 200)
   perform hero.child[xFly].assign[Maneuver.Poor]

elseif (herofield[tSize].value = 2) then
   perform hero.child[wBite].tagreplace[wMain.?,wMain.2d8_204]
   perform hero.child[wBite].delete[Helper.DamageUp]

   perform hero.child[wCrush].assign[wMain.2d8_204]
   perform hero.child[wCrush].delete[Helper.DamageUp]
   perform hero.child[wTailSweep].assign[Hide.Weapon]

   hero.child[xFly].field[abValue].value = maximum(hero.child[xFly].field[abValue].value, 200)
   perform hero.child[xFly].assign[Maneuver.Poor]

elseif (herofield[tSize].value = 3) then
   perform hero.child[wClaw].tagreplace[wMain.?,wMain.2d8_204]
   perform hero.child[wClaw].delete[Helper.DamageUp]
   perform hero.child[wTailSlap].tagreplace[wMain.?,wMain.2d8_204]
   perform hero.child[wTailSlap].delete[Helper.DamageUp]

   perform hero.child[wCrush].assign[wMain.4d6_106]
   perform hero.child[wCrush].delete[Helper.DamageUp]
   perform hero.child[wTailSweep].assign[wMain.2d6_104]
   perform hero.child[wTailSweep].delete[Helper.DamageUp]

   hero.child[xFly].field[abValue].value = maximum(hero.child[xFly].field[abValue].value, 250)
   perform hero.child[xFly].assign[Maneuver.Clumsy]

elseif (herofield[tSize].value >= 4) then
   perform hero.child[wBite].tagreplace[wMain.?,wMain.4d8_206]
   perform hero.child[wBite].delete[Helper.DamageUp]
   perform hero.child[wWing].tagreplace[wMain.?,wMain.2d8_204]
   perform hero.child[wWing].delete[Helper.DamageUp]

   perform hero.child[wCrush].assign[wMain.4d8_206]
   perform hero.child[wCrush].delete[Helper.DamageUp]
   perform hero.child[wTailSweep].assign[wMain.2d8_204]
   perform hero.child[wTailSweep].delete[Helper.DamageUp]

   hero.child[xFly].field[abValue].value = maximum(hero.child[xFly].field[abValue].value, 250)
   perform hero.child[xFly].assign[Maneuver.Clumsy]

endif]]></eval>
    <eval phase="Final" priority="11000">~ Dragons have spell like abilities of CL = to TOTAL (not racial) hit dice
      var CL as number
      CL = herofield[tHitDice].value
      field[rSpCastLev].value = CL</eval>
    <eval phase="PreLevel" priority="4000" index="4">#skillinnate[skBluff] += 1
#skillinnate[skCrafOth] += 1
#skillinnate[skDiplo] += 1
#skillinnate[skFly] += 1
#skillinnate[skPercep] += 1
#skillinnate[skSenseMot] += 1
      <before name="Skill Bonus Feats"/>
      </eval>
    </thing>
  <thing id="ruDungVrYg" name="Dragon, Dungeon, Very Young" description="{B}This creature was deprecated. Please add the &quot;Dragon, Dungeon&quot; monster and select your age cateogry from the Dragon Age tab.{/b}\n\nThe dungeon dragon is a curious creature that gets amusement by watching other beings engaged in life and death struggles. To this end, a dungeon dragon sets up a labyrinthine lair, setting traps and populating it with monsters. Younger dungeon dragons tend to lair in natural caverns to ease the burden of construction. Older, more experienced dungeon dragons have been known to construct their own sprawling subterranean complexes, even to the point of hiring on dwarf work gangs and swearing them to secrecy.\n\nOnce the construction and refurbishing of its lair is complete, the dungeon dragon transforms itself into a humanoid and ventures into the surrounding countryside. There it spreads rumors and tales of this horrible catacomb in hopes of luring adventurers forth so it may watch them via its crystal ball. Young dungeon dragons often spend years living among humanoids, even to the point of joining adventurers involved in dungeon delves. On such adventures, the intrepid dungeon dragon takes notes regarding the devious traps and monsters it encounters so that it can add such things to its own lair.\n\nOddly enough, although a dungeon dragon goes to great pains to amass a treasure hoard, it cares little for material wealth. Rather, it uses the treasure it gathers as bait in its dungeon to lure in adventurers and provide it the entertainment it so greatly desires. Watching adventurers explore its catacomb is the only real treasure a dungeon dragon desires. The only material possession a dungeon dragon will risk its life to save is its crystal ball. Without this vital piece of equipment, all of the dragon&apos;s labor is in vain.\n\nA dungeon dragon in its natural form prefers to flee any combat. It likes to watch other creatures engaged in fights for life, not itself. If forced into melee, it swats at opponents with its powerful claws and bite. A dungeon dragon is proficient in the use of all simple and martial weapons and light and medium armor and shields." compset="Race">
    <fieldval field="rSTR" value="5"/>
    <fieldval field="rDEX" value="3"/>
    <fieldval field="rHitDice" value="3"/>
    <fieldval field="rHPStart" value="19"/>
    <fieldval field="rAC" value="4"/>
    <fieldval field="rCR" value="3"/>
    <fieldval field="rEnviron" value="Underground"/>
    <fieldval field="rOrgan" value="Solitary"/>
    <fieldval field="rTreasure" value="Triple plus crystal ball"/>
    <fieldval field="rDescript" value="This dragon has a long serpentine neck, small wings, and glistening scales. Two small horns dominate its triangular head. Its body is gray in color, with scales tipped in flecks of gold and green. Its eyes are rounded and gray."/>
    <fieldval field="rFeat" value="-2"/>
    <fieldval field="rINT" value="2"/>
    <fieldval field="rWIS" value="2"/>
    <usesource source="srcTomeHor"/>
    <tag group="HasType" tag="tpDragon" name="Dragon" abbrev="Dragon"/>
    <tag group="Helper" tag="Quadruped" name="Quadruped" abbrev="Quadruped"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <tag group="Alignment" tag="NeutralLC"/>
    <tag group="Alignment" tag="NeutralGE"/>
    <tag group="Hero" tag="NoDefComm" name="NoDefComm" abbrev="NoDefComm"/>
    <tag group="RaceSize" tag="Small11"/>
    <tag group="Race" tag="rTrueDrago" name="True Dragon" abbrev="True Dragon"/>
    <tag group="RaceType" tag="NPC" name="NPC Race" abbrev="NPC Race"/>
    <bootstrap thing="raDarkVis">
      <autotag group="Value" tag="120"/>
      </bootstrap>
    <bootstrap thing="rBlindsen">
      <autotag group="Value" tag="60"/>
      </bootstrap>
    <bootstrap thing="lCommonND"></bootstrap>
    <bootstrap thing="xFly">
      <autotag group="Maneuver" tag="Average"/>
      </bootstrap>
    <bootstrap thing="lDraconic"></bootstrap>
    <bootstrap thing="stShapecha"></bootstrap>
    <bootstrap thing="raDrBreath">
      <autotag group="BloodEner" tag="Acid"/>
      </bootstrap>
    <bootstrap thing="wBite">
      <autotag group="wMain" tag="1d6_5"/>
      <autotag group="Helper" tag="NatPrimary"/>
      <autotag group="Helper" tag="NatTwoHand"/>
      </bootstrap>
    <bootstrap thing="wClaw">
      <autotag group="wMain" tag="1d4_4"/>
      <autotag group="Value" tag="2"/>
      <autotag group="Helper" tag="NatPrimary"/>
      </bootstrap>
    <bootstrap thing="raDrSenses"></bootstrap>
    <bootstrap thing="xuImmEnchm"></bootstrap>
    <bootstrap thing="rauDrDgCfC"></bootstrap>
    <bootstrap thing="xBonusPerc">
      <autotag group="Value" tag="4"/>
      </bootstrap>
    <bootstrap thing="fSkillFoc">
      <autotag group="Target" tag="skCrafOth"/>
      </bootstrap>
    <bootstrap thing="wTailSlap">
      <autotag group="wMain" tag="1d3_3"/>
      <autotag group="Helper" tag="NatTwoHand"/>
      </bootstrap>
    <bootstrap thing="skCrafOth">
      <assignval field="skUserName" value="crystal carving"/>
      <assignval field="skTools" value="1"/>
      </bootstrap>
    <bootstrap thing="fMasCraft">
      <autotag group="thing" tag="skipprereq"/>
      <autotag group="Target" tag="skCrafOth"/>
      </bootstrap>
    <bootstrap thing="wWing">
      <autotag group="wMain" tag="1d2_2"/>
      <autotag group="Value" tag="2"/>
      </bootstrap>
    <bootstrap thing="wCrush"></bootstrap>
    <bootstrap thing="raChangeSh">
      <autotag group="Usage" tag="AtWill"/>
      <assignval field="livename" value="Change Shape (Small or Medium Humanoid creature; alter self)"/>
      </bootstrap>
    <bootstrap thing="skKnowEng"></bootstrap>
    <bootstrap thing="fFlybyAt"></bootstrap>
    <bootstrap thing="wTailSweep"></bootstrap>
    <eval phase="Final" priority="11000">~ Dragons have spell like abilities of CL = to TOTAL (not racial) hit dice
      var CL as number
      CL = herofield[tHitDice].value
      field[rSpCastLev].value = CL</eval>
    <eval phase="PreLevel" priority="4000" index="4">#skillinnate[skBluff] += 3
#skillinnate[skCrafOth] += 3
#skillinnate[skDiplo] += 3
#skillinnate[skFly] += 3
#skillinnate[skPercep] += 3
#skillinnate[skSenseMot] += 3
#skillinnate[skKnowEng] += 3
      <before name="Skill Bonus Feats"/>
      </eval>
    <eval phase="PreLevel" priority="9900" index="3"><![CDATA[~ Set the name, range (based on size) and damage of our breath weapon.
      var Lrange as number
      if (herofield[tSize].value <= -2) then
          Lrange = 30
      elseif (herofield[tSize].value = -1) then
          Lrange = 40
      elseif (herofield[tSize].value = 0) then
          Lrange = 60
      elseif (herofield[tSize].value = 1) then
          Lrange = 80
      elseif (herofield[tSize].value = 2) then
          Lrange = 100
      elseif (herofield[tSize].value = 3) then
          Lrange = 120
      elseif (herofield[tSize].value >= 4) then
          Lrange = 140
      endif

var Crange as number
Crange = Lrange / 2

~ Manually change the damage dice for each age category, since this does not depend on size.
      hero.child[raDrBreath].field[livename].text = "Breath Weapon (" & Lrange & "-ft. line or " & Crange & "-ft. cone, confusion, every 1d6 rounds, Fort neg.)"

~ Modified natural weapons according to size... If we are too small hide the weapons, if we are Huge our bite should be 2d8 not 3d6, if we are Gargantuan then Claw and Tail slap should be same, if we are Colossol then bite should be 4d8 and Wings should be 2d8. Also set the fly speed.

if (herofield[tSize].value <= -4) then
   perform hero.child[wWing].assign[Hide.Weapon]
   perform hero.child[wTailSlap].assign[Hide.Weapon]

   perform hero.child[wCrush].assign[Hide.Weapon]
   perform hero.child[wTailSweep].assign[Hide.Weapon]

   hero.child[xFly].field[abValue].value = maximum(hero.child[xFly].field[abValue].value, 100)
   perform hero.child[xFly].assign[Maneuver.Average]

elseif (herofield[tSize].value = -3) then
   perform hero.child[wWing].assign[Hide.Weapon]
   perform hero.child[wTailSlap].assign[Hide.Weapon]

   perform hero.child[wCrush].assign[Hide.Weapon]
   perform hero.child[wTailSweep].assign[Hide.Weapon]

   hero.child[xFly].field[abValue].value = maximum(hero.child[xFly].field[abValue].value, 100)
   perform hero.child[xFly].assign[Maneuver.Average]

elseif (herofield[tSize].value = -2) then
   perform hero.child[wWing].assign[Hide.Weapon]
   perform hero.child[wTailSlap].assign[Hide.Weapon]

   perform hero.child[wCrush].assign[Hide.Weapon]
   perform hero.child[wTailSweep].assign[Hide.Weapon]

   hero.child[xFly].field[abValue].value = maximum(hero.child[xFly].field[abValue].value, 100)
   perform hero.child[xFly].assign[Maneuver.Average]

elseif (herofield[tSize].value = -1) then
   perform hero.child[wWing].assign[Hide.Weapon]
   perform hero.child[wTailSlap].assign[Hide.Weapon]

   perform hero.child[wCrush].assign[Hide.Weapon]
   perform hero.child[wTailSweep].assign[Hide.Weapon]

   hero.child[xFly].field[abValue].value = maximum(hero.child[xFly].field[abValue].value, 150)
   perform hero.child[xFly].assign[Maneuver.Average]

elseif (herofield[tSize].value = 0) then
   perform hero.child[wTailSlap].assign[Hide.Weapon]

   perform hero.child[wCrush].assign[Hide.Weapon]
   perform hero.child[wTailSweep].assign[Hide.Weapon]

   hero.child[xFly].field[abValue].value = maximum(hero.child[xFly].field[abValue].value, 150)
   perform hero.child[xFly].assign[Maneuver.Average]

elseif (herofield[tSize].value = 1) then
   perform hero.child[wCrush].assign[Hide.Weapon]
   perform hero.child[wTailSweep].assign[Hide.Weapon]

   hero.child[xFly].field[abValue].value = maximum(hero.child[xFly].field[abValue].value, 200)
   perform hero.child[xFly].assign[Maneuver.Poor]

elseif (herofield[tSize].value = 2) then
   perform hero.child[wBite].tagreplace[wMain.?,wMain.2d8_204]
   perform hero.child[wBite].delete[Helper.DamageUp]

   perform hero.child[wCrush].assign[wMain.2d8_204]
   perform hero.child[wCrush].delete[Helper.DamageUp]
   perform hero.child[wTailSweep].assign[Hide.Weapon]

   hero.child[xFly].field[abValue].value = maximum(hero.child[xFly].field[abValue].value, 200)
   perform hero.child[xFly].assign[Maneuver.Poor]

elseif (herofield[tSize].value = 3) then
   perform hero.child[wClaw].tagreplace[wMain.?,wMain.2d8_204]
   perform hero.child[wClaw].delete[Helper.DamageUp]
   perform hero.child[wTailSlap].tagreplace[wMain.?,wMain.2d8_204]
   perform hero.child[wTailSlap].delete[Helper.DamageUp]

   perform hero.child[wCrush].assign[wMain.4d6_106]
   perform hero.child[wCrush].delete[Helper.DamageUp]
   perform hero.child[wTailSweep].assign[wMain.2d6_104]
   perform hero.child[wTailSweep].delete[Helper.DamageUp]

   hero.child[xFly].field[abValue].value = maximum(hero.child[xFly].field[abValue].value, 250)
   perform hero.child[xFly].assign[Maneuver.Clumsy]

elseif (herofield[tSize].value >= 4) then
   perform hero.child[wBite].tagreplace[wMain.?,wMain.4d8_206]
   perform hero.child[wBite].delete[Helper.DamageUp]
   perform hero.child[wWing].tagreplace[wMain.?,wMain.2d8_204]
   perform hero.child[wWing].delete[Helper.DamageUp]

   perform hero.child[wCrush].assign[wMain.4d8_206]
   perform hero.child[wCrush].delete[Helper.DamageUp]
   perform hero.child[wTailSweep].assign[wMain.2d8_204]
   perform hero.child[wTailSweep].delete[Helper.DamageUp]

   hero.child[xFly].field[abValue].value = maximum(hero.child[xFly].field[abValue].value, 250)
   perform hero.child[xFly].assign[Maneuver.Clumsy]

endif]]></eval>
    </thing>
  <thing id="ruDungYoun" name="Dragon, Dungeon, Young" description="{B}This creature was deprecated. Please add the &quot;Dragon, Dungeon&quot; monster and select your age cateogry from the Dragon Age tab.{/b}\n\nThe dungeon dragon is a curious creature that gets amusement by watching other beings engaged in life and death struggles. To this end, a dungeon dragon sets up a labyrinthine lair, setting traps and populating it with monsters. Younger dungeon dragons tend to lair in natural caverns to ease the burden of construction. Older, more experienced dungeon dragons have been known to construct their own sprawling subterranean complexes, even to the point of hiring on dwarf work gangs and swearing them to secrecy.\n\nOnce the construction and refurbishing of its lair is complete, the dungeon dragon transforms itself into a humanoid and ventures into the surrounding countryside. There it spreads rumors and tales of this horrible catacomb in hopes of luring adventurers forth so it may watch them via its crystal ball. Young dungeon dragons often spend years living among humanoids, even to the point of joining adventurers involved in dungeon delves. On such adventures, the intrepid dungeon dragon takes notes regarding the devious traps and monsters it encounters so that it can add such things to its own lair.\n\nOddly enough, although a dungeon dragon goes to great pains to amass a treasure hoard, it cares little for material wealth. Rather, it uses the treasure it gathers as bait in its dungeon to lure in adventurers and provide it the entertainment it so greatly desires. Watching adventurers explore its catacomb is the only real treasure a dungeon dragon desires. The only material possession a dungeon dragon will risk its life to save is its crystal ball. Without this vital piece of equipment, all of the dragon&apos;s labor is in vain.\n\nA dungeon dragon in its natural form prefers to flee any combat. It likes to watch other creatures engaged in fights for life, not itself. If forced into melee, it swats at opponents with its powerful claws and bite. A dungeon dragon is proficient in the use of all simple and martial weapons and light and medium armor and shields." compset="Race">
    <fieldval field="rSTR" value="9"/>
    <fieldval field="rDEX" value="3"/>
    <fieldval field="rHitDice" value="5"/>
    <fieldval field="rHPStart" value="32"/>
    <fieldval field="rAC" value="7"/>
    <fieldval field="rCR" value="5"/>
    <fieldval field="rEnviron" value="Underground"/>
    <fieldval field="rOrgan" value="Solitary"/>
    <fieldval field="rTreasure" value="Triple plus crystal ball"/>
    <fieldval field="rDescript" value="This dragon has a long serpentine neck, small wings, and glistening scales. Two small horns dominate its triangular head. Its body is gray in color, with scales tipped in flecks of gold and green. Its eyes are rounded and gray."/>
    <fieldval field="rFeat" value="-3"/>
    <fieldval field="rINT" value="2"/>
    <fieldval field="rWIS" value="2"/>
    <fieldval field="rCON" value="2"/>
    <usesource source="srcTomeHor"/>
    <tag group="Helper" tag="Quadruped" name="Quadruped" abbrev="Quadruped"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <tag group="Alignment" tag="NeutralLC"/>
    <tag group="Alignment" tag="NeutralGE"/>
    <tag group="Hero" tag="NoDefComm" name="NoDefComm" abbrev="NoDefComm"/>
    <tag group="RaceSize" tag="Medium0"/>
    <tag group="Race" tag="rTrueDrago" name="True Dragon" abbrev="True Dragon"/>
    <tag group="RaceType" tag="NPC" name="NPC Race" abbrev="NPC Race"/>
    <tag group="HasType" tag="tpDragon" name="Dragon" abbrev="Dragon"/>
    <bootstrap thing="rBlindsen">
      <autotag group="Value" tag="60"/>
      </bootstrap>
    <bootstrap thing="lCommonND"></bootstrap>
    <bootstrap thing="xFly">
      <autotag group="Maneuver" tag="Average"/>
      </bootstrap>
    <bootstrap thing="lDraconic"></bootstrap>
    <bootstrap thing="stShapecha"></bootstrap>
    <bootstrap thing="raDrBreath">
      <autotag group="BloodEner" tag="Acid"/>
      </bootstrap>
    <bootstrap thing="wBite">
      <autotag group="wMain" tag="1d8_6"/>
      <autotag group="Helper" tag="NatPrimary"/>
      <autotag group="Helper" tag="NatTwoHand"/>
      </bootstrap>
    <bootstrap thing="wClaw">
      <autotag group="wMain" tag="1d6_5"/>
      <autotag group="Value" tag="2"/>
      <autotag group="Helper" tag="NatPrimary"/>
      </bootstrap>
    <bootstrap thing="raDrSenses"></bootstrap>
    <bootstrap thing="xuImmEnchm"></bootstrap>
    <bootstrap thing="rauDrDgCfC"></bootstrap>
    <bootstrap thing="xBonusPerc">
      <autotag group="Value" tag="4"/>
      </bootstrap>
    <bootstrap thing="fSkillFoc">
      <autotag group="Target" tag="skCrafOth"/>
      </bootstrap>
    <bootstrap thing="wTailSlap">
      <autotag group="wMain" tag="1d3_3"/>
      <autotag group="Helper" tag="NatTwoHand"/>
      </bootstrap>
    <bootstrap thing="skCrafOth">
      <assignval field="skUserName" value="crystal carving"/>
      <assignval field="skTools" value="1"/>
      </bootstrap>
    <bootstrap thing="fMasCraft">
      <autotag group="thing" tag="skipprereq"/>
      <autotag group="Target" tag="skCrafOth"/>
      </bootstrap>
    <bootstrap thing="wWing">
      <autotag group="wMain" tag="1d4_4"/>
      <autotag group="Value" tag="2"/>
      </bootstrap>
    <bootstrap thing="wCrush"></bootstrap>
    <bootstrap thing="raChangeSh">
      <autotag group="Usage" tag="AtWill"/>
      <assignval field="livename" value="Change Shape (Small or Medium Humanoid creature; alter self)"/>
      </bootstrap>
    <bootstrap thing="skKnowEng"></bootstrap>
    <bootstrap thing="fFlybyAt"></bootstrap>
    <bootstrap thing="wTailSweep"></bootstrap>
    <bootstrap thing="spCharPer1">
      <autotag group="Helper" tag="SpellLike"/>
      <autotag group="Usage" tag="AtWill"/>
      </bootstrap>
    <bootstrap thing="fSkillFoc">
      <autotag group="Target" tag="skKnowEng"/>
      </bootstrap>
    <bootstrap thing="skCrafTrap"></bootstrap>
    <bootstrap thing="raDarkVis">
      <autotag group="Value" tag="120"/>
      </bootstrap>
    <eval phase="PreLevel" priority="4000" index="4">#skillinnate[skBluff] += 5
#skillinnate[skCrafOth] += 3
#skillinnate[skCrafTrap] += 2
#skillinnate[skDiplo] += 3
#skillinnate[skDisable] += 2
#skillinnate[skFly] += 5
#skillinnate[skKnowEng] += 5
#skillinnate[skPercep] += 5
#skillinnate[skSenseMot] += 5
      <before name="Skill Bonus Feats"/>
      </eval>
    <eval phase="PreLevel" priority="9900" index="3"><![CDATA[~ Set the name, range (based on size) and damage of our breath weapon.
      var Lrange as number
      if (herofield[tSize].value <= -2) then
          Lrange = 30
      elseif (herofield[tSize].value = -1) then
          Lrange = 40
      elseif (herofield[tSize].value = 0) then
          Lrange = 60
      elseif (herofield[tSize].value = 1) then
          Lrange = 80
      elseif (herofield[tSize].value = 2) then
          Lrange = 100
      elseif (herofield[tSize].value = 3) then
          Lrange = 120
      elseif (herofield[tSize].value >= 4) then
          Lrange = 140
      endif

var Crange as number
Crange = Lrange / 2

~ Manually change the damage dice for each age category, since this does not depend on size.
      hero.child[raDrBreath].field[livename].text = "Breath Weapon (" & Lrange & "-ft. line or " & Crange & "-ft. cone, confusion, every 1d6 rounds, Fort neg.)"

~ Modified natural weapons according to size... If we are too small hide the weapons, if we are Huge our bite should be 2d8 not 3d6, if we are Gargantuan then Claw and Tail slap should be same, if we are Colossol then bite should be 4d8 and Wings should be 2d8. Also set the fly speed.

if (herofield[tSize].value <= -4) then
   perform hero.child[wWing].assign[Hide.Weapon]
   perform hero.child[wTailSlap].assign[Hide.Weapon]

   perform hero.child[wCrush].assign[Hide.Weapon]
   perform hero.child[wTailSweep].assign[Hide.Weapon]

   hero.child[xFly].field[abValue].value = maximum(hero.child[xFly].field[abValue].value, 100)
   perform hero.child[xFly].assign[Maneuver.Average]

elseif (herofield[tSize].value = -3) then
   perform hero.child[wWing].assign[Hide.Weapon]
   perform hero.child[wTailSlap].assign[Hide.Weapon]

   perform hero.child[wCrush].assign[Hide.Weapon]
   perform hero.child[wTailSweep].assign[Hide.Weapon]

   hero.child[xFly].field[abValue].value = maximum(hero.child[xFly].field[abValue].value, 100)
   perform hero.child[xFly].assign[Maneuver.Average]

elseif (herofield[tSize].value = -2) then
   perform hero.child[wWing].assign[Hide.Weapon]
   perform hero.child[wTailSlap].assign[Hide.Weapon]

   perform hero.child[wCrush].assign[Hide.Weapon]
   perform hero.child[wTailSweep].assign[Hide.Weapon]

   hero.child[xFly].field[abValue].value = maximum(hero.child[xFly].field[abValue].value, 100)
   perform hero.child[xFly].assign[Maneuver.Average]

elseif (herofield[tSize].value = -1) then
   perform hero.child[wWing].assign[Hide.Weapon]
   perform hero.child[wTailSlap].assign[Hide.Weapon]

   perform hero.child[wCrush].assign[Hide.Weapon]
   perform hero.child[wTailSweep].assign[Hide.Weapon]

   hero.child[xFly].field[abValue].value = maximum(hero.child[xFly].field[abValue].value, 150)
   perform hero.child[xFly].assign[Maneuver.Average]

elseif (herofield[tSize].value = 0) then
   perform hero.child[wTailSlap].assign[Hide.Weapon]

   perform hero.child[wCrush].assign[Hide.Weapon]
   perform hero.child[wTailSweep].assign[Hide.Weapon]

   hero.child[xFly].field[abValue].value = maximum(hero.child[xFly].field[abValue].value, 150)
   perform hero.child[xFly].assign[Maneuver.Average]

elseif (herofield[tSize].value = 1) then
   perform hero.child[wCrush].assign[Hide.Weapon]
   perform hero.child[wTailSweep].assign[Hide.Weapon]

   hero.child[xFly].field[abValue].value = maximum(hero.child[xFly].field[abValue].value, 200)
   perform hero.child[xFly].assign[Maneuver.Poor]

elseif (herofield[tSize].value = 2) then
   perform hero.child[wBite].tagreplace[wMain.?,wMain.2d8_204]
   perform hero.child[wBite].delete[Helper.DamageUp]

   perform hero.child[wCrush].assign[wMain.2d8_204]
   perform hero.child[wCrush].delete[Helper.DamageUp]
   perform hero.child[wTailSweep].assign[Hide.Weapon]

   hero.child[xFly].field[abValue].value = maximum(hero.child[xFly].field[abValue].value, 200)
   perform hero.child[xFly].assign[Maneuver.Poor]

elseif (herofield[tSize].value = 3) then
   perform hero.child[wClaw].tagreplace[wMain.?,wMain.2d8_204]
   perform hero.child[wClaw].delete[Helper.DamageUp]
   perform hero.child[wTailSlap].tagreplace[wMain.?,wMain.2d8_204]
   perform hero.child[wTailSlap].delete[Helper.DamageUp]

   perform hero.child[wCrush].assign[wMain.4d6_106]
   perform hero.child[wCrush].delete[Helper.DamageUp]
   perform hero.child[wTailSweep].assign[wMain.2d6_104]
   perform hero.child[wTailSweep].delete[Helper.DamageUp]

   hero.child[xFly].field[abValue].value = maximum(hero.child[xFly].field[abValue].value, 250)
   perform hero.child[xFly].assign[Maneuver.Clumsy]

elseif (herofield[tSize].value >= 4) then
   perform hero.child[wBite].tagreplace[wMain.?,wMain.4d8_206]
   perform hero.child[wBite].delete[Helper.DamageUp]
   perform hero.child[wWing].tagreplace[wMain.?,wMain.2d8_204]
   perform hero.child[wWing].delete[Helper.DamageUp]

   perform hero.child[wCrush].assign[wMain.4d8_206]
   perform hero.child[wCrush].delete[Helper.DamageUp]
   perform hero.child[wTailSweep].assign[wMain.2d8_204]
   perform hero.child[wTailSweep].delete[Helper.DamageUp]

   hero.child[xFly].field[abValue].value = maximum(hero.child[xFly].field[abValue].value, 250)
   perform hero.child[xFly].assign[Maneuver.Clumsy]

endif]]></eval>
    <eval phase="Final" priority="11000">~ Dragons have spell like abilities of CL = to TOTAL (not racial) hit dice
      var CL as number
      CL = herofield[tHitDice].value
      field[rSpCastLev].value = CL</eval>
    </thing>
  <thing id="ruDungJuve" name="Dragon, Dungeon, Juvenile" description="{B}This creature was deprecated. Please add the &quot;Dragon, Dungeon&quot; monster and select your age cateogry from the Dragon Age tab.{/b}\n\nThe dungeon dragon is a curious creature that gets amusement by watching other beings engaged in life and death struggles. To this end, a dungeon dragon sets up a labyrinthine lair, setting traps and populating it with monsters. Younger dungeon dragons tend to lair in natural caverns to ease the burden of construction. Older, more experienced dungeon dragons have been known to construct their own sprawling subterranean complexes, even to the point of hiring on dwarf work gangs and swearing them to secrecy.\n\nOnce the construction and refurbishing of its lair is complete, the dungeon dragon transforms itself into a humanoid and ventures into the surrounding countryside. There it spreads rumors and tales of this horrible catacomb in hopes of luring adventurers forth so it may watch them via its crystal ball. Young dungeon dragons often spend years living among humanoids, even to the point of joining adventurers involved in dungeon delves. On such adventures, the intrepid dungeon dragon takes notes regarding the devious traps and monsters it encounters so that it can add such things to its own lair.\n\nOddly enough, although a dungeon dragon goes to great pains to amass a treasure hoard, it cares little for material wealth. Rather, it uses the treasure it gathers as bait in its dungeon to lure in adventurers and provide it the entertainment it so greatly desires. Watching adventurers explore its catacomb is the only real treasure a dungeon dragon desires. The only material possession a dungeon dragon will risk its life to save is its crystal ball. Without this vital piece of equipment, all of the dragon&apos;s labor is in vain.\n\nA dungeon dragon in its natural form prefers to flee any combat. It likes to watch other creatures engaged in fights for life, not itself. If forced into melee, it swats at opponents with its powerful claws and bite. A dungeon dragon is proficient in the use of all simple and martial weapons and light and medium armor and shields." compset="Race">
    <fieldval field="rSTR" value="11"/>
    <fieldval field="rDEX" value="3"/>
    <fieldval field="rHitDice" value="7"/>
    <fieldval field="rHPStart" value="45"/>
    <fieldval field="rAC" value="10"/>
    <fieldval field="rCR" value="6"/>
    <fieldval field="rEnviron" value="Underground"/>
    <fieldval field="rOrgan" value="Solitary"/>
    <fieldval field="rTreasure" value="Triple plus crystal ball"/>
    <fieldval field="rDescript" value="This dragon has a long serpentine neck, small wings, and glistening scales. Two small horns dominate its triangular head. Its body is gray in color, with scales tipped in flecks of gold and green. Its eyes are rounded and gray."/>
    <fieldval field="rFeat" value="-4"/>
    <fieldval field="rINT" value="4"/>
    <fieldval field="rWIS" value="4"/>
    <fieldval field="rCON" value="4"/>
    <fieldval field="rCHA" value="2"/>
    <fieldval field="cMagicLev" value="1"/>
    <usesource source="srcTomeHor"/>
    <tag group="Alignment" tag="NeutralLC"/>
    <tag group="Alignment" tag="NeutralGE"/>
    <tag group="Hero" tag="NoDefComm" name="NoDefComm" abbrev="NoDefComm"/>
    <tag group="RaceSize" tag="Medium0"/>
    <tag group="Race" tag="rTrueDrago" name="True Dragon" abbrev="True Dragon"/>
    <tag group="RaceType" tag="NPC" name="NPC Race" abbrev="NPC Race"/>
    <tag group="Helper" tag="Quadruped" name="Quadruped" abbrev="Quadruped"/>
    <tag group="SplLookup" tag="cHelpSor"/>
    <tag group="HasType" tag="tpDragon" name="Dragon" abbrev="Dragon"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <bootstrap thing="fMasCraft">
      <autotag group="thing" tag="skipprereq"/>
      <autotag group="Target" tag="skCrafOth"/>
      </bootstrap>
    <bootstrap thing="wWing">
      <autotag group="wMain" tag="1d4_4"/>
      <autotag group="Value" tag="2"/>
      </bootstrap>
    <bootstrap thing="wCrush"></bootstrap>
    <bootstrap thing="raChangeSh">
      <autotag group="Usage" tag="AtWill"/>
      <assignval field="livename" value="Change Shape (Small or Medium Humanoid creature; alter self)"/>
      </bootstrap>
    <bootstrap thing="skKnowEng"></bootstrap>
    <bootstrap thing="fFlybyAt"></bootstrap>
    <bootstrap thing="wTailSweep"></bootstrap>
    <bootstrap thing="spCharPer1">
      <autotag group="Helper" tag="SpellLike"/>
      <autotag group="Usage" tag="AtWill"/>
      </bootstrap>
    <bootstrap thing="fSkillFoc">
      <autotag group="Target" tag="skKnowEng"/>
      </bootstrap>
    <bootstrap thing="skCrafTrap"></bootstrap>
    <bootstrap thing="raDarkVis">
      <autotag group="Value" tag="120"/>
      </bootstrap>
    <bootstrap thing="spDeteTho2">
      <autotag group="Helper" tag="SpellLike"/>
      <autotag group="Usage" tag="AtWill"/>
      </bootstrap>
    <bootstrap thing="rBlindsen">
      <autotag group="Value" tag="60"/>
      </bootstrap>
    <bootstrap thing="lCommonND"></bootstrap>
    <bootstrap thing="fAlertness"></bootstrap>
    <bootstrap thing="skKnowArca"></bootstrap>
    <bootstrap thing="xFly">
      <autotag group="Maneuver" tag="Average"/>
      </bootstrap>
    <bootstrap thing="lDraconic"></bootstrap>
    <bootstrap thing="stShapecha"></bootstrap>
    <bootstrap thing="raDrBreath">
      <autotag group="BloodEner" tag="Acid"/>
      </bootstrap>
    <bootstrap thing="wBite">
      <autotag group="wMain" tag="1d8_6"/>
      <autotag group="Helper" tag="NatPrimary"/>
      <autotag group="Helper" tag="NatTwoHand"/>
      </bootstrap>
    <bootstrap thing="wClaw">
      <autotag group="wMain" tag="1d6_5"/>
      <autotag group="Value" tag="2"/>
      <autotag group="Helper" tag="NatPrimary"/>
      </bootstrap>
    <bootstrap thing="raDrSenses"></bootstrap>
    <bootstrap thing="xuImmEnchm"></bootstrap>
    <bootstrap thing="rauDrDgCfC"></bootstrap>
    <bootstrap thing="xBonusPerc">
      <autotag group="Value" tag="4"/>
      </bootstrap>
    <bootstrap thing="fSkillFoc">
      <autotag group="Target" tag="skCrafOth"/>
      </bootstrap>
    <bootstrap thing="wTailSlap">
      <autotag group="wMain" tag="1d3_3"/>
      <autotag group="Helper" tag="NatTwoHand"/>
      </bootstrap>
    <bootstrap thing="skCrafOth">
      <assignval field="skUserName" value="crystal carving"/>
      <assignval field="skTools" value="1"/>
      </bootstrap>
    <eval phase="PreLevel" priority="9900" index="3"><![CDATA[~ Set the name, range (based on size) and damage of our breath weapon.
      var Lrange as number
      if (herofield[tSize].value <= -2) then
          Lrange = 30
      elseif (herofield[tSize].value = -1) then
          Lrange = 40
      elseif (herofield[tSize].value = 0) then
          Lrange = 60
      elseif (herofield[tSize].value = 1) then
          Lrange = 80
      elseif (herofield[tSize].value = 2) then
          Lrange = 100
      elseif (herofield[tSize].value = 3) then
          Lrange = 120
      elseif (herofield[tSize].value >= 4) then
          Lrange = 140
      endif

var Crange as number
Crange = Lrange / 2

~ Manually change the damage dice for each age category, since this does not depend on size.
      hero.child[raDrBreath].field[livename].text = "Breath Weapon (" & Lrange & "-ft. line or " & Crange & "-ft. cone, confusion, every 1d6 rounds, Fort neg.)"

~ Modified natural weapons according to size... If we are too small hide the weapons, if we are Huge our bite should be 2d8 not 3d6, if we are Gargantuan then Claw and Tail slap should be same, if we are Colossol then bite should be 4d8 and Wings should be 2d8. Also set the fly speed.

if (herofield[tSize].value <= -4) then
   perform hero.child[wWing].assign[Hide.Weapon]
   perform hero.child[wTailSlap].assign[Hide.Weapon]

   perform hero.child[wCrush].assign[Hide.Weapon]
   perform hero.child[wTailSweep].assign[Hide.Weapon]

   hero.child[xFly].field[abValue].value = maximum(hero.child[xFly].field[abValue].value, 100)
   perform hero.child[xFly].assign[Maneuver.Average]

elseif (herofield[tSize].value = -3) then
   perform hero.child[wWing].assign[Hide.Weapon]
   perform hero.child[wTailSlap].assign[Hide.Weapon]

   perform hero.child[wCrush].assign[Hide.Weapon]
   perform hero.child[wTailSweep].assign[Hide.Weapon]

   hero.child[xFly].field[abValue].value = maximum(hero.child[xFly].field[abValue].value, 100)
   perform hero.child[xFly].assign[Maneuver.Average]

elseif (herofield[tSize].value = -2) then
   perform hero.child[wWing].assign[Hide.Weapon]
   perform hero.child[wTailSlap].assign[Hide.Weapon]

   perform hero.child[wCrush].assign[Hide.Weapon]
   perform hero.child[wTailSweep].assign[Hide.Weapon]

   hero.child[xFly].field[abValue].value = maximum(hero.child[xFly].field[abValue].value, 100)
   perform hero.child[xFly].assign[Maneuver.Average]

elseif (herofield[tSize].value = -1) then
   perform hero.child[wWing].assign[Hide.Weapon]
   perform hero.child[wTailSlap].assign[Hide.Weapon]

   perform hero.child[wCrush].assign[Hide.Weapon]
   perform hero.child[wTailSweep].assign[Hide.Weapon]

   hero.child[xFly].field[abValue].value = maximum(hero.child[xFly].field[abValue].value, 150)
   perform hero.child[xFly].assign[Maneuver.Average]

elseif (herofield[tSize].value = 0) then
   perform hero.child[wTailSlap].assign[Hide.Weapon]

   perform hero.child[wCrush].assign[Hide.Weapon]
   perform hero.child[wTailSweep].assign[Hide.Weapon]

   hero.child[xFly].field[abValue].value = maximum(hero.child[xFly].field[abValue].value, 150)
   perform hero.child[xFly].assign[Maneuver.Average]

elseif (herofield[tSize].value = 1) then
   perform hero.child[wCrush].assign[Hide.Weapon]
   perform hero.child[wTailSweep].assign[Hide.Weapon]

   hero.child[xFly].field[abValue].value = maximum(hero.child[xFly].field[abValue].value, 200)
   perform hero.child[xFly].assign[Maneuver.Poor]

elseif (herofield[tSize].value = 2) then
   perform hero.child[wBite].tagreplace[wMain.?,wMain.2d8_204]
   perform hero.child[wBite].delete[Helper.DamageUp]

   perform hero.child[wCrush].assign[wMain.2d8_204]
   perform hero.child[wCrush].delete[Helper.DamageUp]
   perform hero.child[wTailSweep].assign[Hide.Weapon]

   hero.child[xFly].field[abValue].value = maximum(hero.child[xFly].field[abValue].value, 200)
   perform hero.child[xFly].assign[Maneuver.Poor]

elseif (herofield[tSize].value = 3) then
   perform hero.child[wClaw].tagreplace[wMain.?,wMain.2d8_204]
   perform hero.child[wClaw].delete[Helper.DamageUp]
   perform hero.child[wTailSlap].tagreplace[wMain.?,wMain.2d8_204]
   perform hero.child[wTailSlap].delete[Helper.DamageUp]

   perform hero.child[wCrush].assign[wMain.4d6_106]
   perform hero.child[wCrush].delete[Helper.DamageUp]
   perform hero.child[wTailSweep].assign[wMain.2d6_104]
   perform hero.child[wTailSweep].delete[Helper.DamageUp]

   hero.child[xFly].field[abValue].value = maximum(hero.child[xFly].field[abValue].value, 250)
   perform hero.child[xFly].assign[Maneuver.Clumsy]

elseif (herofield[tSize].value >= 4) then
   perform hero.child[wBite].tagreplace[wMain.?,wMain.4d8_206]
   perform hero.child[wBite].delete[Helper.DamageUp]
   perform hero.child[wWing].tagreplace[wMain.?,wMain.2d8_204]
   perform hero.child[wWing].delete[Helper.DamageUp]

   perform hero.child[wCrush].assign[wMain.4d8_206]
   perform hero.child[wCrush].delete[Helper.DamageUp]
   perform hero.child[wTailSweep].assign[wMain.2d8_204]
   perform hero.child[wTailSweep].delete[Helper.DamageUp]

   hero.child[xFly].field[abValue].value = maximum(hero.child[xFly].field[abValue].value, 250)
   perform hero.child[xFly].assign[Maneuver.Clumsy]

endif]]></eval>
    <eval phase="Final" priority="11000">~ Dragons have spell like abilities of CL = to TOTAL (not racial) hit dice
      var CL as number
      CL = herofield[tHitDice].value
      field[rSpCastLev].value = CL</eval>
    <eval phase="PreLevel" priority="4000" index="4">#skillinnate[skBluff] += 5
#skillinnate[skCrafOth] += 3
#skillinnate[skCrafTrap] += 3
#skillinnate[skDiplo] += 3
#skillinnate[skDisable] += 2
#skillinnate[skFly] += 5
#skillinnate[skKnowArca] += 7
#skillinnate[skKnowEng] += 7
#skillinnate[skPercep] += 7
#skillinnate[skSenseMot] += 7
#skillinnate[skSpellcr] += 7
      <before name="Skill Bonus Feats"/>
      </eval>
    </thing>
  <thing id="ruDungYgAt" name="Dragon, Dungeon, Young Adult" description="{B}This creature was deprecated. Please add the &quot;Dragon, Dungeon&quot; monster and select your age cateogry from the Dragon Age tab.{/b}\n\nThe dungeon dragon is a curious creature that gets amusement by watching other beings engaged in life and death struggles. To this end, a dungeon dragon sets up a labyrinthine lair, setting traps and populating it with monsters. Younger dungeon dragons tend to lair in natural caverns to ease the burden of construction. Older, more experienced dungeon dragons have been known to construct their own sprawling subterranean complexes, even to the point of hiring on dwarf work gangs and swearing them to secrecy.\n\nOnce the construction and refurbishing of its lair is complete, the dungeon dragon transforms itself into a humanoid and ventures into the surrounding countryside. There it spreads rumors and tales of this horrible catacomb in hopes of luring adventurers forth so it may watch them via its crystal ball. Young dungeon dragons often spend years living among humanoids, even to the point of joining adventurers involved in dungeon delves. On such adventures, the intrepid dungeon dragon takes notes regarding the devious traps and monsters it encounters so that it can add such things to its own lair.\n\nOddly enough, although a dungeon dragon goes to great pains to amass a treasure hoard, it cares little for material wealth. Rather, it uses the treasure it gathers as bait in its dungeon to lure in adventurers and provide it the entertainment it so greatly desires. Watching adventurers explore its catacomb is the only real treasure a dungeon dragon desires. The only material possession a dungeon dragon will risk its life to save is its crystal ball. Without this vital piece of equipment, all of the dragon&apos;s labor is in vain.\n\nA dungeon dragon in its natural form prefers to flee any combat. It likes to watch other creatures engaged in fights for life, not itself. If forced into melee, it swats at opponents with its powerful claws and bite. A dungeon dragon is proficient in the use of all simple and martial weapons and light and medium armor and shields." compset="Race">
    <fieldval field="rSTR" value="13"/>
    <fieldval field="rDEX" value="1"/>
    <fieldval field="rHitDice" value="9"/>
    <fieldval field="rHPStart" value="58"/>
    <fieldval field="rAC" value="13"/>
    <fieldval field="rCR" value="8"/>
    <fieldval field="rEnviron" value="Underground"/>
    <fieldval field="rOrgan" value="Solitary"/>
    <fieldval field="rTreasure" value="Triple plus crystal ball"/>
    <fieldval field="rDescript" value="This dragon has a long serpentine neck, small wings, and glistening scales. Two small horns dominate its triangular head. Its body is gray in color, with scales tipped in flecks of gold and green. Its eyes are rounded and gray."/>
    <fieldval field="rFeat" value="-5"/>
    <fieldval field="rINT" value="4"/>
    <fieldval field="rWIS" value="4"/>
    <fieldval field="rCON" value="4"/>
    <fieldval field="rCHA" value="2"/>
    <fieldval field="cMagicLev" value="3"/>
    <usesource source="srcTomeHor"/>
    <tag group="Alignment" tag="NeutralLC"/>
    <tag group="Alignment" tag="NeutralGE"/>
    <tag group="Hero" tag="NoDefComm" name="NoDefComm" abbrev="NoDefComm"/>
    <tag group="RaceSize" tag="Large1"/>
    <tag group="Race" tag="rTrueDrago" name="True Dragon" abbrev="True Dragon"/>
    <tag group="RaceType" tag="NPC" name="NPC Race" abbrev="NPC Race"/>
    <tag group="Helper" tag="Quadruped" name="Quadruped" abbrev="Quadruped"/>
    <tag group="SplLookup" tag="cHelpSor"/>
    <tag group="HasType" tag="tpDragon" name="Dragon" abbrev="Dragon"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <bootstrap thing="lDraconic"></bootstrap>
    <bootstrap thing="stShapecha"></bootstrap>
    <bootstrap thing="raDrBreath">
      <autotag group="BloodEner" tag="Acid"/>
      </bootstrap>
    <bootstrap thing="wBite">
      <autotag group="wMain" tag="2d6_104"/>
      <autotag group="Helper" tag="NatPrimary"/>
      <autotag group="Helper" tag="NatTwoHand"/>
      </bootstrap>
    <bootstrap thing="wClaw">
      <autotag group="wMain" tag="1d8_6"/>
      <autotag group="Value" tag="2"/>
      <autotag group="Helper" tag="NatPrimary"/>
      </bootstrap>
    <bootstrap thing="raDrSenses"></bootstrap>
    <bootstrap thing="xuImmEnchm"></bootstrap>
    <bootstrap thing="rauDrDgCfC"></bootstrap>
    <bootstrap thing="xBonusPerc">
      <autotag group="Value" tag="4"/>
      </bootstrap>
    <bootstrap thing="fSkillFoc">
      <autotag group="Target" tag="skCrafOth"/>
      </bootstrap>
    <bootstrap thing="wTailSlap">
      <autotag group="wMain" tag="1d8_6"/>
      <autotag group="Helper" tag="NatTwoHand"/>
      </bootstrap>
    <bootstrap thing="skCrafOth">
      <assignval field="skUserName" value="crystal carving"/>
      <assignval field="skTools" value="1"/>
      </bootstrap>
    <bootstrap thing="fMasCraft">
      <autotag group="thing" tag="skipprereq"/>
      <autotag group="Target" tag="skCrafOth"/>
      </bootstrap>
    <bootstrap thing="wWing">
      <autotag group="wMain" tag="1d6_5"/>
      <autotag group="Value" tag="2"/>
      </bootstrap>
    <bootstrap thing="wCrush"></bootstrap>
    <bootstrap thing="raChangeSh">
      <autotag group="Usage" tag="AtWill"/>
      <assignval field="livename" value="Change Shape (Small or Medium Humanoid creature; alter self)"/>
      </bootstrap>
    <bootstrap thing="skKnowEng"></bootstrap>
    <bootstrap thing="fFlybyAt"></bootstrap>
    <bootstrap thing="wTailSweep"></bootstrap>
    <bootstrap thing="spCharPer1">
      <autotag group="Helper" tag="SpellLike"/>
      <autotag group="Usage" tag="AtWill"/>
      </bootstrap>
    <bootstrap thing="fSkillFoc">
      <autotag group="Target" tag="skKnowEng"/>
      </bootstrap>
    <bootstrap thing="skCrafTrap"></bootstrap>
    <bootstrap thing="raDarkVis">
      <autotag group="Value" tag="120"/>
      </bootstrap>
    <bootstrap thing="spDeteTho2">
      <autotag group="Helper" tag="SpellLike"/>
      <autotag group="Usage" tag="AtWill"/>
      </bootstrap>
    <bootstrap thing="rBlindsen">
      <autotag group="Value" tag="60"/>
      </bootstrap>
    <bootstrap thing="lCommonND"></bootstrap>
    <bootstrap thing="fAlertness"></bootstrap>
    <bootstrap thing="skKnowArca"></bootstrap>
    <bootstrap thing="fCraftWond">
      <autotag group="thing" tag="skipprereq"/>
      </bootstrap>
    <bootstrap thing="xDamRdMag">
      <autotag group="Value" tag="5"/>
      </bootstrap>
    <bootstrap thing="xSplRs"></bootstrap>
    <bootstrap thing="fMultiAtt"></bootstrap>
    <bootstrap thing="xFly">
      <autotag group="Maneuver" tag="Poor"/>
      </bootstrap>
    <eval phase="Final" priority="11000">~ Dragons have SR = to 11 + thier CR
      var damage as number
      damage = herofield[tCR].value + 11
      #applysr[damage]


~ Dragons have spell like abilities of CL = to TOTAL (not racial) hit dice
      var CL as number
      CL = herofield[tHitDice].value
      field[rSpCastLev].value = CL</eval>
    <eval phase="PreLevel" priority="4000" index="4">#skillinnate[skBluff] += 7
#skillinnate[skCrafOth] += 5
#skillinnate[skCrafTrap] += 5
#skillinnate[skDiplo] += 5
#skillinnate[skDisable] += 4
#skillinnate[skFly] += 5
#skillinnate[skKnowArca] += 9
#skillinnate[skKnowEng] += 9
#skillinnate[skPercep] += 8
#skillinnate[skSenseMot] += 7
#skillinnate[skSpellcr] += 8
      <before name="Skill Bonus Feats"/>
      </eval>
    <eval phase="PreLevel" priority="9900" index="3"><![CDATA[~ Set the name, range (based on size) and damage of our breath weapon.
      var Lrange as number
      if (herofield[tSize].value <= -2) then
          Lrange = 30
      elseif (herofield[tSize].value = -1) then
          Lrange = 40
      elseif (herofield[tSize].value = 0) then
          Lrange = 60
      elseif (herofield[tSize].value = 1) then
          Lrange = 80
      elseif (herofield[tSize].value = 2) then
          Lrange = 100
      elseif (herofield[tSize].value = 3) then
          Lrange = 120
      elseif (herofield[tSize].value >= 4) then
          Lrange = 140
      endif

var Crange as number
Crange = Lrange / 2

~ Manually change the damage dice for each age category, since this does not depend on size.
      hero.child[raDrBreath].field[livename].text = "Breath Weapon (" & Lrange & "-ft. line or " & Crange & "-ft. cone, confusion, every 1d6 rounds, Fort neg.)"

~ Modified natural weapons according to size... If we are too small hide the weapons, if we are Huge our bite should be 2d8 not 3d6, if we are Gargantuan then Claw and Tail slap should be same, if we are Colossol then bite should be 4d8 and Wings should be 2d8. Also set the fly speed.

if (herofield[tSize].value <= -4) then
   perform hero.child[wWing].assign[Hide.Weapon]
   perform hero.child[wTailSlap].assign[Hide.Weapon]

   perform hero.child[wCrush].assign[Hide.Weapon]
   perform hero.child[wTailSweep].assign[Hide.Weapon]

   hero.child[xFly].field[abValue].value = maximum(hero.child[xFly].field[abValue].value, 100)
   perform hero.child[xFly].assign[Maneuver.Average]

elseif (herofield[tSize].value = -3) then
   perform hero.child[wWing].assign[Hide.Weapon]
   perform hero.child[wTailSlap].assign[Hide.Weapon]

   perform hero.child[wCrush].assign[Hide.Weapon]
   perform hero.child[wTailSweep].assign[Hide.Weapon]

   hero.child[xFly].field[abValue].value = maximum(hero.child[xFly].field[abValue].value, 100)
   perform hero.child[xFly].assign[Maneuver.Average]

elseif (herofield[tSize].value = -2) then
   perform hero.child[wWing].assign[Hide.Weapon]
   perform hero.child[wTailSlap].assign[Hide.Weapon]

   perform hero.child[wCrush].assign[Hide.Weapon]
   perform hero.child[wTailSweep].assign[Hide.Weapon]

   hero.child[xFly].field[abValue].value = maximum(hero.child[xFly].field[abValue].value, 100)
   perform hero.child[xFly].assign[Maneuver.Average]

elseif (herofield[tSize].value = -1) then
   perform hero.child[wWing].assign[Hide.Weapon]
   perform hero.child[wTailSlap].assign[Hide.Weapon]

   perform hero.child[wCrush].assign[Hide.Weapon]
   perform hero.child[wTailSweep].assign[Hide.Weapon]

   hero.child[xFly].field[abValue].value = maximum(hero.child[xFly].field[abValue].value, 150)
   perform hero.child[xFly].assign[Maneuver.Average]

elseif (herofield[tSize].value = 0) then
   perform hero.child[wTailSlap].assign[Hide.Weapon]

   perform hero.child[wCrush].assign[Hide.Weapon]
   perform hero.child[wTailSweep].assign[Hide.Weapon]

   hero.child[xFly].field[abValue].value = maximum(hero.child[xFly].field[abValue].value, 150)
   perform hero.child[xFly].assign[Maneuver.Average]

elseif (herofield[tSize].value = 1) then
   perform hero.child[wCrush].assign[Hide.Weapon]
   perform hero.child[wTailSweep].assign[Hide.Weapon]

   hero.child[xFly].field[abValue].value = maximum(hero.child[xFly].field[abValue].value, 200)
   perform hero.child[xFly].assign[Maneuver.Poor]

elseif (herofield[tSize].value = 2) then
   perform hero.child[wBite].tagreplace[wMain.?,wMain.2d8_204]
   perform hero.child[wBite].delete[Helper.DamageUp]

   perform hero.child[wCrush].assign[wMain.2d8_204]
   perform hero.child[wCrush].delete[Helper.DamageUp]
   perform hero.child[wTailSweep].assign[Hide.Weapon]

   hero.child[xFly].field[abValue].value = maximum(hero.child[xFly].field[abValue].value, 200)
   perform hero.child[xFly].assign[Maneuver.Poor]

elseif (herofield[tSize].value = 3) then
   perform hero.child[wClaw].tagreplace[wMain.?,wMain.2d8_204]
   perform hero.child[wClaw].delete[Helper.DamageUp]
   perform hero.child[wTailSlap].tagreplace[wMain.?,wMain.2d8_204]
   perform hero.child[wTailSlap].delete[Helper.DamageUp]

   perform hero.child[wCrush].assign[wMain.4d6_106]
   perform hero.child[wCrush].delete[Helper.DamageUp]
   perform hero.child[wTailSweep].assign[wMain.2d6_104]
   perform hero.child[wTailSweep].delete[Helper.DamageUp]

   hero.child[xFly].field[abValue].value = maximum(hero.child[xFly].field[abValue].value, 250)
   perform hero.child[xFly].assign[Maneuver.Clumsy]

elseif (herofield[tSize].value >= 4) then
   perform hero.child[wBite].tagreplace[wMain.?,wMain.4d8_206]
   perform hero.child[wBite].delete[Helper.DamageUp]
   perform hero.child[wWing].tagreplace[wMain.?,wMain.2d8_204]
   perform hero.child[wWing].delete[Helper.DamageUp]

   perform hero.child[wCrush].assign[wMain.4d8_206]
   perform hero.child[wCrush].delete[Helper.DamageUp]
   perform hero.child[wTailSweep].assign[wMain.2d8_204]
   perform hero.child[wTailSweep].delete[Helper.DamageUp]

   hero.child[xFly].field[abValue].value = maximum(hero.child[xFly].field[abValue].value, 250)
   perform hero.child[xFly].assign[Maneuver.Clumsy]

endif]]></eval>
    </thing>
  <thing id="uDungAdult" name="Dragon, Dungeon, Adult" description="{B}This creature was deprecated. Please add the &quot;Dragon, Dungeon&quot; monster and select your age cateogry from the Dragon Age tab.{/b}\n\nThe dungeon dragon is a curious creature that gets amusement by watching other beings engaged in life and death struggles. To this end, a dungeon dragon sets up a labyrinthine lair, setting traps and populating it with monsters. Younger dungeon dragons tend to lair in natural caverns to ease the burden of construction. Older, more experienced dungeon dragons have been known to construct their own sprawling subterranean complexes, even to the point of hiring on dwarf work gangs and swearing them to secrecy.\n\nOnce the construction and refurbishing of its lair is complete, the dungeon dragon transforms itself into a humanoid and ventures into the surrounding countryside. There it spreads rumors and tales of this horrible catacomb in hopes of luring adventurers forth so it may watch them via its crystal ball. Young dungeon dragons often spend years living among humanoids, even to the point of joining adventurers involved in dungeon delves. On such adventures, the intrepid dungeon dragon takes notes regarding the devious traps and monsters it encounters so that it can add such things to its own lair.\n\nOddly enough, although a dungeon dragon goes to great pains to amass a treasure hoard, it cares little for material wealth. Rather, it uses the treasure it gathers as bait in its dungeon to lure in adventurers and provide it the entertainment it so greatly desires. Watching adventurers explore its catacomb is the only real treasure a dungeon dragon desires. The only material possession a dungeon dragon will risk its life to save is its crystal ball. Without this vital piece of equipment, all of the dragon&apos;s labor is in vain.\n\nA dungeon dragon in its natural form prefers to flee any combat. It likes to watch other creatures engaged in fights for life, not itself. If forced into melee, it swats at opponents with its powerful claws and bite. A dungeon dragon is proficient in the use of all simple and martial weapons and light and medium armor and shields." compset="Race">
    <fieldval field="rSTR" value="15"/>
    <fieldval field="rDEX" value="1"/>
    <fieldval field="rHitDice" value="11"/>
    <fieldval field="rHPStart" value="71"/>
    <fieldval field="rAC" value="16"/>
    <fieldval field="rCR" value="9"/>
    <fieldval field="rEnviron" value="Underground"/>
    <fieldval field="rOrgan" value="Solitary"/>
    <fieldval field="rTreasure" value="Triple plus crystal ball"/>
    <fieldval field="rDescript" value="This dragon has a long serpentine neck, small wings, and glistening scales. Two small horns dominate its triangular head. Its body is gray in color, with scales tipped in flecks of gold and green. Its eyes are rounded and gray."/>
    <fieldval field="rFeat" value="-6"/>
    <fieldval field="rINT" value="6"/>
    <fieldval field="rWIS" value="6"/>
    <fieldval field="rCON" value="6"/>
    <fieldval field="rCHA" value="4"/>
    <fieldval field="cMagicLev" value="5"/>
    <usesource source="srcTomeHor"/>
    <tag group="Alignment" tag="NeutralLC"/>
    <tag group="Alignment" tag="NeutralGE"/>
    <tag group="Hero" tag="NoDefComm" name="NoDefComm" abbrev="NoDefComm"/>
    <tag group="RaceSize" tag="Large1"/>
    <tag group="Race" tag="rTrueDrago" name="True Dragon" abbrev="True Dragon"/>
    <tag group="RaceType" tag="NPC" name="NPC Race" abbrev="NPC Race"/>
    <tag group="Helper" tag="Quadruped" name="Quadruped" abbrev="Quadruped"/>
    <tag group="SplLookup" tag="cHelpSor"/>
    <tag group="HasType" tag="tpDragon" name="Dragon" abbrev="Dragon"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <bootstrap thing="fCraftWond">
      <autotag group="thing" tag="skipprereq"/>
      </bootstrap>
    <bootstrap thing="xDamRdMag">
      <autotag group="Value" tag="5"/>
      </bootstrap>
    <bootstrap thing="xSplRs"></bootstrap>
    <bootstrap thing="fMultiAtt"></bootstrap>
    <bootstrap thing="spSuggest2">
      <autotag group="Helper" tag="SpellLike"/>
      <autotag group="Usage" tag="AtWill"/>
      </bootstrap>
    <bootstrap thing="raFrightPr"></bootstrap>
    <bootstrap thing="fIronWill"></bootstrap>
    <bootstrap thing="skKnowDun"></bootstrap>
    <bootstrap thing="xFly">
      <autotag group="Maneuver" tag="Poor"/>
      </bootstrap>
    <bootstrap thing="lDraconic"></bootstrap>
    <bootstrap thing="stShapecha"></bootstrap>
    <bootstrap thing="raDrBreath">
      <autotag group="BloodEner" tag="Acid"/>
      </bootstrap>
    <bootstrap thing="wBite">
      <autotag group="wMain" tag="2d6_104"/>
      <autotag group="Helper" tag="NatPrimary"/>
      <autotag group="Helper" tag="NatTwoHand"/>
      </bootstrap>
    <bootstrap thing="wClaw">
      <autotag group="wMain" tag="1d8_6"/>
      <autotag group="Value" tag="2"/>
      <autotag group="Helper" tag="NatPrimary"/>
      </bootstrap>
    <bootstrap thing="raDrSenses"></bootstrap>
    <bootstrap thing="xuImmEnchm"></bootstrap>
    <bootstrap thing="rauDrDgCfC"></bootstrap>
    <bootstrap thing="xBonusPerc">
      <autotag group="Value" tag="4"/>
      </bootstrap>
    <bootstrap thing="fSkillFoc">
      <autotag group="Target" tag="skCrafOth"/>
      </bootstrap>
    <bootstrap thing="wTailSlap">
      <autotag group="wMain" tag="1d8_6"/>
      <autotag group="Helper" tag="NatTwoHand"/>
      </bootstrap>
    <bootstrap thing="skCrafOth">
      <assignval field="skUserName" value="crystal carving"/>
      <assignval field="skTools" value="1"/>
      </bootstrap>
    <bootstrap thing="fMasCraft">
      <autotag group="thing" tag="skipprereq"/>
      <autotag group="Target" tag="skCrafOth"/>
      </bootstrap>
    <bootstrap thing="wWing">
      <autotag group="wMain" tag="1d6_5"/>
      <autotag group="Value" tag="2"/>
      </bootstrap>
    <bootstrap thing="wCrush"></bootstrap>
    <bootstrap thing="raChangeSh">
      <autotag group="Usage" tag="AtWill"/>
      <assignval field="livename" value="Change Shape (Small or Medium Humanoid creature; alter self)"/>
      </bootstrap>
    <bootstrap thing="skKnowEng"></bootstrap>
    <bootstrap thing="fFlybyAt"></bootstrap>
    <bootstrap thing="wTailSweep"></bootstrap>
    <bootstrap thing="spCharPer1">
      <autotag group="Helper" tag="SpellLike"/>
      <autotag group="Usage" tag="AtWill"/>
      </bootstrap>
    <bootstrap thing="fSkillFoc">
      <autotag group="Target" tag="skKnowEng"/>
      </bootstrap>
    <bootstrap thing="skCrafTrap"></bootstrap>
    <bootstrap thing="raDarkVis">
      <autotag group="Value" tag="120"/>
      </bootstrap>
    <bootstrap thing="spDeteTho2">
      <autotag group="Helper" tag="SpellLike"/>
      <autotag group="Usage" tag="AtWill"/>
      </bootstrap>
    <bootstrap thing="rBlindsen">
      <autotag group="Value" tag="60"/>
      </bootstrap>
    <bootstrap thing="lCommonND"></bootstrap>
    <bootstrap thing="fAlertness"></bootstrap>
    <bootstrap thing="skKnowArca"></bootstrap>
    <eval phase="Final" priority="11000">~ Dragons have SR = to 11 + thier CR
      var damage as number
      damage = herofield[tCR].value + 11
      #applysr[damage]


~ Dragons have spell like abilities of CL = to TOTAL (not racial) hit dice
      var CL as number
      CL = herofield[tHitDice].value
      field[rSpCastLev].value = CL</eval>
    <eval phase="PreLevel" priority="4000" index="4">#skillinnate[skBluff] += 11
#skillinnate[skCrafOth] += 5
#skillinnate[skCrafTrap] += 5
#skillinnate[skDiplo] += 6
#skillinnate[skDisable] += 8
#skillinnate[skFly] += 3
#skillinnate[skKnowArca] += 11
#skillinnate[skKnowDun] += 4
#skillinnate[skKnowEng] += 11
#skillinnate[skLinguist] += 2
#skillinnate[skPercep] += 11
#skillinnate[skSenseMot] += 11
#skillinnate[skSpellcr] += 11
      <before name="Skill Bonus Feats"/>
      </eval>
    <eval phase="PreLevel" priority="9900" index="3"><![CDATA[~ Set the name, range (based on size) and damage of our breath weapon.
      var Lrange as number
      if (herofield[tSize].value <= -2) then
          Lrange = 30
      elseif (herofield[tSize].value = -1) then
          Lrange = 40
      elseif (herofield[tSize].value = 0) then
          Lrange = 60
      elseif (herofield[tSize].value = 1) then
          Lrange = 80
      elseif (herofield[tSize].value = 2) then
          Lrange = 100
      elseif (herofield[tSize].value = 3) then
          Lrange = 120
      elseif (herofield[tSize].value >= 4) then
          Lrange = 140
      endif

var Crange as number
Crange = Lrange / 2

~ Manually change the damage dice for each age category, since this does not depend on size.
      hero.child[raDrBreath].field[livename].text = "Breath Weapon (" & Lrange & "-ft. line or " & Crange & "-ft. cone, confusion, every 1d6 rounds, Fort neg.)"

~ Modified natural weapons according to size... If we are too small hide the weapons, if we are Huge our bite should be 2d8 not 3d6, if we are Gargantuan then Claw and Tail slap should be same, if we are Colossol then bite should be 4d8 and Wings should be 2d8. Also set the fly speed.

if (herofield[tSize].value <= -4) then
   perform hero.child[wWing].assign[Hide.Weapon]
   perform hero.child[wTailSlap].assign[Hide.Weapon]

   perform hero.child[wCrush].assign[Hide.Weapon]
   perform hero.child[wTailSweep].assign[Hide.Weapon]

   hero.child[xFly].field[abValue].value = maximum(hero.child[xFly].field[abValue].value, 100)
   perform hero.child[xFly].assign[Maneuver.Average]

elseif (herofield[tSize].value = -3) then
   perform hero.child[wWing].assign[Hide.Weapon]
   perform hero.child[wTailSlap].assign[Hide.Weapon]

   perform hero.child[wCrush].assign[Hide.Weapon]
   perform hero.child[wTailSweep].assign[Hide.Weapon]

   hero.child[xFly].field[abValue].value = maximum(hero.child[xFly].field[abValue].value, 100)
   perform hero.child[xFly].assign[Maneuver.Average]

elseif (herofield[tSize].value = -2) then
   perform hero.child[wWing].assign[Hide.Weapon]
   perform hero.child[wTailSlap].assign[Hide.Weapon]

   perform hero.child[wCrush].assign[Hide.Weapon]
   perform hero.child[wTailSweep].assign[Hide.Weapon]

   hero.child[xFly].field[abValue].value = maximum(hero.child[xFly].field[abValue].value, 100)
   perform hero.child[xFly].assign[Maneuver.Average]

elseif (herofield[tSize].value = -1) then
   perform hero.child[wWing].assign[Hide.Weapon]
   perform hero.child[wTailSlap].assign[Hide.Weapon]

   perform hero.child[wCrush].assign[Hide.Weapon]
   perform hero.child[wTailSweep].assign[Hide.Weapon]

   hero.child[xFly].field[abValue].value = maximum(hero.child[xFly].field[abValue].value, 150)
   perform hero.child[xFly].assign[Maneuver.Average]

elseif (herofield[tSize].value = 0) then
   perform hero.child[wTailSlap].assign[Hide.Weapon]

   perform hero.child[wCrush].assign[Hide.Weapon]
   perform hero.child[wTailSweep].assign[Hide.Weapon]

   hero.child[xFly].field[abValue].value = maximum(hero.child[xFly].field[abValue].value, 150)
   perform hero.child[xFly].assign[Maneuver.Average]

elseif (herofield[tSize].value = 1) then
   perform hero.child[wCrush].assign[Hide.Weapon]
   perform hero.child[wTailSweep].assign[Hide.Weapon]

   hero.child[xFly].field[abValue].value = maximum(hero.child[xFly].field[abValue].value, 200)
   perform hero.child[xFly].assign[Maneuver.Poor]

elseif (herofield[tSize].value = 2) then
   perform hero.child[wBite].tagreplace[wMain.?,wMain.2d8_204]
   perform hero.child[wBite].delete[Helper.DamageUp]

   perform hero.child[wCrush].assign[wMain.2d8_204]
   perform hero.child[wCrush].delete[Helper.DamageUp]
   perform hero.child[wTailSweep].assign[Hide.Weapon]

   hero.child[xFly].field[abValue].value = maximum(hero.child[xFly].field[abValue].value, 200)
   perform hero.child[xFly].assign[Maneuver.Poor]

elseif (herofield[tSize].value = 3) then
   perform hero.child[wClaw].tagreplace[wMain.?,wMain.2d8_204]
   perform hero.child[wClaw].delete[Helper.DamageUp]
   perform hero.child[wTailSlap].tagreplace[wMain.?,wMain.2d8_204]
   perform hero.child[wTailSlap].delete[Helper.DamageUp]

   perform hero.child[wCrush].assign[wMain.4d6_106]
   perform hero.child[wCrush].delete[Helper.DamageUp]
   perform hero.child[wTailSweep].assign[wMain.2d6_104]
   perform hero.child[wTailSweep].delete[Helper.DamageUp]

   hero.child[xFly].field[abValue].value = maximum(hero.child[xFly].field[abValue].value, 250)
   perform hero.child[xFly].assign[Maneuver.Clumsy]

elseif (herofield[tSize].value >= 4) then
   perform hero.child[wBite].tagreplace[wMain.?,wMain.4d8_206]
   perform hero.child[wBite].delete[Helper.DamageUp]
   perform hero.child[wWing].tagreplace[wMain.?,wMain.2d8_204]
   perform hero.child[wWing].delete[Helper.DamageUp]

   perform hero.child[wCrush].assign[wMain.4d8_206]
   perform hero.child[wCrush].delete[Helper.DamageUp]
   perform hero.child[wTailSweep].assign[wMain.2d8_204]
   perform hero.child[wTailSweep].delete[Helper.DamageUp]

   hero.child[xFly].field[abValue].value = maximum(hero.child[xFly].field[abValue].value, 250)
   perform hero.child[xFly].assign[Maneuver.Clumsy]

endif]]></eval>
    </thing>
  <thing id="ruDungMtAd" name="Dragon, Dungeon, Mature Adult" description="{B}This creature was deprecated. Please add the &quot;Dragon, Dungeon&quot; monster and select your age cateogry from the Dragon Age tab.{/b}\n\nThe dungeon dragon is a curious creature that gets amusement by watching other beings engaged in life and death struggles. To this end, a dungeon dragon sets up a labyrinthine lair, setting traps and populating it with monsters. Younger dungeon dragons tend to lair in natural caverns to ease the burden of construction. Older, more experienced dungeon dragons have been known to construct their own sprawling subterranean complexes, even to the point of hiring on dwarf work gangs and swearing them to secrecy.\n\nOnce the construction and refurbishing of its lair is complete, the dungeon dragon transforms itself into a humanoid and ventures into the surrounding countryside. There it spreads rumors and tales of this horrible catacomb in hopes of luring adventurers forth so it may watch them via its crystal ball. Young dungeon dragons often spend years living among humanoids, even to the point of joining adventurers involved in dungeon delves. On such adventures, the intrepid dungeon dragon takes notes regarding the devious traps and monsters it encounters so that it can add such things to its own lair.\n\nOddly enough, although a dungeon dragon goes to great pains to amass a treasure hoard, it cares little for material wealth. Rather, it uses the treasure it gathers as bait in its dungeon to lure in adventurers and provide it the entertainment it so greatly desires. Watching adventurers explore its catacomb is the only real treasure a dungeon dragon desires. The only material possession a dungeon dragon will risk its life to save is its crystal ball. Without this vital piece of equipment, all of the dragon&apos;s labor is in vain.\n\nA dungeon dragon in its natural form prefers to flee any combat. It likes to watch other creatures engaged in fights for life, not itself. If forced into melee, it swats at opponents with its powerful claws and bite. A dungeon dragon is proficient in the use of all simple and martial weapons and light and medium armor and shields." compset="Race">
    <fieldval field="rSTR" value="17"/>
    <fieldval field="rDEX" value="1"/>
    <fieldval field="rHitDice" value="13"/>
    <fieldval field="rHPStart" value="84"/>
    <fieldval field="rAC" value="19"/>
    <fieldval field="rCR" value="10"/>
    <fieldval field="rEnviron" value="Underground"/>
    <fieldval field="rOrgan" value="Solitary"/>
    <fieldval field="rTreasure" value="Triple plus crystal ball"/>
    <fieldval field="rDescript" value="This dragon has a long serpentine neck, small wings, and glistening scales. Two small horns dominate its triangular head. Its body is gray in color, with scales tipped in flecks of gold and green. Its eyes are rounded and gray."/>
    <fieldval field="rFeat" value="-7"/>
    <fieldval field="rINT" value="6"/>
    <fieldval field="rWIS" value="6"/>
    <fieldval field="rCON" value="6"/>
    <fieldval field="rCHA" value="4"/>
    <fieldval field="cMagicLev" value="7"/>
    <usesource source="srcTomeHor"/>
    <tag group="Alignment" tag="NeutralLC"/>
    <tag group="Alignment" tag="NeutralGE"/>
    <tag group="Hero" tag="NoDefComm" name="NoDefComm" abbrev="NoDefComm"/>
    <tag group="RaceSize" tag="Large1"/>
    <tag group="Race" tag="rTrueDrago" name="True Dragon" abbrev="True Dragon"/>
    <tag group="RaceType" tag="NPC" name="NPC Race" abbrev="NPC Race"/>
    <tag group="Helper" tag="Quadruped" name="Quadruped" abbrev="Quadruped"/>
    <tag group="SplLookup" tag="cHelpSor"/>
    <tag group="HasType" tag="tpDragon" name="Dragon" abbrev="Dragon"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <bootstrap thing="raDrSenses"></bootstrap>
    <bootstrap thing="xuImmEnchm"></bootstrap>
    <bootstrap thing="rauDrDgCfC"></bootstrap>
    <bootstrap thing="xBonusPerc">
      <autotag group="Value" tag="4"/>
      </bootstrap>
    <bootstrap thing="fSkillFoc">
      <autotag group="Target" tag="skCrafOth"/>
      </bootstrap>
    <bootstrap thing="wTailSlap">
      <autotag group="wMain" tag="1d8_6"/>
      <autotag group="Helper" tag="NatTwoHand"/>
      </bootstrap>
    <bootstrap thing="skCrafOth">
      <assignval field="skUserName" value="crystal carving"/>
      <assignval field="skTools" value="1"/>
      </bootstrap>
    <bootstrap thing="fMasCraft">
      <autotag group="thing" tag="skipprereq"/>
      <autotag group="Target" tag="skCrafOth"/>
      </bootstrap>
    <bootstrap thing="wWing">
      <autotag group="wMain" tag="1d6_5"/>
      <autotag group="Value" tag="2"/>
      </bootstrap>
    <bootstrap thing="wCrush"></bootstrap>
    <bootstrap thing="raChangeSh">
      <autotag group="Usage" tag="AtWill"/>
      <assignval field="livename" value="Change Shape (Small or Medium Humanoid creature; alter self)"/>
      </bootstrap>
    <bootstrap thing="skKnowEng"></bootstrap>
    <bootstrap thing="fFlybyAt"></bootstrap>
    <bootstrap thing="wTailSweep"></bootstrap>
    <bootstrap thing="spCharPer1">
      <autotag group="Helper" tag="SpellLike"/>
      <autotag group="Usage" tag="AtWill"/>
      </bootstrap>
    <bootstrap thing="fSkillFoc">
      <autotag group="Target" tag="skKnowEng"/>
      </bootstrap>
    <bootstrap thing="skCrafTrap"></bootstrap>
    <bootstrap thing="raDarkVis">
      <autotag group="Value" tag="120"/>
      </bootstrap>
    <bootstrap thing="spDeteTho2">
      <autotag group="Helper" tag="SpellLike"/>
      <autotag group="Usage" tag="AtWill"/>
      </bootstrap>
    <bootstrap thing="rBlindsen">
      <autotag group="Value" tag="60"/>
      </bootstrap>
    <bootstrap thing="lCommonND"></bootstrap>
    <bootstrap thing="fAlertness"></bootstrap>
    <bootstrap thing="skKnowArca"></bootstrap>
    <bootstrap thing="fCraftWond">
      <autotag group="thing" tag="skipprereq"/>
      </bootstrap>
    <bootstrap thing="xDamRdMag">
      <autotag group="Value" tag="10"/>
      </bootstrap>
    <bootstrap thing="xSplRs"></bootstrap>
    <bootstrap thing="fMultiAtt"></bootstrap>
    <bootstrap thing="spSuggest2">
      <autotag group="Helper" tag="SpellLike"/>
      <autotag group="Usage" tag="AtWill"/>
      </bootstrap>
    <bootstrap thing="raFrightPr"></bootstrap>
    <bootstrap thing="fIronWill"></bootstrap>
    <bootstrap thing="skKnowDun"></bootstrap>
    <bootstrap thing="xFly">
      <autotag group="Maneuver" tag="Poor"/>
      </bootstrap>
    <bootstrap thing="lDraconic"></bootstrap>
    <bootstrap thing="stShapecha"></bootstrap>
    <bootstrap thing="raDrBreath">
      <autotag group="BloodEner" tag="Acid"/>
      </bootstrap>
    <bootstrap thing="wBite">
      <autotag group="wMain" tag="2d6_104"/>
      <autotag group="Helper" tag="NatPrimary"/>
      <autotag group="Helper" tag="NatTwoHand"/>
      </bootstrap>
    <bootstrap thing="wClaw">
      <autotag group="wMain" tag="1d8_6"/>
      <autotag group="Value" tag="2"/>
      <autotag group="Helper" tag="NatPrimary"/>
      </bootstrap>
    <bootstrap thing="fPersuas"></bootstrap>
    <eval phase="PreLevel" priority="9900" index="3"><![CDATA[~ Set the name, range (based on size) and damage of our breath weapon.
      var Lrange as number
      if (herofield[tSize].value <= -2) then
          Lrange = 30
      elseif (herofield[tSize].value = -1) then
          Lrange = 40
      elseif (herofield[tSize].value = 0) then
          Lrange = 60
      elseif (herofield[tSize].value = 1) then
          Lrange = 80
      elseif (herofield[tSize].value = 2) then
          Lrange = 100
      elseif (herofield[tSize].value = 3) then
          Lrange = 120
      elseif (herofield[tSize].value >= 4) then
          Lrange = 140
      endif

var Crange as number
Crange = Lrange / 2

~ Manually change the damage dice for each age category, since this does not depend on size.
      hero.child[raDrBreath].field[livename].text = "Breath Weapon (" & Lrange & "-ft. line or " & Crange & "-ft. cone, confusion, every 1d6 rounds, Fort neg.)"

~ Modified natural weapons according to size... If we are too small hide the weapons, if we are Huge our bite should be 2d8 not 3d6, if we are Gargantuan then Claw and Tail slap should be same, if we are Colossol then bite should be 4d8 and Wings should be 2d8. Also set the fly speed.

if (herofield[tSize].value <= -4) then
   perform hero.child[wWing].assign[Hide.Weapon]
   perform hero.child[wTailSlap].assign[Hide.Weapon]

   perform hero.child[wCrush].assign[Hide.Weapon]
   perform hero.child[wTailSweep].assign[Hide.Weapon]

   hero.child[xFly].field[abValue].value = maximum(hero.child[xFly].field[abValue].value, 100)
   perform hero.child[xFly].assign[Maneuver.Average]

elseif (herofield[tSize].value = -3) then
   perform hero.child[wWing].assign[Hide.Weapon]
   perform hero.child[wTailSlap].assign[Hide.Weapon]

   perform hero.child[wCrush].assign[Hide.Weapon]
   perform hero.child[wTailSweep].assign[Hide.Weapon]

   hero.child[xFly].field[abValue].value = maximum(hero.child[xFly].field[abValue].value, 100)
   perform hero.child[xFly].assign[Maneuver.Average]

elseif (herofield[tSize].value = -2) then
   perform hero.child[wWing].assign[Hide.Weapon]
   perform hero.child[wTailSlap].assign[Hide.Weapon]

   perform hero.child[wCrush].assign[Hide.Weapon]
   perform hero.child[wTailSweep].assign[Hide.Weapon]

   hero.child[xFly].field[abValue].value = maximum(hero.child[xFly].field[abValue].value, 100)
   perform hero.child[xFly].assign[Maneuver.Average]

elseif (herofield[tSize].value = -1) then
   perform hero.child[wWing].assign[Hide.Weapon]
   perform hero.child[wTailSlap].assign[Hide.Weapon]

   perform hero.child[wCrush].assign[Hide.Weapon]
   perform hero.child[wTailSweep].assign[Hide.Weapon]

   hero.child[xFly].field[abValue].value = maximum(hero.child[xFly].field[abValue].value, 150)
   perform hero.child[xFly].assign[Maneuver.Average]

elseif (herofield[tSize].value = 0) then
   perform hero.child[wTailSlap].assign[Hide.Weapon]

   perform hero.child[wCrush].assign[Hide.Weapon]
   perform hero.child[wTailSweep].assign[Hide.Weapon]

   hero.child[xFly].field[abValue].value = maximum(hero.child[xFly].field[abValue].value, 150)
   perform hero.child[xFly].assign[Maneuver.Average]

elseif (herofield[tSize].value = 1) then
   perform hero.child[wCrush].assign[Hide.Weapon]
   perform hero.child[wTailSweep].assign[Hide.Weapon]

   hero.child[xFly].field[abValue].value = maximum(hero.child[xFly].field[abValue].value, 200)
   perform hero.child[xFly].assign[Maneuver.Poor]

elseif (herofield[tSize].value = 2) then
   perform hero.child[wBite].tagreplace[wMain.?,wMain.2d8_204]
   perform hero.child[wBite].delete[Helper.DamageUp]

   perform hero.child[wCrush].assign[wMain.2d8_204]
   perform hero.child[wCrush].delete[Helper.DamageUp]
   perform hero.child[wTailSweep].assign[Hide.Weapon]

   hero.child[xFly].field[abValue].value = maximum(hero.child[xFly].field[abValue].value, 200)
   perform hero.child[xFly].assign[Maneuver.Poor]

elseif (herofield[tSize].value = 3) then
   perform hero.child[wClaw].tagreplace[wMain.?,wMain.2d8_204]
   perform hero.child[wClaw].delete[Helper.DamageUp]
   perform hero.child[wTailSlap].tagreplace[wMain.?,wMain.2d8_204]
   perform hero.child[wTailSlap].delete[Helper.DamageUp]

   perform hero.child[wCrush].assign[wMain.4d6_106]
   perform hero.child[wCrush].delete[Helper.DamageUp]
   perform hero.child[wTailSweep].assign[wMain.2d6_104]
   perform hero.child[wTailSweep].delete[Helper.DamageUp]

   hero.child[xFly].field[abValue].value = maximum(hero.child[xFly].field[abValue].value, 250)
   perform hero.child[xFly].assign[Maneuver.Clumsy]

elseif (herofield[tSize].value >= 4) then
   perform hero.child[wBite].tagreplace[wMain.?,wMain.4d8_206]
   perform hero.child[wBite].delete[Helper.DamageUp]
   perform hero.child[wWing].tagreplace[wMain.?,wMain.2d8_204]
   perform hero.child[wWing].delete[Helper.DamageUp]

   perform hero.child[wCrush].assign[wMain.4d8_206]
   perform hero.child[wCrush].delete[Helper.DamageUp]
   perform hero.child[wTailSweep].assign[wMain.2d8_204]
   perform hero.child[wTailSweep].delete[Helper.DamageUp]

   hero.child[xFly].field[abValue].value = maximum(hero.child[xFly].field[abValue].value, 250)
   perform hero.child[xFly].assign[Maneuver.Clumsy]

endif]]></eval>
    <eval phase="Final" priority="11000">~ Dragons have SR = to 11 + thier CR
      var damage as number
      damage = herofield[tCR].value + 11
      #applysr[damage]


~ Dragons have spell like abilities of CL = to TOTAL (not racial) hit dice
      var CL as number
      CL = herofield[tHitDice].value
      field[rSpCastLev].value = CL</eval>
    <eval phase="PreLevel" priority="4000" index="4">#skillinnate[skBluff] += 13
#skillinnate[skCrafOth] += 5
#skillinnate[skCrafTrap] += 5
#skillinnate[skDiplo] += 6
#skillinnate[skDisable] += 8
#skillinnate[skFly] += 3
#skillinnate[skKnowArca] += 13
#skillinnate[skKnowDun] += 10
#skillinnate[skKnowEng] += 13
#skillinnate[skLinguist] += 2
#skillinnate[skPercep] += 13
#skillinnate[skSenseMot] += 13
#skillinnate[skSpellcr] += 13
      <before name="Skill Bonus Feats"/>
      </eval>
    </thing>
  <thing id="ruDungOld" name="Dragon, Dungeon, Old" description="{B}This creature was deprecated. Please add the &quot;Dragon, Dungeon&quot; monster and select your age cateogry from the Dragon Age tab.{/b}\n\nThe dungeon dragon is a curious creature that gets amusement by watching other beings engaged in life and death struggles. To this end, a dungeon dragon sets up a labyrinthine lair, setting traps and populating it with monsters. Younger dungeon dragons tend to lair in natural caverns to ease the burden of construction. Older, more experienced dungeon dragons have been known to construct their own sprawling subterranean complexes, even to the point of hiring on dwarf work gangs and swearing them to secrecy.\n\nOnce the construction and refurbishing of its lair is complete, the dungeon dragon transforms itself into a humanoid and ventures into the surrounding countryside. There it spreads rumors and tales of this horrible catacomb in hopes of luring adventurers forth so it may watch them via its crystal ball. Young dungeon dragons often spend years living among humanoids, even to the point of joining adventurers involved in dungeon delves. On such adventures, the intrepid dungeon dragon takes notes regarding the devious traps and monsters it encounters so that it can add such things to its own lair.\n\nOddly enough, although a dungeon dragon goes to great pains to amass a treasure hoard, it cares little for material wealth. Rather, it uses the treasure it gathers as bait in its dungeon to lure in adventurers and provide it the entertainment it so greatly desires. Watching adventurers explore its catacomb is the only real treasure a dungeon dragon desires. The only material possession a dungeon dragon will risk its life to save is its crystal ball. Without this vital piece of equipment, all of the dragon&apos;s labor is in vain.\n\nA dungeon dragon in its natural form prefers to flee any combat. It likes to watch other creatures engaged in fights for life, not itself. If forced into melee, it swats at opponents with its powerful claws and bite. A dungeon dragon is proficient in the use of all simple and martial weapons and light and medium armor and shields." compset="Race">
    <fieldval field="rSTR" value="19"/>
    <fieldval field="rDEX" value="-1"/>
    <fieldval field="rHitDice" value="15"/>
    <fieldval field="rHPStart" value="97"/>
    <fieldval field="rAC" value="22"/>
    <fieldval field="rCR" value="12"/>
    <fieldval field="rEnviron" value="Underground"/>
    <fieldval field="rOrgan" value="Solitary"/>
    <fieldval field="rTreasure" value="Triple plus crystal ball"/>
    <fieldval field="rDescript" value="This dragon has a long serpentine neck, small wings, and glistening scales. Two small horns dominate its triangular head. Its body is gray in color, with scales tipped in flecks of gold and green. Its eyes are rounded and gray."/>
    <fieldval field="rINT" value="8"/>
    <fieldval field="rWIS" value="8"/>
    <fieldval field="rCON" value="8"/>
    <fieldval field="rCHA" value="6"/>
    <fieldval field="cMagicLev" value="9"/>
    <fieldval field="rFeat" value="-8"/>
    <usesource source="srcTomeHor"/>
    <tag group="Alignment" tag="NeutralGE"/>
    <tag group="Hero" tag="NoDefComm" name="NoDefComm" abbrev="NoDefComm"/>
    <tag group="RaceSize" tag="Huge2"/>
    <tag group="Race" tag="rTrueDrago" name="True Dragon" abbrev="True Dragon"/>
    <tag group="RaceType" tag="NPC" name="NPC Race" abbrev="NPC Race"/>
    <tag group="Helper" tag="Quadruped" name="Quadruped" abbrev="Quadruped"/>
    <tag group="SplLookup" tag="cHelpSor"/>
    <tag group="HasType" tag="tpDragon" name="Dragon" abbrev="Dragon"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <tag group="Language" tag="lAklo"/>
    <tag group="Language" tag="lGnoll"/>
    <tag group="Language" tag="lGoblin"/>
    <tag group="Language" tag="lOrc"/>
    <tag group="Language" tag="lUndercomm"/>
    <tag group="Alignment" tag="NeutralLC"/>
    <bootstrap thing="xuImmEnchm"></bootstrap>
    <bootstrap thing="rauDrDgCfC"></bootstrap>
    <bootstrap thing="xBonusPerc">
      <autotag group="Value" tag="4"/>
      </bootstrap>
    <bootstrap thing="fSkillFoc">
      <autotag group="Target" tag="skCrafOth"/>
      </bootstrap>
    <bootstrap thing="wTailSlap">
      <autotag group="wMain" tag="2d6_104"/>
      <autotag group="Helper" tag="NatTwoHand"/>
      </bootstrap>
    <bootstrap thing="skCrafOth">
      <assignval field="skUserName" value="crystal carving"/>
      <assignval field="skTools" value="1"/>
      </bootstrap>
    <bootstrap thing="fMasCraft">
      <autotag group="thing" tag="skipprereq"/>
      <autotag group="Target" tag="skCrafOth"/>
      </bootstrap>
    <bootstrap thing="wWing">
      <autotag group="wMain" tag="1d8_6"/>
      <autotag group="Value" tag="2"/>
      </bootstrap>
    <bootstrap thing="wCrush"></bootstrap>
    <bootstrap thing="raChangeSh">
      <autotag group="Usage" tag="AtWill"/>
      <assignval field="livename" value="Change Shape (Small or Medium Humanoid creature; alter self)"/>
      </bootstrap>
    <bootstrap thing="skKnowEng"></bootstrap>
    <bootstrap thing="fFlybyAt"></bootstrap>
    <bootstrap thing="wTailSweep"></bootstrap>
    <bootstrap thing="spCharPer1">
      <autotag group="Helper" tag="SpellLike"/>
      <autotag group="Usage" tag="AtWill"/>
      </bootstrap>
    <bootstrap thing="fSkillFoc">
      <autotag group="Target" tag="skKnowEng"/>
      </bootstrap>
    <bootstrap thing="skCrafTrap"></bootstrap>
    <bootstrap thing="raDarkVis">
      <autotag group="Value" tag="120"/>
      </bootstrap>
    <bootstrap thing="spDeteTho2">
      <autotag group="Helper" tag="SpellLike"/>
      <autotag group="Usage" tag="AtWill"/>
      </bootstrap>
    <bootstrap thing="rBlindsen">
      <autotag group="Value" tag="60"/>
      </bootstrap>
    <bootstrap thing="lCommonND"></bootstrap>
    <bootstrap thing="fAlertness"></bootstrap>
    <bootstrap thing="skKnowArca"></bootstrap>
    <bootstrap thing="fCraftWond">
      <autotag group="thing" tag="skipprereq"/>
      </bootstrap>
    <bootstrap thing="xDamRdMag">
      <autotag group="Value" tag="10"/>
      </bootstrap>
    <bootstrap thing="xSplRs"></bootstrap>
    <bootstrap thing="fMultiAtt"></bootstrap>
    <bootstrap thing="spSuggest2">
      <autotag group="Helper" tag="SpellLike"/>
      <autotag group="Usage" tag="AtWill"/>
      </bootstrap>
    <bootstrap thing="raFrightPr"></bootstrap>
    <bootstrap thing="fIronWill"></bootstrap>
    <bootstrap thing="skKnowDun"></bootstrap>
    <bootstrap thing="xFly">
      <autotag group="Maneuver" tag="Poor"/>
      </bootstrap>
    <bootstrap thing="lDraconic"></bootstrap>
    <bootstrap thing="stShapecha"></bootstrap>
    <bootstrap thing="raDrBreath">
      <autotag group="BloodEner" tag="Acid"/>
      </bootstrap>
    <bootstrap thing="wBite">
      <autotag group="wMain" tag="2d8_305"/>
      <autotag group="Helper" tag="NatPrimary"/>
      <autotag group="Helper" tag="NatTwoHand"/>
      </bootstrap>
    <bootstrap thing="wClaw">
      <autotag group="wMain" tag="2d6_104"/>
      <autotag group="Value" tag="2"/>
      <autotag group="Helper" tag="NatPrimary"/>
      </bootstrap>
    <bootstrap thing="fPersuas"></bootstrap>
    <bootstrap thing="spCharMon3">
      <autotag group="Helper" tag="SpellLike"/>
      <autotag group="Usage" tag="AtWill"/>
      </bootstrap>
    <bootstrap thing="raDrSenses"></bootstrap>
    <bootstrap thing="fSkillFoc">
      <autotag group="Target" tag="skBluff"/>
      </bootstrap>
    <eval phase="PreLevel" priority="9900" index="3"><![CDATA[~ Set the name, range (based on size) and damage of our breath weapon.
      var Lrange as number
      if (herofield[tSize].value <= -2) then
          Lrange = 30
      elseif (herofield[tSize].value = -1) then
          Lrange = 40
      elseif (herofield[tSize].value = 0) then
          Lrange = 60
      elseif (herofield[tSize].value = 1) then
          Lrange = 80
      elseif (herofield[tSize].value = 2) then
          Lrange = 100
      elseif (herofield[tSize].value = 3) then
          Lrange = 120
      elseif (herofield[tSize].value >= 4) then
          Lrange = 140
      endif

var Crange as number
Crange = Lrange / 2

~ Manually change the damage dice for each age category, since this does not depend on size.
      hero.child[raDrBreath].field[livename].text = "Breath Weapon (" & Lrange & "-ft. line or " & Crange & "-ft. cone, confusion, every 1d6 rounds, Fort neg.)"

~ Modified natural weapons according to size... If we are too small hide the weapons, if we are Huge our bite should be 2d8 not 3d6, if we are Gargantuan then Claw and Tail slap should be same, if we are Colossol then bite should be 4d8 and Wings should be 2d8. Also set the fly speed.

if (herofield[tSize].value <= -4) then
   perform hero.child[wWing].assign[Hide.Weapon]
   perform hero.child[wTailSlap].assign[Hide.Weapon]

   perform hero.child[wCrush].assign[Hide.Weapon]
   perform hero.child[wTailSweep].assign[Hide.Weapon]

   hero.child[xFly].field[abValue].value = maximum(hero.child[xFly].field[abValue].value, 100)
   perform hero.child[xFly].assign[Maneuver.Average]

elseif (herofield[tSize].value = -3) then
   perform hero.child[wWing].assign[Hide.Weapon]
   perform hero.child[wTailSlap].assign[Hide.Weapon]

   perform hero.child[wCrush].assign[Hide.Weapon]
   perform hero.child[wTailSweep].assign[Hide.Weapon]

   hero.child[xFly].field[abValue].value = maximum(hero.child[xFly].field[abValue].value, 100)
   perform hero.child[xFly].assign[Maneuver.Average]

elseif (herofield[tSize].value = -2) then
   perform hero.child[wWing].assign[Hide.Weapon]
   perform hero.child[wTailSlap].assign[Hide.Weapon]

   perform hero.child[wCrush].assign[Hide.Weapon]
   perform hero.child[wTailSweep].assign[Hide.Weapon]

   hero.child[xFly].field[abValue].value = maximum(hero.child[xFly].field[abValue].value, 100)
   perform hero.child[xFly].assign[Maneuver.Average]

elseif (herofield[tSize].value = -1) then
   perform hero.child[wWing].assign[Hide.Weapon]
   perform hero.child[wTailSlap].assign[Hide.Weapon]

   perform hero.child[wCrush].assign[Hide.Weapon]
   perform hero.child[wTailSweep].assign[Hide.Weapon]

   hero.child[xFly].field[abValue].value = maximum(hero.child[xFly].field[abValue].value, 150)
   perform hero.child[xFly].assign[Maneuver.Average]

elseif (herofield[tSize].value = 0) then
   perform hero.child[wTailSlap].assign[Hide.Weapon]

   perform hero.child[wCrush].assign[Hide.Weapon]
   perform hero.child[wTailSweep].assign[Hide.Weapon]

   hero.child[xFly].field[abValue].value = maximum(hero.child[xFly].field[abValue].value, 150)
   perform hero.child[xFly].assign[Maneuver.Average]

elseif (herofield[tSize].value = 1) then
   perform hero.child[wCrush].assign[Hide.Weapon]
   perform hero.child[wTailSweep].assign[Hide.Weapon]

   hero.child[xFly].field[abValue].value = maximum(hero.child[xFly].field[abValue].value, 200)
   perform hero.child[xFly].assign[Maneuver.Poor]

elseif (herofield[tSize].value = 2) then
   perform hero.child[wBite].tagreplace[wMain.?,wMain.2d8_204]
   perform hero.child[wBite].delete[Helper.DamageUp]

   perform hero.child[wCrush].assign[wMain.2d8_204]
   perform hero.child[wCrush].delete[Helper.DamageUp]
   perform hero.child[wTailSweep].assign[Hide.Weapon]

   hero.child[xFly].field[abValue].value = maximum(hero.child[xFly].field[abValue].value, 200)
   perform hero.child[xFly].assign[Maneuver.Poor]

elseif (herofield[tSize].value = 3) then
   perform hero.child[wClaw].tagreplace[wMain.?,wMain.2d8_204]
   perform hero.child[wClaw].delete[Helper.DamageUp]
   perform hero.child[wTailSlap].tagreplace[wMain.?,wMain.2d8_204]
   perform hero.child[wTailSlap].delete[Helper.DamageUp]

   perform hero.child[wCrush].assign[wMain.4d6_106]
   perform hero.child[wCrush].delete[Helper.DamageUp]
   perform hero.child[wTailSweep].assign[wMain.2d6_104]
   perform hero.child[wTailSweep].delete[Helper.DamageUp]

   hero.child[xFly].field[abValue].value = maximum(hero.child[xFly].field[abValue].value, 250)
   perform hero.child[xFly].assign[Maneuver.Clumsy]

elseif (herofield[tSize].value >= 4) then
   perform hero.child[wBite].tagreplace[wMain.?,wMain.4d8_206]
   perform hero.child[wBite].delete[Helper.DamageUp]
   perform hero.child[wWing].tagreplace[wMain.?,wMain.2d8_204]
   perform hero.child[wWing].delete[Helper.DamageUp]

   perform hero.child[wCrush].assign[wMain.4d8_206]
   perform hero.child[wCrush].delete[Helper.DamageUp]
   perform hero.child[wTailSweep].assign[wMain.2d8_204]
   perform hero.child[wTailSweep].delete[Helper.DamageUp]

   hero.child[xFly].field[abValue].value = maximum(hero.child[xFly].field[abValue].value, 250)
   perform hero.child[xFly].assign[Maneuver.Clumsy]

endif]]></eval>
    <eval phase="Final" priority="11000">~ Dragons have SR = to 11 + thier CR
      var damage as number
      damage = herofield[tCR].value + 11
      #applysr[damage]


~ Dragons have spell like abilities of CL = to TOTAL (not racial) hit dice
      var CL as number
      CL = herofield[tHitDice].value
      field[rSpCastLev].value = CL</eval>
    <eval phase="PreLevel" priority="4000" index="4">#skillinnate[skBluff] += 15
#skillinnate[skCrafOth] += 8
#skillinnate[skCrafTrap] += 8
#skillinnate[skDiplo] += 6
#skillinnate[skDisable] += 9
#skillinnate[skFly] += 7
#skillinnate[skKnowArca] += 15
#skillinnate[skKnowDun] += 15
#skillinnate[skKnowEng] += 15
#skillinnate[skLinguist] += 7
#skillinnate[skPercep] += 15
#skillinnate[skSenseMot] += 15
#skillinnate[skSpellcr] += 15
      <before name="Skill Bonus Feats"/>
      </eval>
    </thing>
  <thing id="ruDungVrOl" name="Dragon, Dungeon, Very Old" description="{B}This creature was deprecated. Please add the &quot;Dragon, Dungeon&quot; monster and select your age cateogry from the Dragon Age tab.{/b}\n\nThe dungeon dragon is a curious creature that gets amusement by watching other beings engaged in life and death struggles. To this end, a dungeon dragon sets up a labyrinthine lair, setting traps and populating it with monsters. Younger dungeon dragons tend to lair in natural caverns to ease the burden of construction. Older, more experienced dungeon dragons have been known to construct their own sprawling subterranean complexes, even to the point of hiring on dwarf work gangs and swearing them to secrecy.\n\nOnce the construction and refurbishing of its lair is complete, the dungeon dragon transforms itself into a humanoid and ventures into the surrounding countryside. There it spreads rumors and tales of this horrible catacomb in hopes of luring adventurers forth so it may watch them via its crystal ball. Young dungeon dragons often spend years living among humanoids, even to the point of joining adventurers involved in dungeon delves. On such adventures, the intrepid dungeon dragon takes notes regarding the devious traps and monsters it encounters so that it can add such things to its own lair.\n\nOddly enough, although a dungeon dragon goes to great pains to amass a treasure hoard, it cares little for material wealth. Rather, it uses the treasure it gathers as bait in its dungeon to lure in adventurers and provide it the entertainment it so greatly desires. Watching adventurers explore its catacomb is the only real treasure a dungeon dragon desires. The only material possession a dungeon dragon will risk its life to save is its crystal ball. Without this vital piece of equipment, all of the dragon&apos;s labor is in vain.\n\nA dungeon dragon in its natural form prefers to flee any combat. It likes to watch other creatures engaged in fights for life, not itself. If forced into melee, it swats at opponents with its powerful claws and bite. A dungeon dragon is proficient in the use of all simple and martial weapons and light and medium armor and shields." compset="Race">
    <fieldval field="rSTR" value="21"/>
    <fieldval field="rDEX" value="-1"/>
    <fieldval field="rHitDice" value="17"/>
    <fieldval field="rHPStart" value="110"/>
    <fieldval field="rAC" value="25"/>
    <fieldval field="rCR" value="13"/>
    <fieldval field="rEnviron" value="Underground"/>
    <fieldval field="rOrgan" value="Solitary"/>
    <fieldval field="rTreasure" value="Triple plus crystal ball"/>
    <fieldval field="rDescript" value="This dragon has a long serpentine neck, small wings, and glistening scales. Two small horns dominate its triangular head. Its body is gray in color, with scales tipped in flecks of gold and green. Its eyes are rounded and gray."/>
    <fieldval field="rINT" value="8"/>
    <fieldval field="rWIS" value="8"/>
    <fieldval field="rCON" value="8"/>
    <fieldval field="rCHA" value="6"/>
    <fieldval field="cMagicLev" value="11"/>
    <fieldval field="rFeat" value="-9"/>
    <usesource source="srcTomeHor"/>
    <tag group="Alignment" tag="NeutralGE"/>
    <tag group="Hero" tag="NoDefComm" name="NoDefComm" abbrev="NoDefComm"/>
    <tag group="RaceSize" tag="Huge2"/>
    <tag group="Race" tag="rTrueDrago" name="True Dragon" abbrev="True Dragon"/>
    <tag group="RaceType" tag="NPC" name="NPC Race" abbrev="NPC Race"/>
    <tag group="Helper" tag="Quadruped" name="Quadruped" abbrev="Quadruped"/>
    <tag group="SplLookup" tag="cHelpSor"/>
    <tag group="HasType" tag="tpDragon" name="Dragon" abbrev="Dragon"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <tag group="Alignment" tag="NeutralLC"/>
    <bootstrap thing="xuImmEnchm"></bootstrap>
    <bootstrap thing="rauDrDgCfC"></bootstrap>
    <bootstrap thing="xBonusPerc">
      <autotag group="Value" tag="4"/>
      </bootstrap>
    <bootstrap thing="fSkillFoc">
      <autotag group="Target" tag="skCrafOth"/>
      </bootstrap>
    <bootstrap thing="wTailSlap">
      <autotag group="wMain" tag="2d6_104"/>
      <autotag group="Helper" tag="NatTwoHand"/>
      </bootstrap>
    <bootstrap thing="skCrafOth">
      <assignval field="skUserName" value="crystal carving"/>
      <assignval field="skTools" value="1"/>
      </bootstrap>
    <bootstrap thing="fMasCraft">
      <autotag group="thing" tag="skipprereq"/>
      <autotag group="Target" tag="skCrafOth"/>
      </bootstrap>
    <bootstrap thing="wWing">
      <autotag group="wMain" tag="1d8_6"/>
      <autotag group="Value" tag="2"/>
      </bootstrap>
    <bootstrap thing="wCrush"></bootstrap>
    <bootstrap thing="raChangeSh">
      <autotag group="Usage" tag="AtWill"/>
      <assignval field="livename" value="Change Shape (Small or Medium Humanoid creature; alter self)"/>
      </bootstrap>
    <bootstrap thing="skKnowEng"></bootstrap>
    <bootstrap thing="fFlybyAt"></bootstrap>
    <bootstrap thing="wTailSweep"></bootstrap>
    <bootstrap thing="spCharPer1">
      <autotag group="Helper" tag="SpellLike"/>
      <autotag group="Usage" tag="AtWill"/>
      </bootstrap>
    <bootstrap thing="fSkillFoc">
      <autotag group="Target" tag="skKnowEng"/>
      </bootstrap>
    <bootstrap thing="skCrafTrap"></bootstrap>
    <bootstrap thing="raDarkVis">
      <autotag group="Value" tag="120"/>
      </bootstrap>
    <bootstrap thing="spDeteTho2">
      <autotag group="Helper" tag="SpellLike"/>
      <autotag group="Usage" tag="AtWill"/>
      </bootstrap>
    <bootstrap thing="rBlindsen">
      <autotag group="Value" tag="60"/>
      </bootstrap>
    <bootstrap thing="lCommonND"></bootstrap>
    <bootstrap thing="fAlertness"></bootstrap>
    <bootstrap thing="skKnowArca"></bootstrap>
    <bootstrap thing="fCraftWond">
      <autotag group="thing" tag="skipprereq"/>
      </bootstrap>
    <bootstrap thing="xDamRdMag">
      <autotag group="Value" tag="15"/>
      </bootstrap>
    <bootstrap thing="xSplRs"></bootstrap>
    <bootstrap thing="fMultiAtt"></bootstrap>
    <bootstrap thing="spSuggest2">
      <autotag group="Helper" tag="SpellLike"/>
      <autotag group="Usage" tag="AtWill"/>
      </bootstrap>
    <bootstrap thing="raFrightPr"></bootstrap>
    <bootstrap thing="fIronWill"></bootstrap>
    <bootstrap thing="skKnowDun"></bootstrap>
    <bootstrap thing="xFly">
      <autotag group="Maneuver" tag="Poor"/>
      </bootstrap>
    <bootstrap thing="lDraconic"></bootstrap>
    <bootstrap thing="stShapecha"></bootstrap>
    <bootstrap thing="raDrBreath">
      <autotag group="BloodEner" tag="Acid"/>
      </bootstrap>
    <bootstrap thing="wBite">
      <autotag group="wMain" tag="2d8_305"/>
      <autotag group="Helper" tag="NatPrimary"/>
      <autotag group="Helper" tag="NatTwoHand"/>
      </bootstrap>
    <bootstrap thing="wClaw">
      <autotag group="wMain" tag="2d6_104"/>
      <autotag group="Value" tag="2"/>
      <autotag group="Helper" tag="NatPrimary"/>
      </bootstrap>
    <bootstrap thing="fPersuas"></bootstrap>
    <bootstrap thing="spCharMon3">
      <autotag group="Helper" tag="SpellLike"/>
      <autotag group="Usage" tag="AtWill"/>
      </bootstrap>
    <bootstrap thing="raDrSenses"></bootstrap>
    <bootstrap thing="fSkillFoc">
      <autotag group="Target" tag="skBluff"/>
      </bootstrap>
    <bootstrap thing="fHover"></bootstrap>
    <eval phase="Final" priority="11000">~ Dragons have SR = to 11 + thier CR
      var damage as number
      damage = herofield[tCR].value + 11
      #applysr[damage]


~ Dragons have spell like abilities of CL = to TOTAL (not racial) hit dice
      var CL as number
      CL = herofield[tHitDice].value
      field[rSpCastLev].value = CL</eval>
    <eval phase="PreLevel" priority="4000" index="4">#skillinnate[skBluff] += 15
#skillinnate[skCrafOth] += 13
#skillinnate[skCrafTrap] += 13
#skillinnate[skDiplo] += 12
#skillinnate[skDisable] += 9
#skillinnate[skFly] += 11
#skillinnate[skKnowArca] += 15
#skillinnate[skKnowDun] += 15
#skillinnate[skKnowEng] += 15
#skillinnate[skLinguist] += 7
#skillinnate[skPercep] += 15
#skillinnate[skSenseMot] += 15
#skillinnate[skSpellcr] += 15
      <before name="Skill Bonus Feats"/>
      </eval>
    <eval phase="PreLevel" priority="9900" index="3"><![CDATA[~ Set the name, range (based on size) and damage of our breath weapon.
      var Lrange as number
      if (herofield[tSize].value <= -2) then
          Lrange = 30
      elseif (herofield[tSize].value = -1) then
          Lrange = 40
      elseif (herofield[tSize].value = 0) then
          Lrange = 60
      elseif (herofield[tSize].value = 1) then
          Lrange = 80
      elseif (herofield[tSize].value = 2) then
          Lrange = 100
      elseif (herofield[tSize].value = 3) then
          Lrange = 120
      elseif (herofield[tSize].value >= 4) then
          Lrange = 140
      endif

var Crange as number
Crange = Lrange / 2

~ Manually change the damage dice for each age category, since this does not depend on size.
      hero.child[raDrBreath].field[livename].text = "Breath Weapon (" & Lrange & "-ft. line or " & Crange & "-ft. cone, confusion, every 1d6 rounds, Fort neg.)"

~ Modified natural weapons according to size... If we are too small hide the weapons, if we are Huge our bite should be 2d8 not 3d6, if we are Gargantuan then Claw and Tail slap should be same, if we are Colossol then bite should be 4d8 and Wings should be 2d8. Also set the fly speed.

if (herofield[tSize].value <= -4) then
   perform hero.child[wWing].assign[Hide.Weapon]
   perform hero.child[wTailSlap].assign[Hide.Weapon]

   perform hero.child[wCrush].assign[Hide.Weapon]
   perform hero.child[wTailSweep].assign[Hide.Weapon]

   hero.child[xFly].field[abValue].value = maximum(hero.child[xFly].field[abValue].value, 100)
   perform hero.child[xFly].assign[Maneuver.Average]

elseif (herofield[tSize].value = -3) then
   perform hero.child[wWing].assign[Hide.Weapon]
   perform hero.child[wTailSlap].assign[Hide.Weapon]

   perform hero.child[wCrush].assign[Hide.Weapon]
   perform hero.child[wTailSweep].assign[Hide.Weapon]

   hero.child[xFly].field[abValue].value = maximum(hero.child[xFly].field[abValue].value, 100)
   perform hero.child[xFly].assign[Maneuver.Average]

elseif (herofield[tSize].value = -2) then
   perform hero.child[wWing].assign[Hide.Weapon]
   perform hero.child[wTailSlap].assign[Hide.Weapon]

   perform hero.child[wCrush].assign[Hide.Weapon]
   perform hero.child[wTailSweep].assign[Hide.Weapon]

   hero.child[xFly].field[abValue].value = maximum(hero.child[xFly].field[abValue].value, 100)
   perform hero.child[xFly].assign[Maneuver.Average]

elseif (herofield[tSize].value = -1) then
   perform hero.child[wWing].assign[Hide.Weapon]
   perform hero.child[wTailSlap].assign[Hide.Weapon]

   perform hero.child[wCrush].assign[Hide.Weapon]
   perform hero.child[wTailSweep].assign[Hide.Weapon]

   hero.child[xFly].field[abValue].value = maximum(hero.child[xFly].field[abValue].value, 150)
   perform hero.child[xFly].assign[Maneuver.Average]

elseif (herofield[tSize].value = 0) then
   perform hero.child[wTailSlap].assign[Hide.Weapon]

   perform hero.child[wCrush].assign[Hide.Weapon]
   perform hero.child[wTailSweep].assign[Hide.Weapon]

   hero.child[xFly].field[abValue].value = maximum(hero.child[xFly].field[abValue].value, 150)
   perform hero.child[xFly].assign[Maneuver.Average]

elseif (herofield[tSize].value = 1) then
   perform hero.child[wCrush].assign[Hide.Weapon]
   perform hero.child[wTailSweep].assign[Hide.Weapon]

   hero.child[xFly].field[abValue].value = maximum(hero.child[xFly].field[abValue].value, 200)
   perform hero.child[xFly].assign[Maneuver.Poor]

elseif (herofield[tSize].value = 2) then
   perform hero.child[wBite].tagreplace[wMain.?,wMain.2d8_204]
   perform hero.child[wBite].delete[Helper.DamageUp]

   perform hero.child[wCrush].assign[wMain.2d8_204]
   perform hero.child[wCrush].delete[Helper.DamageUp]
   perform hero.child[wTailSweep].assign[Hide.Weapon]

   hero.child[xFly].field[abValue].value = maximum(hero.child[xFly].field[abValue].value, 200)
   perform hero.child[xFly].assign[Maneuver.Poor]

elseif (herofield[tSize].value = 3) then
   perform hero.child[wClaw].tagreplace[wMain.?,wMain.2d8_204]
   perform hero.child[wClaw].delete[Helper.DamageUp]
   perform hero.child[wTailSlap].tagreplace[wMain.?,wMain.2d8_204]
   perform hero.child[wTailSlap].delete[Helper.DamageUp]

   perform hero.child[wCrush].assign[wMain.4d6_106]
   perform hero.child[wCrush].delete[Helper.DamageUp]
   perform hero.child[wTailSweep].assign[wMain.2d6_104]
   perform hero.child[wTailSweep].delete[Helper.DamageUp]

   hero.child[xFly].field[abValue].value = maximum(hero.child[xFly].field[abValue].value, 250)
   perform hero.child[xFly].assign[Maneuver.Clumsy]

elseif (herofield[tSize].value >= 4) then
   perform hero.child[wBite].tagreplace[wMain.?,wMain.4d8_206]
   perform hero.child[wBite].delete[Helper.DamageUp]
   perform hero.child[wWing].tagreplace[wMain.?,wMain.2d8_204]
   perform hero.child[wWing].delete[Helper.DamageUp]

   perform hero.child[wCrush].assign[wMain.4d8_206]
   perform hero.child[wCrush].delete[Helper.DamageUp]
   perform hero.child[wTailSweep].assign[wMain.2d8_204]
   perform hero.child[wTailSweep].delete[Helper.DamageUp]

   hero.child[xFly].field[abValue].value = maximum(hero.child[xFly].field[abValue].value, 250)
   perform hero.child[xFly].assign[Maneuver.Clumsy]

endif]]></eval>
    </thing>
  <thing id="ruDungAnci" name="Dragon, Dungeon, Ancient" description="{B}This creature was deprecated. Please add the &quot;Dragon, Dungeon&quot; monster and select your age cateogry from the Dragon Age tab.{/b}\n\nThe dungeon dragon is a curious creature that gets amusement by watching other beings engaged in life and death struggles. To this end, a dungeon dragon sets up a labyrinthine lair, setting traps and populating it with monsters. Younger dungeon dragons tend to lair in natural caverns to ease the burden of construction. Older, more experienced dungeon dragons have been known to construct their own sprawling subterranean complexes, even to the point of hiring on dwarf work gangs and swearing them to secrecy.\n\nOnce the construction and refurbishing of its lair is complete, the dungeon dragon transforms itself into a humanoid and ventures into the surrounding countryside. There it spreads rumors and tales of this horrible catacomb in hopes of luring adventurers forth so it may watch them via its crystal ball. Young dungeon dragons often spend years living among humanoids, even to the point of joining adventurers involved in dungeon delves. On such adventures, the intrepid dungeon dragon takes notes regarding the devious traps and monsters it encounters so that it can add such things to its own lair.\n\nOddly enough, although a dungeon dragon goes to great pains to amass a treasure hoard, it cares little for material wealth. Rather, it uses the treasure it gathers as bait in its dungeon to lure in adventurers and provide it the entertainment it so greatly desires. Watching adventurers explore its catacomb is the only real treasure a dungeon dragon desires. The only material possession a dungeon dragon will risk its life to save is its crystal ball. Without this vital piece of equipment, all of the dragon&apos;s labor is in vain.\n\nA dungeon dragon in its natural form prefers to flee any combat. It likes to watch other creatures engaged in fights for life, not itself. If forced into melee, it swats at opponents with its powerful claws and bite. A dungeon dragon is proficient in the use of all simple and martial weapons and light and medium armor and shields." compset="Race">
    <fieldval field="rSTR" value="23"/>
    <fieldval field="rDEX" value="-1"/>
    <fieldval field="rHitDice" value="19"/>
    <fieldval field="rHPStart" value="123"/>
    <fieldval field="rAC" value="28"/>
    <fieldval field="rCR" value="14"/>
    <fieldval field="rEnviron" value="Underground"/>
    <fieldval field="rOrgan" value="Solitary"/>
    <fieldval field="rTreasure" value="Triple plus crystal ball"/>
    <fieldval field="rDescript" value="This dragon has a long serpentine neck, small wings, and glistening scales. Two small horns dominate its triangular head. Its body is gray in color, with scales tipped in flecks of gold and green. Its eyes are rounded and gray."/>
    <fieldval field="rINT" value="10"/>
    <fieldval field="rWIS" value="10"/>
    <fieldval field="rCON" value="10"/>
    <fieldval field="rCHA" value="8"/>
    <fieldval field="cMagicLev" value="14"/>
    <fieldval field="rFeat" value="-10"/>
    <usesource source="srcTomeHor"/>
    <tag group="Alignment" tag="NeutralGE"/>
    <tag group="Hero" tag="NoDefComm" name="NoDefComm" abbrev="NoDefComm"/>
    <tag group="RaceSize" tag="Huge2"/>
    <tag group="Race" tag="rTrueDrago" name="True Dragon" abbrev="True Dragon"/>
    <tag group="RaceType" tag="NPC" name="NPC Race" abbrev="NPC Race"/>
    <tag group="Helper" tag="Quadruped" name="Quadruped" abbrev="Quadruped"/>
    <tag group="SplLookup" tag="cHelpSor"/>
    <tag group="HasType" tag="tpDragon" name="Dragon" abbrev="Dragon"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <tag group="Alignment" tag="NeutralLC"/>
    <bootstrap thing="xuImmEnchm"></bootstrap>
    <bootstrap thing="rauDrDgCfC"></bootstrap>
    <bootstrap thing="xBonusPerc">
      <autotag group="Value" tag="4"/>
      </bootstrap>
    <bootstrap thing="fSkillFoc">
      <autotag group="Target" tag="skCrafOth"/>
      </bootstrap>
    <bootstrap thing="wTailSlap">
      <autotag group="wMain" tag="2d6_104"/>
      <autotag group="Helper" tag="NatTwoHand"/>
      </bootstrap>
    <bootstrap thing="skCrafOth">
      <assignval field="skUserName" value="crystal carving"/>
      <assignval field="skTools" value="1"/>
      </bootstrap>
    <bootstrap thing="fMasCraft">
      <autotag group="thing" tag="skipprereq"/>
      <autotag group="Target" tag="skCrafOth"/>
      </bootstrap>
    <bootstrap thing="wWing">
      <autotag group="wMain" tag="1d8_6"/>
      <autotag group="Value" tag="2"/>
      </bootstrap>
    <bootstrap thing="wCrush"></bootstrap>
    <bootstrap thing="raChangeSh">
      <autotag group="Usage" tag="AtWill"/>
      <assignval field="livename" value="Change Shape (Small or Medium Humanoid creature; alter self)"/>
      </bootstrap>
    <bootstrap thing="skKnowEng"></bootstrap>
    <bootstrap thing="fFlybyAt"></bootstrap>
    <bootstrap thing="wTailSweep"></bootstrap>
    <bootstrap thing="spCharPer1">
      <autotag group="Helper" tag="SpellLike"/>
      <autotag group="Usage" tag="AtWill"/>
      </bootstrap>
    <bootstrap thing="fSkillFoc">
      <autotag group="Target" tag="skKnowEng"/>
      </bootstrap>
    <bootstrap thing="skCrafTrap"></bootstrap>
    <bootstrap thing="raDarkVis">
      <autotag group="Value" tag="120"/>
      </bootstrap>
    <bootstrap thing="spDeteTho2">
      <autotag group="Helper" tag="SpellLike"/>
      <autotag group="Usage" tag="AtWill"/>
      </bootstrap>
    <bootstrap thing="rBlindsen">
      <autotag group="Value" tag="60"/>
      </bootstrap>
    <bootstrap thing="lCommonND"></bootstrap>
    <bootstrap thing="fAlertness"></bootstrap>
    <bootstrap thing="skKnowArca"></bootstrap>
    <bootstrap thing="fCraftWond">
      <autotag group="thing" tag="skipprereq"/>
      </bootstrap>
    <bootstrap thing="xDamRdMag">
      <autotag group="Value" tag="15"/>
      </bootstrap>
    <bootstrap thing="xSplRs"></bootstrap>
    <bootstrap thing="fMultiAtt"></bootstrap>
    <bootstrap thing="spSuggest2">
      <autotag group="Helper" tag="SpellLike"/>
      <autotag group="Usage" tag="AtWill"/>
      </bootstrap>
    <bootstrap thing="raFrightPr"></bootstrap>
    <bootstrap thing="fIronWill"></bootstrap>
    <bootstrap thing="skKnowDun"></bootstrap>
    <bootstrap thing="xFly">
      <autotag group="Maneuver" tag="Poor"/>
      </bootstrap>
    <bootstrap thing="lDraconic"></bootstrap>
    <bootstrap thing="stShapecha"></bootstrap>
    <bootstrap thing="raDrBreath">
      <autotag group="BloodEner" tag="Acid"/>
      </bootstrap>
    <bootstrap thing="wBite">
      <autotag group="wMain" tag="2d8_305"/>
      <autotag group="Helper" tag="NatPrimary"/>
      <autotag group="Helper" tag="NatTwoHand"/>
      </bootstrap>
    <bootstrap thing="wClaw">
      <autotag group="wMain" tag="2d6_104"/>
      <autotag group="Value" tag="2"/>
      <autotag group="Helper" tag="NatPrimary"/>
      </bootstrap>
    <bootstrap thing="fPersuas"></bootstrap>
    <bootstrap thing="spCharMon3">
      <autotag group="Helper" tag="SpellLike"/>
      <autotag group="Usage" tag="AtWill"/>
      </bootstrap>
    <bootstrap thing="raDrSenses"></bootstrap>
    <bootstrap thing="fSkillFoc">
      <autotag group="Target" tag="skBluff"/>
      </bootstrap>
    <bootstrap thing="fHover"></bootstrap>
    <bootstrap thing="spSuggMas5">
      <autotag group="Helper" tag="SpellLike"/>
      <autotag group="Usage" tag="AtWill"/>
      </bootstrap>
    <bootstrap thing="fImpInit"></bootstrap>
    <eval phase="PreLevel" priority="9900" index="3"><![CDATA[~ Set the name, range (based on size) and damage of our breath weapon.
      var Lrange as number
      if (herofield[tSize].value <= -2) then
          Lrange = 30
      elseif (herofield[tSize].value = -1) then
          Lrange = 40
      elseif (herofield[tSize].value = 0) then
          Lrange = 60
      elseif (herofield[tSize].value = 1) then
          Lrange = 80
      elseif (herofield[tSize].value = 2) then
          Lrange = 100
      elseif (herofield[tSize].value = 3) then
          Lrange = 120
      elseif (herofield[tSize].value >= 4) then
          Lrange = 140
      endif

var Crange as number
Crange = Lrange / 2

~ Manually change the damage dice for each age category, since this does not depend on size.
      hero.child[raDrBreath].field[livename].text = "Breath Weapon (" & Lrange & "-ft. line or " & Crange & "-ft. cone, confusion, every 1d6 rounds, Fort neg.)"

~ Modified natural weapons according to size... If we are too small hide the weapons, if we are Huge our bite should be 2d8 not 3d6, if we are Gargantuan then Claw and Tail slap should be same, if we are Colossol then bite should be 4d8 and Wings should be 2d8. Also set the fly speed.

if (herofield[tSize].value <= -4) then
   perform hero.child[wWing].assign[Hide.Weapon]
   perform hero.child[wTailSlap].assign[Hide.Weapon]

   perform hero.child[wCrush].assign[Hide.Weapon]
   perform hero.child[wTailSweep].assign[Hide.Weapon]

   hero.child[xFly].field[abValue].value = maximum(hero.child[xFly].field[abValue].value, 100)
   perform hero.child[xFly].assign[Maneuver.Average]

elseif (herofield[tSize].value = -3) then
   perform hero.child[wWing].assign[Hide.Weapon]
   perform hero.child[wTailSlap].assign[Hide.Weapon]

   perform hero.child[wCrush].assign[Hide.Weapon]
   perform hero.child[wTailSweep].assign[Hide.Weapon]

   hero.child[xFly].field[abValue].value = maximum(hero.child[xFly].field[abValue].value, 100)
   perform hero.child[xFly].assign[Maneuver.Average]

elseif (herofield[tSize].value = -2) then
   perform hero.child[wWing].assign[Hide.Weapon]
   perform hero.child[wTailSlap].assign[Hide.Weapon]

   perform hero.child[wCrush].assign[Hide.Weapon]
   perform hero.child[wTailSweep].assign[Hide.Weapon]

   hero.child[xFly].field[abValue].value = maximum(hero.child[xFly].field[abValue].value, 100)
   perform hero.child[xFly].assign[Maneuver.Average]

elseif (herofield[tSize].value = -1) then
   perform hero.child[wWing].assign[Hide.Weapon]
   perform hero.child[wTailSlap].assign[Hide.Weapon]

   perform hero.child[wCrush].assign[Hide.Weapon]
   perform hero.child[wTailSweep].assign[Hide.Weapon]

   hero.child[xFly].field[abValue].value = maximum(hero.child[xFly].field[abValue].value, 150)
   perform hero.child[xFly].assign[Maneuver.Average]

elseif (herofield[tSize].value = 0) then
   perform hero.child[wTailSlap].assign[Hide.Weapon]

   perform hero.child[wCrush].assign[Hide.Weapon]
   perform hero.child[wTailSweep].assign[Hide.Weapon]

   hero.child[xFly].field[abValue].value = maximum(hero.child[xFly].field[abValue].value, 150)
   perform hero.child[xFly].assign[Maneuver.Average]

elseif (herofield[tSize].value = 1) then
   perform hero.child[wCrush].assign[Hide.Weapon]
   perform hero.child[wTailSweep].assign[Hide.Weapon]

   hero.child[xFly].field[abValue].value = maximum(hero.child[xFly].field[abValue].value, 200)
   perform hero.child[xFly].assign[Maneuver.Poor]

elseif (herofield[tSize].value = 2) then
   perform hero.child[wBite].tagreplace[wMain.?,wMain.2d8_204]
   perform hero.child[wBite].delete[Helper.DamageUp]

   perform hero.child[wCrush].assign[wMain.2d8_204]
   perform hero.child[wCrush].delete[Helper.DamageUp]
   perform hero.child[wTailSweep].assign[Hide.Weapon]

   hero.child[xFly].field[abValue].value = maximum(hero.child[xFly].field[abValue].value, 200)
   perform hero.child[xFly].assign[Maneuver.Poor]

elseif (herofield[tSize].value = 3) then
   perform hero.child[wClaw].tagreplace[wMain.?,wMain.2d8_204]
   perform hero.child[wClaw].delete[Helper.DamageUp]
   perform hero.child[wTailSlap].tagreplace[wMain.?,wMain.2d8_204]
   perform hero.child[wTailSlap].delete[Helper.DamageUp]

   perform hero.child[wCrush].assign[wMain.4d6_106]
   perform hero.child[wCrush].delete[Helper.DamageUp]
   perform hero.child[wTailSweep].assign[wMain.2d6_104]
   perform hero.child[wTailSweep].delete[Helper.DamageUp]

   hero.child[xFly].field[abValue].value = maximum(hero.child[xFly].field[abValue].value, 250)
   perform hero.child[xFly].assign[Maneuver.Clumsy]

elseif (herofield[tSize].value >= 4) then
   perform hero.child[wBite].tagreplace[wMain.?,wMain.4d8_206]
   perform hero.child[wBite].delete[Helper.DamageUp]
   perform hero.child[wWing].tagreplace[wMain.?,wMain.2d8_204]
   perform hero.child[wWing].delete[Helper.DamageUp]

   perform hero.child[wCrush].assign[wMain.4d8_206]
   perform hero.child[wCrush].delete[Helper.DamageUp]
   perform hero.child[wTailSweep].assign[wMain.2d8_204]
   perform hero.child[wTailSweep].delete[Helper.DamageUp]

   hero.child[xFly].field[abValue].value = maximum(hero.child[xFly].field[abValue].value, 250)
   perform hero.child[xFly].assign[Maneuver.Clumsy]

endif]]></eval>
    <eval phase="Final" priority="11000">~ Dragons have SR = to 11 + thier CR
      var damage as number
      damage = herofield[tCR].value + 11
      #applysr[damage]


~ Dragons have spell like abilities of CL = to TOTAL (not racial) hit dice
      var CL as number
      CL = herofield[tHitDice].value
      field[rSpCastLev].value = CL</eval>
    <eval phase="PreLevel" priority="4000" index="4">#skillinnate[skBluff] += 19
#skillinnate[skCrafOth] += 8
#skillinnate[skCrafTrap] += 9
#skillinnate[skDiplo] += 10
#skillinnate[skDisable] += 15
#skillinnate[skFly] += 15
#skillinnate[skKnowArca] += 19
#skillinnate[skKnowDun] += 19
#skillinnate[skKnowEng] += 19
#skillinnate[skLinguist] += 19
#skillinnate[skPercep] += 19
#skillinnate[skSenseMot] += 19
#skillinnate[skSpellcr] += 19
      <before name="Skill Bonus Feats"/>
      </eval>
    </thing>
  <thing id="ruDungWyrm" name="Dragon, Dungeon, Wyrm" description="{B}This creature was deprecated. Please add the &quot;Dragon, Dungeon&quot; monster and select your age cateogry from the Dragon Age tab.{/b}\n\nThe dungeon dragon is a curious creature that gets amusement by watching other beings engaged in life and death struggles. To this end, a dungeon dragon sets up a labyrinthine lair, setting traps and populating it with monsters. Younger dungeon dragons tend to lair in natural caverns to ease the burden of construction. Older, more experienced dungeon dragons have been known to construct their own sprawling subterranean complexes, even to the point of hiring on dwarf work gangs and swearing them to secrecy.\n\nOnce the construction and refurbishing of its lair is complete, the dungeon dragon transforms itself into a humanoid and ventures into the surrounding countryside. There it spreads rumors and tales of this horrible catacomb in hopes of luring adventurers forth so it may watch them via its crystal ball. Young dungeon dragons often spend years living among humanoids, even to the point of joining adventurers involved in dungeon delves. On such adventures, the intrepid dungeon dragon takes notes regarding the devious traps and monsters it encounters so that it can add such things to its own lair.\n\nOddly enough, although a dungeon dragon goes to great pains to amass a treasure hoard, it cares little for material wealth. Rather, it uses the treasure it gathers as bait in its dungeon to lure in adventurers and provide it the entertainment it so greatly desires. Watching adventurers explore its catacomb is the only real treasure a dungeon dragon desires. The only material possession a dungeon dragon will risk its life to save is its crystal ball. Without this vital piece of equipment, all of the dragon&apos;s labor is in vain.\n\nA dungeon dragon in its natural form prefers to flee any combat. It likes to watch other creatures engaged in fights for life, not itself. If forced into melee, it swats at opponents with its powerful claws and bite. A dungeon dragon is proficient in the use of all simple and martial weapons and light and medium armor and shields." compset="Race">
    <fieldval field="rSTR" value="25"/>
    <fieldval field="rDEX" value="-3"/>
    <fieldval field="rHitDice" value="21"/>
    <fieldval field="rHPStart" value="136"/>
    <fieldval field="rAC" value="31"/>
    <fieldval field="rCR" value="15"/>
    <fieldval field="rEnviron" value="Underground"/>
    <fieldval field="rOrgan" value="Solitary"/>
    <fieldval field="rTreasure" value="Triple plus crystal ball"/>
    <fieldval field="rDescript" value="This dragon has a long serpentine neck, small wings, and glistening scales. Two small horns dominate its triangular head. Its body is gray in color, with scales tipped in flecks of gold and green. Its eyes are rounded and gray."/>
    <fieldval field="rINT" value="10"/>
    <fieldval field="rWIS" value="10"/>
    <fieldval field="rCON" value="10"/>
    <fieldval field="rCHA" value="8"/>
    <fieldval field="cMagicLev" value="15"/>
    <fieldval field="rFeat" value="-11"/>
    <usesource source="srcTomeHor"/>
    <tag group="Alignment" tag="NeutralGE"/>
    <tag group="Hero" tag="NoDefComm" name="NoDefComm" abbrev="NoDefComm"/>
    <tag group="RaceSize" tag="Huge2"/>
    <tag group="Race" tag="rTrueDrago" name="True Dragon" abbrev="True Dragon"/>
    <tag group="RaceType" tag="NPC" name="NPC Race" abbrev="NPC Race"/>
    <tag group="Helper" tag="Quadruped" name="Quadruped" abbrev="Quadruped"/>
    <tag group="SplLookup" tag="cHelpSor"/>
    <tag group="HasType" tag="tpDragon" name="Dragon" abbrev="Dragon"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <tag group="Alignment" tag="NeutralLC"/>
    <bootstrap thing="xuImmEnchm"></bootstrap>
    <bootstrap thing="rauDrDgCfC"></bootstrap>
    <bootstrap thing="xBonusPerc">
      <autotag group="Value" tag="4"/>
      </bootstrap>
    <bootstrap thing="fSkillFoc">
      <autotag group="Target" tag="skCrafOth"/>
      </bootstrap>
    <bootstrap thing="wTailSlap">
      <autotag group="wMain" tag="2d6_104"/>
      <autotag group="Helper" tag="NatTwoHand"/>
      </bootstrap>
    <bootstrap thing="skCrafOth">
      <assignval field="skUserName" value="crystal carving"/>
      <assignval field="skTools" value="1"/>
      </bootstrap>
    <bootstrap thing="fMasCraft">
      <autotag group="thing" tag="skipprereq"/>
      <autotag group="Target" tag="skCrafOth"/>
      </bootstrap>
    <bootstrap thing="wWing">
      <autotag group="wMain" tag="1d8_6"/>
      <autotag group="Value" tag="2"/>
      </bootstrap>
    <bootstrap thing="wCrush"></bootstrap>
    <bootstrap thing="raChangeSh">
      <autotag group="Usage" tag="AtWill"/>
      <assignval field="livename" value="Change Shape (Small or Medium Humanoid creature; alter self)"/>
      </bootstrap>
    <bootstrap thing="skKnowEng"></bootstrap>
    <bootstrap thing="fFlybyAt"></bootstrap>
    <bootstrap thing="wTailSweep"></bootstrap>
    <bootstrap thing="spCharPer1">
      <autotag group="Helper" tag="SpellLike"/>
      <autotag group="Usage" tag="AtWill"/>
      </bootstrap>
    <bootstrap thing="fSkillFoc">
      <autotag group="Target" tag="skKnowEng"/>
      </bootstrap>
    <bootstrap thing="skCrafTrap"></bootstrap>
    <bootstrap thing="raDarkVis">
      <autotag group="Value" tag="120"/>
      </bootstrap>
    <bootstrap thing="spDeteTho2">
      <autotag group="Helper" tag="SpellLike"/>
      <autotag group="Usage" tag="AtWill"/>
      </bootstrap>
    <bootstrap thing="rBlindsen">
      <autotag group="Value" tag="60"/>
      </bootstrap>
    <bootstrap thing="lCommonND"></bootstrap>
    <bootstrap thing="fAlertness"></bootstrap>
    <bootstrap thing="skKnowArca"></bootstrap>
    <bootstrap thing="fCraftWond">
      <autotag group="thing" tag="skipprereq"/>
      </bootstrap>
    <bootstrap thing="xDamRdMag">
      <autotag group="Value" tag="20"/>
      </bootstrap>
    <bootstrap thing="xSplRs"></bootstrap>
    <bootstrap thing="fMultiAtt"></bootstrap>
    <bootstrap thing="spSuggest2">
      <autotag group="Helper" tag="SpellLike"/>
      <autotag group="Usage" tag="AtWill"/>
      </bootstrap>
    <bootstrap thing="raFrightPr"></bootstrap>
    <bootstrap thing="fIronWill"></bootstrap>
    <bootstrap thing="skKnowDun"></bootstrap>
    <bootstrap thing="xFly">
      <autotag group="Maneuver" tag="Poor"/>
      </bootstrap>
    <bootstrap thing="lDraconic"></bootstrap>
    <bootstrap thing="stShapecha"></bootstrap>
    <bootstrap thing="raDrBreath">
      <autotag group="BloodEner" tag="Acid"/>
      </bootstrap>
    <bootstrap thing="wBite">
      <autotag group="wMain" tag="2d8_305"/>
      <autotag group="Helper" tag="NatPrimary"/>
      <autotag group="Helper" tag="NatTwoHand"/>
      </bootstrap>
    <bootstrap thing="wClaw">
      <autotag group="wMain" tag="2d6_104"/>
      <autotag group="Value" tag="2"/>
      <autotag group="Helper" tag="NatPrimary"/>
      </bootstrap>
    <bootstrap thing="fPersuas"></bootstrap>
    <bootstrap thing="spCharMon3">
      <autotag group="Helper" tag="SpellLike"/>
      <autotag group="Usage" tag="AtWill"/>
      </bootstrap>
    <bootstrap thing="raDrSenses"></bootstrap>
    <bootstrap thing="fSkillFoc">
      <autotag group="Target" tag="skBluff"/>
      </bootstrap>
    <bootstrap thing="fHover"></bootstrap>
    <bootstrap thing="spSuggMas5">
      <autotag group="Helper" tag="SpellLike"/>
      <autotag group="Usage" tag="AtWill"/>
      </bootstrap>
    <bootstrap thing="fImpInit"></bootstrap>
    <bootstrap thing="fLightRef"></bootstrap>
    <eval phase="Final" priority="11000">~ Dragons have SR = to 11 + thier CR
      var damage as number
      damage = herofield[tCR].value + 11
      #applysr[damage]


~ Dragons have spell like abilities of CL = to TOTAL (not racial) hit dice
      var CL as number
      CL = herofield[tHitDice].value
      field[rSpCastLev].value = CL</eval>
    <eval phase="PreLevel" priority="4000" index="4">#skillinnate[skBluff] += 21
#skillinnate[skCrafOth] += 10
#skillinnate[skCrafTrap] += 10
#skillinnate[skDiplo] += 11
#skillinnate[skDisable] += 17
#skillinnate[skFly] += 15
#skillinnate[skKnowArca] += 21
#skillinnate[skKnowDun] += 21
#skillinnate[skKnowEng] += 21
#skillinnate[skLinguist] += 21
#skillinnate[skPercep] += 21
#skillinnate[skSenseMot] += 21
#skillinnate[skSpellcr] += 21
      <before name="Skill Bonus Feats"/>
      </eval>
    <eval phase="PreLevel" priority="9900" index="3"><![CDATA[~ Set the name, range (based on size) and damage of our breath weapon.
      var Lrange as number
      if (herofield[tSize].value <= -2) then
          Lrange = 30
      elseif (herofield[tSize].value = -1) then
          Lrange = 40
      elseif (herofield[tSize].value = 0) then
          Lrange = 60
      elseif (herofield[tSize].value = 1) then
          Lrange = 80
      elseif (herofield[tSize].value = 2) then
          Lrange = 100
      elseif (herofield[tSize].value = 3) then
          Lrange = 120
      elseif (herofield[tSize].value >= 4) then
          Lrange = 140
      endif

var Crange as number
Crange = Lrange / 2

~ Manually change the damage dice for each age category, since this does not depend on size.
      hero.child[raDrBreath].field[livename].text = "Breath Weapon (" & Lrange & "-ft. line or " & Crange & "-ft. cone, confusion, every 1d6 rounds, Fort neg.)"

~ Modified natural weapons according to size... If we are too small hide the weapons, if we are Huge our bite should be 2d8 not 3d6, if we are Gargantuan then Claw and Tail slap should be same, if we are Colossol then bite should be 4d8 and Wings should be 2d8. Also set the fly speed.

if (herofield[tSize].value <= -4) then
   perform hero.child[wWing].assign[Hide.Weapon]
   perform hero.child[wTailSlap].assign[Hide.Weapon]

   perform hero.child[wCrush].assign[Hide.Weapon]
   perform hero.child[wTailSweep].assign[Hide.Weapon]

   hero.child[xFly].field[abValue].value = maximum(hero.child[xFly].field[abValue].value, 100)
   perform hero.child[xFly].assign[Maneuver.Average]

elseif (herofield[tSize].value = -3) then
   perform hero.child[wWing].assign[Hide.Weapon]
   perform hero.child[wTailSlap].assign[Hide.Weapon]

   perform hero.child[wCrush].assign[Hide.Weapon]
   perform hero.child[wTailSweep].assign[Hide.Weapon]

   hero.child[xFly].field[abValue].value = maximum(hero.child[xFly].field[abValue].value, 100)
   perform hero.child[xFly].assign[Maneuver.Average]

elseif (herofield[tSize].value = -2) then
   perform hero.child[wWing].assign[Hide.Weapon]
   perform hero.child[wTailSlap].assign[Hide.Weapon]

   perform hero.child[wCrush].assign[Hide.Weapon]
   perform hero.child[wTailSweep].assign[Hide.Weapon]

   hero.child[xFly].field[abValue].value = maximum(hero.child[xFly].field[abValue].value, 100)
   perform hero.child[xFly].assign[Maneuver.Average]

elseif (herofield[tSize].value = -1) then
   perform hero.child[wWing].assign[Hide.Weapon]
   perform hero.child[wTailSlap].assign[Hide.Weapon]

   perform hero.child[wCrush].assign[Hide.Weapon]
   perform hero.child[wTailSweep].assign[Hide.Weapon]

   hero.child[xFly].field[abValue].value = maximum(hero.child[xFly].field[abValue].value, 150)
   perform hero.child[xFly].assign[Maneuver.Average]

elseif (herofield[tSize].value = 0) then
   perform hero.child[wTailSlap].assign[Hide.Weapon]

   perform hero.child[wCrush].assign[Hide.Weapon]
   perform hero.child[wTailSweep].assign[Hide.Weapon]

   hero.child[xFly].field[abValue].value = maximum(hero.child[xFly].field[abValue].value, 150)
   perform hero.child[xFly].assign[Maneuver.Average]

elseif (herofield[tSize].value = 1) then
   perform hero.child[wCrush].assign[Hide.Weapon]
   perform hero.child[wTailSweep].assign[Hide.Weapon]

   hero.child[xFly].field[abValue].value = maximum(hero.child[xFly].field[abValue].value, 200)
   perform hero.child[xFly].assign[Maneuver.Poor]

elseif (herofield[tSize].value = 2) then
   perform hero.child[wBite].tagreplace[wMain.?,wMain.2d8_204]
   perform hero.child[wBite].delete[Helper.DamageUp]

   perform hero.child[wCrush].assign[wMain.2d8_204]
   perform hero.child[wCrush].delete[Helper.DamageUp]
   perform hero.child[wTailSweep].assign[Hide.Weapon]

   hero.child[xFly].field[abValue].value = maximum(hero.child[xFly].field[abValue].value, 200)
   perform hero.child[xFly].assign[Maneuver.Poor]

elseif (herofield[tSize].value = 3) then
   perform hero.child[wClaw].tagreplace[wMain.?,wMain.2d8_204]
   perform hero.child[wClaw].delete[Helper.DamageUp]
   perform hero.child[wTailSlap].tagreplace[wMain.?,wMain.2d8_204]
   perform hero.child[wTailSlap].delete[Helper.DamageUp]

   perform hero.child[wCrush].assign[wMain.4d6_106]
   perform hero.child[wCrush].delete[Helper.DamageUp]
   perform hero.child[wTailSweep].assign[wMain.2d6_104]
   perform hero.child[wTailSweep].delete[Helper.DamageUp]

   hero.child[xFly].field[abValue].value = maximum(hero.child[xFly].field[abValue].value, 250)
   perform hero.child[xFly].assign[Maneuver.Clumsy]

elseif (herofield[tSize].value >= 4) then
   perform hero.child[wBite].tagreplace[wMain.?,wMain.4d8_206]
   perform hero.child[wBite].delete[Helper.DamageUp]
   perform hero.child[wWing].tagreplace[wMain.?,wMain.2d8_204]
   perform hero.child[wWing].delete[Helper.DamageUp]

   perform hero.child[wCrush].assign[wMain.4d8_206]
   perform hero.child[wCrush].delete[Helper.DamageUp]
   perform hero.child[wTailSweep].assign[wMain.2d8_204]
   perform hero.child[wTailSweep].delete[Helper.DamageUp]

   hero.child[xFly].field[abValue].value = maximum(hero.child[xFly].field[abValue].value, 250)
   perform hero.child[xFly].assign[Maneuver.Clumsy]

endif]]></eval>
    </thing>
  <thing id="ruDungGrWy" name="Dragon, Dungeon, Great Wyrm" description="{B}This creature was deprecated. Please add the &quot;Dragon, Dungeon&quot; monster and select your age cateogry from the Dragon Age tab.{/b}\n\nThe dungeon dragon is a curious creature that gets amusement by watching other beings engaged in life and death struggles. To this end, a dungeon dragon sets up a labyrinthine lair, setting traps and populating it with monsters. Younger dungeon dragons tend to lair in natural caverns to ease the burden of construction. Older, more experienced dungeon dragons have been known to construct their own sprawling subterranean complexes, even to the point of hiring on dwarf work gangs and swearing them to secrecy.\n\nOnce the construction and refurbishing of its lair is complete, the dungeon dragon transforms itself into a humanoid and ventures into the surrounding countryside. There it spreads rumors and tales of this horrible catacomb in hopes of luring adventurers forth so it may watch them via its crystal ball. Young dungeon dragons often spend years living among humanoids, even to the point of joining adventurers involved in dungeon delves. On such adventures, the intrepid dungeon dragon takes notes regarding the devious traps and monsters it encounters so that it can add such things to its own lair.\n\nOddly enough, although a dungeon dragon goes to great pains to amass a treasure hoard, it cares little for material wealth. Rather, it uses the treasure it gathers as bait in its dungeon to lure in adventurers and provide it the entertainment it so greatly desires. Watching adventurers explore its catacomb is the only real treasure a dungeon dragon desires. The only material possession a dungeon dragon will risk its life to save is its crystal ball. Without this vital piece of equipment, all of the dragon&apos;s labor is in vain.\n\nA dungeon dragon in its natural form prefers to flee any combat. It likes to watch other creatures engaged in fights for life, not itself. If forced into melee, it swats at opponents with its powerful claws and bite. A dungeon dragon is proficient in the use of all simple and martial weapons and light and medium armor and shields." compset="Race">
    <fieldval field="rSTR" value="27"/>
    <fieldval field="rDEX" value="-3"/>
    <fieldval field="rHitDice" value="23"/>
    <fieldval field="rHPStart" value="149"/>
    <fieldval field="rAC" value="34"/>
    <fieldval field="rCR" value="17"/>
    <fieldval field="rEnviron" value="Underground"/>
    <fieldval field="rOrgan" value="Solitary"/>
    <fieldval field="rTreasure" value="Triple plus crystal ball"/>
    <fieldval field="rDescript" value="This dragon has a long serpentine neck, small wings, and glistening scales. Two small horns dominate its triangular head. Its body is gray in color, with scales tipped in flecks of gold and green. Its eyes are rounded and gray."/>
    <fieldval field="rINT" value="12"/>
    <fieldval field="rWIS" value="12"/>
    <fieldval field="rCON" value="12"/>
    <fieldval field="rCHA" value="10"/>
    <fieldval field="cMagicLev" value="15"/>
    <fieldval field="rFeat" value="-12"/>
    <usesource source="srcTomeHor"/>
    <tag group="Alignment" tag="NeutralGE"/>
    <tag group="Hero" tag="NoDefComm" name="NoDefComm" abbrev="NoDefComm"/>
    <tag group="RaceSize" tag="Gargant3"/>
    <tag group="Race" tag="rTrueDrago" name="True Dragon" abbrev="True Dragon"/>
    <tag group="RaceType" tag="NPC" name="NPC Race" abbrev="NPC Race"/>
    <tag group="Helper" tag="Quadruped" name="Quadruped" abbrev="Quadruped"/>
    <tag group="SplLookup" tag="cHelpSor"/>
    <tag group="HasType" tag="tpDragon" name="Dragon" abbrev="Dragon"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <tag group="Alignment" tag="NeutralLC"/>
    <bootstrap thing="xuImmEnchm"></bootstrap>
    <bootstrap thing="rauDrDgCfC"></bootstrap>
    <bootstrap thing="xBonusPerc">
      <autotag group="Value" tag="4"/>
      </bootstrap>
    <bootstrap thing="fSkillFoc">
      <autotag group="Target" tag="skCrafOth"/>
      </bootstrap>
    <bootstrap thing="wTailSlap">
      <autotag group="wMain" tag="2d8_204"/>
      <autotag group="Helper" tag="NatTwoHand"/>
      </bootstrap>
    <bootstrap thing="skCrafOth">
      <assignval field="skUserName" value="crystal carving"/>
      <assignval field="skTools" value="1"/>
      </bootstrap>
    <bootstrap thing="fMasCraft">
      <autotag group="thing" tag="skipprereq"/>
      <autotag group="Target" tag="skCrafOth"/>
      </bootstrap>
    <bootstrap thing="wWing">
      <autotag group="wMain" tag="2d6_104"/>
      <autotag group="Value" tag="2"/>
      </bootstrap>
    <bootstrap thing="wCrush"></bootstrap>
    <bootstrap thing="raChangeSh">
      <autotag group="Usage" tag="AtWill"/>
      <assignval field="livename" value="Change Shape (Small or Medium Humanoid creature; alter self)"/>
      </bootstrap>
    <bootstrap thing="skKnowEng"></bootstrap>
    <bootstrap thing="fFlybyAt"></bootstrap>
    <bootstrap thing="wTailSweep"></bootstrap>
    <bootstrap thing="spCharPer1">
      <autotag group="Helper" tag="SpellLike"/>
      <autotag group="Usage" tag="AtWill"/>
      </bootstrap>
    <bootstrap thing="fSkillFoc">
      <autotag group="Target" tag="skKnowEng"/>
      </bootstrap>
    <bootstrap thing="skCrafTrap"></bootstrap>
    <bootstrap thing="raDarkVis">
      <autotag group="Value" tag="120"/>
      </bootstrap>
    <bootstrap thing="spDeteTho2">
      <autotag group="Helper" tag="SpellLike"/>
      <autotag group="Usage" tag="AtWill"/>
      </bootstrap>
    <bootstrap thing="rBlindsen">
      <autotag group="Value" tag="60"/>
      </bootstrap>
    <bootstrap thing="lCommonND"></bootstrap>
    <bootstrap thing="fAlertness"></bootstrap>
    <bootstrap thing="skKnowArca"></bootstrap>
    <bootstrap thing="fCraftWond">
      <autotag group="thing" tag="skipprereq"/>
      </bootstrap>
    <bootstrap thing="xDamRdMag">
      <autotag group="Value" tag="20"/>
      </bootstrap>
    <bootstrap thing="xSplRs"></bootstrap>
    <bootstrap thing="fMultiAtt"></bootstrap>
    <bootstrap thing="spSuggest2">
      <autotag group="Helper" tag="SpellLike"/>
      <autotag group="Usage" tag="AtWill"/>
      </bootstrap>
    <bootstrap thing="raFrightPr"></bootstrap>
    <bootstrap thing="fIronWill"></bootstrap>
    <bootstrap thing="skKnowDun"></bootstrap>
    <bootstrap thing="xFly">
      <autotag group="Maneuver" tag="Clumsy"/>
      </bootstrap>
    <bootstrap thing="lDraconic"></bootstrap>
    <bootstrap thing="stShapecha"></bootstrap>
    <bootstrap thing="raDrBreath">
      <autotag group="BloodEner" tag="Acid"/>
      </bootstrap>
    <bootstrap thing="wBite">
      <autotag group="wMain" tag="4d6_106"/>
      <autotag group="Helper" tag="NatPrimary"/>
      <autotag group="Helper" tag="NatTwoHand"/>
      </bootstrap>
    <bootstrap thing="wClaw">
      <autotag group="wMain" tag="2d8_204"/>
      <autotag group="Value" tag="2"/>
      <autotag group="Helper" tag="NatPrimary"/>
      </bootstrap>
    <bootstrap thing="fPersuas"></bootstrap>
    <bootstrap thing="spCharMon3">
      <autotag group="Helper" tag="SpellLike"/>
      <autotag group="Usage" tag="AtWill"/>
      </bootstrap>
    <bootstrap thing="raDrSenses"></bootstrap>
    <bootstrap thing="fSkillFoc">
      <autotag group="Target" tag="skBluff"/>
      </bootstrap>
    <bootstrap thing="fHover"></bootstrap>
    <bootstrap thing="spSuggMas5">
      <autotag group="Helper" tag="SpellLike"/>
      <autotag group="Usage" tag="AtWill"/>
      </bootstrap>
    <bootstrap thing="fImpInit"></bootstrap>
    <bootstrap thing="fLightRef"></bootstrap>
    <bootstrap thing="fGreatFort"></bootstrap>
    <bootstrap thing="spCharMon6">
      <autotag group="Helper" tag="SpellLike"/>
      </bootstrap>
    <bootstrap thing="rauDungDDM"></bootstrap>
    <eval phase="Final" priority="11000">~ Dragons have SR = to 11 + thier CR
      var damage as number
      damage = herofield[tCR].value + 11
      #applysr[damage]


~ Dragons have spell like abilities of CL = to TOTAL (not racial) hit dice
      var CL as number
      CL = herofield[tHitDice].value
      field[rSpCastLev].value = CL</eval>
    <eval phase="PreLevel" priority="4000" index="4">#skillinnate[skAppraise] += 4
#skillinnate[skBluff] += 23
#skillinnate[skCrafOth] += 10
#skillinnate[skCrafTrap] += 11
#skillinnate[skDiplo] += 12
#skillinnate[skDisable] += 21
#skillinnate[skFly] += 15
#skillinnate[skIntim] += 23
#skillinnate[skKnowArca] += 23
#skillinnate[skKnowDun] += 23
#skillinnate[skKnowEng] += 23
#skillinnate[skLinguist] += 19
#skillinnate[skPercep] += 23
#skillinnate[skSenseMot] += 23
#skillinnate[skSpellcr] += 23
      <before name="Skill Bonus Feats"/>
      </eval>
    <eval phase="PreLevel" priority="9900" index="3"><![CDATA[~ Set the name, range (based on size) and damage of our breath weapon.
      var Lrange as number
      if (herofield[tSize].value <= -2) then
          Lrange = 30
      elseif (herofield[tSize].value = -1) then
          Lrange = 40
      elseif (herofield[tSize].value = 0) then
          Lrange = 60
      elseif (herofield[tSize].value = 1) then
          Lrange = 80
      elseif (herofield[tSize].value = 2) then
          Lrange = 100
      elseif (herofield[tSize].value = 3) then
          Lrange = 120
      elseif (herofield[tSize].value >= 4) then
          Lrange = 140
      endif

var Crange as number
Crange = Lrange / 2

~ Manually change the damage dice for each age category, since this does not depend on size.
      hero.child[raDrBreath].field[livename].text = "Breath Weapon (" & Lrange & "-ft. line or " & Crange & "-ft. cone, confusion, every 1d6 rounds, Fort neg.)"

~ Modified natural weapons according to size... If we are too small hide the weapons, if we are Huge our bite should be 2d8 not 3d6, if we are Gargantuan then Claw and Tail slap should be same, if we are Colossol then bite should be 4d8 and Wings should be 2d8. Also set the fly speed.

if (herofield[tSize].value <= -4) then
   perform hero.child[wWing].assign[Hide.Weapon]
   perform hero.child[wTailSlap].assign[Hide.Weapon]

   perform hero.child[wCrush].assign[Hide.Weapon]
   perform hero.child[wTailSweep].assign[Hide.Weapon]

   hero.child[xFly].field[abValue].value = maximum(hero.child[xFly].field[abValue].value, 100)
   perform hero.child[xFly].assign[Maneuver.Average]

elseif (herofield[tSize].value = -3) then
   perform hero.child[wWing].assign[Hide.Weapon]
   perform hero.child[wTailSlap].assign[Hide.Weapon]

   perform hero.child[wCrush].assign[Hide.Weapon]
   perform hero.child[wTailSweep].assign[Hide.Weapon]

   hero.child[xFly].field[abValue].value = maximum(hero.child[xFly].field[abValue].value, 100)
   perform hero.child[xFly].assign[Maneuver.Average]

elseif (herofield[tSize].value = -2) then
   perform hero.child[wWing].assign[Hide.Weapon]
   perform hero.child[wTailSlap].assign[Hide.Weapon]

   perform hero.child[wCrush].assign[Hide.Weapon]
   perform hero.child[wTailSweep].assign[Hide.Weapon]

   hero.child[xFly].field[abValue].value = maximum(hero.child[xFly].field[abValue].value, 100)
   perform hero.child[xFly].assign[Maneuver.Average]

elseif (herofield[tSize].value = -1) then
   perform hero.child[wWing].assign[Hide.Weapon]
   perform hero.child[wTailSlap].assign[Hide.Weapon]

   perform hero.child[wCrush].assign[Hide.Weapon]
   perform hero.child[wTailSweep].assign[Hide.Weapon]

   hero.child[xFly].field[abValue].value = maximum(hero.child[xFly].field[abValue].value, 150)
   perform hero.child[xFly].assign[Maneuver.Average]

elseif (herofield[tSize].value = 0) then
   perform hero.child[wTailSlap].assign[Hide.Weapon]

   perform hero.child[wCrush].assign[Hide.Weapon]
   perform hero.child[wTailSweep].assign[Hide.Weapon]

   hero.child[xFly].field[abValue].value = maximum(hero.child[xFly].field[abValue].value, 150)
   perform hero.child[xFly].assign[Maneuver.Average]

elseif (herofield[tSize].value = 1) then
   perform hero.child[wCrush].assign[Hide.Weapon]
   perform hero.child[wTailSweep].assign[Hide.Weapon]

   hero.child[xFly].field[abValue].value = maximum(hero.child[xFly].field[abValue].value, 200)
   perform hero.child[xFly].assign[Maneuver.Poor]

elseif (herofield[tSize].value = 2) then
   perform hero.child[wBite].tagreplace[wMain.?,wMain.2d8_204]
   perform hero.child[wBite].delete[Helper.DamageUp]

   perform hero.child[wCrush].assign[wMain.2d8_204]
   perform hero.child[wCrush].delete[Helper.DamageUp]
   perform hero.child[wTailSweep].assign[Hide.Weapon]

   hero.child[xFly].field[abValue].value = maximum(hero.child[xFly].field[abValue].value, 200)
   perform hero.child[xFly].assign[Maneuver.Poor]

elseif (herofield[tSize].value = 3) then
   perform hero.child[wClaw].tagreplace[wMain.?,wMain.2d8_204]
   perform hero.child[wClaw].delete[Helper.DamageUp]
   perform hero.child[wTailSlap].tagreplace[wMain.?,wMain.2d8_204]
   perform hero.child[wTailSlap].delete[Helper.DamageUp]

   perform hero.child[wCrush].assign[wMain.4d6_106]
   perform hero.child[wCrush].delete[Helper.DamageUp]
   perform hero.child[wTailSweep].assign[wMain.2d6_104]
   perform hero.child[wTailSweep].delete[Helper.DamageUp]

   hero.child[xFly].field[abValue].value = maximum(hero.child[xFly].field[abValue].value, 250)
   perform hero.child[xFly].assign[Maneuver.Clumsy]

elseif (herofield[tSize].value >= 4) then
   perform hero.child[wBite].tagreplace[wMain.?,wMain.4d8_206]
   perform hero.child[wBite].delete[Helper.DamageUp]
   perform hero.child[wWing].tagreplace[wMain.?,wMain.2d8_204]
   perform hero.child[wWing].delete[Helper.DamageUp]

   perform hero.child[wCrush].assign[wMain.4d8_206]
   perform hero.child[wCrush].delete[Helper.DamageUp]
   perform hero.child[wTailSweep].assign[wMain.2d8_204]
   perform hero.child[wTailSweep].delete[Helper.DamageUp]

   hero.child[xFly].field[abValue].value = maximum(hero.child[xFly].field[abValue].value, 250)
   perform hero.child[xFly].assign[Maneuver.Clumsy]

endif]]></eval>
    </thing>
  <hidden id="uDungAdult"/>
  <hidden id="ruDungAnci"/>
  <hidden id="ruDungGrWy"/>
  <hidden id="ruDungJuve"/>
  <hidden id="ruDungMtAd"/>
  <hidden id="ruDungOld"/>
  <hidden id="ruDungVrOl"/>
  <hidden id="ruDungVrYg"/>
  <hidden id="ruDungWyrm"/>
  <hidden id="ruDungWrml"/>
  <hidden id="ruDungYoun"/>
  <hidden id="ruDungYgAt"/>
  <hidden id="ruMantiBla"/>
  <hidden id="ruMantiBlu"/>
  <hidden id="ruMantiGre"/>
  <hidden id="ruMantiRed"/>
  <hidden id="ruMantiWhi"/>
  </document>
