<?xml version="1.0" encoding="UTF-8"?>
<document signature="Hero Lab Data">
  <loadonce key="COM_BasicPack_UniversialThings - Equipment"/>
  <fileinfo>
    <info_author><![CDATA[
      Feburary 22, 2015 - Tim Shadow
      -For now this is holding old deprecated Things instead. I have moved the equipment that is useful over to the "ShadowChemosh - Equipment" as that is what everything is source marked to.
      -Yes this contradicts the below comment but things changed. =)

      Tim Shadow
      January 24, 2015
      This file is designed to hold all those "Global" Equipment things like suits of armor, weapons, or gear that are needed for any gamer running in any game. I think for now these things will NOT be source linked to any source.]]></info_author>
    </fileinfo>
  <thing id="muElvenCha" name="Elven Chain" description="This extremely light chainmail is made of very fine mithral links. This armor is treated, in all ways, like light armor, including when determining proficiency. The armor has an arcane spell failure chance of 20%, a maximum Dexterity bonus of +4, and an armor check penalty of â€“2." compset="Armor">
    <comment>This version of elven chain is for adding armor bonus and abilities to the armor.</comment>
    <fieldval field="gWeight" value="20"/>
    <fieldval field="gSizeCost" value="150"/>
    <fieldval field="gCost" value="5000"/>
    <usesource source="srcS2Gear"/>
    <tag group="ArmorClass" tag="Light"/>
    <tag group="ArmorMaxDx" tag="4"/>
    <tag group="EquipType" tag="Metal"/>
    <tag group="Helper" tag="AlwaysMast"/>
    <tag group="PieceArcFl" tag="10"/>
    <tag group="ArmorAC" tag="6"/>
    <tag group="ArmorArcFl" tag="20"/>
    <tag group="ArmorCateg" tag="Gauntlets"/>
    <tag group="ArmorCheck" tag="2"/>
    <tag group="Ability" tag="eMithral"/>
    <tag group="HasAbility" tag="eMithral"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <eval phase="PreLevel" priority="10000"><![CDATA[
      ~ We no longer Slow &
      perform gizmo.delete[ArmorCateg.Slows]]]></eval>
    <prereq message="This armor is already made out of a special material and a second type can not be added.">
      <validate>
        var X1HaveMate as number
        Call X1HaveMate
        @valid = X1HaveMate</validate>
      </prereq>
    <child entity="mSpecMagic">
      <bootstrap thing="arChain"></bootstrap>
      </child>
    </thing>
  <thing id="muDwPlate" name="Dwarven Plate" description="This full plate is made of adamantine, giving its wearer damage reduction of 3/-." compset="Armor">
    <fieldval field="gWeight" value="50"/>
    <fieldval field="gSizeCost" value="16500"/>
    <usesource source="srcS2Gear"/>
    <tag group="ArmorCheck" tag="5"/>
    <tag group="ArmorClass" tag="Heavy"/>
    <tag group="ArmorMaxDx" tag="1"/>
    <tag group="EquipType" tag="Metal"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <tag group="ArmorAC" tag="9"/>
    <tag group="ArmorArcFl" tag="35"/>
    <tag group="ArmorCateg" tag="Gauntlets"/>
    <tag group="RaceEquip" tag="rDwarf"/>
    <tag group="SpecSource" tag="DwarfPlate"/>
    <tag group="Helper" tag="AlwaysMast"/>
    <tag group="HasAbility" tag="eAdamant"/>
    <tag group="Ability" tag="eAdamant"/>
    <tag group="ArmorCateg" tag="Slows"/>
    <eval phase="PreLevel" priority="10000"><![CDATA[
      ~ If not equipped get out now!
      doneif (field[gIsEquip].value <> 1)
      #applydr[xDamRd, 3]]]></eval>
    <prereq message="This armor is already made out of a special material and a second type can not be added.">
      <validate>
        var X1HaveMate as number
        Call X1HaveMate
        @valid = X1HaveMate</validate>
      </prereq>
    </thing>
  <thing id="muDrPlate" name="Dragonhide Plate" description="This suit of full plate is made of dragonhide, rather than metal, so druids can wear it. It is otherwise identical to masterwork full plate.\n\nThe wearer of dragonhide plate tends to draw the ire of dragons of the same type as that used in the armor&apos;s creation." compset="Armor">
    <fieldval field="gWeight" value="50"/>
    <fieldval field="gSizeCost" value="3300"/>
    <usesource source="srcS2Gear"/>
    <tag group="ArmorCheck" tag="5"/>
    <tag group="ArmorClass" tag="Heavy"/>
    <tag group="ArmorMaxDx" tag="1"/>
    <tag group="EquipType" tag="Hide"/>
    <tag group="ArmorAC" tag="9"/>
    <tag group="ArmorArcFl" tag="35"/>
    <tag group="ArmorCateg" tag="Gauntlets"/>
    <tag group="Helper" tag="AlwaysMast"/>
    <tag group="HasAbility" tag="eDragon"/>
    <tag group="Ability" tag="eDragon"/>
    <tag group="ArmorCateg" tag="Slows"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <prereq message="This armor is already made out of a special material and a second type can not be added.">
      <validate>
        var X1HaveMate as number
        Call X1HaveMate
        @valid = X1HaveMate</validate>
      </prereq>
    </thing>
  <thing id="muX1DragBM" name="Dragonhide Banded Mail" description="This suit of banded mail is made of dragonhide, rather than metal, so druids can wear it. It is otherwise identical to masterwork banded mail.\n\nThe wearer of dragonhide banded mail tends to draw the ire of dragons of the same type as that used in the armor&apos;s creation." compset="Armor">
    <fieldval field="gWeight" value="35"/>
    <fieldval field="gSizeCost" value="800"/>
    <usesource source="srcS2Gear"/>
    <tag group="ArmorClass" tag="Heavy"/>
    <tag group="ArmorAC" tag="7"/>
    <tag group="ArmorMaxDx" tag="1"/>
    <tag group="ArmorCheck" tag="6"/>
    <tag group="ArmorArcFl" tag="35"/>
    <tag group="EquipType" tag="Hide"/>
    <tag group="ArmorCateg" tag="Slows"/>
    <tag group="ArmorCateg" tag="Gauntlets"/>
    <tag group="Helper" tag="AlwaysMast"/>
    <tag group="HasAbility" tag="eDragon"/>
    <tag group="Ability" tag="eDragon"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <prereq message="This armor is already made out of a special material and a second type can not be added.">
      <validate>
        var X1HaveMate as number
        Call X1HaveMate
        @valid = X1HaveMate</validate>
      </prereq>
    </thing>
  <thing id="muX1DragHP" name="Dragonhide Half-Plate" description="This suit of half-plate is made of dragonhide, rather than metal, so druids can wear it. It is otherwise identical to masterwork half-plate.\n\nThe wearer of dragonhide half-plate tends to draw the ire of dragons of the same type as that used in the armor&apos;s creation." compset="Armor">
    <fieldval field="gWeight" value="50"/>
    <fieldval field="gSizeCost" value="1500"/>
    <usesource source="srcS2Gear"/>
    <tag group="ArmorClass" tag="Heavy"/>
    <tag group="ArmorAC" tag="8"/>
    <tag group="ArmorMaxDx" tag="0"/>
    <tag group="ArmorCheck" tag="7"/>
    <tag group="ArmorArcFl" tag="40"/>
    <tag group="EquipType" tag="Hide"/>
    <tag group="ArmorCateg" tag="Slows"/>
    <tag group="ArmorCateg" tag="Gauntlets"/>
    <tag group="Helper" tag="AlwaysMast"/>
    <tag group="HasAbility" tag="eDragon"/>
    <tag group="Ability" tag="eDragon"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <prereq message="This armor is already made out of a special material and a second type can not be added.">
      <validate>
        var X1HaveMate as number
        Call X1HaveMate
        @valid = X1HaveMate</validate>
      </prereq>
    </thing>
  <thing id="muMithShi" name="Mithral Shirt" description="This extremely light chain shirt is made of very fine mithral links. The armor has an arcane spell failure chance of 10%, a maximum Dexterity bonus of +6, and no armor check penalty. It is considered light armor." compset="Armor">
    <fieldval field="gWeight" value="10"/>
    <fieldval field="gSizeCost" value="1100"/>
    <usesource source="srcS2Gear"/>
    <tag group="ArmorMaxDx" tag="6"/>
    <tag group="EquipType" tag="Metal"/>
    <tag group="PieceArcFl" tag="0"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <tag group="ArmorAC" tag="4"/>
    <tag group="ArmorArcFl" tag="10"/>
    <tag group="Helper" tag="AlwaysMast"/>
    <tag group="ArmorCheck" tag="0"/>
    <tag group="Ability" tag="eMithral"/>
    <tag group="HasAbility" tag="eMithral"/>
    <tag group="ArmorClass" tag="Light"/>
    <prereq message="This armor is already made out of a special material and a second type can not be added.">
      <validate>
        var X1HaveMate as number
        Call X1HaveMate
        @valid = X1HaveMate</validate>
      </prereq>
    </thing>
  <thing id="wTouchAtta" name="Touch Attack" description="Add this weapon if you have any touch attack spells or abilities." compset="Weapon">
    <fieldval field="wFixDamage" value="As Spell"/>
    <fieldval field="wFixRanDam" value="As Spell"/>
    <usesource source="srcS2Gear"/>
    <usesource source="srcS2Adjus"/>
    <tag group="Helper" tag="Proficient"/>
    <tag group="wCategory" tag="Melee"/>
    <tag group="wClass" tag="Light"/>
    <tag group="wCritMin" tag="20"/>
    <tag group="wCritMult" tag="2"/>
    <tag group="wProfReq" tag="Simple"/>
    <tag group="IsWeapon" tag="wTouch"/>
    <tag group="Helper" tag="Finesse"/>
    <tag group="Helper" tag="CoreCampOK"/>
    <tag group="Helper" tag="NoDblStr"/>
    <tag group="Helper" tag="SingleAtt"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <tag group="PackHelper" tag="Touch"/>
    <eval phase="First" priority="50000">
      ~ If not equipped get out now
      doneif (field[gIsEquip].value + field[wIs2nd].value = 0)

      ~ Put a helper tag on the hero that we have been equipped
      perform hero.assign[PackHelper.EquipTouch]</eval>
    <eval phase="Final" priority="11000" index="2"><![CDATA[
      ~ Remove any extra high tags as we can't ever
      ~ more than a single attack.
      perform delete[Helper.ExtraHigh]]]></eval>
    </thing>
  <thing id="wRangedTou" name="Ranged Touch Attack" description="Add this weapon if you have any ranged touch attack spells or abilities." compset="Weapon">
    <fieldval field="wFixDamage" value="As Spell"/>
    <fieldval field="wFixRanDam" value="As Spell"/>
    <usesource source="srcS2Gear"/>
    <usesource source="srcS2Adjus"/>
    <tag group="wCritMin" tag="20"/>
    <tag group="wCritMult" tag="2"/>
    <tag group="wClass" tag="Light"/>
    <tag group="wProfReq" tag="Simple"/>
    <tag group="wCategory" tag="RangeProj"/>
    <tag group="IsWeapon" tag="wRay"/>
    <tag group="Helper" tag="NoDblStr"/>
    <tag group="Helper" tag="Proficient"/>
    <tag group="Helper" tag="CoreCampOK"/>
    <tag group="Helper" tag="SingleAtt"/>
    <tag group="PackHelper" tag="Touch"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <eval phase="First" priority="50000">
      ~ If not equipped get out now
      doneif (field[gIsEquip].value + field[wIs2nd].value = 0)

      ~ Put a helper tag on the hero that we have been equipped
      perform hero.assign[PackHelper.EquipRngTo]</eval>
    <eval phase="Final" priority="11000" index="2"><![CDATA[
      ~ Remove any extra high tags as we can't ever
      ~ more than a single attack.
      perform delete[Helper.ExtraHigh]]]></eval>
    </thing>
  </document>
